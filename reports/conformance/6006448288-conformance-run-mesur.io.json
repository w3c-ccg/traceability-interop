{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d0d9dfd8-fc18-44fe-b280-e0ca838acf1c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ae1cd561-4bcd-4c39-94fb-f4f347cde0af",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7731c86b-361d-469f-a1f0-ce41fac3b954",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e52b46d-3b5d-4cfa-9c95-8d6682bd2284"
                }
              }
            ]
          },
          {
            "id": "a51c88fe-8666-4915-bdd4-7041c3e84b9c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b25733d8-e6e1-43cd-90dd-ac432da36bb8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f1818ca3-9a80-46c7-971c-e70473f4cc75"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e867fd6b-c731-451a-bc07-a96808f4b63a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1d6428a7-2536-4547-82b2-b73bcc39c99b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5fe1f3d1-3651-471d-89d8-d99854bd407f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "607abcd3-9e93-427c-b419-7cfad26b707d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd4e8d0b-bd9b-49c6-838b-5b81fbcdf047"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a90a2211-0a9a-4fe4-98f6-f8993fb1e3ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f733aa2f-14f0-4f07-b2b6-dbb529108315"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2dd5890-4060-4db9-a529-a1756b291895",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15a8480f-bc0a-4e60-8ad3-4967d31f2e64"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ccf9b00-bf63-4eb5-9a8d-1850080b12d8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8a241ca0-02c2-4cfd-9041-845876d8a741"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "853b625f-89af-4beb-a57e-a17172629aa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd6997bb-9d71-4724-9dd9-2284bb37c8cd"
            }
          }
        ]
      },
      {
        "id": "8347858a-583f-4f01-a10e-6b668c93096a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dbaee944-3024-4cc1-af33-f2cb82da59cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbc8e00c-4e5c-4288-83a9-1ce58c5bac0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f60795e3-f9ab-4d4b-8567-92b069a26371",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43836f61-2a91-4e06-8b7f-6d6e734603b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bfde3d3-a773-4886-99b5-8d124032551b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db5653f-3f08-4879-afc0-38c6b18dc2d5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a517b51-fa42-4fc5-9ced-d3f73623f6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cc4f581-cbfc-4544-928a-a1ff54bbcfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a6cb6f-38b5-4145-ba50-ca222fd8323a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f28555-809e-49d3-8a88-03d481b1294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "783e0a3c-17ac-41e3-919e-8fb6a8c6e039"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17c8b29d-b025-468f-a225-c6fbef15e9aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a090868d-34c7-49ab-80df-da8a19c41af4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d6c29c-0404-4186-a511-36f78cb15aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "879b5a90-7d71-472d-8d5f-26fd68a202c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63c7a5e-e652-42c2-a0f0-9cb313d9762d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23343534-73b6-4ba4-a905-7d8365c2f29c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5930639c-d6a6-453c-8a0b-5052bd94b977",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5b276d9-3d4f-4600-a519-fd2017cd5fb3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ee42cef-569c-4827-9799-587ad7cce58b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9014ce17-3a5b-4a42-970d-fe42c6f95379"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b42aaac8-d366-442f-86f2-ef1a416a0d3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fc122277-4524-4b0d-843b-93dc9f929325"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ffe5695-2ec2-4830-b604-d7061872c542",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e420c95-53ae-44d7-bd0c-ae33797e7f7a"
            }
          }
        ]
      },
      {
        "id": "6589ad1b-f542-418e-b4f9-9ee83a5ce366",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f9643bee-a958-4c68-95d2-572ea680cc3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96effc82-dd07-42e5-ab33-9d60639c019e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "aae7be08-2928-4444-bdad-02707f440dfc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84895aaa-5f77-433c-8d0b-9f5811d54113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7558d7d8-c8e2-4f95-a38f-7bb67e7eba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b56a253-e48c-4884-a3ef-6851f4065b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d75b690-4b9b-4ee2-ad4c-93e7a3d1ffb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef0def1-27b5-4720-b83c-0b6f8aad18d8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b862b8-ac48-42c8-8714-ba442e22ce3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7c04c3-8d45-4839-9ab8-12f00cd0a968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12b003f-cda6-4cb0-88c5-a5dee8538ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ba2bf34-cb90-4203-ba21-8087927c8b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64af37a-1c21-4097-82d3-4a203aff1921",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6adf8cc-4e78-4565-92f6-fb1c90223183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d57138-770c-4e1a-bd2f-16815d846e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6180a1a-d4d1-4823-880c-782351ce36fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d5bfb10-315b-40f2-812e-868e2726abb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0b1a12-c4e6-400d-b9bc-277be660e45c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb42280b-421f-4977-9bf4-3cd34c74ff7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205d2cfe-ee6d-4e19-93b9-9cf36c38fe29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b5dfd2-1a65-441e-b928-a157ff0dfc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4be1ab3e-0cbd-4683-83bd-e053043302ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5409bd-54cb-4447-893a-b69a86fa95d7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c98413-42f4-4f3d-9951-58d17a492599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d860340-f580-42a5-a904-c16dc9113365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200ffd4b-3616-4bd1-b744-0c870c0e5332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "074babd5-0ad3-48cb-b2a6-89fdf3530fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1ce0d5-b311-4790-962c-d13823f5ae5b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f8bdac-d4c6-4556-a54b-7703c9beaec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e12e61-5a1a-4366-8721-d71788dfebf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8a4c63-8148-404a-b2c7-451eb9a81a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a6e87b2-a2e9-4d03-a588-1ba81ba6c6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56259327-0e8a-4033-8d79-a963580619da",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca382868-4c87-4a42-acad-d172022eae27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3967bd-3531-4ade-9808-325c06843f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f22307-a8d1-4814-90c4-95974105a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cd754c8-71f3-444b-960f-ad8d8c1ef7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fedb29e-2c87-46c6-95ef-f14aa34b2f21",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046febc0-89f8-441a-8ea7-5d3d3ae4d928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c947a58f-4cb1-41c6-ae46-9a44a248e7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addec81c-cdf0-4e92-9bd8-53ea9f05c333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84807aec-3a22-4782-8eac-c668cbeb6b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ff67e6-79f6-48eb-9812-003a2841ad3c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027f6163-946c-41fd-8af0-d7dc4dd0502b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984ce33f-e0b8-4f68-85e6-b4e87f7609d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e695dec6-42b9-4bde-b012-99ac04d97c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "668c140f-def3-41c6-8e31-cdf63e0b52d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4943723e-3fe6-44b9-b331-7eea85984ff1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ec4720-7b01-4753-ba2b-099155c2128a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d21751-eef2-4c21-9bd8-d33c985ca958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c246b37-b6a1-43db-b0d7-30d6ccd271db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d8d6572-da8b-41b2-9570-4c5cc62bcfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aca3c7-cab7-4300-b1e9-641e37e8a88f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1bfea7-b06c-42d7-94a5-2895d012504e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f329b9fb-0381-427c-932b-b4125bb3d7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92785ee6-992c-45da-8978-8e5b6aaa8df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f78db49-1baa-4e6a-9b04-2529251f3767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80597073-0160-4b0e-91dd-9390e561a37e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea2906d-7d54-4bce-9142-8c6839e66189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5718a6-3494-4b1d-b6db-9eb9021b4f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e600389e-e05c-453e-b159-fabf397a29ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0873e92-a3c5-4bf3-adfa-dafa73742a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45974fe-a326-4744-a468-bcdfc139cdfe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a864049-0249-4718-b419-5a5a8948ba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59fbbc2-ed8f-43e5-8570-4b4563c06c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e942de8-5810-4a02-b9fb-64575c3ee7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35e32e40-9b5a-4adc-9b6e-9b69d34414bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c45b44-7179-42e4-8c00-ebfd6f6fe78c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7daa08b-dcc3-4789-9e67-ba1d4f9d3c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95f1fee-513f-4634-9d44-5a0f82e651b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac3c60f-04dd-423a-8a11-14ddcd193e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62f0b204-024e-4c7d-8ac2-bae2b7ddc5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9383243e-76cc-4635-8c74-87bbf64018c9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332b40a3-0b71-4bc5-973e-032f0b8c596b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a575633-b41e-4810-b78e-2ffa9d149bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92269864-d0c1-4b1c-97ac-ef54aab80d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00745aff-90df-4195-b188-ad59abaddb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bd188c-8039-4d54-8e99-eb98f5f68188",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7235de1f-768f-4a7d-a8a0-945e8f3456ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a349ab8-9d73-45d9-acf8-a13391b54c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa07b456-a3de-491b-8aea-ab200876caee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99c1c196-444d-4373-8e61-e7cae94f8293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd0ad83-78fe-42e4-8597-fa2f25ffdfd0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec33df32-b5cb-4a9f-8db9-368d62337cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55067e51-6161-412a-8be0-517c50c47e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b16b7fb-1172-4a69-b69a-5eb1ddbae798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c8e1eca-a13e-4eb0-9d7e-c2f22088e9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975548e9-14d4-4435-9fe3-cfdaaa06bd40",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b65597-310d-419b-9361-34166f29b377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3160a0bd-5b36-495d-84e8-496205b5eb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71a0295-b281-405a-9620-ad1dda28f80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97019d09-5cbb-4844-a069-182ba4c62274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27933848-2558-410b-9791-cd1ef2272460",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fd0168-a70b-446e-8013-0a1d507aea9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd21a94-9011-45c2-beef-511c9c99ef3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0917689b-435d-4e3b-8185-5ae98b349152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da17d5ba-9ba9-4db3-84b2-d89b0285b40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e3bd0d-1001-4a39-b644-a0581600566d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd2995d-0dbe-4666-b815-08cce9555ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5408de70-004d-4a9e-b6ee-9de42cbd25f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21acd3b8-0f68-461f-8557-fab82e2f4954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfe1651-10dc-4d22-a2d3-72f8aad18d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17068043-5233-4b27-bd18-551835af9bb6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f158a19-5fa0-4f2a-bb91-68aab466bd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b47c4b-1533-421f-8c31-70357c616d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f071804d-191c-4a5a-a636-1a0bd1637fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdb9f69-8ee3-4472-ad87-8dbd1b9aaf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf010682-49b4-4fba-9eed-dd6db79ad8f7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24e7a7e-d4af-4c36-af03-eaedfd6a369b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef1370c-7557-4ef3-a095-8898015d0019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aebb2e1-b548-4add-91f7-b896c7ce422a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e01248-412a-431c-b17e-3d9a53d73243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb182b3-4ca8-4698-85db-e2fbbdf8d837",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bf7b58-ab7c-4413-bf08-47f271191731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ed9cf5-db5a-4f27-8b80-d28867385ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1211ca-c3ca-4809-9c7a-2eb9c56d42a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f489b1-dda7-45df-a146-10bb98b405a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a3e7b2-c1fd-40fb-b7f0-db5cacc7a1c5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9cc6d9-3c8a-4fc6-aef2-aa99afaea32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36d39ba-736a-4e51-859f-86a1a5d305a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7496b27-5913-485a-b10c-111abf923276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "861cd29b-da94-42d8-9a8c-b7b3fc59fcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d582cd5-c1c2-4457-89d4-9009b406d369",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eb88a5-704c-4d28-a9dc-1791cc25965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc90276-2585-4970-a65f-8346bbcd0954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3fabfd-0c14-4ca7-a948-a8c06a3c1362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0ccb6c-0b27-4a55-aa87-136bf5e09979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7259bb26-2bbb-43ee-8421-e1480084d3a5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83ccdfa-80bc-46cd-86fa-0ace436f271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c5b775-3247-439c-a857-ed6415592eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac7ab17-8334-4ccc-a260-e8430b37b30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "312d1e75-0109-472d-9621-d2a6fb016a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b10a074-acd0-4369-95b9-4d3649707b04",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4e80ed-f9c8-4b7e-a9ca-bc6a12851bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e1e13c-216e-4baf-b1a6-0243727dde56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c05a31d-f7f1-45ad-9bba-bfc4f888397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ffaac2-d0f2-406e-893c-0794c9ebd1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4c4661-dc6d-491a-b604-cf71185f3fdf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b9a3b8-b039-4e9b-a2db-224c20461f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae96938-e02d-4dc6-8f2f-6c0a9cc1dda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db47edc9-057e-4c47-afb3-29709c2f7178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83782e61-06fc-472e-82a2-7668464b265c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab09bf2-be3f-4a8c-b71b-6b64130f735f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1750d461-9ef9-4764-a79f-234a020bcd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf41ef49-2f05-4604-b480-ca9dd8b5f646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bfbc48-f0b5-44f8-a425-3739f3d2bbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f15691ec-003c-4d86-a0a0-da9844e87319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df1ab9a-6086-4c86-87eb-312187ec4c1c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c9c526-e1bf-4bcf-8e82-e3da9eb3a725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21966828-e3a0-4bcc-a2cb-ba3868af29b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002dcf0c-6e9e-40d4-988e-ee4fec30c512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "52dd853c-b674-40e5-be5a-5ee17bb17733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1295a3c3-d06f-4884-91a8-65bb29430d04",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b6e3ad-921e-4d39-81bd-aba27b623cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ee95f4-477b-4b68-847f-3838ffc57a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f3a6bd-4964-434c-8fdc-c53776ae2258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51339323-5bdf-4dcb-a694-21a650399ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651b7c59-f4be-47ce-aff7-297c038f8185",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f57a3c-96f1-4e67-894a-3d0569abacca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cefe75a-03c9-4c62-9be7-cb9b5c76b27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b36cc3-a5f7-4bb4-b0c1-37776e8a6795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c7e328-0af9-4c98-a8fb-279cc907734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df31a931-267e-4d8d-887c-94cc0094425f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f16e66d-fd25-4348-ba1e-32b8655790e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f066bb13-34f8-49aa-b34d-2bb378ad88f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f05d80-c14d-4b81-bd50-61e0667c61e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f4e1af-47a3-4f69-8ab4-1355b29d800b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2843fff9-0db4-47bf-835d-c694fb7506e0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f87810-7c31-447f-8515-a6be597ccc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6047992a-b674-4cd5-ba0f-b70559048a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0e834c-0f86-4a5d-b5b7-208838e462c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bef53ef-3ced-488a-bf25-ae0ee7858152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0625fd-cc99-458b-a8c2-96ca33b797fa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df32a4b9-0f75-4d71-a2e9-f3561c6e2a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8be14c3-cc58-4aa0-af5f-279030c62e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771395a9-580d-4124-87b6-07813f724886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "21b49aa0-977b-4792-9a88-a9378f25c271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae38228-1b86-4cf0-ab1b-76d031efe8b1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a549db7-e382-4227-b806-951f889befdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d61e270a-4b7c-4a90-949c-20bcaabbef6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c1d802-0429-4ef1-9965-96ccae35b3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "824bb0e3-8b43-4b5b-a3fc-62adebb4fbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944fa86e-1b45-45be-80af-0bf064e071e2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f3236b-df13-469d-8a2d-a06dc3f90c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2773dbfe-c812-438b-8c1a-c60dfe135d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ed9845-0814-4f9b-b9e5-206e4cdaf56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eed6357-68bb-478e-9f15-ef1d54b45156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c51b7d4-ee75-4c4f-946e-e9808f86e224",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47a1464-ea84-4caa-9d82-e5d05f9b1a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659b1974-4fa0-4b66-a71b-b2b7795cb6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d91841a-2342-4d2e-b664-3a993ee87cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e37af7c-ce93-46ab-b3f8-e6da7518c3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73d2276-4b7c-4650-8f72-67d6c73a0c6d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0d3b66-2ec8-456b-a343-d52627d128cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e806dedf-a0ea-4ee5-a815-4fe53011b7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b336ec2c-b617-4ed1-8de6-f1abd2f81bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f153903d-811e-4c4e-a609-4953b1788023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58532cca-3969-44e2-88fb-bae17d2935c0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dccd013-cc85-4792-98aa-6038f842bcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ec2f0a-205b-4978-a7d0-2f9f95968f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b3f947-9fe4-4987-94cc-dd0d7398c981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb01367a-7d72-4455-98d8-22701dc9a78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477a6487-a678-4493-9f94-1ad53518371b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacd077d-986c-4ea2-a716-cbed6f42d5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230efe39-ced2-43f9-bc1f-6b508a4f895e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4b8ed2-961c-43c1-8c9b-2fc47dad006a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b66027c-7ba6-4b59-a4d2-9e13c25fe6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a819bd4-4802-4beb-a7f1-50210dc481fb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943ee671-9906-4c52-8bb2-fe0e7b4202d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42edd6a8-7fcc-416d-aa99-d38174a47668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5274c6-8afc-4456-81e5-0ba16b9b8ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "79428bc0-8d97-4532-b843-74084e63e357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ccd8ea-045f-48fe-b9c1-46208e96a719",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8798f9-60a0-4265-8cab-11aab86e9e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2e07dd-bd6e-4441-a52d-26e160cb7c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4acb810-c26c-4909-8da1-a6a022813f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5ddb2a-ea9c-4ed7-ba95-b781165e07ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05718379-eb9f-4b1c-9503-374b55305836",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd4f380-5f27-4ca5-b5c6-68d0daa1ca85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912248e2-b420-4f27-839a-d4cb2dede0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce994f5-7ed1-4fda-b553-142cdac7038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd27d88-f18b-4773-92bf-c87d09ff42e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b498090-63c2-4ab4-acd9-e5011a52e506",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc71520-0bf3-437f-99f0-adc73151ac7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fa7b3b-a683-4d1c-9ab8-71633bb0d7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa250b25-2bb5-4381-a7e6-f8b94c8d6266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b761c4-f5dc-43e7-876f-4a69ba21465e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0099692c-e326-4535-8b00-06da56fe02cc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e63226c-38dd-48b8-bc7c-3df91ce64e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53ba81c-73b2-4413-aa29-f66460ea2d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422b0ba5-0451-4bd2-baa4-f38624d40d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "754e9495-b4c1-4bf5-a35c-70ab3563931b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ddb66c-e4eb-477d-9cbc-d76aedfdaac5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6ef9bb-002e-40b4-96f9-9d41e150732f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19169c93-4c88-4e87-8460-c4fb94ef0cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d26a500-e062-431c-a31f-632fa80d3dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9b4a91-4d60-43bb-9a97-8fc806a16d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efa969a-0864-4744-9ad6-878eabddbaf0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6611ce9a-d85d-4ec5-8df6-81857d94a9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2f7657-8aaa-489f-9544-16a743fec8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9328f854-8e14-41eb-b5ce-18320b3a6414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "329dbce9-6b77-4ae6-9c3a-47dc2d993662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1399d4-91be-44c1-8c53-1e0593b75f25",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9972cf04-6665-4676-9f40-a0e72febfed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779936e4-798a-4425-8347-f7c3b4e0f2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca85d515-bdc6-4a90-a392-38f5f09ae9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f45ef75e-fb8e-41a7-9704-8c8cc2324d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064b8f1f-a0c5-468c-ab42-18304e05acef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b990bd-2e06-43d1-ac59-44bc5bff9036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec5d4d8-14f6-4618-a93a-de1845c0dd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd0bc6d-1cd1-4652-8c0a-4872ee80ba62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e012bd6f-81c3-40e8-be6e-ae1c471f5007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df05d19-ceba-4841-b35f-94b633ba5799",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8bd31f-b236-4cd8-a15e-51db209d38dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb79dfb-ed54-463b-9f83-e5b07bdff83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fad7b33-759a-444f-a518-1baaf6a8ffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba82c8ee-c453-47cf-87ec-71fe966c2ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb39ce97-5b48-4581-9c94-f9f2897fdf09",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f1854-b1ed-4515-aae5-6c4d1bcde886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d807d089-def9-45f4-bf84-329ecfa9b167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70464d5b-3a76-4297-806b-aa4d3d04ad27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9c2926-7ce9-4e7a-ac27-49e7d6f56834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62b3106-f25f-4498-9562-c22d7567b2c5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11a251f-2535-42ef-894e-6f8e71a4c812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4a1ef9-7f4e-4010-8246-d21537c15073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bead6b-ba68-44a1-8f6b-daca352382c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e4d49a-04f9-4bf8-9d7f-2db6b2585f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2403980-07ef-4cf8-b3b1-346bacf36291",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eff9a3-bf6b-4a29-a4a3-d23641c29a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c5e39d-b02b-45bd-abf2-9183763656e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac73e2bf-0ac6-4d0b-bdab-da5da140d61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf72e2f-541e-42e8-9360-0603a4c830c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136d7588-9507-4eb0-bd1a-a853e7e1d666",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cca012c-3962-4b13-ba63-6afa96e51873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7b3375-cf70-4aea-a502-e5284498096f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f68acf-4dd5-4bcc-b6b0-821f79b5e353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64459c22-facb-42a3-b45a-9e434731b4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c799700-7d4e-4cd9-8e29-f49afa6726a0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd5dcd7-c5aa-487d-a4f3-da972a747ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621ca223-15e4-4d04-9a22-fbafab24bd1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad5fc24-24c9-4859-b8c9-8297d21829fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6aad0ec2-b17f-4735-a2f8-f23f3d2240b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6047ed-af61-4010-affa-43a4a3524e0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa1d716-c419-40c6-88b5-4c9ad824f046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614dc0e0-0e49-4dfb-acc4-c5335756bd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a586041d-e4e5-4784-994d-22d7b040f63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e051fa29-22fc-4068-b594-ea625e107627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84307f14-59bb-4ed4-95ab-594a486bed5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4f6166-1e8d-412c-89be-b5e23cc5326d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb06f94f-1d50-4dbb-ab63-587f1c70573f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093ce376-050f-4864-acf8-7baffc7ea23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "52e96561-56ca-4d72-8c71-1fe0c719352d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb6b57c-cc31-4bb1-9b19-85ce83df271f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d11263-2b5f-4afe-956a-843e6b0659ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a2d451-7abc-451e-9d2b-c11d0bf37830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9c4698-4d69-42cc-89f1-2578a91b9c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c28d0f2-30db-4895-b651-78ad95ddafe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a33536-53ce-45c5-bdb5-f71a28544a9c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928698ff-3818-4bf7-9e57-0d8abdd0b8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6aa941-1238-4862-ba27-239cbc71e5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb989f4-6048-4005-93f8-f17c3d77e11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f7cf8c-c8fa-40b7-8ad7-ed76aeb05f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013a0af3-af7c-4744-af7c-1299083c2d93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140d0557-8761-4418-92e5-e2ff5a32a7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f80395-1fc9-43b1-9c82-ea06db26266d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d143e6-a514-494f-8364-695e0e928107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea2fefd-b267-4fd2-823b-0c4b72e177db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce1d875-5a1a-44d8-aa2c-460fa30c3021",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7017298c-4699-4285-a184-2d06c4c0eed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a63eaf-06ab-4a7c-9e44-06b2544ae215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453138e2-ab39-49cd-95a1-2d2b1b972c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3546d1b-372b-49c9-b7af-71d601fb3061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec17623-f116-4d7a-8bb9-18d270de1047",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c436802-0192-4dd2-9e1f-27fe95fad466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f23ab5-53f3-40dd-9ac4-1d28b6ca9883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50200718-768d-4af4-b719-b43c53263828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "31da16fa-0e6a-479a-9373-a283bb7b9d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe560a38-1f9e-4418-af99-e9569b9cbc4e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922017a3-1411-438f-b97c-e22aa749de69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d34e893-e8f1-4b10-908e-fa6ca6ec21b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4163dd5b-a3e3-4e7b-b330-a700bd3a4d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed3708c-c45f-42e3-9e02-a5d63ee5c609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c7f82a-6844-43a5-aa97-f1bbf1eef031",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217f7425-792d-4603-baf3-53259d22041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdecb5c-a44f-4c47-9a38-c37cc4ecda2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dc526c-09fa-4e48-86d9-0706e694a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bb3aa1-1452-4ddc-b418-8848599b3d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ef073c-5dad-434a-a939-a1e8de3119d9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b77eacd-aed5-405b-8b17-1c883a78e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694d9c74-0f09-4466-bfb5-e411718c0127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b490aa18-d4dc-45e1-bc06-7016d4eee8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abc51bd-4ea6-4ccc-91b2-4873e84dcdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ebb384-cb92-47d1-9c9d-cb1397af5bad",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4dc800-03cd-44ae-aab8-9b83e174f288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fc2c59-59e7-48da-ad8d-57b23445b6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7b2515-b89a-4ff1-bbd5-6afb6400a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1dbfbbb-b256-4eaf-9bd3-aeab11e494e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458380bb-32d9-4433-ba43-1c1cc7a01bd0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1648dd-0bfe-4bbc-afc5-3ed01e77208a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78af0026-015b-43ec-b139-0cfb3fcb49a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b408062-0083-495a-97b9-c531bf386181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a6e73e-8032-453b-b244-65e7f3388c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54ccc58-3aed-42a5-97d8-02ac538ff95a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c1ce39-3bd3-4450-9a97-0f5cabc3272b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847ede09-7465-4156-98dd-def3a2d082bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d02e9f5-7760-4782-9a2f-d90bc58ddfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77381331-40e8-4485-a408-53cdb42d7896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859a82cf-6522-46b2-ab0f-7539c74e38e7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67aa4411-a27a-494a-a73f-0527678892f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65f6cce-6a8f-44af-a11b-83f2cdbeea97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5217f7-99e1-4047-a1d9-75315babce8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3674681-2274-40f0-8fff-fbeedd75c356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd5b5ec-7179-4e66-8aa2-6583a4b13ad4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcc9870-8771-4fb6-ab34-2e6f5aa051e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae808f58-dd23-43db-a787-9aa9a1a50fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa197d5-28d2-4561-93d3-9e78a87d784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed708492-86bf-4910-9f68-e64fc3b7aeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65c5875-f203-4250-bcdd-9bbfe8805a57",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7138c232-edc9-48ca-b6d1-63a731e53313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ae051e-0d19-48db-85aa-95cceef8764c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0002a000-8211-4578-8ba4-b3093565725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "752db294-3efe-4855-a915-209ccc17e713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03d9afd-beae-49a1-81bf-efb2b209e08c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa43793e-018c-428e-a15c-81ddc17c0a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eec2362-34b6-480e-a32c-45f91a5db010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bac6cf-9b93-49aa-a4aa-35028993596d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18ecb9a6-a39e-4bbc-bb29-e329bc99c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b83ae2-8469-4787-9050-1c6f1d342e3f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6cd4a5-c739-434c-842b-5daf9e61419b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ce2e4f-4cd1-45c6-99fb-8e2146b0e9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803b1ed6-3420-4736-995d-8788892dfbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b187451b-629c-4cef-8490-fb78c832d2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aaec700-9520-425b-908d-981d3373ebd1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90586cbd-4519-4cd3-bf1d-b14dacda3a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9acae1-1b5d-4cf5-b308-113bcdfa54b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371757a4-4e14-4218-a669-04058f146f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4619e19c-9061-4a41-8067-af874d221dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257e688d-b0c2-4ef8-9a56-6d835eeb3da7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f568d2-9c13-4e3e-afcf-369ba4f6662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e933c1-30de-4b4e-99f7-3df6314e82eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fac000a-9054-4f56-b4a8-e6d0a68f748a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60d79636-60a1-41c8-8fd7-a61cf3df9b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a958641b-41f1-446d-b810-bd22ff4b9538",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40991db9-72e4-4aa9-9c6f-6704a3e53ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e3530d-fdec-46db-87c0-a27ee5d681ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecbd0a3-47ae-48fb-b434-ba17edeaa1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f74a944-e84e-4a00-b147-4cec4a6dd66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d4535c-514b-44ba-9baa-37a82b75ab5d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c35826-edb1-4ae9-a5b0-3fa716d04925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8188ec7c-ca66-4afd-b4e4-c6c18ef56210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08af1631-0a20-4086-b400-d0a61b2f18f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9293c23f-9d3a-4a62-a4ed-a87f869743be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835397bd-ec88-4dc1-af13-9e16322f1169",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d75f2bc-1420-47c1-9101-ecba713877c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f56f2f-45a4-4d70-802b-2c7f1684fe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed392aa-6761-4a1b-a982-b52ab03bd9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d67fac-e1a6-4cfe-85e0-81f274eb1ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8494c2ef-bd4b-4a8d-87aa-a81e5ecb71de",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22da929a-3601-4e31-bc89-e0b33b2a626c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49608e9d-f6b6-42dd-9ee1-9cce752e698d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed9d493-19d5-41ef-814e-c3f067cd05a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "568bb18e-8743-40cd-907d-c0b428fa41a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666ae82a-6551-451b-bf5b-a7503d6a6032",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac115ef-efa9-43e6-82f1-acd99a9e447e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbda89c-cc05-45d2-8bcb-f24237d0139c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f59952-89e2-4f88-b9ed-8cbcd5c3d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4200f985-ab4d-486d-9f63-eda44422154c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798f9946-9555-4a20-bbba-ad4c9289aae2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221ca182-393f-40c1-869e-bb6949268038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e89352-350f-48a4-ba90-f0714d07589b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498a46e6-4a8d-491e-b7f8-e41e602df36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c567ede7-0d11-49b5-b007-2eb8a6c01099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc192d89-d190-4b1a-8608-ede38a201e1b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeac55a3-9883-4019-ba6a-da9b7de5faf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d838a0d-a612-4ae3-ad9f-26fa5c771121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c3f0e9-9c06-4d11-b24e-d2863fec898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72843ff2-27f2-467c-b81c-1e2d86360f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271ed3f1-50f5-4a59-8331-86482bd2bc7d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f6bf52-19cf-4ebd-ad4a-4bfa3e954002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8ccb37-e5eb-41b4-a760-0f1b72ab99bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088d0260-7bd2-4894-8ef9-964373d81fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fa30dc-1eeb-4ee5-9c85-d38d6e0ea4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d40ece5-f677-49c7-8d4a-9ab050ca3545",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77b0f7d-8e60-4927-a669-85f1c54221bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5156e017-1898-4574-9266-f7aec8f16cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce649dfa-6b1f-4252-bb1a-1714095f879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac79506-ed04-420c-b261-835beb92c0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c590cef-55eb-4d85-b2dc-f6d0952876ac",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153c2ee0-37a0-4937-9cd8-dad4f367f593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4f5b49-05a2-4b3d-974e-09b898ad3492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ed94c5-7c0d-4011-a7c7-2bfdf5bf99c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "956f9e65-99ca-494b-92ed-007448d78578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad02cc0-5831-4644-8b97-c89f81b2068e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755b2ab7-4698-4065-aa61-ed2fb8d9824b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65854e23-47c4-48cb-9d9a-dea0f2a0130c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f2512b-46df-468f-b673-fdee83d3be08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e808d0e-b842-4ff1-88be-5f2703670b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c480cd76-130f-466d-99fb-3086795515d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a74ed4-6e32-4c6d-965e-a7e129a80192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b076403-377a-413c-bc78-290c59a12a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aa41ae-b2b0-4144-b33f-917b62e1d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd49a78-5027-410b-a575-13c1a22a50e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670cf897-77a5-43f4-b49b-bd10f3650d54",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bc0d98-2702-41c8-9310-e32814bd552c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7004b724-744f-41ca-9017-4ed808d640de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14810370-2b18-4166-8552-709bc1e76340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "828377bf-75c0-4b22-ad69-d6093969ff41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d4b695-ded5-4e3e-9b04-a54217b46851",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0f02fc-c79b-426c-acaa-81512e2c98e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28eb6f37-d987-45fc-9ffe-0a49dd6de4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e02034-c5c3-442a-990b-0857396957a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0420b82-66aa-4909-b97d-eb062697f7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54b2745-b209-4d4f-9335-ffd8e58c0345",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f345b279-a8e7-45db-a677-cf8b1f790494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15289eb-6515-4dd3-881a-22eac28de1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795c83c5-d23b-468e-a55f-01e9912e8b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "02727f66-b763-4830-aa75-267ffa40f1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117cce14-eeb2-43c0-b094-a34ab1f54256",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1afab6-6df6-4017-a939-d27e8e9b2142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1abb4580-34d9-4f71-8963-e91d2dc4c6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de12644-8c83-451a-8209-14f716c8092e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "12999026-7c30-4e67-858a-d4c6bcb56e6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52d8e2d2-7a62-4b05-bbed-712c11819b31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63ad7564-67f3-4151-a84a-6d9ce7641848",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5185c0c8-84ef-4cba-b6d4-70c70ac6be76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0d33cce-5f6c-419f-ab9d-c7e315d65bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceaf29c-2b31-42c8-b7b4-f2ca7faff3e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "344ce23b-ad4b-4cf8-9edc-307b183a2081"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e56d17c0-91d0-4622-b31e-f43587536bf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69b8d713-8e23-4897-95b5-07178465fae7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be8f975a-3cc2-497f-a8fb-1d736a00c38f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86555cb9-016b-494b-a73f-2a9e21bbfa8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95eab788-ba34-4dd9-94c3-f270d29fa8b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "348b2289-e4d3-43a2-8a70-04ce5aaeadbe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f6fd9e0e-758a-494b-9b6a-a56841f4be34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8940add4-fd11-458d-85ef-f5452608aa6d"
                }
              }
            ]
          },
          {
            "id": "735a8b7d-46db-46a9-ad69-eafad22056c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa475a19-d782-4f42-93fd-19f0c64df517",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09a6a2ae-bef5-405c-8df6-4d6ee0846bf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1f04532-c010-4085-a3e4-1e9dac23827e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1a82087-9970-43b7-ab9d-4b06a587bbba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "057770ff-48fc-4f4c-beaa-056ef4bdaa24"
                    }
                  }
                ]
              },
              {
                "id": "7da907b4-0691-4fe1-a693-38f9973d6784",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01f91714-0cdc-4e38-9cb2-6ebfb6bc7d39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "683b603c-f682-45ae-8dea-28828733c165"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a57bc2b1-acc8-46ab-90af-55b6f04b4e71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa977bdf-8b95-4a1f-b649-e317e512cc9e"
                    }
                  }
                ]
              },
              {
                "id": "6de945ad-ec02-49de-9613-6566e576b7ca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcd7ac73-952c-4579-bb26-732f1269db05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dec33260-b829-4dbc-b50e-d38a4506f41e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c6ee955-5bd9-4126-bb8a-9c00160df2c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10ee34a6-f9f9-4e85-9dcc-81e737874430"
                    }
                  }
                ]
              },
              {
                "id": "126010a7-21e3-4cb0-9d9c-d51f536eb5b7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8def5637-2884-45bb-95f4-152ffdf17fce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df184b96-670c-4a49-a25f-8041a25d3f0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44948c19-b1e9-42d3-afe2-20bd0e77107e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5df4774a-c8e9-4c12-9c0f-a9f60f1e238e"
                    }
                  }
                ]
              },
              {
                "id": "f5c83406-8e84-497b-abea-d213a91e685d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66462484-7821-4893-a66a-e0041ede6b59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2479481-f891-42cb-ad89-1eacc3df6606"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8d0946d-8c2a-4860-84e3-5f41caa1134f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "30914f9d-4e7b-470b-8933-a9619fcd9912"
                    }
                  }
                ]
              },
              {
                "id": "655e2293-2246-4f47-9909-e3fc8155e2ff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15ea755c-35e9-4861-98c3-f280d217500c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1df76fa-6bb2-4de0-a1ee-5fd6534ae80b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ebfc750-2ec5-4366-8d22-8fbb618911ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1bcd21cf-8d12-457a-b6d4-a32b1ea160eb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4a0aca6-caed-4a17-ada0-4fbb4eb34e00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04c069ab-937e-456d-82f7-e1555306112b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4332907c-b09f-4d21-80de-6946ab0c9692",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c50b575-389f-48b3-adb1-b47418fddb37"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d15cb3a5-a996-4d12-beb1-a6e6c1b1a186",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f388d4e4-f6e7-4b32-94a9-5c5af25edb59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c185d87-efc1-46a7-955d-f4db5608011a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "380c1d5a-4efc-4e02-8edf-aee4f35b7103"
            }
          }
        ]
      },
      {
        "id": "76de92fc-c204-4c09-8785-54ef6fdbf0e4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b3cc0c59-b53b-49ab-8d39-81d3b97e2ed1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "406ce083-d149-4723-82a7-279cdbb31641",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90faee41-97d1-4fa2-9d4f-7e8de0e45c93",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384b13a4-0953-462c-879b-0c380c8082fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cbd559-28a9-4556-b441-696332dc234a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d316f69-5ceb-4d4b-8f41-314d4fa4ed91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34c7293-d197-4ce1-a71e-f346c2dad004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a266e578-be62-4cf5-a6e3-dfe5f66e2655",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6950b38a-c8a7-4c73-9290-b78c231cfbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c32140-9827-4d0e-9cc6-13c39d6c2505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f56190-6d22-47b2-a9ee-0f8ff738b0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0f6c23-544f-4ff8-9103-330f3ca2e253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a121a43-a0bd-4906-b0a4-298110d680f4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a634a8fe-f2c1-4b39-b511-6c0b3a577925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfa8b2a-d379-43d0-a492-23dbfe81edc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b12dfdf-98b8-41a9-add3-b1366eb8a439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9497e4fe-d11c-498d-9638-abf49cea7bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f55c8c-b435-48f6-9102-3092bc4ad723",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f1e258-4a9d-41db-8877-82a8df2b420f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c9f188-b2d3-4064-bbe8-91f8c61d3ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1a969c-adc1-4e19-a4d3-8037428640ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc98ef5-531f-4bd2-93da-30f46b911ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ac77a5-a8a4-4789-96dd-0a159a0f6d1d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b32901f-86c2-43b1-81b6-2c6257f9e4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcfad33-b7f9-4f9a-b7c2-48739700f818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bf8e4b-224d-4a95-b1af-d49e90752642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d61b2922-a2da-451c-b018-618c095aff61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2feeb419-0267-4cc3-b637-96ad0c78d5b3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f29ea4-664c-414d-909b-56e894ccad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ddffc2-7807-4769-a590-2425e17579bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072ea5cf-4742-4318-b553-88f45a3cad0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59395477-ffa3-4f9d-aff6-4a5d8fd15ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfb509f-368e-488d-934a-5ada17df6c9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4f951d-ad7b-4337-9b2e-92b279ce78d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c5aa76-e4f7-453f-aa83-75afa4237c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d015c52-34b7-4373-a3e2-6f8fe83d2d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "144dac8f-e499-4aae-8079-936acaf04fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4d6bdb-ce4e-4e19-8286-f09403dcfd55",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a4321a-d7dc-49e3-b6a1-0da3b64e6725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266b14da-744b-4cc1-8c76-43b747b64803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d56ea72-7b91-4a26-828f-f85abf5845c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ead63b-4114-403a-996f-65fda6856b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f01d3f-b015-4bf1-8199-28debb5c8e8d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a2a072-bd2e-4fad-a23e-64d40f7c469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd15d1b0-cc90-4bbf-9f1a-576ee3f084cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045d7f45-4aa3-4a15-9734-9a08d0168ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaab8082-8a14-4933-a6c4-155eddcd7fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320db23a-9ab7-421f-b8c5-2d64b56bad07",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a962699e-693c-49b5-83b5-e1d7b7054e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b99211-5b3c-4192-9e08-9bd5dd28b0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec59562-0f02-43f7-8477-f4bba100f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e40860-6aa8-449b-b2e7-b95fc06f989d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9f383d-6f30-4eef-9eed-74ffd7b2f831",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d93ed9-3b7f-46c7-9a22-6eaf957f5e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71156d99-7f98-43ea-b930-98afd4c5faa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7fdc29-d4cf-477b-a811-9d6be4796c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "06b1c417-8468-4ee6-b636-432be9b885a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6456ecdd-72e0-46c2-8f4b-190c62c91842",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55e3a19-ca93-4c86-a8b6-01b9777bcea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5626e1b4-8e1f-442a-8ad4-cb6c6fbd84cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cdd803-0287-4b0a-81ad-0977c227850a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c117fcd4-9a43-4077-a69c-6fecdeb9d23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a665a91-9d7b-4fdb-9302-0b5787b8b220",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff0de90-bef0-4bbb-95c1-362c0bf504c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6c6b49-045a-4f71-9b24-e41cfcc141b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d45ff2-38b9-43d2-a59b-d2c7cbc5d4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "619f4661-651d-4c96-91b0-991e0fd5f394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deacfdc-b6c9-4c12-a53e-06b7061d3ad6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cc869b-65c7-415f-9bf1-45f2a9d00cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8eb5c2-1ff1-4858-ab9b-de2ad105aa68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d931c5-5782-4286-84bc-1a54c52a410d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "064ef770-6ef4-414c-aa08-2f9dd746bb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6b2eec-1b76-4911-a6ce-d33ee39e7213",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143a6c7f-6e2e-49cf-9873-2132866bc7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8079a128-5cf7-4fd1-8d24-644a0e5a4829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700299a4-ef99-4d33-99db-d4bb46f516a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8419e2e7-a4a9-42e0-a887-4292a61adbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f9c904-4785-4d32-9eab-d9b014fa491c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f802e66-13b2-450d-ad82-aefdca6a0297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09a533d-e0ad-409e-bf8b-ffc2ac492153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46e9c18-0fda-4014-958e-3298fb67b6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0331506-99c2-4ecb-8e9d-cbda29a05a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b106e2d-93fd-48fb-970f-110b61759f3b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9637961a-6f24-44e6-8631-bb1fee38b6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbffce45-7406-4f45-a7a8-d951595b2ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec08ec2-f0f3-4ed6-9b84-b6215696c471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc26848-bbbe-4ff9-8d01-887d9d48ea54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa2cf8e-eba8-42fa-9315-2eadf3ac7b85",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c463fb6-6f4f-43c1-8792-dae7de9f7b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca278644-b48a-47f2-807b-00bd16334a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71ad0b0-2dde-4cc8-9957-a49545791877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd60566-0ef6-45e9-8dda-a8c58ec4899d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ba2b4c-2b25-49b1-9aa6-3aac2b17bc8f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78312d0-fd79-4802-a455-986d89f75f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a78c0c-3ae9-4949-8147-04f7dfb895cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a629ab-102b-41d0-b64f-bbc1c916c286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a2e2c2-7ccc-4a52-8b19-d037840c7040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05df42b-6033-49e9-920d-e572452e7128",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f121ee-5e23-4306-9d6a-da6854602c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab622d31-6380-46c5-bad6-509f7f3f01b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9105031-6ec4-49d7-86a9-004675e50e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d20ba0-de7c-46eb-989f-d78d00251cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caddcde5-e0bd-4620-8f6a-3d29fd91f40a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eeb60fc-8f43-4c3c-93c8-3e021a008825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0c76d2-b199-43bf-bf57-a41e80ad82ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb754b0-f2d9-4b0e-a6eb-a583c0229940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa496b32-6cd0-4514-a173-5a21f860c39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f939e96-5d26-41d0-a772-d39e6a07d588",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea661c6-a148-47be-ac54-1501e7db1df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba20056-0750-4a26-9a85-cbb7f5b6abd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4fb6b4-eb3c-417f-a050-dfaa803e43be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ecf063-1f62-41f7-90c5-6177acfa8afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b765a1-34ba-40ed-abbd-aa60da495e56",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced42856-521a-4d74-86d1-6acb60c30fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d30c780-5db1-4a8b-8918-ccf79e5fa630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f44f04-5598-431b-a8f4-1a6ae03e1ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "455b5a0f-7190-4235-b9dc-bb54c97cb9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ddc040-69a0-4f9b-950e-81ccaf6b0fcd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485081b0-0fb5-40fc-92ce-f3ba8b0c876b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9115c126-fc4a-43f4-99de-aad03233ea0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c86c76b-f720-4487-9f3b-beb05d9239fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fd4b47-5ed8-49c9-b171-52299744857e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3737484e-b2fa-4682-9168-cd1bcc9af433",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a517c8-0030-43d7-9ea2-ecaa8f50a6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb0915a-0315-406a-98b4-5ae5e695298c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333b1ea6-d05c-4a68-90f9-c6f663adf0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e65d60-4e43-4243-be47-86c51fa1ca84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6600a6b4-1ae2-45d7-bb89-4b1c301a8f6f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9eb2c2-05c3-47c6-a1b2-d795e4e4cc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a013e3e-5fb4-45ee-b18a-ee86dc16a7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0661c2b0-cd70-493c-bf95-e3302365f5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2455728-113e-41d5-b0c2-942d7f4d2e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e905dd8d-3b70-462d-8109-ea8ee08324b8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8875588-f163-4d7d-ba6e-a411f384a25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d836d1-a8e6-4a83-91dc-b4deb6cbe344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc69f54e-a0cf-43c4-9a90-510e8e1b260a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13e7d8c-73d0-4ac3-8080-8faca1396d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892a8177-638c-4d3a-a875-6b3dcbba87ce",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fd051c-1466-4232-b7a1-2f683a7630a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ef8def-3350-4483-b930-e393c393447b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fb69c0-95d3-4199-b688-cbf4f74cf4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3daca3ba-0e91-49c1-aaaa-8e5d702a77e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84fb1d6-1bdc-46e8-a12a-2f754f5df3e4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b281e-faae-4a14-9aa9-c8e13c638ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae932d6-c21e-461f-aa0d-fd1cdd0385e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd0d8d7-a7de-4b02-9782-21fb81b6c15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed9c38c-4149-4a56-b4b1-b99339cea1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5094ed8e-08e5-4c67-a389-484355e9aefe",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d368a36-bd0e-4474-ba5a-e305dd5c0891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd2682f-d4a6-4241-880b-b4b7787beb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46026a2-63d0-4c8d-8daa-943cd6aaf2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a2ef80-3483-45c7-9318-7e4eed27b773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d3d620-caf0-412f-ad05-80dd5947e387",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e4c1d4-8570-46f6-b930-5e185b9b0421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c6bed7-ffcb-427b-9a5b-677098dbc8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f732112-3453-43ee-a1a4-da022953d4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0567420-faf7-4636-81f8-5d9368f13697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f691896-8fbd-4839-9607-84fb9391d50d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f606594-3c02-4b77-9a3b-112b21f87abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2a717b-1a88-4cfa-a85f-8939d812a736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31a39bb-25ea-43df-ad89-e47b65c34c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "221244ea-89ad-4d4e-bae6-d8c5c363f76c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b24d2c0d-33fa-4dc2-b80a-e25e6caad92e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e6056f8-e89c-4f9f-abc5-48a0ddaaf419",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6118273-887f-44bf-b42f-4155344bfb06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56717b4b-c6be-4bb6-b329-17e318e7d1fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8827dd9-924f-4b1c-aec1-c5a483fa098d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26d7c6de-d55e-44b2-92f6-5f5573d9b20f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb6654ad-2c5c-40e4-9441-707fc176515b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "522ccc03-7861-45ba-b594-8070e3ad4fba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fd1d3bc-6149-44f6-9993-888fe6117d00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9efb7b3-aa62-440f-b253-acd93db92168"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be12ce06-d388-47ff-a36c-066827f0f54b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0ea6255-4270-428a-9a93-e0dc62d53184"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8165dabe-e9de-487a-9743-03a481644371",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0903dfa2-e5c5-4f59-812d-81b013fd9e4a"
            }
          }
        ]
      },
      {
        "id": "0296ce97-a9bb-46c4-bf4e-a6a418af0963",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e23b9719-b6aa-4371-afbe-be2923b55ac3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12fdaa73-1a76-4f8d-9689-f78f9cf239c2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8eda8cc-bbbe-4db1-812f-f42768222d5c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b04eef-1898-4fb5-ae88-382cbe06a4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e544208-8810-4c30-80f1-512cfaca6011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d5bd3c-d5d0-4b4a-a11b-2a0bcbdf8200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "166cb3d6-37c1-4f71-bba6-1fdc8815ad1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e61b58-674c-4200-982d-f463bb659d0c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186eb803-0755-4bfb-96c4-9585250b1636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbab4f90-43df-4f7b-84c2-51ad25d7b472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce77290-0700-4a52-912b-e3653b23be46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "635567fa-e3c7-4d1c-950c-cef50c7c2002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b60e39c-a757-439f-8409-ba4be803fc34",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503c8498-be1b-4f38-b4fe-3abedc1ab749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44098836-a4a5-47f0-aaeb-167ed4df997e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eada78e8-c9b2-45f1-8d58-010b6a32c702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c7d54d-ecc8-4752-af7b-1a6dc82a2ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c410aa4-7e05-4295-bf71-1cd569ec6dbd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aea49df-c1af-4050-88c2-6d47b0fa007b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffede912-21c9-42ff-ab08-e0e27f9a48bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422a8f09-2b95-4c34-917b-3eb40c21d67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7615e737-95df-4b05-a781-8ef93d62d46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711855d6-9bde-4cfe-a638-725298bc86ef",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf8bd88-8c25-4a1b-ac4c-825054823662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c5eac6-d6fc-4989-b758-b8f36c98dcfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c91b704-7d10-498b-8c5c-5507d14f8e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "423df208-3e6c-4511-8101-decc7067cb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ccd603-d831-405b-b1d2-21c01f76a400",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950bd76c-e47c-428c-939c-5ff342641772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc413878-2cdf-4373-8920-150fac2082c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2b3890-6853-432d-a64b-dcbe358090aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36164a5c-2290-4465-a4e3-032635e5653e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fcb14c-ac04-4c23-bd89-d775855e8cf1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806b90d1-ac3c-4674-8036-d3ce3c88e169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fb9cb0-8dd1-468c-8782-5ab3c2cc202d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c63a07-72dc-4f6a-ab82-136c4bb483e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9191e2-812f-4d69-adaa-34353541935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe48760e-1c96-48af-b11c-269085f5bcf7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97293e99-5930-45f3-936e-8ecc95bca7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9694eb0-ec35-474c-9dd4-8c53fc9c1578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb95d241-a2a0-4e4d-98f1-b2d5083e1e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ad8c3f-4569-439f-9428-51cf1c8e581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a1586f-a026-44e9-87a4-03bdeb624a8f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3570b9e1-8cef-4c98-aacc-74e1de43e9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbeb1526-1975-4840-ad47-c384784b49e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6816058b-26e6-499b-966a-49ed5a0cd963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b23ef317-25f9-4f32-992a-9514176a4ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dc7958-b13e-4f24-85aa-6a4cda9a7c20",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c839534a-ed35-47e8-815e-0a4552947265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2976e900-4ae2-4d20-b5d8-34b182752478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a33861-78cf-4f0e-a59f-7bc4dcc0daa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d2f8c3-f5f9-4525-8ce4-cefaa8906d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed713af-6a38-4d30-930c-e041c2055246",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc30c8d-5222-4e0b-b418-8f404af394c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34cbafe-96b5-497e-9841-a30479de40ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb64f44-1667-4057-9260-a7ed04905858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "59bcea89-197f-41fe-84fd-dff0979a7b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536c5b7b-dbef-40a6-b080-fc75b0b07919",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189974a4-b244-444e-96f4-fcc2f9d7db12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d55b27f-2a9f-4b10-8cf5-4562a2e5123a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b60c18-842a-46c8-b67a-b345f4f90194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9064828c-bfd0-4d3e-a61a-6ff76388091a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c715a628-07a2-4b48-9f5b-f2c82d70e2fa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29ed56f-366b-4892-8554-a86cc026355f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ef06f1-e327-4553-8c3e-0ebd8ad3428e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453e38b3-3269-4a46-b57f-211d7d6652ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a308190d-c193-4305-9eb2-2efa2a976829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb430f4-9230-4e62-b4a2-9f8eff2288bc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac62659-7ab8-4321-9688-1fe450b90c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb428a1-00fe-46d6-8f61-b57da86bb252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad6d2e7-a03f-458d-bb67-ace1240c6ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "08423ae8-1fdf-40d8-9b35-a572a6e549fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ff8951-b642-4f6d-a25d-739dba0c8085",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf755ac-24b9-4bc4-a1fb-a1b6c9022b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735b58d4-f086-40a0-9f83-de3ac596429d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03667aef-09ca-47e4-916e-464069a2907b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26ae905-af53-4b35-b211-3713c48b5329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9144bf2-ac3d-47d7-9b8f-0538df472536",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09b30e2-dc9a-4556-8947-4bc4c0087586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898951b6-92ac-4f21-aea9-fc1ea60714be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eb0be9-9c1b-4201-949a-5ee55bd8a3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9121a607-8e54-49a4-abb3-b9ec55f73729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b98f85e-bbe5-4824-a469-126256069b3f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62af2c4d-6c7e-488c-95b2-d2e5cd68980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c033bbf8-f52e-4e25-a725-15dea16b45f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6017bae-e353-41fd-b00f-51f4adb86bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbd02d4-c127-4416-aba0-bfd79aa73e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00abbb59-502d-40e2-a9b2-c39610bc647d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8937fd2b-abd4-4cd6-b06d-94f939a51dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa13e3c-4aa4-4e68-85de-72f934078a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f3f1ba-67bc-45c8-8e03-d3811b8f2454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "375719e6-2337-4a77-abc3-241a35f574a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce353eb6-ce29-4daf-93ff-64e35849cdc6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2ae703-7ec7-4f76-af4c-04d79cce283b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a773ec-a733-4450-be2f-6da70d6073d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2037cd-aa95-4106-96d1-3615135af863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0a9cbe-8bd3-47da-b45b-930d02e319d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bbac35-a85d-4415-86d6-ab9bb0c04529",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f188184-9d46-44df-abab-1fcc2119c2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06013cb5-ef90-495b-b795-e149ba2f8310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b40009a-5696-49b6-bb44-281a2e5bf6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "776f3cda-81a3-47c5-9a6d-9bb7dd53e82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a969c3-0831-4332-9744-f6f509068323",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb6dfce-e0e4-4ff6-9aa7-619c92d3954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640659cf-52ea-40d0-b250-17d94b971f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328a6254-5cf8-4f40-966c-b74dea28e4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de74e757-8ef6-4d01-8b5d-11e85886f721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24c1be0-0e35-49cb-99a4-3f0d0be0a80e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcdb74d-fb4b-495f-b915-094767b6d7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6661ef-e5b8-41e3-a996-3496d33dcf0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb78c83-83cd-4789-8854-ca5b4c8d9704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b12612-302c-403c-ac7e-dc8271a26029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f7c6dd-9746-4703-9ff2-3796de87d62e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dfc5ae-9991-4f81-b2fa-25516070e6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7836da52-49af-40a3-9c67-02f42804183a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9408e6dc-82e4-44f0-a3d0-e8ae45f92d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca602ac4-4b60-4c7d-bf6a-aeb933365caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edac782f-5c13-4cc4-948e-f88079bbf0d6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c967c59-6b8f-4ff0-8ed8-75d2d2f014ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43ea54e-49b9-4382-bc92-be5ff2bc9dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dcfd5e-cfd9-4ff4-90eb-156601dfd404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab60c74-f718-42ea-b3e2-b4f7cccb1d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8167e192-2ad6-49d8-a0ac-e459d06c194d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdde987d-ef06-4842-961e-347f5a89fa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e3fb01-8c94-4bca-bc95-6707a114c3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40d8483-068d-41bb-a9e8-7bec43d97fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "280f1cc1-aab9-4a04-b54f-ce83855032b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f765bc-07f6-4c08-843a-d5f9308c2df5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21671c4-e0b8-4f6b-9f43-94449f791795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91abf4d-d2ae-416a-8521-dbefdda0d0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c6329-030d-468e-8e14-81aeee52384d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d81b22e2-0e68-484f-bbe5-7a5a79a54ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb46beee-87ae-4394-8ed2-90d617b33698",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70274965-b52d-4cb2-96ad-8f7b1db7b364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9789c7-af8f-470f-9275-cab66de2013f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c984baa1-3bf5-4c7a-9ff6-1eff6a00f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df142e6a-335e-4ee8-bbc1-631cd8659bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c413279-300d-4aeb-a8d6-d545c2c8e000",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59efae7-7d6c-4c98-9b6e-467f8aa2e5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddec18b-0fff-4d64-951c-0b7398e5f1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca03852-16c8-4eab-b74b-ac3d5073e37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "427ee0b5-27e9-4e65-b29b-5a0e7c74c340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bdb49e-ae7f-42d2-8dd0-03d3bf076aa2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90acb213-2a73-47ec-bd49-a8d73fe707ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f8c0f9-8e90-42a8-909d-1f53f3e90626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6ea8c6-c996-493d-a6a6-9f011cbe9505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c81acf-d3ca-4451-8067-ff54d1a2788f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb8b95b-67e5-4e1c-87de-4c12867cd527",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6192c2a-f116-4192-a4e3-d574662328a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbcb847-129e-4494-ab22-124b2fb4261d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bc03d7-c807-4484-a8ee-d39f7602148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5fda39-b4b9-48a8-b207-cffdd35ec4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98ace32-14d1-42fd-acd9-5da40ae98ece",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e010f9-6c6e-458f-b737-3f74a2e019a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d74007-2e58-40a1-ac50-a02d686f1b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71ee894-9b2e-4920-8404-9fb767628cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2862239b-6adf-45f7-b703-61add2577a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd4d044-9c42-465e-be31-d7e506420768",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6de2d4-fe63-40cf-a3ca-89971544c243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc950e8-fb4f-4ae9-989b-8993c9cc7ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03afe10-648b-46cd-bf17-2d435f74a5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2337b5a8-232d-44b0-9ba9-fb15f6d5f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04631f81-c057-4d5b-8068-b5aa62ff785a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66850fb1-0d9f-49ca-89c9-74ad2d673710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3eefb39-8d3c-45d8-a405-ccc54e5ae218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200a036a-fbb3-4305-a649-298176b25b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dad7aee-3506-4cb0-b39a-1a44fd2238f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8069fe6-e1ee-4d93-bea5-54c7dfb204f6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618f9d70-4a86-4531-907c-8829085ad717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527254eb-0547-4a95-8c6d-6a6aab1ff95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df7bbe2-9ed1-4f7c-a50d-088687771699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a3bffc-c559-4c89-97e2-1d6f8fd2f6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39a9e37-b6b6-434e-a8c4-52df095c1a01",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba372eeb-bde3-4551-945a-1755417dcb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d14065-b5cc-4815-8319-6354c6085f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5f080a-4abb-4966-9cc9-de1baef7e410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f60416-43db-47ee-bcf8-88a3752386ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1344fe1b-b348-4dad-9551-4f86cdf133e9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9f2737-f54a-4299-8f64-fca9e66c248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c975c766-fb2b-427b-96e2-10fc212842dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a022d9b-8452-406e-a8fe-fab134d29acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b80b5a0-951c-42be-b6e6-b035abd11597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9219642b-44fe-466c-9901-d06012487f13",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba62061-b9fa-4c08-b0d0-31c89ad2a125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d03c286-0ca7-4d52-81fd-1c7f01aace99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf5532e-3168-48f7-9072-cdb89ae19859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "accef246-d72c-4c91-aca0-499b81c96a0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8e3c75b-5be4-483a-98df-c9cfda817ccc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f12d6e6-b8b8-4630-aec7-2b37481b68c5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e4fd86-78c4-428c-911c-b9490327267d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddf2b19-5229-493c-8833-fc7ab4ce46ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb36a56-3ea4-410c-8e73-b7deafd939aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68c0444f-3157-47eb-8eeb-4caaf048fd6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015be1c9-2fd0-436c-854f-a5a1a926baab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff32193c-3d46-4b47-b0f9-ed8d90023ea0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3726215-c854-4a30-8f40-aec2726fbef5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1ac64da-9014-4b4e-8b69-e054e3ba9683"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89f466a1-1d95-49de-8786-ecdc0815e62b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27b9ae4d-93a4-46a2-b36e-ba1c51c91514"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8f0d99a-1c78-4abc-8ef2-ae3c20558569",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d001d81d-aab0-48f8-badc-21a6c460b9c9"
            }
          }
        ]
      },
      {
        "id": "4c4192f5-9873-4a1f-8093-8b3d02f22222",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7443e7ee-9741-4a52-afd0-a5ded9de143f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47fbb35e-2571-4bc0-8609-456e4afebce7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "903b26e2-31ad-4e6a-9cf3-27891243e5ab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd96ae9-ac42-4050-a3b0-c5260e086424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231b001a-a7c6-4553-8fab-d63a67dcfc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb7ae2b-2ee8-4525-9d3b-64bf97dd647d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20757c1-d8b2-4337-8d38-197989124b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfad2d7a-310a-49de-9c7c-a75c98d563f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56937528-da93-4919-ab8d-73babe35b22e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d492f1ac-7f61-491b-b509-1edefb08dd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd63d66-567a-46b1-bea6-851b0036b3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbdd045-242e-467c-8980-0a54f8eb6b91",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7809e8b-8461-4a5b-b393-2f986b2be6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b41b3a2-3951-4a18-a339-c9040175ab05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe986b8-51b5-46c1-a329-018aa0a10b8f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa06d987-e3f6-4f7b-b65f-5495d07b9dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf39790-132a-47b9-8f18-1cec49c657ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ef42f2-deca-4c83-bed3-a81667549590",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36cd0de-29b8-4650-82d7-91b05fd3527c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbea57f-640b-4ee7-b5c0-17afe96db694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818b70a9-848d-4b9a-87cf-92a897c07317",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff5eb0b-611a-4404-bf6b-05bb767aa3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205471d9-59fd-4ff0-a733-7704ca1cf571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a90925-1222-481d-bdde-0f27f95645e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9583a503-ab32-45ce-a3b0-b8df17cbbc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85f57f4-5872-4ee0-b47f-33332890408f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb34cae-84f0-4bcd-9585-ad102fc25151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620cf6c4-7585-4f37-914f-a36769f28aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49531322-d80d-496d-8c85-749723630a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbf0bf2-3c91-4c3a-bc47-1d38e792ccfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeb1d9a-c3df-454a-a25b-9769dc0756e9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc47a64-7959-4154-81e0-593553cd827a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f3c53e-bd4a-4303-a5d3-0220442173f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6f76cf-1dec-4cb0-a8bc-e5cd66203092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702c65b2-dc54-40bb-96d4-ba43dc7942c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1c5fcb-e9db-468d-a19a-fe182468b600",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a593a38-d05c-45e4-8536-c13b5b892a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e6b94a-4816-43c9-81fd-b05f2c71647c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba4e021-4002-45a7-9331-c6864c87afa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef601747-5561-472c-9d42-9655a683fd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e9dffa-e145-4cda-97d9-c6bcddaaced5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e353498-a19c-4b54-85bf-ae7ca1f6dfc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a955064-bfb6-4ff5-8e10-0d9b6aa4aa17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b88a5b-fa3f-40c7-a8b1-d21742acfbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da1bbb0-897c-41f9-a0ce-6b321d01018e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a365b179-6afc-4e47-886b-4cb1a484b047",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920c16d3-e6d5-4dbc-a0d4-ecce2ffc0d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aef9777-4325-431d-bed6-dbb467b56593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ab023d-6ed5-4806-9d21-23d94a46ad94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e65b4cb-95b5-49fd-9707-4ab67d5bc09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d88c06f-3ce0-4f99-966f-73928943fdd3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06338a8a-c8e8-4a74-b77c-e03ce98e0ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dff90f9-8d89-46e6-a0c6-6a9289f5a35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de80cd3-1c24-4bb0-a99b-716dbb5fbd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908c3ee0-babc-4a13-94b5-886e1bcd8b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f9a725-12be-4bd5-abb2-ea8de3bf99e8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1df03fd-2406-45e3-b677-6b352af97f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00a80a9-7ef6-4e48-ad4c-60a5c462bf4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7238fc2-0af9-4ce1-afc5-24740cdfa7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c038ce-fa51-448a-a443-3bc0441926b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dfd30c-b2c1-4290-a744-fbe994899aeb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819b5740-6edf-40ac-a295-74d166b86f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c3a126-957f-42cb-b0ba-ba2bff72c240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48908e39-686d-4721-b331-1834b4d88613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05667813-9a89-4f64-bbc4-6e7d1288f0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc911f12-6260-4f53-99b1-6e4d04421b37",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a55e5b-b533-42ff-8c97-201129ee71fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1612abc-d597-44c9-beb9-42f1552859be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdccbb6a-9e5c-463b-9e8e-06054e162af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ca2293-6d2b-4213-b74a-ec66fefe35cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a280095e-952c-40f9-8c8e-b18994dde587",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7975310-7bbc-4f9a-8578-dd5b6e552040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f484c8ee-8a42-4f6f-9ec3-2e76f8067ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8944d5b-04bb-469f-bb2d-875418bf4206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4756a94-01c8-4a47-97dd-04acb5e3cfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f399f91a-079c-400b-8fa5-40205ee41e70",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e160a157-3b8b-4bbb-9922-6de47032f5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c54c91-de57-4d48-a76a-82958222e5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31606fa1-f00d-4c6a-baa5-dda9870d37b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5760098d-be0a-4abd-8f98-014c460154c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955296ca-e699-4448-9621-a6d8866daae2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425b9de8-9b62-4774-a5a5-b98d37a3392f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78225109-640c-4b0b-942c-f0a3a238b84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dbd942-fe4e-47e8-afa0-755d75838f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334c4cf6-8992-4b38-8c8b-591a8153b392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c829f0-9b24-47db-aafb-5dfa0ab47c82",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066cc1b1-1987-46da-b330-e1ee30620088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21dae98-792c-41bc-8ff6-de91e969f8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c72b0bd-1648-4fe4-af7c-8f3360930c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3c9710-00b3-4150-bfad-9377231ead69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9811a9df-9af1-427a-a9d5-652dfb12be13",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb74918-b3a6-4536-8955-4bf3ecfb8059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd520f86-96bb-4239-813a-891de9b4e7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9934f384-1d09-4092-bcfe-d77b20dfd66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d8652a-7cb3-42bc-9502-db4279a74d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fd35ee-0274-4568-b872-02834150f4d7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b690b4-d222-4195-b409-9891ff1d3a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3c037d-b79e-49dd-a09b-4f71118d5c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a744558-3174-409f-9e0d-20a013326009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c332945-8979-4b2a-857e-d2281b41051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047cb920-5b0d-4c31-9666-0c2e6233d08e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ab6d67-89f1-4f0f-88d8-937b07eb3849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6f2e1d-3197-4643-b396-7d5c7900573b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23db40a-e7b0-4d91-938e-daaf605ce1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05bf5c1-e580-4728-a03d-d2fe40c6dce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776f9391-bc91-4ec4-8ed4-aeea41a7d7da",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea00f9b-e75c-4c46-8fe2-9709e49a3bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f2cbfe-a488-4d41-bab7-b449ea309b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c212c78-392d-4133-a55d-fe94f14f1026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8c15cc-766a-43f7-8070-a9aac1da49bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50305977-f565-4307-8741-64d1239b8a42",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7132c842-8d09-47ba-92ca-6e92c6cf35d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0abba089-ba8b-4df7-8bbf-9b6638d7a242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8cbc68-2d6b-4ba8-acd9-699aeee6bfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a844e7-f42e-48fa-a3fd-e35c5f24ccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85434a26-76a6-4de5-8098-4f16e65c17bf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c973f3b3-2156-4933-9239-1729a2937dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c420f2-f749-4d7e-9de0-cd4f780ce9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0390cf1b-248c-4684-9a7e-fa6c4ef424a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfde97b0-1da9-4ccb-80d2-dcff0fb57c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ea4572-098f-47c6-8cad-d12f868536bc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea66d84a-ed4e-4fa7-8ac7-68ff68926b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6448ba4f-905d-4353-92c3-7e88c6f1f0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f734bb8-ebe9-4933-b89b-44f640b50c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d679f4-2bfd-46e4-8123-44e9fe5ce646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e6e53b-0e75-4155-b45b-965a315a0e7d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4169e02-875d-4580-bcc0-b0380610a164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d3be09-1ca9-40d2-862d-7f51be776389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d943eb-8748-4a63-a64b-80ce5ca1ffb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db40532-ea8f-487f-a12c-ed14fbe55556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d389ffb9-374b-480a-90f6-abd5611dfbb0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17798bf8-9d2b-47c2-9d65-5de35542061b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc61e33-0ce7-4561-8703-9d953d661298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795e1aed-a38e-41a9-9c09-1739d12b695f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cd6f9c-f4d3-4c61-b047-c0372fb3dc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6987e3-60b7-4309-8678-95f43a633670",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74076427-28ac-4111-85b2-c3525e8bbf70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf1547c-16cf-4a36-89a9-de4bbb754106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8895923d-f34a-46d6-9e53-d5858887d26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415c16be-008c-44d5-9b40-458f92bfbe2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8866098b-f4a0-490f-815f-2202c7b08964",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb56b519-ed19-426c-9e93-c625c21e66d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9785a8ad-b951-4d5c-9873-1d0caa434b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dc5418-6f84-42e8-ab2b-e1a4cf0fef93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a477bd59-4ecd-487a-be82-3cd508314f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de814173-7a49-4d38-97a1-ff9dd0b8ff0d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f0987b-2192-4f44-bc19-9c1f53d00b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2912f58-37a9-4c2b-8f9d-42bb5fdbe47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ff58a6-fa50-470f-9ed4-55203c246082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d122100-7825-47d4-9594-8173bcd1bad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674a2922-1542-45df-a302-a94be506140f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89db3260-3188-4849-8f7c-0b12a8bca20b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c49c9b2-be3b-4951-86e0-03e4e8d10d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64efd9f6-dd8c-4ab9-be43-9e0e9025d10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df83a2b7-47b0-4ab2-91f1-a69cea46d7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90da0f7-5f7d-4f68-90ca-8143adee54c8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b219af6-d7c0-4a86-9fd5-440b7d55e8fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9e93739-3730-4ace-9fde-f906b617c284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a944bfe-5a32-4eb3-9e27-b011a2bdc0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e50302-1236-425c-b164-a14e8a3c36a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fffc27e-540d-4f86-8d23-60f88b21efc1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52eb5be-ba28-4bfa-ab90-e696d8069334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05175c41-a09f-4434-a5f7-5048ee85738e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46980a38-9110-420d-a335-742c2b870e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c024e3-24d1-4a7d-af7b-83571a7d8d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c02099-6c77-4a50-8dfe-762cc2b00e44",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50074932-377d-425c-938b-94bbf9233564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7a7ebd-73d3-4d82-8e9a-633ea3c12075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbd58ca-2172-4152-91c2-1fb49b7dc4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6660c2-3e40-4b1b-aa3d-5d918b5d29be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bc2431-1531-49b5-99cf-1a2047e62b07",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e327ca6-917d-4505-8b78-fb7a5805a59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f366308-8e32-4c81-ba22-b616261e2719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e6f98e-0b87-47be-a435-9487868d674f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c43aa44-069a-452f-8553-9195d901d735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511f7da1-9735-438a-a7cc-e1ba93d3f27e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d29baa9-db51-404f-a29d-5b926c97ce10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d04aad-3c24-4206-95d9-0015e303bec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c7ebad-69a7-4a46-acc9-41118b87a3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bed56b-32d4-4d75-b439-776cb2a43066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6987f0c8-d430-4978-b246-f20dee2b37f9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e2c988-861e-46cf-b97e-30dd38af90c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5893eeda-713d-4e35-b1cb-97d675a0115b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56759109-87c7-4c83-a115-86bb2087e017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2039c7c9-d5ec-4409-9eb2-077ce3a94999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581620aa-463d-4994-bacd-2f79659b8510",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef84d95-5984-4438-95d5-e4a5276bec20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d741556-80c7-439c-8539-42ad45ce9e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f289bddb-9c30-4d9c-b7c5-b9ecd9ba79d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d09d07-c490-4141-834b-3d7af49351c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ef1e3f-1da3-4a4b-81cd-780a5783cdbb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6bebad-1c08-4919-bb3f-32958a2f1c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a669465-7251-47e9-8e48-76c750f14938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0ef691-66ee-4ce1-98c5-4a89e3225d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f39c98c-56de-49c5-a20f-ecdcec29ed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c77af6-0b7e-4e78-8539-c0fd761d107a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b07d6d7-31c4-4700-962e-6721a91c2f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87af2374-af5d-4d24-aee0-328d0741802c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6c2875-2274-48b5-91a7-e46be8ce15aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d996a23-83d4-44ff-bf4a-c78a80a944ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aa8d0a-70a8-4d92-8309-cae57b2596ef",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48085d10-c08f-4d47-b77c-38225b504521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff7ce58-a299-4bb4-bdcf-859020500bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05195333-ef55-488e-a9f0-b4edbf11a875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b065df-6dc3-4300-b95c-e3168e281e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f680db-51df-4c6e-a165-fbe5ccae1b5c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7595cec3-4581-4752-a613-7e2302c0c5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6729a20-00fd-437a-886c-70d811616654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db0a8da-96ff-4b65-a3b1-17512c10b92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cde31db-e064-4418-a78c-9c6c3cc2f031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b68e1f7-994f-4e68-9ae8-3fdb534fdc82",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962fcb1a-c204-4611-b049-1e1d80e7f620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5a0c23-2516-4039-a36c-84fdc948c487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044d1579-f668-4ca3-a469-1bef3ef24f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ea8bf8-84ea-46f8-b7f7-01b22276fc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a388d774-a286-4d2e-b4a3-62f3c829ecf8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62c91fb-5afc-4244-a3e4-21fbe58e8d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c37a37-0d08-4633-bed2-1f771eee4601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84ed1fe-7b10-4846-bb7b-0b96fbbe5893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0005df-7bfc-4502-8e7a-61b18f7f2729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1317a06-02a3-41b4-b4c8-95d634a90af9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3970b7ca-beef-4bfe-a7fd-49d719112d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538258ec-2126-4840-a7ad-6054c057c7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e876cd-b591-4623-b088-c3692be72096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2785fb62-7875-4052-ba0e-28461926ba72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a670e4-607f-43b0-b100-e30e3e4828a2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a0a4bf-3679-4acc-94e6-af1b250b850d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b00797-92e2-4b29-a379-9855e12cb5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52c27c4-2416-4471-94b4-e68669cc3bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510930f5-3b2c-4eeb-a4e9-6617a92d1234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01addcc2-ff23-443a-b7cc-538d430c7f92",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82efb9e-2a7d-4bb4-a3f6-735267be6dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a5ab79-228d-4061-94e8-fa166546f334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7657992e-9189-41d7-a28f-67d883485167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a76e8a-8d5c-4878-9e5d-e0e00e5de88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00374fa-5ddb-4da9-bd03-67a34a9b34c3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37999f7-adc2-4d09-aca2-9884cbe7b324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f87f29-7ecc-46e4-9155-2b8c7c3c82e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0589a6b-9e68-41df-9a8c-b80ed89c8a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a74e934-9a45-4aaa-a10d-8b50ca3580f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b718ff-1a4a-4f55-8320-d3a5e6f0b6e6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a813ca80-e8e7-44ca-ba37-776b41e588e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61c2b5f-58f9-468e-91be-29796d8a1303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304a8f8c-7b42-4eb5-90c6-606c11f842fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1c3cc3-8839-4197-84e0-9f76f63bf8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fe5f76-783a-4bf5-bc86-700339f03633",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668bce06-89b3-46a1-b06d-e8af26fea178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781fa186-477e-4629-9b6a-ae34880afce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f954d0f0-d121-4cb8-b3cc-a385c9102b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11dcd67-9337-4459-9707-0bea939bdd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062e74d1-c01d-412c-8aed-167beba69c87",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6ef91a-af82-4671-866f-d66b9a9bc5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37068a6-9bcd-495a-8dd0-21c6a2ad023f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5165bdf-4306-4493-a43f-26d48b957e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceceecaf-c22e-4912-97fe-d78bb80f6441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9c5dac-777d-4035-a7bc-45a5af90a4ba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc4ef1f-3a04-4b45-90ab-1cdf1ef03891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e034fa-5c51-425b-b15c-e9d586079eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de60abe-731a-49ff-b46f-c3bc8f196492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc601fc-e473-4e90-a6b2-af2de0b51fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e9d0fa-26ad-47cb-ad23-595c6d82f01c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0140116-27b3-4f52-b48a-90c247be3522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9286ee8f-e5c3-4f52-a35a-8a7a14432969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7337a32-1fbd-4772-be9c-0dec9a85e46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a6b81d-7eba-4bf0-8d69-a385781ab503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a83ce8-08ed-4931-995e-1049db1d4e2a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac098b-d5f2-4675-9146-03909fe23a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c21863-e6d8-4991-a376-54e36824889c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d134c410-834a-4828-92d3-ea41da609efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dedcbf-41b9-4ff9-bddb-04617b9a4583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0be8ba-7b7f-4039-b7a0-ca73cceb6b05",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44553ef-0e99-4e8e-b9af-cfb1b584d466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc8420a-50b7-4962-9853-f48b39a42480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6757c86-3015-4bc9-8c60-35695f8b7a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fffbc00-38f7-457e-8979-b140353cea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172e58ba-bcd5-4fc7-8e92-e13fd22f6994",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597c202c-1b46-4b02-ad2b-ead9e3becd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca93aacb-012c-44b3-a584-88397a775ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59b66a2-44c4-4aaf-88a4-be8fe3c5e1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d30c223-1118-4068-b138-07ec8ac65c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41ba2ec-12a8-4296-93fb-ce8f40624e33",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12ab1c5-3899-4611-8ccc-0b7200eb72b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331eb3d7-eddc-46a9-8dac-f6fb70ee3b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73815517-ae48-400b-99a6-ec784b203e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35bc9ba-3fc6-4630-b56f-8bf0c545afae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f213d22c-5fce-4308-b76d-f6142480fda0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7ec77a-5a02-4fad-9c28-4605ca49517d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec2abba-2b9b-49ec-99a0-1d7ca9078050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d7633d-8ea1-4752-a1ec-d4ea81480bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8affd5-e361-4167-bd01-6754723ffc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e382337-cdbd-40f7-a2e7-07ead7e1659c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ce6557-17f9-4aa7-b46f-3e0734c8513a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf2d285-18ff-43e3-8165-ab61b9191ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf28f8e0-74d9-4aa7-a67d-63b8b4561bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef14c07c-01ff-4839-81a7-b4b269c1a50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968ec6c4-f855-490d-b468-58dab7bd7f82",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db218630-03ae-4331-a5ce-1ef931589063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfad104-8506-44bb-bf05-cf121310ce1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e3cc08-316f-47f0-9c55-cb0293e522ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b07357-610b-4f85-abc3-be22dd9a526e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0a0c28-f735-4c49-88d8-585b9dbb0066",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ca2bdb-0b23-49be-a207-0f27639c0137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c1ff84-f190-498a-86d3-5e2f4615495b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd67b5cf-ab18-4b1e-9ab7-ab5502ce1855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea2cc0c-bb10-4dc7-9c61-a9dc7887393a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6d65e4-5f41-4876-8ec8-76a45ff63060",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9e9646-a15c-4839-9f50-4436bf5b0fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "645027e4-8332-4ae4-a765-660f87b7d8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782f098e-b5fc-4f25-9ce3-60d93c33dbc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120c538d-6fbd-478c-bec0-d257edf261dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717fdab6-dbee-4fd0-8f3d-c834c0431500",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8163e98-7a00-49ab-89e1-177105b032f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2de8df-4219-4b5b-b488-fe2e48eeed98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df1bc51-10f4-48a1-b755-51c310a4d4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b1ec8d-b314-4bb4-82be-64c5e3085387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6c5545-5ad2-4364-a633-0f6b0f14a4b7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba1754c-e545-47b0-a8a9-c328923f66a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce2c94da-c2d5-4ab5-9a53-511af43cac8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1453c33c-a6ad-4cde-9e28-c55587a64600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569ac20d-35ec-48ab-805a-10e503caca2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7637e4c-43c6-43e4-872b-e8a6caca3f9b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d443570-f7c3-42a7-9c32-e912450e6b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c3dbcb-ee37-4997-8a6d-589bdb8e02f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1fd714-ac1f-44b8-9fc9-1c2401fe208c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15ee991-524d-4c95-90fb-2c29c28b6c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a517b10-ddfb-4b2b-a459-44dd7866f290",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820a546a-8862-4cf9-b86e-e7f7234c238a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110f0160-6df0-41ca-846f-250b58556832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bfd0d1-3195-4071-85be-609178fc6c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef117dc-7bde-411d-b986-59dbf5ed0c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4120b5-1ce3-4f74-8625-2cb7a17615af",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace81369-b575-4e0a-ac76-45ea63332480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf9a611-76fb-40e7-9899-dc0f9606aeaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487de01e-3f5a-4964-927e-3b63c031c9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c185f8b-6462-4ee0-951c-639a569f7caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d8ad30-3a0d-43ac-adb7-0598cab8bc5b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0013f80d-1d33-4733-abf6-ef05cb28cf1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f62ccfd-7ebe-4b16-8901-4110ef90da99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ca2ec3-d4c7-4956-ba7b-1e211faa5c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e63623-a29c-4498-b809-6b9530b5bb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e68e91-6e19-4781-9cd5-887c43c53af7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0bd23c-3375-42a4-ba60-ec20aad51204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581ed460-ba69-4732-a3b4-81e48af1a6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5addd961-e7b7-4400-86ef-233efee0c68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae4ee76-b81e-492e-a73f-d75f2803fc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f26c50a-ba67-4419-a2f1-780bc173e81d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3622c5-1a1b-4354-9cf4-455e0d675fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabef25f-28f5-4c75-9010-c7ff2f02b9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3404890d-9f01-4c40-a58d-adef9553dcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d675b64-2804-4eaf-add0-d2342b70f45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d46a23-7211-471d-812f-40993de8ed81",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16464ad8-3cc2-4d50-9c30-dff1b526a3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06eea13-36ad-4641-a4a8-ea49f4e80e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc45d9f4-057e-4ad8-9cf5-fcfa2a0b8972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e948e749-4a4d-4f50-965c-fc3e71b3f2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe29f9ac-fa0b-4c63-9770-1d649e2d7f87",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb27e48-bf05-46fa-a1ba-94540f8c6c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4db7033-cf02-45a2-a183-d58fbccda8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df85015-9465-44f6-ad28-aef45efbafd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f716e498-3b0b-43a1-81cd-a6ec68dd0213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96024d03-578d-4708-8cd4-cdf949267f97",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4884de75-4bcd-44d1-8c7a-784a402803a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd5b018-5483-41b4-88d8-05ea1d382ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c5339c-e6f5-45d2-a187-bcfbf11b8281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdae4c39-1d19-488b-bf43-0ac88c4cde2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c2a9e7-68c5-4996-9a87-abb8633d9409",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0395d9ad-68f3-4ee6-ae66-1a7e3540d901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70521295-77b1-4ff6-a59d-f29400586815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960c377c-68fa-41b2-8c60-4cf31ba0a3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0febc420-03d5-4c08-8d41-f7c7e5093cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2d837d-21e8-4b40-a587-d5258147a1d2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58654779-8e28-48c9-a9c4-0d78b370f6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d17628-20ad-41b2-8e3f-cd412a56935e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad33a05-441c-425b-83fe-8cdf20c8a151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5299aa-9764-4658-90f2-788e62616e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c5d9d5-ce4a-4cf4-924e-f731ed9ee785",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee4ec53-ad92-4192-b8c1-a4b4d7c521f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c222a0-fc66-4314-938d-18482be9b5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b3656e-2935-4d29-a342-f71543e9d298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef22abc-3f27-4c5a-9f21-3c2b942b6593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba0024c-c2d5-4209-a670-f4390ccba455",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ec4817-2e2f-4c61-b0c9-9b6dcaeed545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a325b688-cc52-4074-9788-c845a9240744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85be47a-b0b9-433a-aec4-67d8882b118c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed0fcfe-13ae-4cc2-8380-0a394283aea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7856f7d7-45b7-4db2-835a-1d74e26fdab0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d458664-a80c-48b2-8296-e6482fb990dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34293a1-efeb-4b40-8f75-ec939527f531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22199c7c-9afc-49bf-ac36-1e40984ea4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8775a4-3ff6-4fa0-8893-70ae961c0166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaa7460-5cab-4c0a-9348-9dd2375da2e6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1609611f-b8f4-4a69-89f5-6cda3deea1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4c8e9a-fd22-426d-b9f7-e9b57e7ccaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee1700a-e878-41cd-b61b-2ab00eb3f1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97f2c8e-2ef9-4231-a3a7-4c27ddf9a4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9e679f-c710-471e-ade0-f5f67c57a3aa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e2f8b6-45df-423c-ba80-5bed72785e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "766b8551-ef14-4553-af21-0012dda48a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffde196-db7a-43e9-a144-0840b9a73107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c5c2f4-3e21-43d3-95e4-7984ac4b1622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20341c89-5301-45d5-b186-ee508c88e841",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab175de-8877-4a38-ab1b-e8ec2007d01b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb64dc97-4ba3-4e56-b40e-409c9bf88b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425cfd2d-cc1c-41bf-a02d-228484525ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb02ce74-c7a7-4a13-a66c-7f3a8ed15e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119309ff-f7f7-44d6-ad08-2f775d69988d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1a4082-d882-458f-ac3b-2415f385700a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772c55e5-75fc-4830-bdd6-208841b6ca0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0191ebfa-514b-4c8e-a2e0-83a853d9a40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e618b92b-0c97-4bd7-97a1-5ecbaecea16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96498c2-86a4-4e40-b002-64f8551e1286",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be857158-b55d-4dca-805b-db149d73b51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd18b3b2-ea28-4f64-8a72-69400823d408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d919889b-1f5e-49f4-b3fa-6ceffdf5c319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3c5508-65c0-428f-970d-29d0562ac8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a187368b-1bc5-409b-9a37-fce5a41229ad",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a01d76d-3f9b-441b-b8f4-bbe8dc05d0df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aeb866e-0e66-4e40-b0f5-10ba3fe7dc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53934be0-28c5-4891-b18f-fc36dd49fd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdb3513-8196-4b17-8d0f-cefe338779e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08558c3b-d23a-432a-8e9a-224447dc8199",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3edccc-d8d5-441c-bc94-64dbe205d8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4526816b-352c-4b0c-b89a-4ce04f5b0f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ab48b5-154c-434f-b9e2-97b910fec2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750e50f8-a41c-4df9-9365-da56233ca6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68053b6-e845-4207-8160-235dd8226630",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b797911-e31f-4d67-97eb-7d3c0a3e4ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9f7e03-d6e3-4632-9db8-5a6ea6af3f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff617b32-4d7b-4329-8491-57580cf7b20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe3c370-74af-400a-9f80-3050856951f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53a6b9d-fab8-49d2-899b-df552e9c7612",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407dd7ae-d9a8-4940-9bf8-7e74b8d39f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7617dd3-d799-437e-bedb-824c855f2968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1af9b8-9256-4274-845a-5eb358a75b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1f8a34-480b-43bd-a264-1d15595d5b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aad39e8-41dd-47a7-903d-92bcfbb91eae",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c81137-f900-457c-8851-912b9302ee62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb460795-4d5f-44a1-b0c2-3612ef9c1fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e153660-86cf-42c1-821a-795601f34fc0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f501dc-604f-4434-9a97-cd1ca4649a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e34d194-15ea-4642-ab2b-ec58804596e6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed93e29-5cff-4c08-9ff2-e09bc63c42a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c152098-a393-4eea-a63e-960111c2de05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a4f8a9-e309-4296-87fa-ddf6f0046d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515aa385-fac3-4f0a-8722-8e6284563405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89f5269-2da9-442b-85d2-e39c2f3dd18c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e750c5-7786-4de1-9671-4d867cfc28e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d3140d-50e9-43c9-827b-ac953ab23deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cca952-aa98-4710-9a01-dd2ee74706ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50105359-a020-4a75-af75-2d8ea054b3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5f09f3-68b3-4424-80f6-2da0767657c1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d90e26-0718-4367-8449-a73bddd0b449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58986aa0-7611-4735-b1e8-232cffb6af8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9666124-fcce-400d-a1ac-97940e2269d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efb1b77-e959-48b7-af6a-049d33dce28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f4b950-271d-495a-8fe6-74a1912bc0d8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1af5a52-9a1e-49ec-b78f-3e502cfc2048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6bf100-859e-47e4-8625-c32ce9defe82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4512c587-0e89-42be-846d-e38a3d2350cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63622fb-b9e9-4f70-b9ff-baa50d76cc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c5276d-7760-40f0-b3f8-eca27a6f72ff",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d780def-664f-40f0-9bdd-856e85149689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d30f168-e3db-484a-b8d2-b311a3fb169e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaf20f1-84e7-4882-83e1-19fd66a7be5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faa69f3-27a0-4830-b5c4-9360ada046c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b4ef16-928a-4f66-874a-6dca9d54695d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e38f41-76b5-4f1f-a30c-dd4bb1fc6d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936dd6ec-128b-4621-a405-b10c7208e47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab2e5f5-9dc9-44d6-bf66-359af9601ed5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27350c2-b162-4e4c-b205-baad2edb151d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7df6f5-d51d-4e89-94cc-15c7607d720f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0aa4e70-c705-4d95-8296-4bccdb0c11b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22176893-0334-43ac-9421-26f1d3925ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888b4eb5-0cdd-4f73-8d50-b05353ae557d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05d1625-0e48-46c6-8011-a2fda42ad9b3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ade471b-08e0-47e5-82a2-6a7766fcc69a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37a2b480-365f-49bd-87b3-145c74c31253"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a1b96ba-66c1-4c42-9c2a-312811b57ae9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef07d585-a391-492e-ae12-77784933ac8c"
                    }
                  }
                ]
              },
              {
                "id": "6b357b50-2973-406a-8680-9cc2cc7907d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbac7f1e-6ec6-431b-a96a-dd237cf99f37",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e51d95e-3c20-45b2-b036-f74eed317c49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "376df91e-73f2-4f09-abf0-38300330d326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e409399-0444-40c0-895f-a5979a62834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87e05e14-b749-4c04-b660-3490097a2906"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6514115a-8d96-4983-b705-4a9db46aa868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1a73ff3-2512-4570-843e-82e0c67ba528"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c61fb08-d05e-4eab-aab9-e5e60f6d0d43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e6e6299-aa63-4c60-916f-f00582265364"
                    }
                  }
                ]
              },
              {
                "id": "05ac3818-4e48-412b-8f36-23385bd45be0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6d65b876-c78a-45b8-93ee-1950def900a2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf5b504-c057-456a-a9e6-77460d764545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b626b1ae-6af8-405f-b94f-d460059f35c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2d5254-aa50-42ff-afac-b4e35699e649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49db4128-a3f8-47b5-9cfd-e6fe8d849ad8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de8feeab-0cff-455b-993f-c7fa5633a857",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32b729d7-0919-411e-809d-acb907f0f7d9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54992405-bfa9-4e44-99fb-2da41a1b7d6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c350e696-fdc6-4724-9855-515d01ea5f86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a6cd17f-43d9-480b-8dbc-8d140668176d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c6a93e4-4960-4a48-8e1c-17238ecb156a"
                    }
                  }
                ]
              },
              {
                "id": "443a6e7c-9829-4151-9509-23cffc7bd0fe",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83cfc803-0ada-4a15-9bae-0fa5dea9fa62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d76a0c15-4639-4e36-85dc-b732d010fecd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8b56975-d918-4d7b-8911-60a9d24a52f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c77cb75-3e58-40d5-b923-610c9640b79b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74506f9a-a855-4d3f-9934-93c4547ade52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2c6f6e0f-f6fc-4591-a508-180e0a9b8545"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4fcaa73-e88c-4184-b0cb-f7248ab161fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ede7a2c-01a1-44ad-82ff-d0de7315e1bd"
            }
          }
        ]
      },
      {
        "id": "f340264a-5fd5-4f94-8549-8292deb42b76",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a33ef04f-be65-4fd0-9c53-1f476ae83fb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eac1e6ec-b011-48b3-a76b-360a01f3eacc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a29f0a73-4a90-4602-bdec-7c76b1d2a54a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5be649-271a-430f-939f-460e5b9a4e33",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8e163257-d878-443f-a9b3-8cb90f74a7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5665b827-4038-4ef5-a065-06317a31344d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae2ada04-a94f-4db3-b63f-6797c3aa93e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf590bc0-646a-4bf7-b14b-3d31f2fdced4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e418c70d-b1f0-4eab-bdc7-5a7b3c7e5c2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ec6f77b-660b-4091-bbbf-a1cb0f27565e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b907efe-e7fa-41a6-ab5f-01f2f79f7301"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "531bcb2b-6e5e-42d0-92d1-ee9ec44d76df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bb5fab9c-07aa-463b-8c29-80bc9eabd930"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d80db380-d13c-4035-b9ee-9832cd689e83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4db1111-e55c-4338-be2a-eb0faa7d92e3"
            }
          }
        ]
      },
      {
        "id": "ec7c5add-0a23-4089-ade2-20b7b2020259",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2adc205f-c2af-4b57-8659-7d163f64d538",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8d1405a-c4d5-4aa3-b0e9-767171f46dad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62ba06e0-14ec-4bfb-b215-644f1bb1483f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a5fcc8-700b-4f73-b352-6d3a887a8df9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "887f2c6d-aacc-4941-9717-d34e22fe4bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313eb371-37eb-429d-a9ae-ca4881e0031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffe625a0-0e19-4ee5-8916-b7d130768c85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "526bcbfc-e966-41a5-9695-53ddb9e76ff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daa42cf3-550a-4599-83fe-8c2968566b0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4d7b174-4685-45b8-aa75-2677b4db9040",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c01ec8e6-cce7-4dd2-8b4e-56c35303b3b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38e6c80f-0d2a-421b-b033-c4db2e591728",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb811f22-cf15-4a58-a23b-446c1f188d53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "761319cf-8e86-4733-82ca-6504a9249c35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d9a46d7-7ff0-4ec3-ac30-1cdc518c2fec"
            }
          }
        ]
      },
      {
        "id": "d5ea0a07-2a78-4a59-bb1b-ceac6264411c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "019d4228-812f-4607-9db9-b0278f3ee048",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69a92bd0-8873-4328-b264-81f396ee5905",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07ad42fc-9b7b-44f4-9c65-073fa7b27d49",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9939b44-ad6b-44a2-88d8-fbcede0e823a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6566ff88-4a08-4443-a09c-a0d07545635e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a051ffa2-9287-4427-9765-4a90ee7de0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d9f192b-92ce-4e6a-804a-116f04f4f372"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b76eb45-53e6-479b-83ea-683024f9a332",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "200d8552-6f2c-4845-9b70-e7202237b75c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26762863-da36-4394-b48d-1a1afc312542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89ee2f7a-461f-4331-813d-727cfd1b9984"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17c9b88b-aef4-4779-b1f3-0053105fa001",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69ebc1cb-3ad4-4e84-9ab3-d4e89722ffd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b077e72a-890d-4161-b7c5-2ba518b4c568",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46e7c1e3-7c95-4100-b8c3-8d0de13dfeb5"
            }
          }
        ]
      },
      {
        "id": "2375ec9b-c215-4e5d-bedc-122e899d5cf8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36a741f2-a2bd-49a3-942a-59f85d629f4d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a2b59d0-219d-47c0-ba63-475f0554d939",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6c2d69ca-a813-421c-adb7-25606ba07876",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95513ac3-8237-4b39-bdbf-e35e1c577060",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "925a89db-6302-4c01-b9d2-17dad82f70a3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.17957746478882,
      "responseMin": 8,
      "responseMax": 395,
      "responseSd": 35.00894460903333,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693269165637,
      "completed": 1693269200146
    },
    "executions": [
      {
        "id": "ae1cd561-4bcd-4c39-94fb-f4f347cde0af",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "60738af1-077d-4dff-8159-43871fcc9b8f",
          "httpRequestId": "5a171051-3f62-4413-bd93-77faf0b9cd52"
        },
        "item": {
          "id": "ae1cd561-4bcd-4c39-94fb-f4f347cde0af",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a8dd8255-7dab-40da-a6e1-62b35062d3ad",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "a51c88fe-8666-4915-bdd4-7041c3e84b9c",
        "cursor": {
          "ref": "9fa727e4-1f3e-432b-8552-bfb5cdf81cab",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "343adb71-159d-4c5d-a540-3177b3ec2940"
        },
        "item": {
          "id": "a51c88fe-8666-4915-bdd4-7041c3e84b9c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8c9ea611-c9fb-4235-aa8e-b4bbffccf431",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "5fe1f3d1-3651-471d-89d8-d99854bd407f",
        "cursor": {
          "ref": "3551f825-13c9-445e-aecf-0e8087e27251",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f99a6416-2fd6-4828-a685-549f6c2826dd"
        },
        "item": {
          "id": "5fe1f3d1-3651-471d-89d8-d99854bd407f",
          "name": "did_json"
        },
        "response": {
          "id": "01d63997-09d5-4ccd-962a-a473beb99741",
          "status": "OK",
          "code": 200,
          "responseTime": 369,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60795e3-f9ab-4d4b-8567-92b069a26371",
        "cursor": {
          "ref": "21792de8-63a7-44fc-b840-45705dab5462",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99a9726e-f50d-4bbc-87a6-fe0c780a77ea"
        },
        "item": {
          "id": "f60795e3-f9ab-4d4b-8567-92b069a26371",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a7eaf98-f248-46bc-9944-3e90f9d4b653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60795e3-f9ab-4d4b-8567-92b069a26371",
        "cursor": {
          "ref": "21792de8-63a7-44fc-b840-45705dab5462",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99a9726e-f50d-4bbc-87a6-fe0c780a77ea"
        },
        "item": {
          "id": "f60795e3-f9ab-4d4b-8567-92b069a26371",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a7eaf98-f248-46bc-9944-3e90f9d4b653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db5653f-3f08-4879-afc0-38c6b18dc2d5",
        "cursor": {
          "ref": "37e07272-d2c3-4347-bc4b-822016add087",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f70e8e5c-7089-4ea5-8abe-9ad35d167a57"
        },
        "item": {
          "id": "3db5653f-3f08-4879-afc0-38c6b18dc2d5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a3bf1d3a-b776-4155-888b-7432754a4759",
          "status": "Not Found",
          "code": 404,
          "responseTime": 371,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a6cb6f-38b5-4145-ba50-ca222fd8323a",
        "cursor": {
          "ref": "ee2e81d9-ec73-48fe-8078-f9912de7b1be",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e677c70e-0e57-4799-a22d-4a21d9a29cdf"
        },
        "item": {
          "id": "46a6cb6f-38b5-4145-ba50-ca222fd8323a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "589f6be2-e593-47e3-8dca-715babe43dda",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a090868d-34c7-49ab-80df-da8a19c41af4",
        "cursor": {
          "ref": "ce3f2e70-8f2d-46f7-aaaf-6a82c1e1edcf",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3a371660-7c5a-4b32-8872-f162feae011c"
        },
        "item": {
          "id": "a090868d-34c7-49ab-80df-da8a19c41af4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "db4c5fbf-1c35-4f7b-bb18-264df8f72b27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b276d9-3d4f-4600-a519-fd2017cd5fb3",
        "cursor": {
          "ref": "1013190c-e5a9-4c56-bc80-0b9f773c0e3e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "193e58ba-f1eb-4f16-b1b5-d21efef319f1"
        },
        "item": {
          "id": "f5b276d9-3d4f-4600-a519-fd2017cd5fb3",
          "name": "identifiers"
        },
        "response": {
          "id": "b9ada016-4939-407e-b970-40b50dad1742",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae7be08-2928-4444-bdad-02707f440dfc",
        "cursor": {
          "ref": "69474acd-aedd-499c-afd3-b2845b940f04",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7dcdeda0-c892-4230-b546-8a8894934eec"
        },
        "item": {
          "id": "aae7be08-2928-4444-bdad-02707f440dfc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d1c1d246-0912-4cb6-b230-c63c272f2350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef0def1-27b5-4720-b83c-0b6f8aad18d8",
        "cursor": {
          "ref": "ab0ce75c-05ef-4851-a2bf-7b21959535d7",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e7bcd43c-599f-48f2-83c7-d2630dadfc47"
        },
        "item": {
          "id": "bef0def1-27b5-4720-b83c-0b6f8aad18d8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "32e76681-4fb4-478a-8ade-4cf7e50e7d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64af37a-1c21-4097-82d3-4a203aff1921",
        "cursor": {
          "ref": "c5ca3689-0d69-40da-89d8-b0cbb1d5ee08",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ab3befd7-e20f-4145-800a-ceb420d5d1d5"
        },
        "item": {
          "id": "c64af37a-1c21-4097-82d3-4a203aff1921",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "700cc7f0-fe59-4200-9ebb-f07d5d513e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0b1a12-c4e6-400d-b9bc-277be660e45c",
        "cursor": {
          "ref": "197f177e-9925-407e-ae84-c72c5e9b08ea",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "93be05bf-eafa-4a21-b68a-bfc01c1ef959"
        },
        "item": {
          "id": "2d0b1a12-c4e6-400d-b9bc-277be660e45c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e1f26e5b-a5e5-4ff8-8bd2-4ab2d959c6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5409bd-54cb-4447-893a-b69a86fa95d7",
        "cursor": {
          "ref": "1eaa3a85-d817-4e42-b831-0c9761b315f6",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ee2d7138-a639-4762-bed2-8c4e74bd9b6d"
        },
        "item": {
          "id": "0c5409bd-54cb-4447-893a-b69a86fa95d7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5943cd01-739c-48db-a6d3-aa93f73b75ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1ce0d5-b311-4790-962c-d13823f5ae5b",
        "cursor": {
          "ref": "3d25219b-235e-491e-ad90-4b6c8b09e116",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "eaa77123-3257-45b7-8549-da0ccba77aa9"
        },
        "item": {
          "id": "6c1ce0d5-b311-4790-962c-d13823f5ae5b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5a30d245-c688-42d1-8525-e68a9f2b99ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56259327-0e8a-4033-8d79-a963580619da",
        "cursor": {
          "ref": "66eab259-9ee2-40e6-b802-194263ecade5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "18cf33c8-fe3c-40bc-bea1-0ab881994439"
        },
        "item": {
          "id": "56259327-0e8a-4033-8d79-a963580619da",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "487b7343-0414-4ad5-811d-fe896e3baed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fedb29e-2c87-46c6-95ef-f14aa34b2f21",
        "cursor": {
          "ref": "6f9694a4-53c3-4cb4-a479-00dd7fb04f7a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f1d02044-80cd-44e0-b67b-5430ecf8242c"
        },
        "item": {
          "id": "8fedb29e-2c87-46c6-95ef-f14aa34b2f21",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9eabac26-d449-47c4-b6b1-025b0ed5cd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ff67e6-79f6-48eb-9812-003a2841ad3c",
        "cursor": {
          "ref": "a03aaea2-be3c-412c-bc84-260539ba907a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "88b10c41-bc4f-43bb-9443-b169433aafd5"
        },
        "item": {
          "id": "14ff67e6-79f6-48eb-9812-003a2841ad3c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6bc0e20b-8297-4333-b9f0-ed2e0fdb910b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4943723e-3fe6-44b9-b331-7eea85984ff1",
        "cursor": {
          "ref": "690161c0-936d-4d8b-871f-3715256388b9",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f5893978-c284-4473-b955-19c9f54d1d77"
        },
        "item": {
          "id": "4943723e-3fe6-44b9-b331-7eea85984ff1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d2eff4d6-fc36-451a-9b31-9a55b14b22a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aca3c7-cab7-4300-b1e9-641e37e8a88f",
        "cursor": {
          "ref": "de738c8b-11b3-43b2-bdf7-44711d779906",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2af62868-00e8-4171-9497-c8996fde2ec8"
        },
        "item": {
          "id": "93aca3c7-cab7-4300-b1e9-641e37e8a88f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8f33d5d3-3133-4aba-956e-b599e4dc19ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80597073-0160-4b0e-91dd-9390e561a37e",
        "cursor": {
          "ref": "89dbb546-53dd-4c9f-bc98-2d80dc760fa2",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dede56c4-f356-4e10-80e8-c017c094f50b"
        },
        "item": {
          "id": "80597073-0160-4b0e-91dd-9390e561a37e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4d9435ae-b053-4d78-8678-18879d9b3603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45974fe-a326-4744-a468-bcdfc139cdfe",
        "cursor": {
          "ref": "f1ffb33d-79a6-4fc6-a0a0-ca0fa6981fde",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "52ae2bb6-aba1-47eb-9598-6109086d6cfb"
        },
        "item": {
          "id": "a45974fe-a326-4744-a468-bcdfc139cdfe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "db490652-e7b1-4729-9fcf-0f636dcebbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c45b44-7179-42e4-8c00-ebfd6f6fe78c",
        "cursor": {
          "ref": "caa38da4-59db-4963-8235-19fe75dc8ddb",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "75a35377-ca1b-46ee-b8bc-3523ff36f941"
        },
        "item": {
          "id": "00c45b44-7179-42e4-8c00-ebfd6f6fe78c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e4208a23-dbc8-4676-b844-b64ecec91922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9383243e-76cc-4635-8c74-87bbf64018c9",
        "cursor": {
          "ref": "3f7fe637-cde5-4210-8793-12498bd1a45c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "57355c8a-c729-4a11-bcd6-331c925d23a3"
        },
        "item": {
          "id": "9383243e-76cc-4635-8c74-87bbf64018c9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "82f8dbd3-451e-428b-82af-6a9190a732ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bd188c-8039-4d54-8e99-eb98f5f68188",
        "cursor": {
          "ref": "ac17f913-a52e-41d7-a7fd-0d7039e58f63",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f25ca57a-c6af-4ea2-b273-c517edc5963d"
        },
        "item": {
          "id": "59bd188c-8039-4d54-8e99-eb98f5f68188",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8dba7cfe-0146-46b7-92c4-c4223822ab08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd0ad83-78fe-42e4-8597-fa2f25ffdfd0",
        "cursor": {
          "ref": "8cefc2fd-5a03-497f-8158-67ddf52136f8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5a922f46-f38e-48de-ba34-666c4f6cf8ca"
        },
        "item": {
          "id": "8fd0ad83-78fe-42e4-8597-fa2f25ffdfd0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d864ecb2-018f-407a-adde-faca5fa8ae94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975548e9-14d4-4435-9fe3-cfdaaa06bd40",
        "cursor": {
          "ref": "a56de529-7a50-4078-a82c-dbb9d3844227",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "eb6c6bb3-0d05-4cb1-84bc-03674bd05800"
        },
        "item": {
          "id": "975548e9-14d4-4435-9fe3-cfdaaa06bd40",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d1ac0c43-25e2-4c72-8d41-e22261f4964d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27933848-2558-410b-9791-cd1ef2272460",
        "cursor": {
          "ref": "d25c0a76-603f-438b-95ff-fb5068f883d0",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4304b0f1-1014-4e36-92c6-07799d119968"
        },
        "item": {
          "id": "27933848-2558-410b-9791-cd1ef2272460",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cc6249af-e02e-4a35-95c7-6deb4f082767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e3bd0d-1001-4a39-b644-a0581600566d",
        "cursor": {
          "ref": "6a5adaf3-ce25-4338-8975-d15634267859",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ac24a970-9b6c-4f06-ab58-14623be55e05"
        },
        "item": {
          "id": "11e3bd0d-1001-4a39-b644-a0581600566d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "045c8948-ca99-4ecc-b677-e176f3ae4e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17068043-5233-4b27-bd18-551835af9bb6",
        "cursor": {
          "ref": "ae50b78d-41a3-4fe1-95ee-14db27d98a5e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "30696ce6-9a1f-4d07-ba77-286e16a6eadc"
        },
        "item": {
          "id": "17068043-5233-4b27-bd18-551835af9bb6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6b1341c7-eab5-454e-9ef6-98a27955d7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf010682-49b4-4fba-9eed-dd6db79ad8f7",
        "cursor": {
          "ref": "06ddcb0c-241c-4cf6-8941-204cdeaf4283",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8f64584b-1771-45c1-9b1b-d317c7bd0485"
        },
        "item": {
          "id": "cf010682-49b4-4fba-9eed-dd6db79ad8f7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "09963523-0f95-441a-ba29-2208f85ac8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb182b3-4ca8-4698-85db-e2fbbdf8d837",
        "cursor": {
          "ref": "9f77fde2-7c01-4f6b-8c2a-47e9e3592a55",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e2e7df35-9f23-4183-b704-310497360c3b"
        },
        "item": {
          "id": "5bb182b3-4ca8-4698-85db-e2fbbdf8d837",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8eebc3e0-6e3f-4b5a-8a37-422d336c8e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a3e7b2-c1fd-40fb-b7f0-db5cacc7a1c5",
        "cursor": {
          "ref": "48c93f13-79e5-4777-adbf-954c5b5c5197",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f144386c-6e2c-4c2d-a0b8-5e62bf894805"
        },
        "item": {
          "id": "89a3e7b2-c1fd-40fb-b7f0-db5cacc7a1c5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3e72810f-f47b-4efd-ab8e-c1702868d100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d582cd5-c1c2-4457-89d4-9009b406d369",
        "cursor": {
          "ref": "d58240d3-c624-43fc-967b-a90d2234c46c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e54ac863-5c11-4900-acf7-cf87858c0756"
        },
        "item": {
          "id": "2d582cd5-c1c2-4457-89d4-9009b406d369",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "247fd75b-7733-4653-926f-9c39b09a1fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7259bb26-2bbb-43ee-8421-e1480084d3a5",
        "cursor": {
          "ref": "e711153e-3e6c-433c-b6a6-3ecbc3cde2ef",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "676cc9ff-4cc7-470b-8272-94e381270bee"
        },
        "item": {
          "id": "7259bb26-2bbb-43ee-8421-e1480084d3a5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "224ded51-e52e-46e9-a27f-14052dd35c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b10a074-acd0-4369-95b9-4d3649707b04",
        "cursor": {
          "ref": "11efba00-bbe0-435e-b935-00557dd87e1f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "59d13a2e-d23b-4f2f-bb99-1f470d47a7cd"
        },
        "item": {
          "id": "8b10a074-acd0-4369-95b9-4d3649707b04",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "de13b4bb-877a-4287-9ca3-4147cf964da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4c4661-dc6d-491a-b604-cf71185f3fdf",
        "cursor": {
          "ref": "099844c8-2a94-4832-9e6e-28cd0fdcb16d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b44b4211-9402-4a9e-9316-8f591162c1b5"
        },
        "item": {
          "id": "0e4c4661-dc6d-491a-b604-cf71185f3fdf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df8b3b6e-c5a4-4da4-a117-73f3676fa79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab09bf2-be3f-4a8c-b71b-6b64130f735f",
        "cursor": {
          "ref": "de6c7515-a4f7-405e-9797-b1eee245e871",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a807fc1d-8c5c-4b9e-b288-bd1a997b8e73"
        },
        "item": {
          "id": "2ab09bf2-be3f-4a8c-b71b-6b64130f735f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "945d69ef-a916-4089-bfcf-0f88cdb855f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df1ab9a-6086-4c86-87eb-312187ec4c1c",
        "cursor": {
          "ref": "3aa77a2f-872d-4cf0-86a0-0bba7c16c64f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7a608f46-2003-44bb-be5f-8d6eb7c77914"
        },
        "item": {
          "id": "2df1ab9a-6086-4c86-87eb-312187ec4c1c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a983e9f4-0a88-4ed3-8442-0d8db166fe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1295a3c3-d06f-4884-91a8-65bb29430d04",
        "cursor": {
          "ref": "1afea66d-02b3-44a7-80d5-87777634b58a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ad0b4df-8b81-4733-ac9f-6157f77c3066"
        },
        "item": {
          "id": "1295a3c3-d06f-4884-91a8-65bb29430d04",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "41cc1a58-7a9c-4029-9e34-60ec3656fbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651b7c59-f4be-47ce-aff7-297c038f8185",
        "cursor": {
          "ref": "51f3f483-6b38-4d3e-8507-6186aa69c46a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2c636759-2ca7-4fe5-9165-152d3fd6f766"
        },
        "item": {
          "id": "651b7c59-f4be-47ce-aff7-297c038f8185",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8ac219f7-c8de-4823-8803-be1caa997e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df31a931-267e-4d8d-887c-94cc0094425f",
        "cursor": {
          "ref": "5153e097-6da0-46bc-84de-6c84aafcee77",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8765f359-d0cc-4b22-81cf-4246220ac8cd"
        },
        "item": {
          "id": "df31a931-267e-4d8d-887c-94cc0094425f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "29bf2f9d-a85d-471f-9f10-ed93ec3b75e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2843fff9-0db4-47bf-835d-c694fb7506e0",
        "cursor": {
          "ref": "98307fa9-7fd3-4ca4-bac4-f4e32d7a4622",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2dd69214-582e-4050-8780-c7102cd3dca5"
        },
        "item": {
          "id": "2843fff9-0db4-47bf-835d-c694fb7506e0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bed68e4c-1c7f-459a-9007-d457db6ac14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0625fd-cc99-458b-a8c2-96ca33b797fa",
        "cursor": {
          "ref": "576a0d6d-e9de-4b45-a3c7-1fbe9cb871ba",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "67681778-d1b0-470d-94d6-b4a69a0e0f72"
        },
        "item": {
          "id": "ed0625fd-cc99-458b-a8c2-96ca33b797fa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "deedfe04-638c-484d-80de-177574c1e270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae38228-1b86-4cf0-ab1b-76d031efe8b1",
        "cursor": {
          "ref": "79a6f7ff-0146-4b98-a530-1386551a8190",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b9897c7b-1545-4d57-8290-e848e1416ef9"
        },
        "item": {
          "id": "dae38228-1b86-4cf0-ab1b-76d031efe8b1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7f483e4d-de1a-4b0c-a44d-b2ebf95893cc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 89,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944fa86e-1b45-45be-80af-0bf064e071e2",
        "cursor": {
          "ref": "4b8403a3-1847-4ed6-b25e-f57aea9b54fd",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bff15818-9c6b-42e0-baf7-8a372553f7b1"
        },
        "item": {
          "id": "944fa86e-1b45-45be-80af-0bf064e071e2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0092322b-c0ea-4726-b3cf-21e7c153752b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c51b7d4-ee75-4c4f-946e-e9808f86e224",
        "cursor": {
          "ref": "9ad3e5e4-bc64-45f0-a1a7-2ee9f5bea57f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "129dce8e-a275-4945-819e-aac17fb7f782"
        },
        "item": {
          "id": "0c51b7d4-ee75-4c4f-946e-e9808f86e224",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f4a19bf3-0405-4e8e-978d-c76c54c02aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73d2276-4b7c-4650-8f72-67d6c73a0c6d",
        "cursor": {
          "ref": "8cb4dca6-6a1a-44c4-86fe-474a067246b8",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "24cd3af2-fac8-41a0-b4bd-0fd83802baad"
        },
        "item": {
          "id": "b73d2276-4b7c-4650-8f72-67d6c73a0c6d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b0764ebf-7cae-43e2-89cd-9a0804832a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58532cca-3969-44e2-88fb-bae17d2935c0",
        "cursor": {
          "ref": "c221154d-6f8d-4d55-b6c5-cd46a1e4b75c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b7d3b798-9f0d-473a-a0f9-67f565dafffa"
        },
        "item": {
          "id": "58532cca-3969-44e2-88fb-bae17d2935c0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "48556816-36a6-4ad5-955a-be2b197cd12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477a6487-a678-4493-9f94-1ad53518371b",
        "cursor": {
          "ref": "065b9cb7-b0ab-41a1-bc07-89e711d34c2c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "167fe770-fe93-452b-8505-3e94f799aef6"
        },
        "item": {
          "id": "477a6487-a678-4493-9f94-1ad53518371b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a27be67b-1fa2-45b4-ae70-8383485e0daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a819bd4-4802-4beb-a7f1-50210dc481fb",
        "cursor": {
          "ref": "f767acd8-d317-40be-9162-613736d0fc5f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "68ec529c-6f65-4486-8a28-aaa4f20204fe"
        },
        "item": {
          "id": "1a819bd4-4802-4beb-a7f1-50210dc481fb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9869197d-fd08-4c3e-b75d-5b7f54dacfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ccd8ea-045f-48fe-b9c1-46208e96a719",
        "cursor": {
          "ref": "70b3d44b-fb94-4a1d-bb0d-f86977366787",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c1a9e4fe-144e-442d-95d7-c43a1a080bae"
        },
        "item": {
          "id": "e7ccd8ea-045f-48fe-b9c1-46208e96a719",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e07b030c-14c3-443f-b04c-16adab4d59d2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05718379-eb9f-4b1c-9503-374b55305836",
        "cursor": {
          "ref": "200c5a84-2a44-487e-8c17-7fd3da95dede",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0670a240-3607-463f-a589-5a770bdc41de"
        },
        "item": {
          "id": "05718379-eb9f-4b1c-9503-374b55305836",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b354b967-af01-4ab4-97e6-5f08d140f21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b498090-63c2-4ab4-acd9-e5011a52e506",
        "cursor": {
          "ref": "d0ffa429-30a3-4713-a462-e85a2d730783",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3222d5cd-4680-4fa8-bb06-1eb8e537af05"
        },
        "item": {
          "id": "8b498090-63c2-4ab4-acd9-e5011a52e506",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ee125c95-e624-4fe6-929c-5830bb078d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0099692c-e326-4535-8b00-06da56fe02cc",
        "cursor": {
          "ref": "c431c516-8fa9-40fb-81e6-e18e5b297389",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "eb03cc06-bee7-4e47-bc1e-bd4efe8e9d15"
        },
        "item": {
          "id": "0099692c-e326-4535-8b00-06da56fe02cc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9290ad1b-aa7e-440b-ad02-b2eef725989f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ddb66c-e4eb-477d-9cbc-d76aedfdaac5",
        "cursor": {
          "ref": "5a6c2bac-5bad-4593-9450-177590a98e1f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c4596d82-b07c-47eb-9acc-b5fd0514c4bd"
        },
        "item": {
          "id": "07ddb66c-e4eb-477d-9cbc-d76aedfdaac5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a25c47d5-7bad-4697-aff3-5129f788da41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efa969a-0864-4744-9ad6-878eabddbaf0",
        "cursor": {
          "ref": "2f66fa56-78c8-4a65-b37b-2082f4e398e9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a9c32417-549e-41d7-b834-74bdca3c71b0"
        },
        "item": {
          "id": "7efa969a-0864-4744-9ad6-878eabddbaf0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8eaf70df-a248-4b0e-8c47-ff25b51eeea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1399d4-91be-44c1-8c53-1e0593b75f25",
        "cursor": {
          "ref": "2151d6c8-83ae-4066-9da0-f62014b1ff3c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0111ab52-f5ca-4b2a-8a83-581b568080ea"
        },
        "item": {
          "id": "cc1399d4-91be-44c1-8c53-1e0593b75f25",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1b40b0be-2fa4-48d0-9368-e1d9b3b6316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064b8f1f-a0c5-468c-ab42-18304e05acef",
        "cursor": {
          "ref": "a90728c4-56c5-4fad-877d-603c24b7a0ba",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "71336226-c6d0-46de-9150-ee659d409e0b"
        },
        "item": {
          "id": "064b8f1f-a0c5-468c-ab42-18304e05acef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "12c9df4b-fcfb-442d-ada1-f3a9ac8b523e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df05d19-ceba-4841-b35f-94b633ba5799",
        "cursor": {
          "ref": "03e4f27d-40ae-46fd-a717-8ba1735d8560",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "91806d07-e768-43c9-8021-47718f565ed8"
        },
        "item": {
          "id": "4df05d19-ceba-4841-b35f-94b633ba5799",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e6c88b43-64a7-42e7-85af-ba779db447c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb39ce97-5b48-4581-9c94-f9f2897fdf09",
        "cursor": {
          "ref": "b7423220-0d59-4f00-b286-ec3b68826007",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1d23c1c6-c230-4989-88d3-facd1a491ebf"
        },
        "item": {
          "id": "fb39ce97-5b48-4581-9c94-f9f2897fdf09",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a1ea623a-de5b-4e46-a2ad-3b5671fdc072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62b3106-f25f-4498-9562-c22d7567b2c5",
        "cursor": {
          "ref": "8202eb8b-6465-4cbd-8deb-47eb7e44c978",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "28764712-6a8e-4ae5-8ce2-b81a51e3b7fa"
        },
        "item": {
          "id": "d62b3106-f25f-4498-9562-c22d7567b2c5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5646b6f1-d2ca-4aa3-b4db-39d2d365ad89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2403980-07ef-4cf8-b3b1-346bacf36291",
        "cursor": {
          "ref": "a95f248f-c133-4ad1-bc03-eb226360fbb2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0603d8af-0d32-46cd-a8f5-6d6cd90ca3eb"
        },
        "item": {
          "id": "b2403980-07ef-4cf8-b3b1-346bacf36291",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5a684f96-04dc-4d83-a83f-7dc76d8b4409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136d7588-9507-4eb0-bd1a-a853e7e1d666",
        "cursor": {
          "ref": "7bdb6a85-83bd-420f-a7f7-94f8c93dc30f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "861e831d-ca95-4f20-9e2b-5f64a3eb89b9"
        },
        "item": {
          "id": "136d7588-9507-4eb0-bd1a-a853e7e1d666",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5daa82f8-8832-481a-9399-5872137a978e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c799700-7d4e-4cd9-8e29-f49afa6726a0",
        "cursor": {
          "ref": "31d9ec9c-de75-4b47-a32c-6723621928cf",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b4328f8d-ef6b-4354-a823-95439a38a95b"
        },
        "item": {
          "id": "8c799700-7d4e-4cd9-8e29-f49afa6726a0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bbdcd41e-5736-4f89-a36e-da803fc86487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6047ed-af61-4010-affa-43a4a3524e0c",
        "cursor": {
          "ref": "6e631005-6809-4bfa-bb7e-a3b8750f1861",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e4c6a86f-4caa-4345-868a-33f5c395e77f"
        },
        "item": {
          "id": "da6047ed-af61-4010-affa-43a4a3524e0c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d1a9c7ab-9161-4947-9467-aaa318396950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84307f14-59bb-4ed4-95ab-594a486bed5e",
        "cursor": {
          "ref": "02d02f13-3900-46c1-bea9-8911f58bf342",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d26e6f8b-4573-4783-bfe1-5e11dea98e66"
        },
        "item": {
          "id": "84307f14-59bb-4ed4-95ab-594a486bed5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8cdde751-6312-4ea8-a9ea-37ed325a32a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb6b57c-cc31-4bb1-9b19-85ce83df271f",
        "cursor": {
          "ref": "04e9d4f4-fb66-43f9-97c7-4c5d67c62fe3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ccaedd78-c202-44be-bb20-86c9cfe2c5b7"
        },
        "item": {
          "id": "4eb6b57c-cc31-4bb1-9b19-85ce83df271f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b4ab8702-758e-4689-9b92-02bf1b81b3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a33536-53ce-45c5-bdb5-f71a28544a9c",
        "cursor": {
          "ref": "995c6bef-5d84-4837-ace7-8f1673533547",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2df8d256-1689-485d-9d1c-d7ef2975241a"
        },
        "item": {
          "id": "e9a33536-53ce-45c5-bdb5-f71a28544a9c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "80010cb9-b09b-4bba-8b40-c3cf3b326618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013a0af3-af7c-4744-af7c-1299083c2d93",
        "cursor": {
          "ref": "caa30d64-d744-441e-aec0-73f10953eaed",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2570b761-4644-4922-9013-63e51e5c5a75"
        },
        "item": {
          "id": "013a0af3-af7c-4744-af7c-1299083c2d93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "816f6da8-41ea-4bae-9ec4-699797d8170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce1d875-5a1a-44d8-aa2c-460fa30c3021",
        "cursor": {
          "ref": "c7cf1496-7c7f-47e8-884e-5e2db7adcebb",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8b5f7c5c-0a62-473d-a071-81afa23b26f0"
        },
        "item": {
          "id": "4ce1d875-5a1a-44d8-aa2c-460fa30c3021",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "72d7f04d-742d-454b-93ab-ca87b45563e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec17623-f116-4d7a-8bb9-18d270de1047",
        "cursor": {
          "ref": "6211dc92-8876-4252-bd42-f47dd08decdb",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2206b939-938a-448f-8f37-377d7304424b"
        },
        "item": {
          "id": "7ec17623-f116-4d7a-8bb9-18d270de1047",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "762efa17-9a40-4e84-94b4-564c33b48c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe560a38-1f9e-4418-af99-e9569b9cbc4e",
        "cursor": {
          "ref": "8f86a181-00b3-4565-a931-9308996335d5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1aec987b-1488-4610-8044-4c1624cfa365"
        },
        "item": {
          "id": "fe560a38-1f9e-4418-af99-e9569b9cbc4e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b6228704-7685-4ef1-986d-2b156fe63a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c7f82a-6844-43a5-aa97-f1bbf1eef031",
        "cursor": {
          "ref": "db296992-028b-4edc-bb80-9155e50c5546",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "db8ac544-441c-4eea-8883-3dbae9a7eb13"
        },
        "item": {
          "id": "75c7f82a-6844-43a5-aa97-f1bbf1eef031",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a028a3fd-7cab-46f0-9e4a-3ca3832b8287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ef073c-5dad-434a-a939-a1e8de3119d9",
        "cursor": {
          "ref": "0da9f03c-b43d-40b4-83dc-4bd1b99ea88b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "80e406fc-8a61-4b2c-b63c-1680dc27e70f"
        },
        "item": {
          "id": "63ef073c-5dad-434a-a939-a1e8de3119d9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b3ca5672-75ea-4155-9841-fdabd1eae1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ebb384-cb92-47d1-9c9d-cb1397af5bad",
        "cursor": {
          "ref": "e1b6f790-3e58-44bb-bc51-4c0e05333df8",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "89e7e8be-4331-46df-8285-439e3d039a43"
        },
        "item": {
          "id": "c9ebb384-cb92-47d1-9c9d-cb1397af5bad",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "539f67e4-d503-4ff5-93f8-cc893f892f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458380bb-32d9-4433-ba43-1c1cc7a01bd0",
        "cursor": {
          "ref": "c9c33276-a212-40d3-842d-07189f52301c",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ec80e971-4485-4466-80e9-1728f4104799"
        },
        "item": {
          "id": "458380bb-32d9-4433-ba43-1c1cc7a01bd0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0be695a0-56d4-43fc-ac25-6dba6783352d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54ccc58-3aed-42a5-97d8-02ac538ff95a",
        "cursor": {
          "ref": "c272f101-1ea6-4780-af6b-a6d3f4345c56",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c3ba3f62-8251-4f7a-b177-d31ce956a649"
        },
        "item": {
          "id": "f54ccc58-3aed-42a5-97d8-02ac538ff95a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1d75ae5d-0184-4cea-87af-00ebed6cf2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859a82cf-6522-46b2-ab0f-7539c74e38e7",
        "cursor": {
          "ref": "79c2234d-40e1-4409-948d-910e61f8e3b4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5126ad2e-2753-422e-b98c-efc4b2a6a490"
        },
        "item": {
          "id": "859a82cf-6522-46b2-ab0f-7539c74e38e7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4b7de95d-ce74-42df-b53d-ac7253cc3c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd5b5ec-7179-4e66-8aa2-6583a4b13ad4",
        "cursor": {
          "ref": "2ca15c46-7e6e-47c1-a27b-e291d1bcc851",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "842a6525-7f65-4acb-88da-febdeea49686"
        },
        "item": {
          "id": "6fd5b5ec-7179-4e66-8aa2-6583a4b13ad4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6d33b9bd-9be5-496c-83f1-403dd07cf3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65c5875-f203-4250-bcdd-9bbfe8805a57",
        "cursor": {
          "ref": "7f76a99b-9f04-4ad7-9825-cf581ca227a6",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "769e67ce-6f5c-47f9-8ab2-ce92801c0c81"
        },
        "item": {
          "id": "b65c5875-f203-4250-bcdd-9bbfe8805a57",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cfa4639d-6bd8-4fe7-a483-ff1f95bea82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03d9afd-beae-49a1-81bf-efb2b209e08c",
        "cursor": {
          "ref": "67f547bf-6ec3-4c6c-bcbe-0e22fbcf420b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e9ed5d72-d15d-4ead-b546-e67f2a81694b"
        },
        "item": {
          "id": "c03d9afd-beae-49a1-81bf-efb2b209e08c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b06f3c1c-5f0d-4ff5-93fc-9cf96530beb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b83ae2-8469-4787-9050-1c6f1d342e3f",
        "cursor": {
          "ref": "d771a777-18c3-4897-8611-a5e42a9a18e2",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "92faf75a-520f-4fe4-b967-1b4b604958b9"
        },
        "item": {
          "id": "72b83ae2-8469-4787-9050-1c6f1d342e3f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b1eb9d96-1da7-4796-a9fc-36b8970ea10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaec700-9520-425b-908d-981d3373ebd1",
        "cursor": {
          "ref": "aba731f1-7f4d-432a-9620-62945e9fb410",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2dd9e0a7-5877-4eb1-9e7c-3809e1542a9e"
        },
        "item": {
          "id": "4aaec700-9520-425b-908d-981d3373ebd1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2613f25f-860d-4d74-8876-d551420b7e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257e688d-b0c2-4ef8-9a56-6d835eeb3da7",
        "cursor": {
          "ref": "cd467190-00b3-4b68-a1f8-c7ef9c2c14eb",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "03723e2f-0480-4617-8b5f-522150525543"
        },
        "item": {
          "id": "257e688d-b0c2-4ef8-9a56-6d835eeb3da7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "42ce2ed5-6fee-4a44-b1c8-52530395005b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a958641b-41f1-446d-b810-bd22ff4b9538",
        "cursor": {
          "ref": "fcb87a03-c720-429b-a538-1e479346ee0a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "00f65b6b-a0dd-40c6-96d7-8b0615480be3"
        },
        "item": {
          "id": "a958641b-41f1-446d-b810-bd22ff4b9538",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5dce24d9-3335-4276-ba48-9e8e1525b5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d4535c-514b-44ba-9baa-37a82b75ab5d",
        "cursor": {
          "ref": "bec7a50e-efda-4007-b860-287613f1f8de",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7874424e-f84a-47df-9158-fb03c833ef88"
        },
        "item": {
          "id": "c2d4535c-514b-44ba-9baa-37a82b75ab5d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c8cf0003-7a54-4bc7-a8aa-ec7d6600f0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835397bd-ec88-4dc1-af13-9e16322f1169",
        "cursor": {
          "ref": "2501c66d-910d-4658-8e63-c369dbdd4e50",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "84878d17-d9f8-4811-81dc-b2ef7a78f4d1"
        },
        "item": {
          "id": "835397bd-ec88-4dc1-af13-9e16322f1169",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cccf0569-54e3-4587-9e77-cd0cfd5b0843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8494c2ef-bd4b-4a8d-87aa-a81e5ecb71de",
        "cursor": {
          "ref": "40e45b20-2b83-40d0-b1af-f2c6f276249c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8d4e2e31-68af-45ec-b008-d6ddb160f947"
        },
        "item": {
          "id": "8494c2ef-bd4b-4a8d-87aa-a81e5ecb71de",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f7aebc67-d1f9-4a58-b2fa-fd6daa2f6c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666ae82a-6551-451b-bf5b-a7503d6a6032",
        "cursor": {
          "ref": "d6cbc990-73d9-43eb-ba04-9b31dfd1a99a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5b5f29a0-68a3-473e-a2db-fe4f95c19d78"
        },
        "item": {
          "id": "666ae82a-6551-451b-bf5b-a7503d6a6032",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "839ba4c2-7d77-4089-860e-0862c252bd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798f9946-9555-4a20-bbba-ad4c9289aae2",
        "cursor": {
          "ref": "9691cbf6-c25e-42d5-b933-9fdf209f490f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "beec6cb6-3cc9-4320-be65-8aee7e5d1531"
        },
        "item": {
          "id": "798f9946-9555-4a20-bbba-ad4c9289aae2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5b4e129a-5fd8-4f89-9269-1ac271fc8733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc192d89-d190-4b1a-8608-ede38a201e1b",
        "cursor": {
          "ref": "474c15ee-e1ce-444b-b4aa-ba7b9f9e49ff",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "68690482-3bfe-489b-92dd-2dfdf0facc74"
        },
        "item": {
          "id": "dc192d89-d190-4b1a-8608-ede38a201e1b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8b0b9696-2abc-49c1-a4c7-67bbff53b80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271ed3f1-50f5-4a59-8331-86482bd2bc7d",
        "cursor": {
          "ref": "e16159c5-710b-45f9-9d95-73eaf4ead6ee",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0fe4f7e0-6a30-4919-be82-a60384da371f"
        },
        "item": {
          "id": "271ed3f1-50f5-4a59-8331-86482bd2bc7d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7317522a-4bf1-448e-9955-9e57d4e4bca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d40ece5-f677-49c7-8d4a-9ab050ca3545",
        "cursor": {
          "ref": "7a0e8ae8-fcc0-40df-9881-60b7df5af641",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0b283413-c027-4aa4-8f16-ffc5acc5ccad"
        },
        "item": {
          "id": "1d40ece5-f677-49c7-8d4a-9ab050ca3545",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "169cef40-3cb5-496d-a63d-d72a9758ec0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c590cef-55eb-4d85-b2dc-f6d0952876ac",
        "cursor": {
          "ref": "e7cf15b1-fe16-41b7-a1d9-eb4a257ffd6a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c63bca4-cbcb-4ada-938a-fc0bed3bfaba"
        },
        "item": {
          "id": "0c590cef-55eb-4d85-b2dc-f6d0952876ac",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a2a93bce-6916-4ff9-90bc-47c8ae823e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad02cc0-5831-4644-8b97-c89f81b2068e",
        "cursor": {
          "ref": "bf8c9e7a-b282-4e8e-ad17-7466daca92c2",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5e9e7adb-9244-40af-a60c-ab99562c2316"
        },
        "item": {
          "id": "2ad02cc0-5831-4644-8b97-c89f81b2068e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "25182dc0-8661-4673-b769-ca714ef83c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c480cd76-130f-466d-99fb-3086795515d6",
        "cursor": {
          "ref": "01e35424-1259-485b-9d70-d3296e908101",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1cdf2f6e-a719-480b-aad2-9f6d19c90c89"
        },
        "item": {
          "id": "c480cd76-130f-466d-99fb-3086795515d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a2aaaf9e-6fd5-4d3c-aaec-1ef036ea86a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670cf897-77a5-43f4-b49b-bd10f3650d54",
        "cursor": {
          "ref": "3b54a264-e0a3-4e74-b3a8-4ed020cb8771",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f8a5da33-1bca-444b-8b4d-23a67d225e1e"
        },
        "item": {
          "id": "670cf897-77a5-43f4-b49b-bd10f3650d54",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ac12aac1-f120-477b-ba72-6369d9652668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d4b695-ded5-4e3e-9b04-a54217b46851",
        "cursor": {
          "ref": "3c6d0cf7-4d16-45d3-8256-94421249baf9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1b139274-890c-4d09-b567-25181407291f"
        },
        "item": {
          "id": "d1d4b695-ded5-4e3e-9b04-a54217b46851",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a5db8970-8b78-49e7-be56-b27b59e5f60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54b2745-b209-4d4f-9335-ffd8e58c0345",
        "cursor": {
          "ref": "96c54928-80c6-4b64-898a-fd42c49920cf",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a56b2be1-1bcf-4dae-8cf9-1ef3cfb2e3fc"
        },
        "item": {
          "id": "f54b2745-b209-4d4f-9335-ffd8e58c0345",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "443d21d1-f795-4007-af6f-ec11ba3fe467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117cce14-eeb2-43c0-b094-a34ab1f54256",
        "cursor": {
          "ref": "60bab8c3-f0de-49f9-94ec-b4b1c461e1e0",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "10f1a89a-9f7a-4ab5-bb6e-e7e08b39a230"
        },
        "item": {
          "id": "117cce14-eeb2-43c0-b094-a34ab1f54256",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7e32676e-b53c-4838-ab18-36fec8ee3903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ad7564-67f3-4151-a84a-6d9ce7641848",
        "cursor": {
          "ref": "676ef59f-4010-40f7-a7d2-091acbfe1d54",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1b7c51f5-f92b-459f-925c-02ff05653a71"
        },
        "item": {
          "id": "63ad7564-67f3-4151-a84a-6d9ce7641848",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c3fa9a27-dbee-41aa-bc20-66052b29cf8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa475a19-d782-4f42-93fd-19f0c64df517",
        "cursor": {
          "ref": "6f44af2a-e7a3-4848-9502-4f63b920a7ca",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9d59dd46-2f89-4d2a-ba7e-d614b982ebec"
        },
        "item": {
          "id": "aa475a19-d782-4f42-93fd-19f0c64df517",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4609a0ef-9341-4cba-b2df-821facf04b0d",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da907b4-0691-4fe1-a693-38f9973d6784",
        "cursor": {
          "ref": "e8d3b7c1-dcc7-4c00-806d-7f23f825af96",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c066c634-0bd9-4ba7-bc69-76230ef49e43"
        },
        "item": {
          "id": "7da907b4-0691-4fe1-a693-38f9973d6784",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0aa41200-59e5-4f4d-a799-e017a851f4b3",
          "status": "Created",
          "code": 201,
          "responseTime": 395,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de945ad-ec02-49de-9613-6566e576b7ca",
        "cursor": {
          "ref": "697bbad9-48be-4d42-965b-9bb28808173d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c9a3be50-a12b-478e-a563-46301eb913cb"
        },
        "item": {
          "id": "6de945ad-ec02-49de-9613-6566e576b7ca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4b08d62c-2644-4c85-b9f1-fc71288e1ca7",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "126010a7-21e3-4cb0-9d9c-d51f536eb5b7",
        "cursor": {
          "ref": "1cd5ba2e-7820-4b87-a7af-ef722a0fa4ad",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "066e3193-80d6-4f6c-9201-953429ff592f"
        },
        "item": {
          "id": "126010a7-21e3-4cb0-9d9c-d51f536eb5b7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "27e5eea5-80b8-47a9-9f17-9e6c8df2857e",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c83406-8e84-497b-abea-d213a91e685d",
        "cursor": {
          "ref": "2a96bb22-7962-465f-b998-6487e784e9a8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "13d7ab1c-488d-4ba4-9633-fdd20003612f"
        },
        "item": {
          "id": "f5c83406-8e84-497b-abea-d213a91e685d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dd41d7e6-770c-4bf8-8f4c-7f99d5902218",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "655e2293-2246-4f47-9909-e3fc8155e2ff",
        "cursor": {
          "ref": "0938c9cb-41c1-487a-a9dd-9bb18fca2562",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dfbd4a9b-4778-4365-bcdd-a3364c7768ff"
        },
        "item": {
          "id": "655e2293-2246-4f47-9909-e3fc8155e2ff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "91272484-5779-4824-82d8-946b8ea909ed",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90faee41-97d1-4fa2-9d4f-7e8de0e45c93",
        "cursor": {
          "ref": "c86e31d0-fee0-4144-b1fc-b8634ce84341",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1e7d1b8d-bfa2-41e5-9072-633b9bfe1d88"
        },
        "item": {
          "id": "90faee41-97d1-4fa2-9d4f-7e8de0e45c93",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7a30f3a8-605b-490f-883d-fba09244df1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a266e578-be62-4cf5-a6e3-dfe5f66e2655",
        "cursor": {
          "ref": "1a33f2f1-87f7-4608-a060-c79c34c1df53",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "529e2e02-a3a6-4f94-a606-5cc32f1bc372"
        },
        "item": {
          "id": "a266e578-be62-4cf5-a6e3-dfe5f66e2655",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "98db93b8-d0e8-498a-8043-6eb9d329f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a121a43-a0bd-4906-b0a4-298110d680f4",
        "cursor": {
          "ref": "e4d5b8da-3bbe-45ab-ad10-7434a07c2158",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a741ca83-13f5-49ca-a8d7-a7295a6ef556"
        },
        "item": {
          "id": "3a121a43-a0bd-4906-b0a4-298110d680f4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "63f75120-7b72-470f-a1e1-225525ddd4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f55c8c-b435-48f6-9102-3092bc4ad723",
        "cursor": {
          "ref": "62f2f972-6991-4020-af74-17263b6f80a1",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "90556063-cdc0-4c44-be9e-3b771bc38e2d"
        },
        "item": {
          "id": "92f55c8c-b435-48f6-9102-3092bc4ad723",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7580f0e5-ded3-45f0-b573-43d476ad81b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ac77a5-a8a4-4789-96dd-0a159a0f6d1d",
        "cursor": {
          "ref": "99969839-8f89-40ea-8728-30acb27205e1",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "98499809-d294-4938-b3b3-51c34e27c33f"
        },
        "item": {
          "id": "49ac77a5-a8a4-4789-96dd-0a159a0f6d1d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "03d5d8ab-9333-421e-8178-fcc5e80ed7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2feeb419-0267-4cc3-b637-96ad0c78d5b3",
        "cursor": {
          "ref": "85b13014-7c85-40d8-a568-3e47556c60a1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1108e053-4c5b-4976-9f50-5d18a0254500"
        },
        "item": {
          "id": "2feeb419-0267-4cc3-b637-96ad0c78d5b3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a34608f5-1edb-42b0-9f63-3f23e9eb9c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfb509f-368e-488d-934a-5ada17df6c9e",
        "cursor": {
          "ref": "69761ed8-e6d5-4b64-833a-7060e674d5a0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "76549804-d14b-4107-99bf-8d1f698d21ba"
        },
        "item": {
          "id": "4bfb509f-368e-488d-934a-5ada17df6c9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8258869d-b4c3-4a1f-aeda-475c54f6135b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4d6bdb-ce4e-4e19-8286-f09403dcfd55",
        "cursor": {
          "ref": "a65b860e-c427-4170-ad5f-2b698557bdce",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ac93c8be-68c1-4171-b917-ecb13e9560c8"
        },
        "item": {
          "id": "9f4d6bdb-ce4e-4e19-8286-f09403dcfd55",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7a0ece82-e14b-40ad-98fd-7624fd0c9ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f01d3f-b015-4bf1-8199-28debb5c8e8d",
        "cursor": {
          "ref": "23aa89cb-8e50-4bf1-9552-b842ad5c15d6",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1010ce36-be23-4b07-b54d-a33011626d9f"
        },
        "item": {
          "id": "21f01d3f-b015-4bf1-8199-28debb5c8e8d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "51cac5c4-59b1-4566-b3e2-dbf94217c378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320db23a-9ab7-421f-b8c5-2d64b56bad07",
        "cursor": {
          "ref": "7157794f-ae29-434e-a68e-440e76301bb9",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5c0c2e8f-bc24-4c92-8c20-03afcf7a6b30"
        },
        "item": {
          "id": "320db23a-9ab7-421f-b8c5-2d64b56bad07",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4bc99287-5eaf-43a6-87b6-78306f1dcaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9f383d-6f30-4eef-9eed-74ffd7b2f831",
        "cursor": {
          "ref": "804ae30a-f674-47b3-95b6-8480b462bbf9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7fbf90d6-8ebf-41df-8629-289c83f71ed6"
        },
        "item": {
          "id": "0e9f383d-6f30-4eef-9eed-74ffd7b2f831",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "53e3c786-966e-4ef4-ad0c-9859edc1f6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6456ecdd-72e0-46c2-8f4b-190c62c91842",
        "cursor": {
          "ref": "068d0d1f-9ffa-44a4-9e59-64a5f806a9e8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d9872df4-46aa-44f0-a89c-26cd764c4268"
        },
        "item": {
          "id": "6456ecdd-72e0-46c2-8f4b-190c62c91842",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "29778bb7-efb6-4c54-88ce-d05691851049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a665a91-9d7b-4fdb-9302-0b5787b8b220",
        "cursor": {
          "ref": "21f3461f-0938-4595-8b21-4998eb8d77ce",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "21fee9e3-dda4-4370-9570-bed7bf2ae156"
        },
        "item": {
          "id": "6a665a91-9d7b-4fdb-9302-0b5787b8b220",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "16319cdb-169b-4816-944f-f65f48e7e8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deacfdc-b6c9-4c12-a53e-06b7061d3ad6",
        "cursor": {
          "ref": "fe87e752-3a59-479b-95c7-a6581ab7d981",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "64ed517a-dc0a-4b48-b199-52cb46eb38a7"
        },
        "item": {
          "id": "2deacfdc-b6c9-4c12-a53e-06b7061d3ad6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cfb9e0d4-dbdc-471a-ae14-2b9dd9cc5493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6b2eec-1b76-4911-a6ce-d33ee39e7213",
        "cursor": {
          "ref": "4605c8fb-d8cc-48a1-afb4-6c49ec9e5b4a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "78c90b5b-f750-44a8-8e57-52c7c0ff7b68"
        },
        "item": {
          "id": "5d6b2eec-1b76-4911-a6ce-d33ee39e7213",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8cde7a3b-4bf2-41ba-a023-0f628c566aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f9c904-4785-4d32-9eab-d9b014fa491c",
        "cursor": {
          "ref": "096cd62a-c00e-47dc-a178-8db4e3f6fbc6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2f2e5903-a646-4cbe-829e-f254f75a875a"
        },
        "item": {
          "id": "d5f9c904-4785-4d32-9eab-d9b014fa491c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0dbf5ce1-a6f6-404c-9e64-5d5146638bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b106e2d-93fd-48fb-970f-110b61759f3b",
        "cursor": {
          "ref": "c391f956-1e77-4b98-b663-df4cc833e25d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1a5f5aef-4f8c-4d82-9445-5bfa986fa566"
        },
        "item": {
          "id": "2b106e2d-93fd-48fb-970f-110b61759f3b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aa1703c0-57b1-48af-9fac-43b3dfe00f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa2cf8e-eba8-42fa-9315-2eadf3ac7b85",
        "cursor": {
          "ref": "e7937ba3-c066-4e2e-b095-ef53a4e3bac8",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8994020f-da0e-458c-bd5e-71712a74ae40"
        },
        "item": {
          "id": "efa2cf8e-eba8-42fa-9315-2eadf3ac7b85",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a1c52952-867e-4b22-93bd-773c162bea93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ba2b4c-2b25-49b1-9aa6-3aac2b17bc8f",
        "cursor": {
          "ref": "413234e5-ee0c-4bc7-acd3-e04a70a48811",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0585437a-0b7c-478e-9279-d5d48fa1fe98"
        },
        "item": {
          "id": "f8ba2b4c-2b25-49b1-9aa6-3aac2b17bc8f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c53b05c2-6b05-473c-a779-b97fef766ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05df42b-6033-49e9-920d-e572452e7128",
        "cursor": {
          "ref": "8fa0643d-6e70-4369-8ecb-96f4cab759c6",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "53832b02-711c-4ab6-a672-689f9c9fa1fe"
        },
        "item": {
          "id": "f05df42b-6033-49e9-920d-e572452e7128",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "315dc23f-714c-4af2-9bbd-15d565ea8a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caddcde5-e0bd-4620-8f6a-3d29fd91f40a",
        "cursor": {
          "ref": "e144fcea-4c19-4a76-8c0e-911d9fe5c778",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e01b1446-f4bb-4c3d-b0ae-1db60ecd5db9"
        },
        "item": {
          "id": "caddcde5-e0bd-4620-8f6a-3d29fd91f40a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fb697137-6737-4eb1-ad37-6d82e97a6c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f939e96-5d26-41d0-a772-d39e6a07d588",
        "cursor": {
          "ref": "4a827250-1b9f-4ed1-971c-ef3db6cd31de",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e5bcafa0-8ea9-4507-be3f-a0b5b406ed2a"
        },
        "item": {
          "id": "8f939e96-5d26-41d0-a772-d39e6a07d588",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b2da2d8c-62f5-4c2b-b23c-5863f30318f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b765a1-34ba-40ed-abbd-aa60da495e56",
        "cursor": {
          "ref": "ecc05862-7aab-4587-8352-f1a35ee56b89",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "efc3471f-8969-49ba-a79e-c10eef965ef7"
        },
        "item": {
          "id": "d7b765a1-34ba-40ed-abbd-aa60da495e56",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bf83c826-854b-4389-ad09-8fe6c66ea962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ddc040-69a0-4f9b-950e-81ccaf6b0fcd",
        "cursor": {
          "ref": "f8536c46-6049-4330-a7cb-330772a3fae2",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "33621f3f-57d0-459e-8a7f-c603b7894664"
        },
        "item": {
          "id": "76ddc040-69a0-4f9b-950e-81ccaf6b0fcd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "431e0e06-bdf8-468e-8cef-782043afd947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3737484e-b2fa-4682-9168-cd1bcc9af433",
        "cursor": {
          "ref": "bd0bb0cb-944f-4bec-a2d9-59b34c99c9e9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "01991155-0feb-448f-8651-408eb35e6dbe"
        },
        "item": {
          "id": "3737484e-b2fa-4682-9168-cd1bcc9af433",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fad9a17d-c0fb-46d4-990d-17a271744f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6600a6b4-1ae2-45d7-bb89-4b1c301a8f6f",
        "cursor": {
          "ref": "f0296f39-a84c-4bbb-b36e-b7665cd4d24b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0e8417bd-4188-4fc1-97b7-1b3716e252da"
        },
        "item": {
          "id": "6600a6b4-1ae2-45d7-bb89-4b1c301a8f6f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a5f3a9ca-5dda-4b5b-b4ac-79cce9fef051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e905dd8d-3b70-462d-8109-ea8ee08324b8",
        "cursor": {
          "ref": "3c6edf60-c613-4893-ba72-8bb2f2101c58",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1e185add-1b85-450e-beba-16fe4054b88e"
        },
        "item": {
          "id": "e905dd8d-3b70-462d-8109-ea8ee08324b8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e5fc3990-8fc4-4cb2-82f6-bf6be1e27c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892a8177-638c-4d3a-a875-6b3dcbba87ce",
        "cursor": {
          "ref": "aada0077-7673-458c-9892-f733a5d9c407",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4d67c344-950d-4940-be87-f456458c5c81"
        },
        "item": {
          "id": "892a8177-638c-4d3a-a875-6b3dcbba87ce",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fab1964a-051f-44f0-808e-7a43ff78a581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84fb1d6-1bdc-46e8-a12a-2f754f5df3e4",
        "cursor": {
          "ref": "264f310d-8184-4b97-8965-de748432aa07",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "30b1b269-12b4-48d5-bcf5-9f78f196d9cb"
        },
        "item": {
          "id": "a84fb1d6-1bdc-46e8-a12a-2f754f5df3e4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3fce04e3-d7d9-4b60-a734-d2a69eb2d896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5094ed8e-08e5-4c67-a389-484355e9aefe",
        "cursor": {
          "ref": "3ab6263f-75f9-41b9-bc98-7192291e16a4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a0e17349-13e7-4df2-b20b-fa6b948e833d"
        },
        "item": {
          "id": "5094ed8e-08e5-4c67-a389-484355e9aefe",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8bb1ee38-b431-4f30-b4e2-26fabc0c3b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d3d620-caf0-412f-ad05-80dd5947e387",
        "cursor": {
          "ref": "8c46d141-0905-412f-a19d-60dc4a118c0f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0364d198-1093-4e4a-96a5-c55fc8a89f48"
        },
        "item": {
          "id": "e7d3d620-caf0-412f-ad05-80dd5947e387",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ab9f32b0-6e5b-4d83-8502-076370d75b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f691896-8fbd-4839-9607-84fb9391d50d",
        "cursor": {
          "ref": "be23f41e-bf0d-418c-9d0c-103ebeca6845",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e7d05174-8b4a-4502-8dee-48c76e0a5392"
        },
        "item": {
          "id": "2f691896-8fbd-4839-9607-84fb9391d50d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7b9e4628-5322-4c5a-959c-561fb2f024d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6056f8-e89c-4f9f-abc5-48a0ddaaf419",
        "cursor": {
          "ref": "b0a0cb33-908d-40ab-92b8-414faa90bd66",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "40f82abc-2afa-4730-9c05-f08cf7a9cb3b"
        },
        "item": {
          "id": "6e6056f8-e89c-4f9f-abc5-48a0ddaaf419",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0b91d283-106a-4340-9b85-923ae11c99af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eda8cc-bbbe-4db1-812f-f42768222d5c",
        "cursor": {
          "ref": "15aa3a2e-d8f4-4c7d-b8a2-514adcb6a58e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c8d3fd12-cf1f-4def-a4b1-77d5a0e9585e"
        },
        "item": {
          "id": "f8eda8cc-bbbe-4db1-812f-f42768222d5c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8267eda3-3423-46d3-81ca-bd0feef4de86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e61b58-674c-4200-982d-f463bb659d0c",
        "cursor": {
          "ref": "add9b5ee-f585-474d-8842-d0dcb77e5a1c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "21da3719-c5a1-4030-8342-c9195b6dce34"
        },
        "item": {
          "id": "11e61b58-674c-4200-982d-f463bb659d0c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "183ac6d8-baef-4e65-ab15-e5ba3c947813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b60e39c-a757-439f-8409-ba4be803fc34",
        "cursor": {
          "ref": "53a5d127-7bdf-428c-a221-845baabe2b74",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a25708f4-3b9f-4a38-9c92-964d713cda07"
        },
        "item": {
          "id": "0b60e39c-a757-439f-8409-ba4be803fc34",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5bdf42c8-5f87-4d41-9f92-aeea1ee67e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c410aa4-7e05-4295-bf71-1cd569ec6dbd",
        "cursor": {
          "ref": "226c080e-f603-437f-9389-fb411bc891e6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "552b32d9-6d05-4d99-89b2-8328ccd5656d"
        },
        "item": {
          "id": "6c410aa4-7e05-4295-bf71-1cd569ec6dbd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3e222d99-2d72-415d-8806-f8a0ddb28990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711855d6-9bde-4cfe-a638-725298bc86ef",
        "cursor": {
          "ref": "5e0dd517-5027-4355-bb1d-8f7ff229b0f4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c82be79c-2f5e-4190-bf9b-e6dac8da51ee"
        },
        "item": {
          "id": "711855d6-9bde-4cfe-a638-725298bc86ef",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "970a544f-3f38-47df-9e95-4c2706427a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ccd603-d831-405b-b1d2-21c01f76a400",
        "cursor": {
          "ref": "42dabdfe-f777-45d3-ac3b-27d5bb5a2ebe",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f9d961dd-2ab4-430a-b0bb-67654d3280e1"
        },
        "item": {
          "id": "77ccd603-d831-405b-b1d2-21c01f76a400",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3dd2beb3-f144-4dc4-a992-014e2798cc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fcb14c-ac04-4c23-bd89-d775855e8cf1",
        "cursor": {
          "ref": "395f2cc5-ec29-4b20-a5cc-2a0867eb7b28",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "63a912c0-9dc5-41fe-bcc1-c299797938cf"
        },
        "item": {
          "id": "97fcb14c-ac04-4c23-bd89-d775855e8cf1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8c8e9a6d-c2c8-417b-b3f5-6e25f3dfdad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe48760e-1c96-48af-b11c-269085f5bcf7",
        "cursor": {
          "ref": "17a9c28b-b81a-447b-8704-b06fc1a29cf8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9887fc2b-7c3b-4634-9287-be0da500d2f8"
        },
        "item": {
          "id": "fe48760e-1c96-48af-b11c-269085f5bcf7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "553ef41d-3832-407e-a6c9-fb3d23349a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a1586f-a026-44e9-87a4-03bdeb624a8f",
        "cursor": {
          "ref": "5d18ce22-af25-4a36-bca0-7762531bcbe9",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "eb043222-e655-4d98-9ea0-5fdf03e0d13f"
        },
        "item": {
          "id": "f9a1586f-a026-44e9-87a4-03bdeb624a8f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e5d3df7-7914-486b-b1c9-1d31f1ecb93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dc7958-b13e-4f24-85aa-6a4cda9a7c20",
        "cursor": {
          "ref": "07ef82f1-203f-4fb9-86b0-5001896795a4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d55c492d-614f-4f1e-9172-af450beb528b"
        },
        "item": {
          "id": "64dc7958-b13e-4f24-85aa-6a4cda9a7c20",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "641b38c6-8be8-4d08-ae24-f56618729a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed713af-6a38-4d30-930c-e041c2055246",
        "cursor": {
          "ref": "a22af6f8-7c29-46c9-9f96-f5854c332436",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "944bff30-ebf0-4d52-b00c-7f0978387e6e"
        },
        "item": {
          "id": "8ed713af-6a38-4d30-930c-e041c2055246",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bbd7d76f-cb86-4df8-a0ca-908845536fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536c5b7b-dbef-40a6-b080-fc75b0b07919",
        "cursor": {
          "ref": "29d35b9c-f580-469b-8ab0-8f50c2d7d3af",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "336edc9f-9848-481e-9ffb-ad2eabe3489e"
        },
        "item": {
          "id": "536c5b7b-dbef-40a6-b080-fc75b0b07919",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b4be71de-c21c-404a-ab4a-85a8e358ea5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c715a628-07a2-4b48-9f5b-f2c82d70e2fa",
        "cursor": {
          "ref": "d74fa4e8-0a14-400d-a815-89adc84b1a28",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "36b046e7-1264-491f-a9ee-cc5911c62af7"
        },
        "item": {
          "id": "c715a628-07a2-4b48-9f5b-f2c82d70e2fa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "25a30760-7f27-421e-adce-ce9e23fd3eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb430f4-9230-4e62-b4a2-9f8eff2288bc",
        "cursor": {
          "ref": "47981c3f-4061-4bbe-8798-c78188662086",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1c048cf7-5714-4aa1-8830-eebfc0e8f4d5"
        },
        "item": {
          "id": "2fb430f4-9230-4e62-b4a2-9f8eff2288bc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b919173c-faa7-48fd-81ff-c153192dca99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ff8951-b642-4f6d-a25d-739dba0c8085",
        "cursor": {
          "ref": "45335d9f-4b8e-4003-acfa-b0e15bcec59a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "41ccde79-4261-4918-a6e4-cc22363c985a"
        },
        "item": {
          "id": "b8ff8951-b642-4f6d-a25d-739dba0c8085",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8777faa7-2deb-40fc-8416-7fae70ea194c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9144bf2-ac3d-47d7-9b8f-0538df472536",
        "cursor": {
          "ref": "733df325-7d19-464d-bfab-d1182f231ea3",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6bed98fe-e8be-4ed1-b8a8-14412e3e452c"
        },
        "item": {
          "id": "a9144bf2-ac3d-47d7-9b8f-0538df472536",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2fc59296-5ff9-4a13-ae4e-396d2c3a031a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b98f85e-bbe5-4824-a469-126256069b3f",
        "cursor": {
          "ref": "b91d9770-26a3-4e85-8c15-5d2d32daa4cd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9ec3fcbe-aeb9-4a48-b9a9-c46c941c3a1d"
        },
        "item": {
          "id": "8b98f85e-bbe5-4824-a469-126256069b3f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "28dcb17c-c07f-4dfd-8a14-a99732555356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00abbb59-502d-40e2-a9b2-c39610bc647d",
        "cursor": {
          "ref": "b6894fbb-eddb-4e75-b20f-0b1e939b0522",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a7c0221-814e-4bdc-8dda-f6fef55324af"
        },
        "item": {
          "id": "00abbb59-502d-40e2-a9b2-c39610bc647d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2a143eae-9ecf-47c9-b6c4-8a344f1cffaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce353eb6-ce29-4daf-93ff-64e35849cdc6",
        "cursor": {
          "ref": "0aac7f26-3edf-4d69-89dc-5be443e4f480",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "35b67819-9a3f-4792-ad48-24467a72b358"
        },
        "item": {
          "id": "ce353eb6-ce29-4daf-93ff-64e35849cdc6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "05386d66-18f2-44ff-a014-289f600aefd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bbac35-a85d-4415-86d6-ab9bb0c04529",
        "cursor": {
          "ref": "c56c06fd-b073-4ae9-b82c-00ab21bbe4ed",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e0e69622-b132-44d1-859b-5f3ebe5c07fe"
        },
        "item": {
          "id": "91bbac35-a85d-4415-86d6-ab9bb0c04529",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "637e8db1-6d22-488e-a675-9ac9c87db905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a969c3-0831-4332-9744-f6f509068323",
        "cursor": {
          "ref": "69fce4d1-65be-4355-bbb9-5e948af23e0b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3eb0a06b-334c-4e3a-8863-8a8bb9b2318c"
        },
        "item": {
          "id": "b0a969c3-0831-4332-9744-f6f509068323",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "64ea8390-67d2-460d-b595-b5f2debdfc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24c1be0-0e35-49cb-99a4-3f0d0be0a80e",
        "cursor": {
          "ref": "c8f4f84a-3e35-46e6-ab9c-0a442de3d9aa",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c6411492-38fc-4e15-8773-7dd4d91d45cb"
        },
        "item": {
          "id": "e24c1be0-0e35-49cb-99a4-3f0d0be0a80e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a515fdbc-ec67-483b-9c71-1c00d5c1fa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f7c6dd-9746-4703-9ff2-3796de87d62e",
        "cursor": {
          "ref": "3bd2f1f7-9221-4143-881e-32dece2f2dd9",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "712fa17f-15e5-4d94-9817-90420cc1cc73"
        },
        "item": {
          "id": "d4f7c6dd-9746-4703-9ff2-3796de87d62e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "71b29462-1558-41c8-94ec-e5b316339892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edac782f-5c13-4cc4-948e-f88079bbf0d6",
        "cursor": {
          "ref": "9735787f-84cc-4b81-bd4e-f5aca41e9eb7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "42287bc8-fea4-497d-8723-23c3f8480225"
        },
        "item": {
          "id": "edac782f-5c13-4cc4-948e-f88079bbf0d6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "924313bc-1b02-4dce-b015-8684ce952bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8167e192-2ad6-49d8-a0ac-e459d06c194d",
        "cursor": {
          "ref": "02c4ff63-d224-46a5-a54c-01fbe453bb32",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "94f5670b-10b9-4564-88f7-9427cdfdbd16"
        },
        "item": {
          "id": "8167e192-2ad6-49d8-a0ac-e459d06c194d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "12eb00e2-3d2d-41a1-931e-fb95b778f1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f765bc-07f6-4c08-843a-d5f9308c2df5",
        "cursor": {
          "ref": "fd4455a9-9772-4ce3-9b2b-8d38a2cbcc7a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d92bd363-aa76-4b65-960d-86dc9aeb558f"
        },
        "item": {
          "id": "a1f765bc-07f6-4c08-843a-d5f9308c2df5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3f9c856e-8b6b-4118-98fb-516c0cf1a4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb46beee-87ae-4394-8ed2-90d617b33698",
        "cursor": {
          "ref": "0af5aec4-9bed-4d4c-bf8f-07208659c9a2",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2d45874b-7874-4aaa-9fc1-daa46ad9f1ce"
        },
        "item": {
          "id": "bb46beee-87ae-4394-8ed2-90d617b33698",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7ae79b1b-0f86-45ff-bc41-52f3d5209c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c413279-300d-4aeb-a8d6-d545c2c8e000",
        "cursor": {
          "ref": "ba0735d3-7c71-4d82-a597-cda27b91965f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d23cd64e-7bce-444d-a39b-149bf3e35b03"
        },
        "item": {
          "id": "5c413279-300d-4aeb-a8d6-d545c2c8e000",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bd65709d-7f50-4900-89fe-07da8d93e085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bdb49e-ae7f-42d2-8dd0-03d3bf076aa2",
        "cursor": {
          "ref": "b32da838-0de2-4fef-b441-0cab52f7ac27",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "edea4e57-b118-4733-b715-3e0a46bee4f4"
        },
        "item": {
          "id": "a9bdb49e-ae7f-42d2-8dd0-03d3bf076aa2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "02fd98f8-8f97-4b76-a963-213e828e1bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb8b95b-67e5-4e1c-87de-4c12867cd527",
        "cursor": {
          "ref": "604af141-b0be-45aa-b05c-eeafccb3816d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "25ffb7ab-e6ab-4189-be9e-b33f3fae170a"
        },
        "item": {
          "id": "cdb8b95b-67e5-4e1c-87de-4c12867cd527",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dd8b95bd-bcce-405c-aca2-1f728615c499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98ace32-14d1-42fd-acd9-5da40ae98ece",
        "cursor": {
          "ref": "2a3c1feb-c07d-4e15-9d3c-dc0bac5bb52d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cd2b0232-80f3-4fd8-b8ca-e683a2a5a235"
        },
        "item": {
          "id": "b98ace32-14d1-42fd-acd9-5da40ae98ece",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75a7e636-424d-440a-8ca1-b53057430c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd4d044-9c42-465e-be31-d7e506420768",
        "cursor": {
          "ref": "99fc2c3f-6735-411b-906b-362d5d2c28a4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "00203733-a3ba-450d-9485-6ea3bc0a1502"
        },
        "item": {
          "id": "ffd4d044-9c42-465e-be31-d7e506420768",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2fb8a5c8-f52f-4f7a-90ae-46abf55e2ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04631f81-c057-4d5b-8068-b5aa62ff785a",
        "cursor": {
          "ref": "3bf927be-0881-4ef8-b052-7259857e5484",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e3ebec9b-1882-437b-9287-0c1cbddcf594"
        },
        "item": {
          "id": "04631f81-c057-4d5b-8068-b5aa62ff785a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ab0d2d87-4105-4282-ad9b-44a792e0b3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8069fe6-e1ee-4d93-bea5-54c7dfb204f6",
        "cursor": {
          "ref": "f16ec5df-79f8-41c5-9de1-76d9eae29021",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a95e8fe8-e946-4889-bc16-4c91a1ed45d3"
        },
        "item": {
          "id": "c8069fe6-e1ee-4d93-bea5-54c7dfb204f6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8a6cbbe4-7f12-4d34-a438-c159af1f6f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39a9e37-b6b6-434e-a8c4-52df095c1a01",
        "cursor": {
          "ref": "f83f7903-4e4f-43e8-a027-afcb65a72d68",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a4accf79-47a7-40f5-9ec0-da0ae2aeb73a"
        },
        "item": {
          "id": "a39a9e37-b6b6-434e-a8c4-52df095c1a01",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7e1bb4dc-8334-415c-9a6d-2657c7dbf1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1344fe1b-b348-4dad-9551-4f86cdf133e9",
        "cursor": {
          "ref": "428aa80e-de07-431d-8437-0b2d2471a078",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "68f2c1b8-98f7-4099-a6e7-ec1d42c6bce8"
        },
        "item": {
          "id": "1344fe1b-b348-4dad-9551-4f86cdf133e9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "918dc372-aa13-4a5b-9ede-9a62b9a05c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9219642b-44fe-466c-9901-d06012487f13",
        "cursor": {
          "ref": "e92988ff-9fdc-471b-81bc-305eb0b28a30",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2b6a14e7-b731-4337-8b41-fefcac216c5d"
        },
        "item": {
          "id": "9219642b-44fe-466c-9901-d06012487f13",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5253de1d-c18f-4f27-9a7f-23f3cf82d4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f12d6e6-b8b8-4630-aec7-2b37481b68c5",
        "cursor": {
          "ref": "4928ad32-1bc3-46a2-90f8-9f07f77038cf",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b63d447c-07a6-4e1b-9dd0-32d239ee3550"
        },
        "item": {
          "id": "9f12d6e6-b8b8-4630-aec7-2b37481b68c5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b635da8c-63ae-4227-8419-8d82ef279236",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903b26e2-31ad-4e6a-9cf3-27891243e5ab",
        "cursor": {
          "ref": "755e829a-2638-4177-a62b-4b1d230147ec",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cf7d08a0-ffa1-4046-90c6-51a25b276191"
        },
        "item": {
          "id": "903b26e2-31ad-4e6a-9cf3-27891243e5ab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "644f89ad-79c0-4569-8794-a4c424be2c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb7ae2b-2ee8-4525-9d3b-64bf97dd647d",
        "cursor": {
          "ref": "62f6d327-95a0-4ead-a778-02adc24aa812",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cb3a0467-ca92-4bcb-9ac2-52d8992a2dbb"
        },
        "item": {
          "id": "ceb7ae2b-2ee8-4525-9d3b-64bf97dd647d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1103c5ea-d6cd-4a60-929f-4e87dd0786da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56937528-da93-4919-ab8d-73babe35b22e",
        "cursor": {
          "ref": "f6c1733d-c881-4964-921e-daa88ee96340",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c2a36e48-9a0c-4cee-8e88-4b4e32e74793"
        },
        "item": {
          "id": "56937528-da93-4919-ab8d-73babe35b22e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d7676de4-a5d0-4b7a-934e-60f62c20ca71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbdd045-242e-467c-8980-0a54f8eb6b91",
        "cursor": {
          "ref": "a5446b64-cb0d-4a20-bcf9-a9d69d30b469",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "58f28e81-a4f0-4947-9f50-136a2c6afa97"
        },
        "item": {
          "id": "bfbdd045-242e-467c-8980-0a54f8eb6b91",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8d97c83a-f09e-4e07-8ad5-f0ba56fc7ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe986b8-51b5-46c1-a329-018aa0a10b8f",
        "cursor": {
          "ref": "f8cba893-7595-40f3-8a57-9c60b3c4ff88",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "080655d3-c6ff-4538-bcb1-15f0ad58d365"
        },
        "item": {
          "id": "ebe986b8-51b5-46c1-a329-018aa0a10b8f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c712fd57-b276-4e45-97d2-df40c8d441f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ef42f2-deca-4c83-bed3-a81667549590",
        "cursor": {
          "ref": "61cb0aee-a6d4-4c9e-b707-2beacfff9660",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "be2a1ef2-6885-4168-a43d-efd0dbb1d30a"
        },
        "item": {
          "id": "30ef42f2-deca-4c83-bed3-a81667549590",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "393284ae-5143-4876-a724-45126d5fe56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818b70a9-848d-4b9a-87cf-92a897c07317",
        "cursor": {
          "ref": "f03343a1-9413-4a67-a739-4a755ed568a7",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3aa2593d-5ffd-4098-899b-8848408ed425"
        },
        "item": {
          "id": "818b70a9-848d-4b9a-87cf-92a897c07317",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e5f34bf6-e270-4ff6-8ff5-2cc82eeaec3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85f57f4-5872-4ee0-b47f-33332890408f",
        "cursor": {
          "ref": "4268b4af-9864-40bd-bc46-d3193c787cd4",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "47160998-2c1d-4054-a5f2-3112b67c559d"
        },
        "item": {
          "id": "c85f57f4-5872-4ee0-b47f-33332890408f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "41956e13-29fb-4a1e-a3f4-d3d2598035d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeb1d9a-c3df-454a-a25b-9769dc0756e9",
        "cursor": {
          "ref": "868ab7d8-e64f-43e0-9b4e-27c62de79cf2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "78027a4d-6f98-4c30-a1eb-acec7a227d40"
        },
        "item": {
          "id": "4aeb1d9a-c3df-454a-a25b-9769dc0756e9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "085f0e92-f0b4-450a-b893-15ca3a31567e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1c5fcb-e9db-468d-a19a-fe182468b600",
        "cursor": {
          "ref": "4987ea03-0dee-47c5-bb5b-4ab43a406c7c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "51555d19-4037-44dc-88b8-5b79fb597c3a"
        },
        "item": {
          "id": "3c1c5fcb-e9db-468d-a19a-fe182468b600",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "815daafa-2e99-4bbe-aec8-829f24c99b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e9dffa-e145-4cda-97d9-c6bcddaaced5",
        "cursor": {
          "ref": "bf907696-b075-4fd3-821c-0e2c962e1bbf",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "875c4f4b-e59f-44bd-9d74-36ac6893a54a"
        },
        "item": {
          "id": "c2e9dffa-e145-4cda-97d9-c6bcddaaced5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2460bc75-7240-4d83-b250-952412250f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a365b179-6afc-4e47-886b-4cb1a484b047",
        "cursor": {
          "ref": "7cda417a-0a47-42a1-93a9-c7a51af967cf",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cb9929e9-a771-4900-9aeb-44c5ffff75ec"
        },
        "item": {
          "id": "a365b179-6afc-4e47-886b-4cb1a484b047",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4f173ff2-c33b-4197-9672-2e69c465fd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d88c06f-3ce0-4f99-966f-73928943fdd3",
        "cursor": {
          "ref": "5ffec2f9-578b-4c0b-83f4-05b46c0c90e0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "aab343e7-45b3-41cd-83f4-32ba3f99c113"
        },
        "item": {
          "id": "9d88c06f-3ce0-4f99-966f-73928943fdd3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2318e4de-96e4-4d84-8445-4d68f5d2aee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f9a725-12be-4bd5-abb2-ea8de3bf99e8",
        "cursor": {
          "ref": "558b4b30-4abb-4716-97af-95e0f7adb55c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f72e5b6e-f291-448e-b145-887e0ad4e413"
        },
        "item": {
          "id": "85f9a725-12be-4bd5-abb2-ea8de3bf99e8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ac3ce57f-1195-455f-b8c6-936b5d19e572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dfd30c-b2c1-4290-a744-fbe994899aeb",
        "cursor": {
          "ref": "3b92629c-d326-4143-a601-e2ba72a8a156",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5505cebc-6a0c-4287-805c-156341f2c6b3"
        },
        "item": {
          "id": "89dfd30c-b2c1-4290-a744-fbe994899aeb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a1d316d4-26dc-4fb0-b029-62b725678abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc911f12-6260-4f53-99b1-6e4d04421b37",
        "cursor": {
          "ref": "165664f1-1e1c-4f54-acee-d1903a935af9",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5dfea99b-c39b-42c5-ae94-d6f5999a398c"
        },
        "item": {
          "id": "fc911f12-6260-4f53-99b1-6e4d04421b37",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "09b69707-2946-4663-9d0e-2888f3dbae8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a280095e-952c-40f9-8c8e-b18994dde587",
        "cursor": {
          "ref": "9f23c67d-a56d-406e-a423-7baa126f64f8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "af7289e4-9717-48b5-b20a-f93f0c876696"
        },
        "item": {
          "id": "a280095e-952c-40f9-8c8e-b18994dde587",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2c72b227-6982-4d27-8a45-4afa9f135c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f399f91a-079c-400b-8fa5-40205ee41e70",
        "cursor": {
          "ref": "e1a865d4-222a-4193-b3c8-298726bc4441",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "56324079-a435-4514-8ee3-2a56258731a7"
        },
        "item": {
          "id": "f399f91a-079c-400b-8fa5-40205ee41e70",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c41827d-0820-480d-8876-8c15dba6530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955296ca-e699-4448-9621-a6d8866daae2",
        "cursor": {
          "ref": "14be35fd-8221-4b1c-b092-f995781cf753",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b9095c4a-81a2-480b-ad6d-854cce43a3d6"
        },
        "item": {
          "id": "955296ca-e699-4448-9621-a6d8866daae2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "341f2fea-297c-4fa9-a92d-cdf09411418f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c829f0-9b24-47db-aafb-5dfa0ab47c82",
        "cursor": {
          "ref": "3cd955ab-d8c8-4557-a1f7-0a4e7ed6fdba",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "69158210-799c-4e83-bfe6-2cea9c51b0f5"
        },
        "item": {
          "id": "42c829f0-9b24-47db-aafb-5dfa0ab47c82",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "49f2115b-cae5-4608-b0a0-7d9dfdaf034d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9811a9df-9af1-427a-a9d5-652dfb12be13",
        "cursor": {
          "ref": "ff5e7a0d-b2af-4b92-ab42-d4a35633661a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7c7344cd-bd77-4903-9bbc-b1c070bed7a4"
        },
        "item": {
          "id": "9811a9df-9af1-427a-a9d5-652dfb12be13",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "90b3f6dc-b254-4eaa-908a-b614417ae789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd35ee-0274-4568-b872-02834150f4d7",
        "cursor": {
          "ref": "3bf7fbb8-c9dd-4686-9af0-a1a81d048202",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "96033476-a459-4209-af7f-02d7d72f5c7f"
        },
        "item": {
          "id": "08fd35ee-0274-4568-b872-02834150f4d7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2d3d4d20-afe2-478b-aabf-826d4f7e2ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047cb920-5b0d-4c31-9666-0c2e6233d08e",
        "cursor": {
          "ref": "bc785ab6-d016-4f96-981e-cf9028559bb3",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "73e510cf-c53b-4879-9367-c9d749e918e8"
        },
        "item": {
          "id": "047cb920-5b0d-4c31-9666-0c2e6233d08e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6779e83b-d998-41dc-9f34-1f17e6e5b1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776f9391-bc91-4ec4-8ed4-aeea41a7d7da",
        "cursor": {
          "ref": "3efc0489-e9fd-4f73-b087-784a3a2c630e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "794dae73-2bf2-4a1a-8957-51d8c7176ed3"
        },
        "item": {
          "id": "776f9391-bc91-4ec4-8ed4-aeea41a7d7da",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e4b45daf-3344-49fb-9e5b-3d53fee1ff4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50305977-f565-4307-8741-64d1239b8a42",
        "cursor": {
          "ref": "e2927197-df22-4910-8d35-7f6e842e8b68",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ecd563ed-f8f7-4ecb-a6b5-8a3fc1cc3adb"
        },
        "item": {
          "id": "50305977-f565-4307-8741-64d1239b8a42",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8482852c-22bc-4dde-9300-390ba9108ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85434a26-76a6-4de5-8098-4f16e65c17bf",
        "cursor": {
          "ref": "aaa898dc-ece8-4846-893a-f6a351fc0068",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2360b129-c3e5-40cf-9faa-bd231ffc8005"
        },
        "item": {
          "id": "85434a26-76a6-4de5-8098-4f16e65c17bf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5807644d-fecd-443f-b676-4881455fffc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ea4572-098f-47c6-8cad-d12f868536bc",
        "cursor": {
          "ref": "37a3e2ea-2752-415b-a8bd-0a0cadb1d461",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "06fd6e48-c86e-4b0d-8296-f15133c37b33"
        },
        "item": {
          "id": "46ea4572-098f-47c6-8cad-d12f868536bc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a4002774-4b84-4ceb-ab20-9ad7ae789918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e6e53b-0e75-4155-b45b-965a315a0e7d",
        "cursor": {
          "ref": "55613514-d5a7-4526-98ec-0d7ebd10035b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "77bb7e1e-b592-4765-8588-87a5bcd71e5e"
        },
        "item": {
          "id": "70e6e53b-0e75-4155-b45b-965a315a0e7d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2aca4e67-10fc-49b7-9f5b-cf4f0f5365b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d389ffb9-374b-480a-90f6-abd5611dfbb0",
        "cursor": {
          "ref": "723687f7-8d67-4bd2-9c4a-addd52987588",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "020ae9e9-269e-48db-99af-32e0934366d8"
        },
        "item": {
          "id": "d389ffb9-374b-480a-90f6-abd5611dfbb0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e24eeda6-8631-4f3d-9dea-a16de46deab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6987e3-60b7-4309-8678-95f43a633670",
        "cursor": {
          "ref": "99441093-6ea6-495a-a732-3d5d0a87388f",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0800a090-9ff0-493d-b9a3-61a3f871c1f5"
        },
        "item": {
          "id": "6d6987e3-60b7-4309-8678-95f43a633670",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3242720e-1e9d-4d48-b015-5af98b53282d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8866098b-f4a0-490f-815f-2202c7b08964",
        "cursor": {
          "ref": "d4c94538-aadb-4315-b778-e09112de19e5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ff7a5827-2d6b-4647-8377-25215efeb417"
        },
        "item": {
          "id": "8866098b-f4a0-490f-815f-2202c7b08964",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eeefcf8a-4bd3-4e04-99f7-913e172b655d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de814173-7a49-4d38-97a1-ff9dd0b8ff0d",
        "cursor": {
          "ref": "8ba3ab7b-a14a-4d92-b0f7-4d41c51b59ff",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3d0239f5-afee-4943-9087-7c22a9dd8e04"
        },
        "item": {
          "id": "de814173-7a49-4d38-97a1-ff9dd0b8ff0d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "985e669d-d7c4-4280-9013-a65388deb460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674a2922-1542-45df-a302-a94be506140f",
        "cursor": {
          "ref": "6acb00ca-d4a4-4e78-9bf4-83d283bdbf18",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0288a05e-d08b-44e4-bd29-06252bc71f07"
        },
        "item": {
          "id": "674a2922-1542-45df-a302-a94be506140f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c539ecd4-9fb9-42b5-8fab-51287822d13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90da0f7-5f7d-4f68-90ca-8143adee54c8",
        "cursor": {
          "ref": "48c3cea5-3129-4185-b5ef-efe2bcb24707",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6c0997bf-5199-4335-8381-759f742b5b2d"
        },
        "item": {
          "id": "e90da0f7-5f7d-4f68-90ca-8143adee54c8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4bfef5e4-7b07-4350-9f7a-9dffb1dc0dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fffc27e-540d-4f86-8d23-60f88b21efc1",
        "cursor": {
          "ref": "4cf4855a-8d4b-43ce-bcc8-eae89cb3a5b4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e7c9a40a-9b11-496c-b3ff-3b0b7c559343"
        },
        "item": {
          "id": "5fffc27e-540d-4f86-8d23-60f88b21efc1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2a513b86-6bb4-4d50-a850-c1b26e361bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c02099-6c77-4a50-8dfe-762cc2b00e44",
        "cursor": {
          "ref": "0a450050-99ce-43a6-8b2a-28b37f720f2a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c12f277e-d234-4183-8775-083e1f21778f"
        },
        "item": {
          "id": "57c02099-6c77-4a50-8dfe-762cc2b00e44",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "71ba1242-5ec5-4fb6-aff5-095c9a23f5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bc2431-1531-49b5-99cf-1a2047e62b07",
        "cursor": {
          "ref": "e31d23b7-940b-4db5-bddd-bc40841fd89c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d74ff8dd-2e21-460e-98ca-16756bb847e8"
        },
        "item": {
          "id": "d4bc2431-1531-49b5-99cf-1a2047e62b07",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "29b291c3-1a0b-4c6f-93d8-96e17139de1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511f7da1-9735-438a-a7cc-e1ba93d3f27e",
        "cursor": {
          "ref": "a057142b-fabe-4a46-ac7e-b11136701d7d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "48f27ccb-5699-4b3d-9789-1e0dcafe2c3a"
        },
        "item": {
          "id": "511f7da1-9735-438a-a7cc-e1ba93d3f27e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e0599120-ca8e-4ab2-bef5-02e8feb6ce17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6987f0c8-d430-4978-b246-f20dee2b37f9",
        "cursor": {
          "ref": "ef374058-cc99-4598-b791-3d7d729489c2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aef22b48-3b33-4ca2-a924-a330129d69ce"
        },
        "item": {
          "id": "6987f0c8-d430-4978-b246-f20dee2b37f9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ee40dbae-87de-4837-9077-67eb9a92ba95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581620aa-463d-4994-bacd-2f79659b8510",
        "cursor": {
          "ref": "d3c74f30-a57b-496e-ae22-f99a4e04228b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "53648003-2eea-4372-82ed-03132f416bb5"
        },
        "item": {
          "id": "581620aa-463d-4994-bacd-2f79659b8510",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b983ed0f-3a9a-4453-8a84-58c5ca75feea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ef1e3f-1da3-4a4b-81cd-780a5783cdbb",
        "cursor": {
          "ref": "f9b1da36-2b65-4a86-9306-222fd662f84b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ae14609a-8022-48b1-890f-95fe7e314bce"
        },
        "item": {
          "id": "e4ef1e3f-1da3-4a4b-81cd-780a5783cdbb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7ffc5ea5-ef2d-433a-b289-4628d0e412c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c77af6-0b7e-4e78-8539-c0fd761d107a",
        "cursor": {
          "ref": "8e1dff14-a365-4866-8e97-0a435f16dfd4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a9d7d4f1-16d3-4118-8f61-330f3d8855d1"
        },
        "item": {
          "id": "44c77af6-0b7e-4e78-8539-c0fd761d107a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d639c74f-9b8b-41a2-b262-abf2d8113c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aa8d0a-70a8-4d92-8309-cae57b2596ef",
        "cursor": {
          "ref": "ce9d0f72-b5e1-4297-a4cf-b98801aa37c5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "278e8c8e-9c31-4a8f-ae44-98665b2f113a"
        },
        "item": {
          "id": "d9aa8d0a-70a8-4d92-8309-cae57b2596ef",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d41b4d4b-ffd8-4194-bcd2-203d2961648d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f680db-51df-4c6e-a165-fbe5ccae1b5c",
        "cursor": {
          "ref": "df09ae49-99ac-4114-8ad5-14bffbd96899",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "83662d0b-da0c-401f-8d16-76a14657e2ba"
        },
        "item": {
          "id": "56f680db-51df-4c6e-a165-fbe5ccae1b5c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f2d04bb4-1cd3-4e77-bcbd-4dd4fbde5d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b68e1f7-994f-4e68-9ae8-3fdb534fdc82",
        "cursor": {
          "ref": "ffb2a49a-e87d-4247-9d58-5f24bfcdf82f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a7000b48-1750-4f2b-aa4c-56279c200825"
        },
        "item": {
          "id": "2b68e1f7-994f-4e68-9ae8-3fdb534fdc82",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "21b0fdc8-ae24-4ccc-a79b-bfd817e81005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a388d774-a286-4d2e-b4a3-62f3c829ecf8",
        "cursor": {
          "ref": "98d4a32f-d8f2-4af3-9403-a5467105962d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b0e3bdfd-6d41-44e2-b62f-70ec8bfe819a"
        },
        "item": {
          "id": "a388d774-a286-4d2e-b4a3-62f3c829ecf8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "171ad6f0-754b-4163-9886-2122e00e0df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1317a06-02a3-41b4-b4c8-95d634a90af9",
        "cursor": {
          "ref": "e6ecde0b-32bd-4c75-91cc-cc9a46fe429f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0ba7b343-b295-4693-832c-a078ed0383ba"
        },
        "item": {
          "id": "b1317a06-02a3-41b4-b4c8-95d634a90af9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bd689892-a0fb-4d95-973c-c37f96d4bb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a670e4-607f-43b0-b100-e30e3e4828a2",
        "cursor": {
          "ref": "b9f766ea-9815-4ef8-9281-694fec790c51",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "26ca03e5-5880-4cd6-b1e6-0598a1faa9b5"
        },
        "item": {
          "id": "c0a670e4-607f-43b0-b100-e30e3e4828a2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6b51ff6e-48f6-43d2-9e6f-6f87255cc3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01addcc2-ff23-443a-b7cc-538d430c7f92",
        "cursor": {
          "ref": "78812e0d-28b4-4bf5-986b-41db4d74afde",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "86f43338-1d64-46d9-8c9e-df7316a02aa0"
        },
        "item": {
          "id": "01addcc2-ff23-443a-b7cc-538d430c7f92",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3651d3a1-e866-40c8-8538-b7966ba9d5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00374fa-5ddb-4da9-bd03-67a34a9b34c3",
        "cursor": {
          "ref": "c9c2061d-19f5-4d93-b830-62f03bf50265",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bb7b3307-7e8c-4215-941c-0087f29553aa"
        },
        "item": {
          "id": "f00374fa-5ddb-4da9-bd03-67a34a9b34c3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ea997b15-7f8c-4af0-bc9e-28a2564f7f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b718ff-1a4a-4f55-8320-d3a5e6f0b6e6",
        "cursor": {
          "ref": "c4c237a9-d6ce-43c0-9291-d1b41985d563",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b0701ec0-c454-4d21-a4cf-24d9d692d1a3"
        },
        "item": {
          "id": "68b718ff-1a4a-4f55-8320-d3a5e6f0b6e6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2a6c441b-621f-42c2-8671-b47388905e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fe5f76-783a-4bf5-bc86-700339f03633",
        "cursor": {
          "ref": "dd756694-762d-4aa5-b5a9-e6a138c2ec14",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6d3b42d6-3cca-4ffe-b4b8-af95065c5f47"
        },
        "item": {
          "id": "69fe5f76-783a-4bf5-bc86-700339f03633",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2dc67894-60be-4aa9-905a-6565231c84d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062e74d1-c01d-412c-8aed-167beba69c87",
        "cursor": {
          "ref": "20e09b89-ed7f-4dcd-964f-9ad4bd1df86d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f3d8d24f-1f72-42f7-9135-cf3fdcb033ab"
        },
        "item": {
          "id": "062e74d1-c01d-412c-8aed-167beba69c87",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "aee6b0d6-c578-44d7-9bf8-3b6452cacec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9c5dac-777d-4035-a7bc-45a5af90a4ba",
        "cursor": {
          "ref": "cdf3695a-577d-4f3d-80af-a684eb751ac7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8d96f0ff-e890-40a5-bd89-3a07dd8f2b7b"
        },
        "item": {
          "id": "1e9c5dac-777d-4035-a7bc-45a5af90a4ba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "42918050-4511-45a0-93cd-3e92cb2c9624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e9d0fa-26ad-47cb-ad23-595c6d82f01c",
        "cursor": {
          "ref": "4ed57602-4e40-4d72-9eec-91c2b6dbe25d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "00d5282a-e160-4228-8eb4-49e31b13a794"
        },
        "item": {
          "id": "10e9d0fa-26ad-47cb-ad23-595c6d82f01c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7691889b-5322-411f-8001-5e323294057c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a83ce8-08ed-4931-995e-1049db1d4e2a",
        "cursor": {
          "ref": "34cd1c1f-4939-4b44-8cc2-0a44c1345445",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "52c75234-7302-40b3-898b-c442f1d3c29c"
        },
        "item": {
          "id": "a6a83ce8-08ed-4931-995e-1049db1d4e2a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0a070574-a9b4-43c9-9488-873f08f2070c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0be8ba-7b7f-4039-b7a0-ca73cceb6b05",
        "cursor": {
          "ref": "0aeff05d-d11f-4981-9714-2411e53b447a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7fa5e79e-bb29-4cb7-a673-03ae737ec146"
        },
        "item": {
          "id": "7a0be8ba-7b7f-4039-b7a0-ca73cceb6b05",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2eb7e21f-b12d-45ae-a8e5-a936441e3bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172e58ba-bcd5-4fc7-8e92-e13fd22f6994",
        "cursor": {
          "ref": "4f7a0d8e-557c-4a2d-b847-008a4f8bbd2d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "22b98dcc-d513-4625-883c-95fd6786dfcd"
        },
        "item": {
          "id": "172e58ba-bcd5-4fc7-8e92-e13fd22f6994",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "03f49e9c-c291-443b-b2ce-9ff45f42b08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41ba2ec-12a8-4296-93fb-ce8f40624e33",
        "cursor": {
          "ref": "9d3f2e54-9c48-4c67-b389-78060c3f8bcb",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7aeab2f4-be75-48ec-88b2-605592eeb4cf"
        },
        "item": {
          "id": "c41ba2ec-12a8-4296-93fb-ce8f40624e33",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "18398d32-d318-4832-b06c-e16fe3998fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f213d22c-5fce-4308-b76d-f6142480fda0",
        "cursor": {
          "ref": "df471fa3-446d-404d-ad75-47a23cca6853",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e7843a45-7c37-48b3-a92b-97bcfcd45f4a"
        },
        "item": {
          "id": "f213d22c-5fce-4308-b76d-f6142480fda0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "597eb4a7-7d0c-4976-b4e7-670957c33f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e382337-cdbd-40f7-a2e7-07ead7e1659c",
        "cursor": {
          "ref": "9f45d79c-876e-4f4d-bbc6-5c435e7c790a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "173150a6-9ecb-4299-b478-47356a598338"
        },
        "item": {
          "id": "6e382337-cdbd-40f7-a2e7-07ead7e1659c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e73ec7a7-4914-43d7-a2c3-a9aa62a6a0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968ec6c4-f855-490d-b468-58dab7bd7f82",
        "cursor": {
          "ref": "c23fb27e-818e-44bf-bd62-7a2f44814c89",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "379b78dd-55d8-4d11-b286-4d43d5bf88da"
        },
        "item": {
          "id": "968ec6c4-f855-490d-b468-58dab7bd7f82",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0cd27c05-a321-4c86-977e-317b22f5927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0a0c28-f735-4c49-88d8-585b9dbb0066",
        "cursor": {
          "ref": "a7b4d129-59c9-4cf6-986b-b9dc598a6134",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "68a28104-a2b3-4ffe-bb77-3ea22413026e"
        },
        "item": {
          "id": "8d0a0c28-f735-4c49-88d8-585b9dbb0066",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4e3544bf-a3f7-4acb-baea-0006f674abf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6d65e4-5f41-4876-8ec8-76a45ff63060",
        "cursor": {
          "ref": "d5bd777b-97e4-4162-81b4-4f76990c5284",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "944246d7-71d9-404d-87f7-4d057e6e9e6b"
        },
        "item": {
          "id": "ff6d65e4-5f41-4876-8ec8-76a45ff63060",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f2fdd7c8-14f3-4505-b1d8-38dfff3fee50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717fdab6-dbee-4fd0-8f3d-c834c0431500",
        "cursor": {
          "ref": "0c8c11df-c8b8-4043-9150-bc8f8339cdc2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "084df85c-be80-43d4-b199-82bdee9afa91"
        },
        "item": {
          "id": "717fdab6-dbee-4fd0-8f3d-c834c0431500",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0f00a6db-b093-468a-821f-49b3f3cbc971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6c5545-5ad2-4364-a633-0f6b0f14a4b7",
        "cursor": {
          "ref": "3937cba4-5483-49f1-86aa-182ab622265f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "77a844df-dac9-419b-821c-6461559da96e"
        },
        "item": {
          "id": "aa6c5545-5ad2-4364-a633-0f6b0f14a4b7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2d552540-28bf-45fc-b832-4bfa159186b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7637e4c-43c6-43e4-872b-e8a6caca3f9b",
        "cursor": {
          "ref": "bbae84c1-0935-49a8-bde7-7369f00cb919",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "72cd2c18-d666-4525-a2e0-0578da3b05f0"
        },
        "item": {
          "id": "f7637e4c-43c6-43e4-872b-e8a6caca3f9b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2b05a583-05e5-4361-b209-63ac59acd2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a517b10-ddfb-4b2b-a459-44dd7866f290",
        "cursor": {
          "ref": "6050f21d-cb91-42c7-95ba-301b7255724a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "01ddc4a5-d6e1-42b7-a443-cc5d03b8e153"
        },
        "item": {
          "id": "9a517b10-ddfb-4b2b-a459-44dd7866f290",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bed485f4-3267-4f63-aed6-08f8b2e5590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4120b5-1ce3-4f74-8625-2cb7a17615af",
        "cursor": {
          "ref": "7838d7d3-c954-4180-8b61-5f060dc7dd5f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "133ecf50-8482-4443-9c92-f331f1605747"
        },
        "item": {
          "id": "7b4120b5-1ce3-4f74-8625-2cb7a17615af",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fed575df-134a-468f-aa85-be651453bf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d8ad30-3a0d-43ac-adb7-0598cab8bc5b",
        "cursor": {
          "ref": "15b12d31-512e-4f4c-8cd9-a39a1ea4f75d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5733f753-6d10-4e88-9a05-17f3511738e3"
        },
        "item": {
          "id": "57d8ad30-3a0d-43ac-adb7-0598cab8bc5b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dee453a6-f2f4-47ac-bf08-b04c326b8696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e68e91-6e19-4781-9cd5-887c43c53af7",
        "cursor": {
          "ref": "6313ad9d-ef64-4274-89df-682bd47ba813",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4a2f95ac-4497-435d-8c71-eb010bff6c13"
        },
        "item": {
          "id": "83e68e91-6e19-4781-9cd5-887c43c53af7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "19eb7c01-6886-45e0-91db-7b67c33c6860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f26c50a-ba67-4419-a2f1-780bc173e81d",
        "cursor": {
          "ref": "6b34252d-734c-40d4-bb93-4b5bccf995e4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3f63eae3-46fb-4f68-a74d-ef341bf0f1b3"
        },
        "item": {
          "id": "3f26c50a-ba67-4419-a2f1-780bc173e81d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "634cf09c-e3a5-4f34-8f66-ae1f5f1c39f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d46a23-7211-471d-812f-40993de8ed81",
        "cursor": {
          "ref": "d2d16aee-bf77-4169-81e7-15295773d6ed",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "16f8866c-c4f2-4056-a758-9ea4d1d64b78"
        },
        "item": {
          "id": "52d46a23-7211-471d-812f-40993de8ed81",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c40996a4-edff-464f-8018-eef8c24c0a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe29f9ac-fa0b-4c63-9770-1d649e2d7f87",
        "cursor": {
          "ref": "91a1948f-6d32-4437-83dc-cf7dea1ce686",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "624b6bb0-141d-4b24-9121-0e8566a0ec03"
        },
        "item": {
          "id": "fe29f9ac-fa0b-4c63-9770-1d649e2d7f87",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a5fb8f70-e2e0-4769-8667-e432eea3ad4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96024d03-578d-4708-8cd4-cdf949267f97",
        "cursor": {
          "ref": "90d160ed-9e61-4453-8ded-42fffffc47f1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "37e1940b-3b67-49c0-858b-7695b661ad26"
        },
        "item": {
          "id": "96024d03-578d-4708-8cd4-cdf949267f97",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d71a5161-220a-4f48-a62e-c173976b5525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c2a9e7-68c5-4996-9a87-abb8633d9409",
        "cursor": {
          "ref": "5d59b8eb-f467-4c6c-9d7e-e1b6427aa13d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "27cb2923-c3c6-4d21-94ef-493f61125dff"
        },
        "item": {
          "id": "89c2a9e7-68c5-4996-9a87-abb8633d9409",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f35cb253-c16f-4a98-8cbf-1ad79cfa7a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2d837d-21e8-4b40-a587-d5258147a1d2",
        "cursor": {
          "ref": "d5e1c697-bf0d-461e-9c6d-00e5f910439e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c279be2a-05ba-4de5-9afb-861b340dca00"
        },
        "item": {
          "id": "ab2d837d-21e8-4b40-a587-d5258147a1d2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bed88f79-8264-4da3-904a-e9c0192727c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c5d9d5-ce4a-4cf4-924e-f731ed9ee785",
        "cursor": {
          "ref": "8d518981-1d0b-4132-80ef-cb5ef3922c8a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0b4c7eaa-e478-4814-b966-1efad334581e"
        },
        "item": {
          "id": "b9c5d9d5-ce4a-4cf4-924e-f731ed9ee785",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "133404a7-77ea-4f66-b041-f327396ce6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba0024c-c2d5-4209-a670-f4390ccba455",
        "cursor": {
          "ref": "0d7ee269-cdc4-43a4-a0ab-2fc480a9c4a6",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "93424d05-642a-4415-b168-8ccfb6d0324b"
        },
        "item": {
          "id": "0ba0024c-c2d5-4209-a670-f4390ccba455",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1c92a253-e13b-47a6-ae60-6629deee1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7856f7d7-45b7-4db2-835a-1d74e26fdab0",
        "cursor": {
          "ref": "06623932-e3c2-4655-8aa9-61588fdf6fa9",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9bd19b83-d4d8-498e-8626-c68583a6bf56"
        },
        "item": {
          "id": "7856f7d7-45b7-4db2-835a-1d74e26fdab0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6df88013-3ab1-49b0-9725-fb5113d2fa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaa7460-5cab-4c0a-9348-9dd2375da2e6",
        "cursor": {
          "ref": "c859c2e6-f5f0-4344-a07a-fc037f95353a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "308f992b-3367-487e-abd9-412b325d22ff"
        },
        "item": {
          "id": "cdaa7460-5cab-4c0a-9348-9dd2375da2e6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a0f582ce-4691-47ba-ad99-ce515098d4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9e679f-c710-471e-ade0-f5f67c57a3aa",
        "cursor": {
          "ref": "60797e8a-5fde-4b34-b852-7b7d077f9a43",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "38da7bca-1163-46a1-823e-16d51b7c8778"
        },
        "item": {
          "id": "ba9e679f-c710-471e-ade0-f5f67c57a3aa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "39dfe237-1656-4fad-9b40-3e85f4d99c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20341c89-5301-45d5-b186-ee508c88e841",
        "cursor": {
          "ref": "bb8a5cd0-5a9a-44b2-8c97-5a9c7ab073b3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "55149fda-f611-4ba2-80e3-5d590611b449"
        },
        "item": {
          "id": "20341c89-5301-45d5-b186-ee508c88e841",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9bde35b0-6a39-49da-922e-5bcb9c0356fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119309ff-f7f7-44d6-ad08-2f775d69988d",
        "cursor": {
          "ref": "45b4c89c-f00c-46bc-b7a4-6976699528e5",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bc0606e0-350e-4d1a-a0c5-d18520400e60"
        },
        "item": {
          "id": "119309ff-f7f7-44d6-ad08-2f775d69988d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7c257389-6b2d-48f3-98e5-ae3b00b4cd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96498c2-86a4-4e40-b002-64f8551e1286",
        "cursor": {
          "ref": "1531fbed-0f8b-404a-9b84-a255f4e23130",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fae2d8b9-d707-4051-b654-70e603466add"
        },
        "item": {
          "id": "a96498c2-86a4-4e40-b002-64f8551e1286",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6b8092a0-42e3-409c-b595-e59aeb2f5b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a187368b-1bc5-409b-9a37-fce5a41229ad",
        "cursor": {
          "ref": "0c649526-d5a0-47a2-9ff4-df0f870f1dbd",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2938d116-bd08-4864-b11b-e22b326fd9b7"
        },
        "item": {
          "id": "a187368b-1bc5-409b-9a37-fce5a41229ad",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f37b7a1f-42f9-471b-aac8-9932fe4faae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08558c3b-d23a-432a-8e9a-224447dc8199",
        "cursor": {
          "ref": "16fcaef9-ee42-45e2-893f-67f8493c3433",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "97a32ac9-4f8e-4fb0-a810-ea17da51d2d0"
        },
        "item": {
          "id": "08558c3b-d23a-432a-8e9a-224447dc8199",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "238f64bd-d6c8-4284-b307-9156de09d33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68053b6-e845-4207-8160-235dd8226630",
        "cursor": {
          "ref": "51221cb7-db28-4bef-9fcc-69352e649d41",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0c68b8b4-ada8-49b1-931d-e8790459478c"
        },
        "item": {
          "id": "e68053b6-e845-4207-8160-235dd8226630",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ff35a69b-94b1-4127-bc79-9470cdb1abe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53a6b9d-fab8-49d2-899b-df552e9c7612",
        "cursor": {
          "ref": "5d354455-0d82-460b-b56c-02ee1b8b05b9",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "01b2a026-2bbf-43ae-99ef-10ebfab5423d"
        },
        "item": {
          "id": "c53a6b9d-fab8-49d2-899b-df552e9c7612",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fa506f4e-cece-49cf-866d-1a0f0b850e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aad39e8-41dd-47a7-903d-92bcfbb91eae",
        "cursor": {
          "ref": "091b0f7b-8de7-4023-a595-313b52ad4186",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "78ac62f2-cd1a-4ee1-976f-73a7cd63ed5b"
        },
        "item": {
          "id": "1aad39e8-41dd-47a7-903d-92bcfbb91eae",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5a21c3e1-b124-4656-8a4c-8539183d57a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e34d194-15ea-4642-ab2b-ec58804596e6",
        "cursor": {
          "ref": "0333f39a-e69e-4fc6-8a25-e43fd6d2954c",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "100e7cfd-e7ac-486c-9378-7e0aad9ce434"
        },
        "item": {
          "id": "6e34d194-15ea-4642-ab2b-ec58804596e6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "23d5dfc4-168b-407a-86bf-41ff3a12b37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89f5269-2da9-442b-85d2-e39c2f3dd18c",
        "cursor": {
          "ref": "f48a2e8f-4534-49f4-8cac-fbe6bb2bcfc3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cc51eec5-120b-42c3-bfab-3a5f9919ddf3"
        },
        "item": {
          "id": "d89f5269-2da9-442b-85d2-e39c2f3dd18c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d707c0ed-5d5a-4380-b687-b3fefdc69fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5f09f3-68b3-4424-80f6-2da0767657c1",
        "cursor": {
          "ref": "7427233c-cd19-42bb-8a5c-25e92c60b519",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "135fea7d-5cb0-4475-a72d-e4c069fcc0e8"
        },
        "item": {
          "id": "7f5f09f3-68b3-4424-80f6-2da0767657c1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4d490af6-4dfd-4576-a640-5d2f9065e6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f4b950-271d-495a-8fe6-74a1912bc0d8",
        "cursor": {
          "ref": "34dba94b-1aeb-4aca-bfba-b7423efc7b48",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4c6320ac-6c8b-4085-afd5-77ec9cd288c1"
        },
        "item": {
          "id": "07f4b950-271d-495a-8fe6-74a1912bc0d8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1222d901-eaa4-4780-ab28-2be12af62c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c5276d-7760-40f0-b3f8-eca27a6f72ff",
        "cursor": {
          "ref": "4e029aa8-740d-4d90-abc3-f9ae128edfcd",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d02e8701-3393-4737-91a2-f1500784714a"
        },
        "item": {
          "id": "f5c5276d-7760-40f0-b3f8-eca27a6f72ff",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dc18c27f-6d29-4e94-b183-46051ccf7cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b4ef16-928a-4f66-874a-6dca9d54695d",
        "cursor": {
          "ref": "85dbaa41-8e93-4eba-987b-6629878e791c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "246e71da-050a-49a1-bff6-545cb4d83cfc"
        },
        "item": {
          "id": "42b4ef16-928a-4f66-874a-6dca9d54695d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "15d5efc3-97fb-4aee-a36d-37ecb5fc7d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7df6f5-d51d-4e89-94cc-15c7607d720f",
        "cursor": {
          "ref": "b2934e38-18f4-40c5-aafb-e7bc8a55cf7d",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9c5394b7-e6d2-4a6c-882a-d3b4d8e78128"
        },
        "item": {
          "id": "8d7df6f5-d51d-4e89-94cc-15c7607d720f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1843cbf7-22b8-4e1f-8d78-9361bf0f7459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbac7f1e-6ec6-431b-a96a-dd237cf99f37",
        "cursor": {
          "ref": "825041c4-27db-44e2-a3ca-64a46780bb89",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "998d1a5b-26ba-461f-aa5f-bd4518efcc0b"
        },
        "item": {
          "id": "dbac7f1e-6ec6-431b-a96a-dd237cf99f37",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c6f6aa7e-b77b-4080-a1b7-322e6b74ff85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d65b876-c78a-45b8-93ee-1950def900a2",
        "cursor": {
          "ref": "5177b885-ee6d-4b40-9a2a-53983f07b636",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "99d2630f-aa72-4bd3-a911-de922b1a9dbe"
        },
        "item": {
          "id": "6d65b876-c78a-45b8-93ee-1950def900a2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "93cdd6e2-679d-4e13-9535-d51cf0164dd0",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b729d7-0919-411e-809d-acb907f0f7d9",
        "cursor": {
          "ref": "4f43e750-cf20-4eb0-8615-286395c72771",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4f5f51b3-3b81-4d6f-80a8-093c9bf28210"
        },
        "item": {
          "id": "32b729d7-0919-411e-809d-acb907f0f7d9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a33a80db-0054-4ed4-ba83-db9959775553",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a6e7c-9829-4151-9509-23cffc7bd0fe",
        "cursor": {
          "ref": "435108a6-91f5-45c2-a358-6586226890da",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5ae6024f-07c0-4632-abd0-4b75bead33ad"
        },
        "item": {
          "id": "443a6e7c-9829-4151-9509-23cffc7bd0fe",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2ca4a707-986e-42a0-af09-66060a2e9f7a",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29f0a73-4a90-4602-bdec-7c76b1d2a54a",
        "cursor": {
          "ref": "6306e937-ab45-4918-b54a-7716e9706436",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b2daa584-df9a-4f28-bfe4-06885ca7bae7"
        },
        "item": {
          "id": "a29f0a73-4a90-4602-bdec-7c76b1d2a54a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2810aa32-5546-40b0-9047-d7dcb6ead13c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29f0a73-4a90-4602-bdec-7c76b1d2a54a",
        "cursor": {
          "ref": "6306e937-ab45-4918-b54a-7716e9706436",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b2daa584-df9a-4f28-bfe4-06885ca7bae7"
        },
        "item": {
          "id": "a29f0a73-4a90-4602-bdec-7c76b1d2a54a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2810aa32-5546-40b0-9047-d7dcb6ead13c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ba06e0-14ec-4bfb-b215-644f1bb1483f",
        "cursor": {
          "ref": "20aba39d-aa92-4ce4-819e-2dafb76a20b5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6516c361-a7cf-4571-9e38-4af1fa020be7"
        },
        "item": {
          "id": "62ba06e0-14ec-4bfb-b215-644f1bb1483f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1ed67221-87a6-405c-b588-e3d7442fd086",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ad42fc-9b7b-44f4-9c65-073fa7b27d49",
        "cursor": {
          "ref": "2e72c9e2-a7a5-4894-8b91-940fbd6948d1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "36b4fb66-76e6-4c52-80f1-d4e4bd10cc6a"
        },
        "item": {
          "id": "07ad42fc-9b7b-44f4-9c65-073fa7b27d49",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "12e66182-18cd-487d-8a73-c1bfaed59dda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}