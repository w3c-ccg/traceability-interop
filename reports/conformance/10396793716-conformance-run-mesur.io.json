{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eb0abbdf-9aed-4683-992f-f0393d382099",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ac7fea87-846a-4cf1-900a-ede5e74dc48f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc63b6ac-3267-4d6c-b26b-be8cbb1d24f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40830327-da09-4755-ae1a-6beff1337530"
                }
              }
            ]
          },
          {
            "id": "2864e9aa-f384-4ad8-8845-6bed53b7b17a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f734b1a5-a443-4eea-9334-1a0be8d209dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a4dec0d-0eb8-4296-85e5-cf3ca1cd259c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4a1ae6f3-be43-4ea5-a212-a539cd3fcbca",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dc107f47-36f3-4503-bc97-0555dee7a3be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b193a7f-ae05-4eee-a252-c45bb622a713",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a2f4e9c-ab54-4a56-8a41-3ace0315ff8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73b3311c-286d-49fe-a42c-fedf26abd29b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09b54a2f-0962-4cdb-bdbe-b243c4cc4973",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01904e84-e622-4591-b46b-8564c0f8b78b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2739aa92-b027-40a8-90fb-a694b061716e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f71ae69-8bb9-4b10-bf14-0486f72fa746"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c86839e-4cbd-4dfc-8049-548ecc0f4d85",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "33e1a141-ddd8-45d2-8bac-e86adb79ed6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9fd94ab-0b8e-4c73-a73b-1fae407798fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac6898bb-8620-4654-b304-6dcae1ae91e1"
            }
          }
        ]
      },
      {
        "id": "1cdf8a71-c50c-46e9-b9f4-ee4d9d2a2383",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3c274825-5c55-4216-951e-87485777a5e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfc2f2c5-fb2e-40db-8090-0ca134d1159a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "568bbd3d-e49b-4699-bb46-55944bb4b837",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cba7fc-a7a0-46bb-ba8c-8d8e38d39db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "699c81e1-efe6-47e4-988c-2a9764f14951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6f90db-c710-4553-9e57-9c1f53344659",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cce646f-bd48-4cb8-9a8d-a3accbfa3716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7170e9e1-7a01-4e02-be52-7a3f56decbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887792e6-3064-40e0-b5c4-34312438b1d4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a0224a-e427-4c7e-9f76-1acb58ae1e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2704dba4-a5f3-4cb8-965e-d4f321cd5246"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec127b85-020f-4538-b5aa-65b729c1244b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57056b2c-74f1-42ff-a10b-14e4f92dfe38",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b63982b-5861-4d31-b9f1-7e07c6dd57c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37b7ad03-7c27-430d-8eed-77a5ec6a80b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e244816-49c5-4d18-9331-716172545910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be05fda-de24-40f6-ae50-fae2b92edc21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "01edb5d6-b46e-47d4-b17f-b9c71347d46f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7900e7b0-379b-422b-8479-1430d8baab25",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8632786a-f065-411e-be19-f915bfbdf634",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc3a4275-20cf-4824-9ae6-1c3b0a71d540"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b1d4bc2-aa53-4641-86c4-5ab83d4a8561",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a5964013-e88b-4eeb-91ce-9891fa15c47b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0db7ed4-83e4-4f8a-8d43-bae9952c308d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82851be8-e7bf-404a-ad67-761a7273e296"
            }
          }
        ]
      },
      {
        "id": "6486aacf-2870-4ea2-b1e5-27f121532a3f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "26b7ee5f-56a1-4f6b-a78a-784faa6b2a60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "175ff3bf-1c72-4753-afc9-6b1e0791e7e2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ca31e21a-fc9a-446d-90e0-bcbe3a6bd84c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85423478-74ba-44c1-a2a1-497c7e104af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae95a25-1efc-4b81-825e-c7d09be8c1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afeb770-8734-4ee8-9727-d5bac2b45c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fa5fba1-0634-4b5c-a8b2-66b594cd25fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2811304b-962e-4614-9442-1a8dd51018c3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21643f5-dfdf-4fb3-841b-bdcf705e33da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7507fe-0a0f-4036-9e9e-ed0c3e7eb03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866a0c13-231f-4968-bae1-c586074d5651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "365b363f-53bb-4d6f-b791-8abf063bce1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f21b3d5-fc75-4bda-bace-d71298c624ab",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f8aae6-c142-4cc0-b86c-9b7d76f4756f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c37b30-2da2-420f-b0f6-c3fc86aa15e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256afdfe-65ca-4c09-b5af-48b4c0b9894f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84714c60-2744-46f1-a75e-305c31e2449a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5fb72a-ed51-412b-a4ca-b1abce26a2d0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f172454e-4269-4116-84f5-cf4e00da45b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f6bef8-dcd4-4541-b510-a849b6635962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28d6900-1d40-40c6-baf9-9ad49b0db8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "432b1eb5-0b9c-4892-b696-99c9f1c010f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc937d7-5885-4213-8ded-abc053bc82cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e65f0dc-109d-4c84-8303-ffd1dc8616fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f8cab8-1def-42fc-b097-8d6b0c99cbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454ad503-ebbe-40fb-94aa-6922efc1f42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4652e9c-a022-4b1d-afba-72c1abac9f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4c8342-cb02-488b-9643-113ac79544a1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84569a60-3f17-4f67-ae02-e4ce3c42743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e675ab88-9fa2-48be-baeb-172f88d410c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7265eec-4203-408c-a8ec-e049699eafa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eae1a40a-6a8c-42e3-ba6a-cb197177a030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb2c3bd-1705-493c-85f2-dcfc8ddd2320",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283e83ea-f109-4df3-b5db-21e524170810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23f1b48-e546-448b-9e2d-fca8e56ba3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a3b1a0-abc3-4ea9-a335-6c9930f802ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59a0612e-f33c-4a07-b564-bcbdc58214f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59019f5d-de7a-496e-aa33-00a14eac3ef1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074eecb2-97b1-4d75-84e3-4b295e091b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cada8e89-1359-4bf2-98bf-43eb6a4b2655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7667ee38-c2a1-441a-b950-14b897f1bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a317b4d-478e-4be1-b2eb-db1ed944f54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6b3121-1a51-44c9-8638-bd284d2ae7c7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a8853-8ab0-4c72-98f1-2005306b2da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b6081c-1dde-47f9-b052-800a257ec338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2643eec6-3f83-4bdf-b709-67d1f066c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62edd513-cdb6-493d-9527-cd13c93942e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fbce82-f994-4361-95e8-a445fe5dea22",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3729563b-847c-4d32-9af7-fb5aa8510f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6934f1-7bdb-4857-8d6b-28d52149d0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd49ce1-c539-407f-869e-aebdc335ca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e580e3e-3206-4af4-acf8-59dbfcdae360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709c111b-87fb-477b-b74c-021c614b92a5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17859a7-f0f1-482f-b49b-c0b26e13d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e39d25c-cc2d-4f9b-bc4b-5bd5ef7a1c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09eb5eb-09fa-42df-b2fd-855b6f625329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33022a5a-e59e-4459-a828-6fc6508621a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959fee52-d42b-46da-a8c4-c576d07540bc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dafca5-aef0-426e-acb1-8fb0c272e77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbcf2ca-859f-41ce-ac51-4516f98e87d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbe36e1-3ad2-4a05-ab53-f7417b8bd231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f99b73af-c7d3-4060-bef8-7e3b825a09f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df94f3cb-41af-4cc6-aa58-0daf067eee6b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64f4271-2e99-43a1-9ebf-587701b68cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c0095a-cf91-4003-9518-50fc1d64a0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405cf58c-8da9-4a13-b985-51bb03edfa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be1024f3-9f1f-48a7-ad93-dc9d11b57c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d30ea-2b6f-4ae4-bb46-106a279b0ea0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1732cfd6-4dbb-4945-941b-02b68cb7aff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ababbb32-4a02-4024-8199-1c410e9a3266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2649992-61c0-4301-9a07-63b96af34a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c89a3972-facd-4dd8-a32f-c64951cc0728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7ca847-8835-43ef-8a30-b4883d819d99",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d1e1c6-5efd-4f2f-afbb-d7e1d36b6c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8eba31-9fe3-4371-ac2d-e4ddf1481372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa7d34d-60e8-48e2-896a-26dc767aff2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4f6bab4-c0b6-4ff7-8573-d17899271c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e27c3b-0dc2-45a5-a93f-39e493ae0153",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0ba81e-c285-4ae3-8ecc-8f79ce695c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e014f4-e5ac-4a92-b43c-ec4ac1163452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c629e3fc-61c0-4c37-9569-1e6bd3e717c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e14c02d-2313-4f42-a383-7821c517bca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1e139b-18bb-4104-9ea7-ab7e48f61943",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf93283-7d4f-4c94-aa4c-6040bc2d415c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230b8871-e99b-422d-9117-613bd9d94b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67af97ad-633f-49f2-bbb8-d76a2c6a3248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b91afc8e-3610-4433-87ad-fc0b4a22aa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e725550b-c038-4300-9105-4cb19c31af42",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcbd620-d74e-4d40-9361-5d8ce30613e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a515a949-61c4-4e27-a5ef-c334ca5aa909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00b5d29-0015-4170-a0f5-43cdb1dafb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c2a09d-b727-4465-883d-52be04d21945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec235f3-e42a-42bd-9293-31ab0dda1ed4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e11ceff-f679-442c-88f1-96934a43ab7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41805b68-99ff-4d09-9ab6-66d16a882121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63e2d8f-8b3e-4247-8b5a-68be86ec0bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1b6cb2-5b61-4a8d-ad4a-f8b999041831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a58552-7a5a-41f5-8b0d-69861c3620c6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a8965e-85b4-4dea-84a9-1af9965e1d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77653eb5-f482-42b7-b7cc-2de0ad386b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b592c90-c699-4a3d-97b9-360006048030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aab2712-71b0-49e5-bd87-e920ff04ac0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7159e8-73f5-4c0d-b7ac-e162d05e4906",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bde56d1-69d1-4513-b4db-a0537a2acfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80aa3c25-ee29-496b-bba9-08ae722942f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4828fc95-8787-4789-b928-352524b27903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab41234d-4f77-4b76-80ad-e14a9e26716e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8d437f-499a-4367-b4bc-3bfb2937f6dd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be42e70e-303c-41be-b575-bf8dae0e8856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9098ae-463f-4a63-8f10-1e7a1c246324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396199d1-1092-44a1-a599-6172c676d58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b191312-c6f2-4f7c-8da3-8552f26ae182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa84fc1-07d7-4735-a52c-60ffa2eafa6c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e21d259-3be7-4555-b5cc-d425ae3d49f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866a57d0-2976-4103-b25f-8aff3823ff05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5338532c-7d2c-407e-b968-844c62cc5f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10ad6f5a-73d0-4776-9235-806811b7d723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bc16b0-32b8-4925-974f-cb8ad76d7461",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482e455e-803d-45eb-af99-b13712aabd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d028ea8-c36a-465b-9ab4-da1b027f8717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faffa852-d187-4551-aa76-97ed3b4b0df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5e94f3-8f6b-4661-b2c5-5a9979a16702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6417ad-37a5-48e2-b2e0-5aa59c4bfd42",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe55070-666c-49b5-929f-39963cd15344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cac3cd9-b5af-46bf-af44-daccdf9b22e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca445592-6363-47df-899b-ffdb7859fe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f0a7ee-1456-49d6-9c76-c99ca32c8aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff43b3b7-db5f-4a7e-8921-7fe6750b3376",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69649a4b-1b04-4db6-9cac-ed3f2670ee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57364543-f6f4-4bba-ab91-2c87194ffdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9825568-dfcb-4ce6-a8c4-7fb442dde2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5e9d9e-5b25-4927-990c-8176a9800b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0787a461-c0e9-4685-a5df-540ec5dee262",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6aeb3c-e1da-4246-8310-fe9fa528929a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc14fa3f-ea86-4272-9f1e-8f1d5169c0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db08b0e-0178-42a8-8c7b-1e6d09bc1d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94c4ced-9f0f-4982-baa7-e015bb2658d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41f1a29-569e-43c6-b400-7e8c3717e64b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f8eacd-430d-4adb-80bb-af08e57e832c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdd987b-3af6-4fce-a90b-3025cb074d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5746f6fc-2abf-469e-8e89-81c8aeb9c9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e7248c-742c-45be-b28d-abb2e7fab77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32643ab4-5e48-4cef-847a-8da7d2d9ef77",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150d388c-6927-4b3e-8bc8-c2d372676a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e978e9ea-7ab6-4dcb-81ab-551903213213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74813806-47fa-4356-9e55-e951d206bdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6bfe50-3c75-4775-8ec7-96190115c499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fa1fab-e5ea-4ddf-ba14-e3f587435365",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a919bc78-09a7-4cda-9b53-307b47bbc4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6be65c-3788-440e-b330-49e579dd076a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faef304d-35bf-4db0-9494-a02f42568d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "39feae3e-aba7-401e-bb6e-488c00e72ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77979861-40d0-4a4d-a983-5b6a0ec9262b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caedbf30-c87f-4c7b-a5a3-6ba253c5033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8af7cd-c258-4f7c-bee5-e439a069f29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2d03d6-dc0b-4929-a2ef-b18dab666650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b328444b-0fb3-4232-b2a0-44d128c10f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffe7623-3a83-446b-a2cf-3cc223b61d51",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b99e1e-6935-4a86-8756-71fa6b82e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17176b54-4f55-4f64-8b68-d4324d6f6062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994600ef-9232-4c55-8699-b0e34a86030c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68059582-99d3-4a34-ad78-031f92d81095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17def9f-95b4-4fd7-88a5-d27cc8f1b78c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf32c788-c87f-4660-b9ac-f238b40b0ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26408704-45f2-4a3d-8859-27c204f1c910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5c3e93-f4d3-47df-87e1-ba37f59a3f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afec0113-288e-4f59-87d4-d3035ddd0aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b81267-83a8-4967-afcd-495a8d72b6d5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc043b3f-3589-4472-85fd-4434f98f519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c785276-1a87-4048-9b8a-3cb385bc95b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a43cff7-39f3-449e-b30a-93f202c9b0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0034bb3-5362-45d6-ac1d-d96eff773f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daa6574-b1e1-434a-bed8-c68da6761d3e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773fce8a-640b-4d6e-88ac-e71f5f708614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ba7688-351e-4d02-9702-821a577bba35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9d5444-2c1d-4b61-b90e-691ec401a151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "30c0d976-1b6c-4976-987c-e7b963003d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d35d4c6-9f59-4356-8b22-896582bf8a1a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c23f659-4852-4839-8e29-d5cb930678d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad2f23f8-83d7-4c30-8bce-310e583d63ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41777af1-32f7-4d41-90d9-fb4f70c88c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbe81be-2ebf-447e-b13d-4a066a7d1b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688e819e-8089-4423-9be9-ce459578b26c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d2667a-d219-458e-b49a-752b2d57ab4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83950840-1808-4551-8d8e-2e498052eb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23db8c2-0042-4b3d-8812-e806ec800c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3120e5d7-150c-4740-8e23-63ae1583fdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c044a36-b799-4f76-84c7-97b96ee81b3e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1e5fd5-a15f-475f-9089-2ca813fb2e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f9bceb-8b73-40d2-86b1-4c6d6233217b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e1b51d-3c82-4f34-9665-f9d57acc3454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb89eca-02c1-4ca7-9272-dbdf9f3fc433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d79895-acf3-401c-a22b-daf7b68d779f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35605fdc-8b60-496b-941b-02587346b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf23510c-7643-4630-ad14-a40b34b9c47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49edcdb-1e60-4805-b9f8-45731196fa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fad949b-4d39-4293-897d-64db496eceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17de898f-7021-4829-8259-f45e020b7751",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c38bc11-0ca0-40ce-82a7-d60b4972301c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bfd311-8a20-4dfe-b32e-9a302da8b764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e5ca03-64e7-471f-85a9-a4d7237626bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72e8f676-b108-4715-9dde-20c2995e0d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001920b8-f5a2-46a4-860c-6f776cedeeea",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875ba53b-1066-4de8-9a06-9858d3c94459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b5efaf-b796-49e4-8897-71207f965247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4952a2e3-8bcd-4a0f-94b4-df3e7c526588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "286de75e-351d-468b-810e-6b77d632147b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1ab274-d8e4-42b6-b03d-f74b67b0d593",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b1a630-fe87-427e-bd7d-64c946b9e002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7893fd05-0b44-420a-ac1d-abebc7205998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847e0bd0-f21a-4039-99a6-5e93d56b643b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc29d19-636b-4af0-8f7c-7296bc6a3754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f4656c-ad47-4569-8cef-27d25dd2fcbc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69156336-dc5e-443d-a6bd-32a8b7ba08e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a17cec0-bd4e-4e1a-a596-ce66f4a696f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7319346e-8458-48df-982a-7be2d242f09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e45801f-7b86-44ab-8265-a904c21a0583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54175d87-019a-48e2-9286-ec1e849bc7be",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6eb217-bb66-4d31-a201-78d6d746814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e6ccff-eb29-4216-b2f2-b5e0ab638bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f93d630-b023-4264-b7e6-2c83dfe5d1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea1d07a-7bfe-4f92-add8-835ec34d77bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb1031b-4dab-4d65-aa9a-37fcd8496e74",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72afb21-8a89-44a5-9b12-d8c569888812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d3c21d-2520-4076-b94b-53b8793382cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f208d3-8ab7-460f-bfe0-d993cd9670bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9475540c-6c26-4474-829e-e09a14749f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a582b0e1-613f-4caa-adc4-3d8cecbbe439",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a66f86d-b314-462e-ab0f-9e8e55dbda94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d115ad-0852-43c3-b9d4-2a228ed624ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883b1eb5-9ada-4f8e-8004-59f09cc25f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c69aa5e-0ca0-4c4c-90fd-b4f245f71bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b87309-3971-4c08-8e50-8cc358994c4e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67240e31-dda5-4ec2-b26a-8ded2601c435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a5bd79-5147-45e6-83f5-f6b548b2d02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b967dca-b421-426e-8932-29bafd90f102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a977980-c262-47e8-ba8a-6d44d4373948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c46c56-5488-4f77-9a71-4e95f53f17b5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef904011-3a38-4406-84b6-4e42379accf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015342f1-b99a-4546-8a4e-ca16a6482b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d198d29d-aa78-438c-8e03-f2dceb06d72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "877d56be-0d00-4c43-9439-c8017ed05fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a8d85d-1c8f-4ea9-902d-183811874849",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0df712-6c94-4999-88a0-9a8e976084d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe10661-f92f-44e9-a229-462075ce17d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196bfe6a-33d0-4142-ac68-747c1914c449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcee0bf1-7e4c-45a3-a7e9-457818cc05bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e22f8c-37a3-4109-be3e-c0ddca887850",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88db271-57da-444d-bd2d-d48164ae636f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8124d35-4326-4810-86a2-f7d55f435846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1c0ad6-e24f-47ce-a88f-4db57ff32fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3db4d7bb-2065-41e6-b9af-5779408e2605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e0638d-2e32-43df-920a-05d46a11976e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2d1922-e27b-4c95-91e5-197e1ca4ce12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b0aadd-b921-4102-8e7f-822b46f371a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9501209-8ab1-4c51-a202-e63be2cbd280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c83ae5-27ed-4f91-9c14-9311b88715d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3789b5bb-6ec2-4311-927a-89a12f21e045",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0483ee7e-a9ef-4540-ab48-34feaec64cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2591eadd-8d01-4f9c-8db4-369fb4d8a441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d199bc4-c976-411b-86a9-1d6c0a0c8e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd79e06-d7ab-4da4-b06c-665831f190e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb7c179-aca3-42de-a196-c701ef2e8942",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba2fda7-eafa-4d51-97b6-d25c5cf8ee30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc62e6d-f5ea-4127-a553-41ff792b248b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393d024f-00cd-483e-b254-089ae66cf416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4f150f-40e7-47f8-b63b-7fa2a67c41af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d837210-164e-4bee-92ed-d7d32922eb09",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f22179-a414-48dd-9507-c6b64c73a8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326c792c-f500-4231-b16f-a09b9f61e04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82485d54-360f-4086-9082-4627675a0221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8775f0de-5e82-40d5-93b1-a5b47020bef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020e5280-89dc-45dc-8357-b78b3e6a3236",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d6b8ea-4967-4041-8780-8a2a45b6c151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea7fb54-a185-4ec2-a48b-5b229d5602f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a5ea07-0663-4317-9052-70847a42ea4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b75e6c-4f44-45eb-bf59-e2092441dd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c43719e-a9db-4e43-9f81-fe32797ec9a3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bead94f2-5fdd-42b6-9be8-0aa0c431bc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed290a6a-5217-476a-a1d6-cb6cd61183cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbac3d1-bdff-44bd-8b54-f3dfdf3f26a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f3029b25-4de5-4eb7-a10e-d890146fb863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f254156-ef2e-44ff-afdf-c83b4efef066",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fa7222-a892-473d-b57f-edaff8e4a3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff1a323-25b4-43c7-a431-4e1e3aece877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddee2d9e-ecc6-40b5-9341-80b179cc9568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba4db5a-d385-453d-a561-4fde915a2d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2ff31c-337f-4bf3-90a7-eb3ab1dfabbe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360e3f0c-b6ab-4b3d-81ce-8cb3166bb0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0448eba-59ca-480e-8651-0bcec2beca41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f02cb1a-6d20-4b45-ba67-dc471f862dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ffc711-a6d3-4475-a638-56fdf14a61a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9004dc3-3f66-48a1-81b7-f9932e697361",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f035b29c-b97b-452c-9772-f3d5b95e170b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2eda24-3e77-40fb-9564-e29ea17039ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656adc93-635c-44bb-829b-721eb0051205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8e3232-22be-4c07-9d13-87b74773cec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174c9975-3275-4776-ac35-0a7f3a765c59",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcc3db8-6982-4096-978b-a9566c0f559a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f78fd35-1628-497d-9c9f-b08329cc2075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eefb5d3-da84-4cc3-b5b7-e8d38a93fa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7fde7d-9103-4bf4-84c4-c1ed48f6f813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc473619-d009-404a-95bf-f79c751edf02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cced5e6b-8fec-4684-b161-45d458ea0f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93ef572-e481-46a2-850b-0f258fb59c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863c49ab-a9f3-4187-ae5a-317dbd93f817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca80dd1-1dac-45f9-b528-9022291c31c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29187a8c-3284-4ae9-b233-61c296f2c29f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4183dcf8-642a-4120-8419-6f72694407d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76157f0d-27c6-448f-bcb3-40cdd01e7821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25d8114-ebdb-498b-a8ac-ed459cbba9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c48ca94-96e3-4631-b174-c8ec34aa0193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e12d4b2-23ad-4de6-ae04-c7f23d165af7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56575f9b-bcb4-4c0b-b5c7-34755b2ca39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8491a4-6408-4248-a972-a6091285c6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5594d4-5c9e-4cf7-a435-4649a65f28c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f32e7988-b41c-41d4-83e4-2279c0f8f058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f70390a-71cb-40b5-83b5-27e42bed8cb8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb471bf1-288b-4d51-a3dc-eb256a1e8aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05700440-40bb-4e60-a402-67a3fbcaefb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37147b36-b206-438f-9b1a-e7f38e8716c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b59d653-34c1-4caa-b1a4-e77d94700b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d129b8-bbbc-4496-825c-8f4434d02505",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1212124d-b24b-4dd2-ae19-4c43b1ae6f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a687c6-0941-4c35-97d4-4a64de1ec40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31400dba-cbf9-4561-9266-9566d171a7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97dbf229-695f-4937-85ff-d0c56df06132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d851a13-0ad8-456e-8ecf-7148e82fd555",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422f1e85-5379-42d1-a3ae-7597e88a221b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554fd28a-210c-4875-8e1b-c0b63a67f8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fbcbb0-da64-43d1-8412-c83adedf9106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59b7726-33f5-4870-a1d5-914e017eb6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213c785b-0900-428b-b4b5-8729b0fbefdf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d408795-9a4f-42a9-9c31-7610c2eea8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26d0dd6-c233-4afa-b1f3-0e2eb0d6cd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca3c25d-354e-4660-a130-84b32a0b991a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa62e69-d222-438c-9a6e-f8a41ec488bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0419d3-f195-48f2-80ac-cd2470089fc5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abb5067-765e-48e8-be1e-c2c700c8823d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ce5c49-462e-47e9-b155-84d78c9e12c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14180a9a-51cd-481d-a602-fc68abd2e86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0121a4-1ab1-494c-a386-df35c02da461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93875d9-be95-416d-ae2a-14cf4fe580c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ffeef1-fb23-408d-9a52-4fccf4f26d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af76ee8a-318c-4302-88ff-b8298ec33853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7738fe-5c1b-44f5-95d6-2ad19c37f50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dbf017-786e-4965-b252-844441f05344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c924cd-eb8e-4593-bdd7-431661a6a736",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4654a599-f880-4fa2-92c6-b49fbfbf5f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d49ae2-8f83-4ada-8f0d-08eca4d7fb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee938f1-150e-4b72-9a3a-5aee1c8a5c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d8806b-734f-4b64-b5e0-550235205213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4ac5d4-d1f0-455d-9b8e-78fb3c6e182a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df4cfa7-3989-4add-bf50-1bd1f0f493e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f415b0d2-511f-4353-bb4c-a9bca619ade8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daec394e-f1e4-4733-b0ff-ca2262b1f54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af00c9c-a403-489b-9536-bca8842f84d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d183cd89-1fd3-4cda-a0b6-950ff9fccc63",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eac678-c034-4eaf-82ca-9b4ad045bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65a3b7d-8bc6-40ac-ace2-41ebce10ef43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b758b44-d266-48c6-96f3-592b8528b570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc41f08-ca4d-4009-ac50-4c59e60a4d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7a89bb-4e48-41bd-bb10-5f0491372155",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9558b800-7eb5-4c2e-9c2f-4bf11ff07bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713c3c69-7ce6-486e-9b8d-7ea73e1519cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d1e7bc-690e-428f-8af8-d4275d38aef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7f8a5e-45e4-432b-a223-d18f0aeb1eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404d3b73-adf5-4fb2-9f6d-1c41a412c5c5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5feecea-8a43-4258-b79a-c66d73298a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304af9d0-b7da-4b8c-8cf1-3a965ddeae0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0180dfb8-c863-400e-bc1a-abdd387e1e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "107863cf-86d4-4d47-bfd8-25f3d8978151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04904af-8c08-4042-af0b-5e090f5510a7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075a62f9-f236-496b-aa2f-28a023bfc112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5de3eb0-e548-4b20-ae9a-00e5d1b49245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29299e82-1d46-4f12-8bb7-442f9301e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0d1d66-f01b-48ab-8307-aabb8eb8d40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaa0995-1085-44f4-83ea-a10f698eb09a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0fd43f-e5a1-4088-9236-b6be8858ab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f213a3d-605f-47e2-b53d-c86c2d226e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeab1813-a28e-4493-a42f-44a99a4362b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea156bad-4f88-4366-9cfe-c8ea4f7a8503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac38fad-5560-48eb-8895-17dc2476b7c7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ff818c-39ca-4a81-8b0b-3cd09d334c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159ea96b-b5c5-425a-99b4-59692680d625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdfdd83-1563-4d12-951b-2c923237abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f11bb02-dd75-4dd6-95a6-ad04f29387b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1647b2-e83e-4445-812f-b2da0fe73580",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066774ad-d599-4377-b6c3-14a27f288def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4199d4d-154c-4386-b51a-921d7ce878b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10a484c-94da-4958-8de9-79241555478c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48455b23-9560-48c2-be2c-082997fec9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ad736d-0228-4d5a-b581-cbee9750ace9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612b0e4e-61de-400c-aa6e-e90cc7ede19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac22f07-48c2-4977-ae98-53607f8b5c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e00e238-2cb7-4f0b-9a70-e049cb2ac169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12673352-7724-4afa-b29a-6e4fa0a12477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c816dd55-3626-4ce8-bbe6-2b1bf6af19df",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d844cc77-fee0-4a58-85aa-166c442e577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1add9a95-97c8-49b6-ba47-f053dc7c894a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73032d7-e89a-4b9b-bbfa-83580ce5469d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6601d078-3ee5-4957-b8c5-787b293f8d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439960f1-21d7-48e1-abb8-5965be8eeee7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e138969-9e02-4d84-9251-b592684bf4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f9233b-2afe-406b-bf3b-daf38721c363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bb1526-31f7-42de-8abe-9b8262821a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1caad56-709c-41f1-bf6a-6572688773e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74bb6a5-58c5-4b3f-8331-3880d4cab7a8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0890793-d1a0-4ac6-8320-66e9eb213727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b0dcd3-8b60-4821-a627-f1ac6311dd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c964e0f3-55fc-4414-baf6-9d5d1fc51c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b44b1d0-ffef-4e88-92e9-4eee2aeeac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c414028a-70a0-4a4c-81ef-e2586105e67e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60050b80-d130-4de6-b2c7-9a855701674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fd5f10-05db-4914-8a01-070dd6da1525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfce49b1-31d4-4b35-9c8d-0ba4f1130b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29287942-bfd1-45cd-a31f-cebf3356cbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b1ca26-ded6-46e7-bf0f-23c4346be2dc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2173a490-56bc-4d8a-a43c-584e1d6483a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac50c723-25a8-4d2a-a12a-a9224dc5fd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f490ad-246c-45fc-ab0a-159896fee54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "def057dc-caf1-412b-99fb-4ac52341348d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408c5d32-b3f4-4f16-ada3-f8b1026b2a64",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c880041-3f4c-44fa-9f36-469abc1a42cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf5f0db-c39a-4a79-a53b-308bd2965ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c040f99-006d-44a9-b158-5f395a56e652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7dc6fe-4f2f-4909-84fa-c2df8061a08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be5e7d7-b906-4fc6-adab-6f29eb236060",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97322808-1d20-41d5-9efe-27dd6c985fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b941cf0-191b-4261-84d6-22a55d51560c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6975ca5-b1c0-47b1-a941-14e7d73c3d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "134f8d16-799b-4418-aca2-e169b39578ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddec822-3201-4cad-88ab-142b0e0fd5eb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abaf642-28cf-445d-8d26-4b84cb556b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b63ba33-e25a-487e-ad96-e40ce4aead6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06330c7f-53e8-4fbb-a0e5-9bd1c4b82dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "69d0d8d8-26a5-4b4f-ad77-b18d25b8f08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5641d6b-b00c-4e14-95af-1dc1876e6771",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602294c7-0af3-4938-8b03-f01f242ef3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a493da-ab7a-4b17-bda1-2482c71a53d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56663260-e5e5-452f-8ca9-78e27c811ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df317d8e-58ca-4124-8196-7862c1a563a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea7fbcb-730b-4b23-8745-e5c191e8d3c1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b56acc4-145f-46c7-86c5-1831d61f23d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af47d5f-434e-4649-9459-e1c225221ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254dfadd-dc6a-4277-b9eb-b443340074be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e589aa-2379-4a78-8765-90cbfe9e4f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e0e1e6-806c-48ff-9dec-20049d8764c0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f923d6af-c0c0-4e68-95fc-d22383f56191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf602e4-29ca-43ca-9015-e7472303c17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c70cc6-180f-4528-8c4c-d756f770d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48b8b0a6-b76b-42d6-b1f6-9f771be6e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ed6639-a5db-47ef-8325-793be009f81d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee41c7f0-6b1e-4064-909e-cea51e91a764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279eacbf-dfd4-402b-a9b1-fd891b8013c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4087bae-bb57-42d4-b39c-07925237205d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "23a5c808-c962-424f-b6fb-5c990f123357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a383239-8e08-464a-af5e-b442236a53fd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e49054-fc7e-44f7-be66-94d3d55c36e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "01a57ecc-7e20-4fd9-bd83-3753f95a5139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aefb464-002d-4e24-96a6-efa5da963c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "311b09dd-8bf1-42ef-894a-b8f40f511622"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "131aaae0-5ccf-46cd-a66c-7e968ecd62ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b478983a-ccd9-4e15-84b2-57e20b720e15",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2b6558-094e-4227-9e7f-3c886a650cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d342cd16-0481-4183-86c0-ca35147e09d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e01f2a-15c4-4868-a606-62e84879e237",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6856a1f-de10-4126-9ddc-285c193ff70e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "beb5602e-5285-46f5-a80e-e26fc2f876da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f7f44b5-aa0b-49ce-9d85-d87e61a9455a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "048bc4f3-2804-4208-bf8d-85d6939b295c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe52ca1f-f8dd-4828-92a4-91af8dca1a1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35187dd0-a70f-456a-afe7-bdff3780e8e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb1f043b-d574-4825-8020-5ab4a43f5976"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad7a0d27-2cfa-4236-9f27-63b413f32ed2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef9ae34e-f03e-437e-a1f4-0b012955e9e6"
                }
              }
            ]
          },
          {
            "id": "06d451ce-d1a6-45a1-bd78-6834ae4a0057",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b15c6b9d-5ad6-42fc-8f5e-010f17fab523",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d76e1e2a-5254-4341-9c50-25e63ec454b7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f96120-ebce-4800-b71c-37f298e5f204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b1b64216-1535-4f3c-ab84-257470d21158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafe059b-e037-4b4b-b7ee-90ade0af6f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50498b9e-c8cb-4eb7-a651-bb04f6c5552d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "48248958-814b-4a26-ba5a-486c5d2da46e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76200357-5e49-43b2-82bf-562e988bae81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32220004-170c-4437-a086-7c321fff560a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d68a481c-1251-48d4-86fe-98156e286ef6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d0fff64-4612-49aa-af18-9f2aea91e91d"
                    }
                  }
                ]
              },
              {
                "id": "50c0a3d6-5089-4e34-a39f-09d2a660c0f7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab0f946e-9971-49ab-9638-ef7f4928b769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5ff53b3-0e7a-49bc-95ba-3079df3dbabe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d40cf93e-ef9a-4081-81ee-0c2a0dc788dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3fea143d-ebcc-4fab-9943-611e6fbfacce"
                    }
                  }
                ]
              },
              {
                "id": "0ca090b4-4dc6-4724-bd1b-86ebd09e68ce",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a9b0aef-74fb-449c-82ec-e6f96d6029c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9256ef2-1821-4efa-ba4d-b741f4174b98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0dbb8c2-cf3c-4059-91a9-68b56894ddeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "591e028c-20e0-4ba0-bcc8-3918c9fb8bc6"
                    }
                  }
                ]
              },
              {
                "id": "65496c9c-b99b-4f10-89eb-8ff498bd70d3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b455538-0b11-40b3-b780-b85b51569981",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25c97e87-8a75-4cbd-8f0a-324fe1670d79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc5e6609-7c88-4f4d-b215-84e79b134f37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "59eb60ee-b221-4420-a242-e1d7faf11fe3"
                    }
                  }
                ]
              },
              {
                "id": "f2e90c14-88b0-4b50-a4f2-1d35be371ef3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b062e89-6427-4fd2-99bd-11183d5bf928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e19ba1b-9dc6-49d6-9e16-c324e7cf209f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4658992a-d643-48aa-adea-5040cb3ee3ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c3852d86-594f-4ffd-a0c7-48b32987daf6"
                    }
                  }
                ]
              },
              {
                "id": "4c828d59-a7b6-482b-a1d8-1bf0d10ab675",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "772357ac-34a7-4fef-9464-0749c2d1c091",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fc39419-c88e-4b83-93e5-124d0cb62c45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e156b70-5710-4579-928b-6d1b62a2d4bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9aca14b1-5c30-452d-89ae-ac1c56605e72"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f2d5611-b06f-4e8e-8590-9f1f2c468762",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d82ba94-04e1-473c-a8cc-30d9bb26bd95"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14e14621-2357-4d6c-b210-9d18037335f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ab43889-9c10-4eb2-b912-a870e5cca516"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adea7f1c-b447-4633-80b9-3b2b4c74faa1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5c12a22b-d29e-4ac5-825b-7f1e30c3c87f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1fa40c9-1a3e-4ad4-8b43-719153930094",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71e49125-e6f7-4416-8469-2b46cf207dfb"
            }
          }
        ]
      },
      {
        "id": "167f0c32-4926-48e1-a655-713df44efa60",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "66727c10-4975-4b48-b5d8-2efff4803457",
            "name": "Negative Testing",
            "item": [
              {
                "id": "699de2cc-cfbd-49de-ab5c-48bf9989ebb7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec14bea3-47a4-4320-9773-0dcf08ca1403",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dcc649-c882-4cae-a7b7-db9a7067d239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14960c5-4179-42e8-a148-5fa60ab3ab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48997356-fef7-42db-a78a-9b34d5212deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9626bf-ac45-4f71-9348-9bfbbd5fbb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a2e221-98d9-455b-9fd4-4c0fcb4c6019",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a340f3-9b81-4147-8d5d-d0a5dbd13dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3531904e-75cb-4972-afd3-ec0f90bb5975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99266c3-7ad2-4644-a25c-441bf975ff64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54478393-8a48-4945-8e07-22dde8381755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f1ad70-f3d1-42bb-ab52-421b1ffedadb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d6e50b-ab49-4a0a-ae85-131f5b548d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90a0abb-79e1-45b0-aa34-857e197e2495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d3663b-59c5-4979-9de4-f096a79c86f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b693953-8633-4e05-8f55-0dfadfc2879e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127b7655-531f-4aa6-a91d-897efcc7d24e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807f8000-2830-4444-8401-a109f2432481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a265fa32-ba83-4cd6-984e-e693d0f62150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c587876-2c9c-4620-b5c0-ab9fbae5db63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0f980d-ad8c-4e07-b871-88bd739cc67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd6dfc2-a92e-4d46-9326-33094b5e3158",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5cdb67-5fc1-4ae0-af6b-d0afd5ae7027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205f106f-68a6-4560-87c3-4cb016fac4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f7cc1f-4ab0-4a93-b63a-9375d9f57ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab15f22-fa7d-4e57-97f0-5852f4aa1870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6205f3e-8585-4891-ad08-048a7a252db3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69d0889-7762-462e-a3b1-1031cb97698c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a86754-a5bb-4346-9fd9-ad699cd48d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93a5af6-ace4-4234-8dde-4af00ddd13b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92da69f5-c494-4063-b3ec-a97139f45ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eed67a4-9e8f-4b37-a33d-0d886975a0ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b86d848-7d82-431f-95a6-c9066275f5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f7538b-f81f-41dc-b0a0-c8d7cca4ccb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37294a4f-73e7-4f9c-876f-c08ff8fbd1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca7bbdb-261d-4e88-98c7-8e0b65d080bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2472b1b-9a9b-456e-97e4-d466155bb0c9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b2e619-1a32-449b-abda-ee1f43271246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170d0c53-8a57-4f00-97d9-a668f9311215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742c4b27-6803-45db-9320-79ffc0cb16d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6a4025-e6f1-476c-8985-5da9449d16fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5579df2d-919f-4dd7-9ac3-dba06c49fb43",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed133c6-416c-4752-bec2-e1f6c397c2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dec2a45-0487-4838-b1a3-ea84e2a4fa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3c11ab-c1f0-4e01-af03-ecfd429d343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c842a2-28fd-4e88-bec1-e68b8243e1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7adf907-f3c5-4e76-abd3-74c6a4e28e38",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f7ab5a-27c9-4b07-9cec-c7de19db92b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41e2d50-b13b-4f63-bc92-24055a6ba316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920fb8cb-adae-4f28-803f-af1004d0290c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8277a86b-1b4f-4d97-8158-586580c554cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cb171f-1c52-45ad-b98f-4b36b9c92ec5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05398da-f89b-4846-bff7-3c858f76a39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c692680-90d0-4715-9f79-c8a250f00585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66baaa25-173e-4811-a145-0a7e130834bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "33d6424f-6020-4e03-8b14-d1d18f787bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ad4506-279c-4fe3-8faf-cbd74ffee46f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca85243a-6cb6-4671-805b-93df70f38fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451539f7-4423-42c3-8b03-0d3ec73d5bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c407dd-1816-40d4-b1af-24910ccf5a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3fbc11-80c0-456f-89cf-2d77c705d494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44681b82-ddaf-4f82-84ae-722a247a6a5c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7b148e-3330-43e2-9c77-7c5f07f3abe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe927714-7a84-4fca-a52a-bcb3cc66f878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fcc2c3-5bd8-44a5-acad-3fdb5eefc3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a58413-3a35-4e88-b65d-bc9b224fd7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cfa77d-e388-4b1b-b844-e6a233deeebf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ffcc51-079e-4c2e-bbec-3dc91e615847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23827f3f-b516-43d7-9dbe-5bab3f058028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52a2108-ed78-4252-87eb-18533b965c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7d93c0-1aed-4662-81ca-62b2ee1b42e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48557415-9e78-48f5-92b7-6c603c659810",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaaf330-3244-4ffc-bdef-5ce19a46a55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b70e337-f6d4-4ed2-98a8-7f1ee77f2032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba00a65-7dd4-4e37-b066-39acbcd5657d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ae346c-57ec-409c-8430-4bb3d646fa73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b90d64f-0392-4ba1-8463-9b05c6776da9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b738569a-f3b9-4f5f-9dfe-56c28bec542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2e8c5a-e877-4f80-97f8-2b76f1cf9d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffae8c42-efc4-44b3-a989-c25b76db8f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bcca7f0-6f1d-487d-a9b9-336bd7b8a9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f560c51-9399-40e8-b739-00e743a0fd2a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfef10d-a21f-4912-bdf6-c69dfab8a87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d06cba9-9243-45f0-914c-d84a177f4e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15be96f2-9f8a-4249-8eda-c9f457a459e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "299b91f3-a608-4046-bb18-e2e26a86eb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db4c97b-ff41-42f9-8527-3657f2d7bd98",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce65813a-44bf-4a84-9572-63e4f1904226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f555af-49a8-43e7-af49-abbd63f69250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8935c0d3-626b-4b0f-836a-56d8f5cb1d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ba7619-3a3d-4f64-b8ad-614debb55031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022af50f-9751-488a-9c5a-19048a721619",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453312cf-99d7-4162-81d2-c338fc3bb475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74994d14-b150-4159-85f4-812572f3d96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f611d727-ed91-4b88-ba08-0226717fd229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6e9cd9-15a0-4f9d-850c-fc98d38530d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f707f7b4-acc9-47db-b1db-d68039f9ba46",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72b9217-11d0-49ea-bb56-22ce7c98d531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda0b371-9843-4360-873e-d08024ad3544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ac7a79-bed1-4cd9-a0dc-b06614fc6aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa4a586-8321-4b31-b5c1-5da7a2bdb1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3840aa14-d497-4b84-837b-6127db4770b7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb32bf1-b5f1-4302-ab1d-f03473485e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6bb5d1-98e2-4e9b-a38f-bec9cac3685a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415420a1-7044-4d36-892d-ebba7c6392e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a586809-01d6-4faa-9ba6-372a45fc92df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda16da4-830a-4968-80a7-57ec7e1be40a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8856a3f2-c45f-4603-b77b-713326d99034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea45cd6-0d7e-4690-b806-f7b0b90cd538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2819ad62-e1bf-40bb-95b5-a7062974b29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7457c6-1765-4cfb-addf-887d62a7287f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5e4d8b-4933-4c97-b88c-c9a60f78fabf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aad323-d145-450b-8698-0f09fca42a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28fe870-39c5-4fc7-bb2b-572ec71973ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bdf7f0-c642-4440-adc2-7d2d709ab33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26717513-e16a-41e0-93ea-ee8e1c137b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c676b3f-763c-4f39-a54d-96a16172823d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c969a67-9d52-4359-bc6e-cd206b3c400b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3f5a24-5133-4baf-b4bc-2b544a224e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a8973b-4217-4af9-97cc-d7f6584cf76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b00b29-4384-4197-b956-28c2265e3cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9944652c-556c-46e5-aa8c-592c14e1cf03",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1308f32-3c4e-4f25-818d-c132b60746a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d16139-529d-4eec-aaa7-b4f945f99a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5c1cac-4743-4876-b83d-066bfe9ec614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11e1435d-c447-4c00-a388-a64f54bf585b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d98ba9f-270b-4de3-b8e4-c89b6979b302",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33127818-b2e9-4f08-91d4-8ced78116625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964583f2-27ae-4832-8ea1-9f673d7de25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3990d-60ec-4613-ab43-3c4904f9c292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b66783-ffa1-4fdb-a444-484947d1f7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86537505-74cb-44b3-8c80-3a0cc194f981",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d497a8d5-20a5-4f54-875e-6ec8f202911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98589652-a6da-4dc6-a146-9618792ad0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a60a45-5103-4d7b-ae4c-76c6ede254e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeefa97-2ff8-442f-8259-3c012cb73211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5509831-92db-4345-9e5f-040bbca1b556",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d7f4c9-b9d6-4075-a639-1dba16d676e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e371c012-a089-4e55-937b-4bb8e3f8462c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ba9d55-67f1-4588-b4e4-db177172c1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f135e06-92bd-4ce3-ae11-8329226576b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8124f49b-238b-4750-a490-7eb09dcd255b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa72ecc-13cc-4971-a161-39486d002f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9c1c55-57d1-4000-bc04-652c034ed7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101b2493-769c-4e4b-9dd8-e7849c3ca033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1466d60-e826-4801-8359-eb889f239656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa073f7-79a0-4d8b-b123-7a1a7530c32a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb791b4-a4fd-436f-bcfc-a7cbfa6f7443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca35ef6-ce03-4d82-a263-73f650f402d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f10638-a097-4764-8b35-03f68c5868f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9576addf-8cb4-4282-b46f-c0422f7bd9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29abdb85-fb55-4e12-96bc-26a906cc7067",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe02acdf-765b-4da0-8aef-639de76f874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73554bb-901d-428d-9127-c12b5bde7701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6816b7b-100c-402f-a068-821843107f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a2f78f-e436-431c-a4b5-c495b0e150e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dadef4c-0b00-471a-930c-7cd8282a3d85",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d76cc0e-c100-4984-a87d-2396c7b3e3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5bf3f3-28ad-4dc2-b1f4-142fd944c79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a9dd45-8083-426b-aefa-58101f16d925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c88768-8dc0-4a7d-aa29-0456b5e3e5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fe319f-77d7-4b6e-bb59-e5f441ce8291",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f039c5b1-338a-433a-8561-5169cc1019fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baea5ab-fc50-4f58-88eb-d25748fdb8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89984cf8-682a-4e4b-8127-353c86b3aa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fa5675-e872-4f06-9431-1caabf83c6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d07e9d-7e25-4922-b6e2-3746b50ec88f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683ebe6b-a9b1-4c25-8d3e-47f23c71d30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facdc721-3f1c-4d5e-8678-d83ff46789eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38674e4a-2f7b-4e33-bd6a-7d5970edd046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac8dd04-8841-4562-be0a-7f8526c4f23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a940b465-810d-4ac2-9a26-9e8893e41196",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766f8654-4ba2-404e-b274-8476817e34e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e966491-b8c0-4602-9461-b5c914b7fd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8cd4aa-f0e9-47e9-84df-bb3f4472e733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feb6f6a3-c151-44e5-9cef-fac6414c5f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4d4312-2c07-4fb4-8ec2-c45d4ee14e72",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96cc25c-da9c-4c21-9fa9-578886b6f01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9505172-5adc-4357-a2a2-94addbeecff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f1b8bc-7654-4aa3-b28d-793023dedf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e9654c-ec2a-41f8-b14c-d3d537dc605b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577c1b19-e439-47d6-bbb7-302e465a20d8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67379796-3f07-43e7-b635-9b06c0c1c7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b122dc-aea5-405e-9179-61ea6b64be78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753f6b42-482d-4339-a93d-4e183ba06dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "940b9cc9-9644-4216-bff6-1aabd5ee9487"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a66461b-8ef2-4e57-af47-b48dc7842c84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "408bed1f-5f9d-431b-9c48-373294fc7677",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f286962-c68a-4161-b99e-67f5c7458b59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "01d08828-4e7c-4d66-b9d1-aff77e20b9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2421ba3a-c441-4a3b-a6ac-b8ae4ff2de70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5b4a4cf-7655-49ac-896d-b60141c0432e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83d94f55-ad62-43e7-83f2-017589c19330",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16f5d90b-0681-418c-89fe-472ed0ed2ddd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68481cc8-d2fe-436f-93c7-cca982ca2246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c026be37-2976-493f-851a-e0918a669acb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c42d7ec-7fdb-4b63-9927-d22857862ca0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a77b8036-2626-4a21-bbf7-5ace096a6cf7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1fb6917-cea2-425e-8ec2-1eac5e8b340d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8583b24-0114-4ee8-8ad7-f694a1da8f07"
            }
          }
        ]
      },
      {
        "id": "6ccea570-0059-49da-9566-8ad698356f8b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4106897a-dbec-4656-82dc-7d04790ebf5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9071cf5-7629-4f36-96a5-582a8d89eaca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ffeeebad-a90e-453a-b3f8-224685525d73",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f01b98-687a-4193-a16c-e28ef2b50509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af5a6c1-d71a-4df9-9bcd-b3052e0faf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fe0513-16ee-49be-bcd1-09d41f647db5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501d6d32-1cad-43c1-a5d4-c623981b27c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d6bca8-9026-4568-97fa-20db263baa6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3d5781-e7a8-4599-8ac8-9fb760838d52",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a40c9c-4f4d-408f-bd45-852429b6ed1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638b1403-49b5-488b-b6cb-087ba87b3c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53df9022-1c81-486d-955d-299522bba809",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40453ffa-33d6-46af-8cff-c24eff595608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20414436-5ec7-41b6-8ddd-a15da5d87b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ef3d18-4597-4ea1-b0ed-c191df51cafe",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bf5977-628c-4d71-b00d-e9dcdf280d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f14758-96f8-415f-ac51-e805da6a3903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89097fa2-0ae8-4b2e-a85a-89ce8c78ed21",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707bea27-9791-4199-8a2d-a38825d9ca0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c80016-19d9-4f10-aaaa-ce8ea83fcfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c117b91-2aa8-430e-b9f2-4396959afffc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4292fe51-43ce-4665-b1af-faaa61241548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8abeb6b-18bf-4e74-9f2f-4bf64b222dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c3c421-eca6-48a8-9f33-f0c5f5335998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e991eb2a-c9e4-45e7-baf4-59717b9c3cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82aa048c-660d-49d2-bf5f-68ae3962b51b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ec6e3d-a399-4047-a50a-440e6c234931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8a1e8b0-99e8-4b83-a5bc-e514530e7c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f667f20b-8f85-4692-a602-79a34506cbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad2ec4f-08d9-44fa-8e28-f5016671f952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e110cd3-4244-487b-977d-861def536d55",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2bfe99-6275-486c-ac98-81c9deac4728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea975b1-db2b-4863-b35f-39e12e9d5aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc41670-95d3-4af6-a858-246168e62da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25786aba-4427-4e75-9746-ceb22539ac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54455d38-13b6-49ba-aa1f-0b5dec42d1a9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52378cd-cb08-460c-ad00-1aa57385e3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d106f3a5-2624-486a-b9c6-7479f2ee792e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271bad77-87ec-47d5-aded-a69f99507864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100a7acc-6f71-4c51-b32b-097d0efbf5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feab8d60-52f2-48f5-94cd-3a7060831826",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e7d6d9-fad9-4987-82c1-dbc106983291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193b8c90-422a-4f11-98d5-1f462be779a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3e6e3d-f128-4467-8af6-504dd65a2e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef7968c-3587-45e5-907a-44a45151481c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71265db-3548-495c-9de3-9c0d2cb33b42",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92894caf-941a-4f7d-ad2b-0e35e1900a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddec80b-cd36-4ad3-8855-0a05b8911ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b54c7d-1a1a-4dac-8a3a-0ad56aee5898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7117fa2-82bd-43c4-937d-46998a417ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dad756b-ee95-4c18-b0bf-32569d1e7642",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b0cad5-f553-4ef9-a9a7-3810c1f14e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5732304f-d76f-4416-835c-7eb348bee4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c17432-b69a-46fa-9e82-136c5b31c4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713ff43d-fd53-4419-99e9-7d61a3f954f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6771a7-df11-46dc-aed4-dcef0673d475",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0362f28-3d7c-4107-9ab2-47afb5a5a855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31260cfc-056e-44ef-b088-f5294cbadc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab34711-52e7-4311-8e2d-198b80adbdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ed529b-1688-4ea4-a93f-15b4b9ef2031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ebd479-7c36-4163-b650-bbf367981686",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e4b6a-184e-47e8-869a-bec331075e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062a3c1d-9787-4dc8-9a4d-4113423529be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c88c4b-9070-4d03-a145-2844d9097976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0163ae-5a09-459c-b229-2314463f4cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40468959-0ceb-452e-9141-099fc975c95c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c637b6-4047-4f7e-9b54-784795974ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49027c80-6ece-4085-87a4-0297c424fbc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f6ef17-cf48-44e0-9e14-c4ed12d09f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98aa368-5598-4608-920c-90d5a7569e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b7f1d4-8313-4880-b329-ed51c319591a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3fbc7a-d0d4-413f-b6d7-d8b8d421f8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09336e50-dd20-49b8-afae-7bd010730eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f93f9a5-e6de-41b5-af0b-6b22a24cfcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72b9e7d-9340-4856-b5e8-4eb9a6245c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdf79fd-0422-4c48-95cb-a0bc2119fe26",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb70ab2-fc9c-4b00-9010-667b75fd9e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774de062-eb78-4054-b093-954b79057232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7c8668-e111-48ad-b717-597ff11885b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06ae602-bf32-49a3-a15e-d76f78237366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4d749f-c796-434d-ba49-f07abc1ed309",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e2e3ea-6942-42d9-86cc-a441c361f68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a1fc1e-b009-4e7f-8be2-51d572809e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eebafad-e761-4b2d-a031-330b7e5ec230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2ac52e-0fdb-4cce-b379-0060d350598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9bd318-e5de-445a-a985-e5a246bf7716",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75698ab7-fa7b-4264-8129-33915fb0f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d5fd0e-eb07-4d30-bbb1-2330686e0a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccc1320-a412-4b94-9f5e-2d834685b2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dfba7e-78a3-47ac-8f60-c40bfb3aa434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b506b906-8abe-4c14-998b-6c96ba3c1c9d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf209a4-297a-4f54-bdd2-05d0528b54f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab548b2f-aa92-46fd-8f22-1b63c1fb849e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad1d26-672f-448b-88b1-3e2628901cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e56796-9fce-4e3e-8478-38c27f6288dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a243cc-3b95-4eb8-9b66-a00604b45442",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6874f094-f7be-4f08-b26c-2fa8f1c53df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181680a8-5a21-4cba-a247-f0b4adf53888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030ee26d-bb90-450a-8290-540b0f1fa97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e495cb-a048-407a-84d8-e8c796562b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06fbb7a-0e1d-41a6-9c1b-1913001797d2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb792091-606d-4cd1-abc5-63dd9301ce61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5113967-9a6d-42fd-b9f9-ab9ed256a397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a97001-8fa7-4336-91cc-f974039899aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb99d7c-ab37-4b9c-a5ad-e16109a330ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81349d12-ed3b-4936-b41f-5591c4260e52",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae1160b-b740-4097-b8e1-f977b88d81c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "146f046e-f92c-441f-8708-c6674fedf1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e972c77-6362-471c-a109-af9813bf2b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9301fae2-90d0-4a58-93bb-9ec78d785cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea01e3b-d409-45e7-bdb6-a5344d0ee83c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f1d50b-9818-469c-ab69-a71c446fe6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5581e787-e616-4f7a-a7fb-10c9ee734fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e5ca96-bb6a-4ce9-96c6-793592fe92c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cd3657-0c02-4093-a64e-c9202a4795d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d51cbc5-cd71-4373-8d61-d54feba9476e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39442f2-8d0f-449d-85bf-d07a032f26ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "561c3670-faa0-4fdf-b0d0-eea0453e804b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4ad155-34e0-4999-bf11-ba2554d42341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3a7718-a7d8-4617-8c59-cd74f79b44a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2bfdd1-bb64-4bc8-b16a-f6da2934a1db",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c777661-5b62-4531-adb0-30a63d79df64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f952144-b09c-40da-9741-a3efbd33173e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b170b5-2854-40bb-962a-8a14f9b1014a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61de6c70-2514-40da-99cf-c3d48cc41ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d77939c-9d10-449e-abca-59b451709810",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62dc58b-01ca-48eb-b2ff-ccb3e8d9f897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5386a8bc-ed7e-4972-846a-a23a62cfff21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bb2928-3901-481c-9314-63b4a4cc3372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058e013d-2c5f-4f16-9dd7-fcc8bd7fea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56131a15-bf22-4293-be3a-8c4417434563",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53fec33-d9a2-4232-830d-cce38e538968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93519121-d8c6-42a8-b5f7-7c08aa252a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7f74bc-535b-4842-aa1d-f2f3d666abec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536f5dbc-a098-4a06-b0e8-72469c0b5d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db741ab0-cd33-4a87-848f-df0f6e8f8117",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c48a9a2-328a-4aa9-a855-42e6b6e05556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a448e1-2b1b-4d5e-9ea1-fa5fd7c8f2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95b886f-39dd-4275-bd7f-d83452a3eb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02cb0f0-bff2-4c5e-9474-1a860ecba2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc013d24-f42c-4df1-9986-5c4708e02e9b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058f91d8-0ac2-48c6-af8d-e6ef04faac3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b520fd03-a0cb-4f85-8abc-d462979cb61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e91e2c-f2ba-4e28-85a0-ab3710578c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c77abc-7498-4e90-9b5c-822281b8dbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a84e35-efa8-4d0d-b3ec-9ad0734d3923",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a360b79a-e78a-459f-9cc5-13abe992ae32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c57b4e-2232-400b-873f-606707641c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf7c53d-5f1f-4f02-ba0c-f5945eea88a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca7c48c-c3fd-4a35-9717-73a4b33280b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdfb39a-0271-4155-a222-45cac618daa8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2498c1ac-3332-4505-9b72-956587556aea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ce7ce9-9d19-412b-8a3a-382d3dedb582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dd2a86-fd96-4bfb-b1f5-040a085fa16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34aea526-86eb-4c34-a982-737bb70bdb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab8502a-106a-42cf-8a6b-70856b4cb8af",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2257acb7-5ee8-40ac-b540-e0e45439a9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617f3d6f-1956-4d5a-870d-79ee9895b7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd263952-ea27-4ebf-9b14-6921db188f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21526f9f-2eaa-4221-a85d-d9b033ad64cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb2aaff-caba-439f-9564-18fe3d45edd4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90603298-2c69-4feb-aec0-41e23473f5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a94529a-4884-4650-9982-68f6ee6298b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3745da9-3c20-4749-8c55-3ec18a7e5ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a86dfd-7d37-4a0a-b146-7c7b9cf5b7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d402547-1680-4366-8558-053b75d2273c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f09f0d-9e28-42da-8080-ba1ada3e930f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc90885-9695-457d-baaa-653256efcfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8817fdca-c4c5-4522-9574-e0417f6c675e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7338115-f12f-464a-aeea-438306993cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9e7a54-3041-4d03-850f-195192c44715",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dab1f2-29d0-430d-b3a8-dc2396b15de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08d4e85-bed7-44e2-b1a2-753d0a893970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfc3f88-838f-45ca-a4d0-2abaf2ef92c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97e210f-9078-4d27-a2a5-8c13d0e8e315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c605d0f3-57bb-4523-b5f1-ecddbaf522e8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da1ae89-4a54-45c6-ad3e-1202c106677a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09da92b0-4ab4-470e-8f11-8419b85844ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f10b581-a645-49bb-affc-6c7ffd058803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42352298-c353-45ac-9231-bbef7e49a36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f098da-b4e9-436e-91aa-903b2eac01b3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4e0bad-c340-4ca8-96a1-d28c586d0fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bf3fc8-89e5-4d1a-8e70-9d03fde6fc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67b4e76-75f2-4a02-83ad-c931ffb9605d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea0d7e5-aa5c-4309-8871-6b33b4dff92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967ebf4f-319b-4385-b880-c8c8eec38fe3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c307ebc-09af-40c4-9ee8-d3df60684509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0a2d27-ba60-4d7f-98e3-7d6b8bd892ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb3ce62-5e3e-4505-9818-5326c6e1a10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be49d4e-3f41-49c2-a22e-423cc70cecf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc1847c-fdaa-4a39-9cae-fd596dfeb674",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a8a497-36af-4848-b177-b9e3495c350a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72a8b8f-3354-4c4b-8b28-a908aed862ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f7b75a-6ab4-464b-9d03-f82729b86e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f5968a-b4f1-44a4-a06a-73f5e8c19058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5c199a-b25c-4c76-b7ed-e050aae21152",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aeae33-e5c9-46e6-add0-98bab47ece7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44e1ce8-3995-4ca1-9b08-9b14c5b675dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e02969d-b4a9-4a76-bc31-24e46ecb2c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd85a37-da06-4bde-896b-4160eda2d9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86751f1-63a2-440d-8c56-390116d2e80f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd9c46a-8a82-4afd-84f3-9080e5eff96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40428f1b-6bbf-4ea3-8518-deadb2f42816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2374742-4be0-433b-9fac-87e9fb83c558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e75c30-b460-4f51-a7f9-43a1ea395425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eda5dd-f8b3-4800-89f7-8cdb157e6829",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675e9853-2163-4cb9-ba2e-b7e4c015ccf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a19841a-39f6-4824-8596-8425c2a8b886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8152d1-276b-481b-a84d-ce960647a6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e76ed5f-b39d-4a9b-ad25-c771f584ce84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410b5e0e-4ffa-48da-8153-9e651cfb62f4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e73c92-63e8-4736-b215-9641a823a5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eff04c-2224-4581-9d67-38b327eb5a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f6bafc-fee9-43b0-8429-e15629eb2b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247c6eca-bebe-45a6-9e76-88d1aab653d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2c8e73-7103-4bab-b29e-9f807fc60b40",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51f62f4-e481-4d83-aed2-caea26d6b4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4634ad3-a6f0-42a8-844f-b0bfe4182027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c598bdb-9057-4fec-bc7d-29ef4388236f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08c178d-10ae-4265-b5be-9bee1ec4c5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660e0b6e-ce8a-4856-beff-9682abae1261",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5488a933-995d-419c-a31c-4a25d94f965a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519a60a6-9676-485a-8e64-2fa12b2645ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124336e6-3149-4a1e-babe-681c715f3d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb83a7b-99d5-4436-99f6-3f86271a375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d6bc67-19b4-4091-bef4-1369b27212a7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7144ce-d9ab-449d-af59-4f4fd3c52573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d143f82a-3ecd-4a18-bac4-643b8e54e95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eae1b5-d295-4778-9f79-462032a936a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e0b5fb-33ed-410d-8ff1-57770e59437d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ab9c97-98e1-4014-aed0-65ed65cc6b10",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dedd7e-c517-497b-bdcf-eca35b4512c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2328ab4-e139-4e12-a959-f93c50c4439d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a0cdf7-7a02-445e-adf7-b57627bd0239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a20999-040f-4a8c-861d-3543b5d87eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5fc964-139b-4876-a2f0-2b341346b0dd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15de5ea8-2096-4c7f-ab88-04360675695a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303aae21-4201-4d92-8638-108436a71bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd691e5-005b-41f2-a020-f472194b4685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667540e4-0180-4756-897b-dd2623dcc802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8157fd66-6e9e-44c6-936d-6b5ed09be091",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10fd661-08a1-4ddb-9005-e40a75a8f4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da0f18d-ee65-4afb-83a2-12cfe2d2e543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b651ae-14f4-42d9-b941-ceecc3c43468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a8a2a7-617b-44da-a602-78923e854356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4e18c2-bb8d-4448-b59f-77f5a01e84a4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d68f1c1-ec59-4521-8b7f-0e6cc65c0ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddca43d-2406-430e-9732-f660584b7cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426beac8-2b6c-4b73-9efd-09c4b331e9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d58d47-c147-44cc-b1a7-465e349acb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8befba5-241e-4a91-940c-547c150acc8b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1d18b8-2d9d-4d45-ab97-e6a7f2085085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8ef396-6118-4289-bd2b-f92956aabdef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c11213-0369-4ddf-9584-8137ceecc139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f047c96-8fbc-4f98-a390-535c044a776e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daad023b-ea5e-4565-b0d2-30609ddbfd94",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5d5395-125d-4248-8fc6-b0a7406f2cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221ebcfc-e22f-4879-ba72-ba738fe66b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b69d5b-b836-4fec-a4c2-2b694162461b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddb924d-0d54-47e6-8b1a-a3e844f45299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb4b534-95d1-484d-bd04-6d8329415085",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c847ccc-5d9b-4adb-8c65-7d7f4d57482b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd44770-76e7-4f18-b246-18045f6741c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a520a91d-e182-4a7d-bf25-1d9dae1291d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98aff60-44b2-428f-abdc-e99ff7eed196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe47c0f7-719f-4761-8f71-53057ebc49f1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e6934e-4c6a-4c51-9169-40de76ca5584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a10e92-2017-44b3-9c5f-f5dcc859d9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d436b4-86b5-488b-8cdb-2e8df16c8012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a351a9-1d8b-48c6-92e4-503e77c778e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59c918b-fd6d-42f6-9b23-43647cca6772",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a63b2de-3884-4a08-823c-6110a018c62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ebeecd-d7e7-4581-b427-f8d3039fb02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a40387-e0c5-4c5f-9cf4-634eaf26eb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934e5ed3-66c9-4908-8165-4ef4d2f0783e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9e98a5-e785-4bb5-9659-a85e46cf00c0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05a73a0-148b-4d53-8cbd-4d3e4207ad60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96296989-c65f-423f-a993-2345dc189827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135a7e92-a8ae-45d3-9400-246de0324ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899587da-4893-4af3-b14b-f9624aa64c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687f7bc8-b489-44e0-b619-d8c8550e5b08",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ed4f9f-c9fd-4794-8273-ae10421542ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268fe0af-1aae-46db-af1d-7ffa81fbe983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb77c67-2b6a-4f9f-a8ff-c724ef70c58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c3b158-fb2c-4ca9-a851-43663264cd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eefe08-7318-4a1e-aa33-85d348c06d8c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0918f794-3a69-4596-97bd-700f6edf6c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2117f65c-dff2-4e8e-b0df-31371417521f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787a314e-3dd7-477d-90f9-437ecc9d780a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bcb2e3-8fa9-421d-b786-ff06980601a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fe3a96-9a19-47c8-a118-5b8d3f14fb61",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abc4be8-87dd-4b5c-af98-10cf5ddf439c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28cf342-772b-49ab-ae55-17e2e438b694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0f7a08-733f-4caa-8f0c-6369698087fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010e408e-69bf-4470-8618-5bd30851086b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b621e7c-b56f-48c4-a579-d65d8b3dac56",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c28148-1f57-4df5-a9e9-ff60bebf608d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78b3ae9-0631-495b-a065-388642857ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b49fda-7f62-4fa2-bac1-0a88d14717c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3a159c-1d16-4071-b50a-a9bd32d22963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60cb74-b250-4909-a06a-f5aaf77a7c96",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92caf3c4-1f1e-4b62-82ca-e58e2e6b270d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f001240-e3db-4a40-aebc-75683cd82dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80e0711-ba53-4bf0-a8aa-762ebe013dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a22665-d86b-4659-adf4-c8f233e24679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d61d6f-413c-4261-8cb7-2a6e91e0009f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77efb4e5-c1f3-4c3b-a148-41fbe1bbff69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e12bc48-362b-46b1-996f-61a9042a9cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2365906-77c7-4b33-a7bc-75a6b04099f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f17c206-ae7f-4f22-aefa-db3ff0495620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1c8fe7-efb1-4617-ae6f-cc28dee633e1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b157f08a-ab71-43d0-947f-e448396e8958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05c3527-08de-4952-acb4-7ee7e57740f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3674675-0d17-4cda-8f8b-f43af8812660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44ff411-18ed-4699-833d-2baf855ae02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc88868-def6-411d-b537-80e7a1fe82aa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae861b49-bc49-4c9f-a29e-b6bb353dd8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26220844-0ed3-47d0-975a-7ae966735ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5a82d0-de25-41a2-9b8b-b39e19f496aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d064c2-521c-45d0-9ee0-530bf1137d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd265bb5-0957-4a20-92c4-9b207e98858a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515d7b30-41d2-4bfc-9fa0-6a2f38b8a93f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74af4db7-282a-4990-b22d-715b325ce9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee32c72-c477-4f95-922e-29c52b4070c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6945ba-b0bb-4adb-a565-2764eec276e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed6a3dc-058d-4dfd-bc73-6e4977043e13",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b7cd44-0de9-4bbc-a990-45cab5213137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959a685a-1ac1-446b-8843-993614e6dcc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8a6a88-7e90-434c-adf0-de6606d16874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3e9d8e-f74a-4a35-ad86-f46a1ad18541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01343c65-0e35-4f93-85a2-f4392defe98d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da155c6-e074-4917-b2c0-c5af5467028f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "084ccfe9-b252-4eaf-9780-9e4ee484391c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463a9b34-ebaa-492a-87cd-d604054ada7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce86309b-1df9-4d93-8bde-47e782487f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2907c54b-b132-4b9f-8f36-3654d349c454",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea84bc64-3ce7-403b-9a1e-92ebfd1360a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b883009f-b44b-4c94-abb5-b399d89b3dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff24554-b52c-4aeb-9be5-4a1d5efd21ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612e504f-103c-4215-bdab-c2ac8aab6eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c57f01-d8b4-40dd-aa0e-14dc575cf9df",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a1c1ef-7842-492f-81fa-6aefb6fd4db1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d72411a8-c057-4146-a34b-54fde7143945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e26983e-e522-40c6-aabf-658894d6dfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2fe329-6a59-4212-978d-6746cf61e5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e158476c-979a-462b-b47f-c52f9c18d42c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ec1fd4-5543-485b-811c-651319d5d8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808e24f5-5769-4b88-a87a-9d55ff871ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c6ec15-9806-4c47-bc5f-09880aff00bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89163e5-002d-4043-96c2-a697a128e206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f1be3c-ddc1-471e-a34b-79ab148f03bf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2f2ba5-406e-419b-a651-877623e401ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2be0280-c632-4d16-b664-685c43063266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73aae7c-4c40-4b5b-a200-c03e7dbf9170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235c6ac5-8f45-4087-83bc-040fffd12e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60895930-969c-480a-9057-590d1e234957",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7c8d20-76d8-4037-965c-9a7d3a28f9ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "119f5822-a3ea-4ad5-872c-e096fbaa13ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0315845-9c97-4650-a3d5-5cebfad0a62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0237cf3-1be2-49eb-922c-5b6a105363c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395ba810-6dde-4881-b6a3-03389cf2216b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e84667-7b5c-4c50-9b77-484717bcee77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32ec2c0-17ce-4936-b905-f35f4963b3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd812283-dcc2-456d-a101-e87ea32410a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea215ebc-d8c5-479b-b866-187213381c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eb7cdc-56c3-42ed-a998-84b4b572a72d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de514d0a-4337-4666-9589-642fe44ed20e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bbb726-f7ba-4c9e-86d1-4645e03e67a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a235b99-0698-4794-99d7-def1766890f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce8b830-3ea3-4939-b4e9-d1e2d21f5ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510d6b6c-8dc0-4ad8-8875-457d3cf4fd55",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca12aa4b-f738-4d28-ba89-18450c193d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d898509-048c-4a84-a973-e38eb0470e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dae8e5-f578-4fc7-acc0-280369102367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2367c00f-111f-4e9d-9bd8-ca9bf28288d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74988376-31f3-40d4-b071-826b2eea5db8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d317acc0-f324-49a8-a0f8-f148280403ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8161e4-73da-4049-b407-d8b2043befa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f5c251-39f0-43ac-aae1-c9db8bf76c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f34e74c-30ef-4331-8eac-66c8ef8bed10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ca3b96-e256-453c-b498-f45a54040c49",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cc7544-9d13-4652-a31c-3c269f6be8df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ec2ffc-b918-43d5-8f30-538e25bb1a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f95134-c236-4e6f-ae94-f6ddd7642ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eae219b-4ed9-4cec-b288-21de9b7a7043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc086198-87e7-4255-ab61-b2c5d95b5c22",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20fa5dd-06bb-41ae-9d5d-0c80d54ae824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84f97b3c-57d2-4883-98d0-db3d40b45a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d17e718-5172-4697-830a-ad4b50f02dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010f2d2d-a873-4b6e-962f-334e99f0e4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005b0d8e-98f8-4995-a645-9f8d6bd57292",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23754336-2a53-4baf-904b-137747a4f812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a9ec80-ae71-4bfc-b53b-cc61ee0f36e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20f7c95-a8f4-4029-9e0d-c3de8eeae157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afe0008-c2ff-4c17-a73c-b188a12e9b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70f26ff-653f-4ddb-85ba-14481bf09ae0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e26fa7d-fc7a-409f-beec-2a5d4a07b3f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a2c251-d857-4d42-865a-0671bec041fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0895c6-676f-4d9a-8ac0-644214fed7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88154a12-14c4-4423-9069-626da24df9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9f0398-e39a-4211-84a5-09792f3702a8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0ce3f5-4478-4638-b1bc-267d8a06a34f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e5fbc2-c998-4360-87bf-e50f329b37c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3c35da-7493-4aa6-a053-b41b8a42f04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27143c9-1e50-4a2f-85ec-5630a95764d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07572d65-7a41-420e-a924-477937f0a044",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f6b459-2933-4c42-985f-c3c5ea3e8c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e08c45-bdc4-4b04-8b3f-a1eaba75bfd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014d7be9-0fae-410f-82fb-f72119ecd851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f73749-e1e6-4028-8d66-1f45bc4f9e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e755c51-0e4c-4ad3-8cb8-1dfc870c757d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f91ed6-9936-40c5-bd97-fe282c9dde46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac2e261-d45e-436e-bbb0-f97b10771d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49156f32-1e95-46ba-ba13-5db838c3fe12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7739f053-f79c-4bf5-847f-b1b1bf911abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c6f73f-e2c0-4972-9721-1eb4e8baacd1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacd68bc-4cff-46c2-a6ac-d13702d3580a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc2ef13-7384-486a-b8d8-77297cef411c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5873e1bc-b480-425e-9902-315d6db506d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8da100-2e99-4051-a911-2c6b21734f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb1f9a7-7011-4f3b-8bec-c51a765a1bf2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5c2fcd-6e87-4dad-9d76-70a6afe40a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2950634e-4655-4cd4-ae39-a4370053199e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4104faf4-9fda-4818-86f8-c4a6d9d4575d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19a9c0e-409b-4dc8-ac77-af9f1d5932b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51efb106-e2fa-4491-9096-b707489a90d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc683f6-1039-420b-becb-a341f259a8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2918550e-ee05-4b82-b355-1cde86347048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c55f5c8-aafb-4d94-90de-f7773de7e6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b1993c-c655-4d03-a6e6-8e336cb6571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98406279-1fa0-4bce-99e4-00e22c13bde4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fb2d36-9187-401f-b8de-4bc320cffa8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ece6d6f-72dd-4965-ba4b-3675063e3497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7efc670-9c6a-4143-b73f-fac5b6f53830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc14d8dd-db27-4397-acdf-3f4a023ca28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b098bb-49eb-40e3-a75d-766d13a97c1e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6f1240-64ec-431e-a07f-497ea85a4ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509f3104-d8f4-458d-9981-1b9f3f6c76d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610eea8c-a05e-4857-afe4-838a2d085032",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7612c3c1-93b6-41d0-ab94-130b5276b3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd8ef32-f814-4fdc-aac6-dec668367168",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5453858a-2af2-48d6-aba9-63dbd3c655f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89736883-14cb-4453-8f44-34d6ae9fb9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7492c3-18ec-4a62-9aa2-ea0a45a480ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096b7c12-2de4-4e73-b065-56f732dadd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429bdde4-21da-4695-8af2-dea1508a92ba",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2e8f5a-1d63-410c-aac6-8130c343ba38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36dec33b-d826-4499-b35f-33a25c0177cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8c2ff7-a47a-42a6-8cea-30b586e077e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e8bc09-2adf-4606-9d99-19a0864b5cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff6596a-d633-4fb9-bcf1-cf3df4b862b8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd014808-8702-466c-b4c5-d074d40a5024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5ed042-3c71-4a4c-bc57-0d92c3904895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24bc058-622e-453d-b62f-fe690ea64212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65a4848-13da-474d-9cdf-24f944e75c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9805a1-e3fb-4e5c-af43-c17439340582",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de19a449-8a71-4fb9-a40e-db213ab999dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75877b2d-64c3-428c-8d19-29c7aaccf172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af30ea03-af5a-4304-94ca-e90cc3af52b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571bb91d-088f-4818-858e-6c80b402bbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aede7cc9-44e2-44c9-ab75-804224ff42f1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59dc7e6-19d9-4924-be5a-dfb04c483917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b2b28b-9fda-4d42-8f6d-1f0aa3797547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b98faea-bdd2-493c-94a2-fc9f4286381b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5e1b96-a917-483b-9140-b1da61e5741b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e35ab5-b6f7-4470-89fe-fd3b27591926",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0bcfe2-297f-4ca7-aad0-687069936b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f67861-6967-4d4f-a666-afbf0f228d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a0fd58-293b-4d51-aaa8-4efaf104fede",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249291b5-2807-41bb-a16b-cf04f2bcc8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040b1628-0886-4e6d-9f8b-2d46aef92b36",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9fcdcf-c613-4d51-9c83-334c6c07d96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe75b53-4003-43d5-a2ea-12a560cdf453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1633e8e5-5b19-4c4f-85a1-af7817ee5369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a14fd25-97bb-49b0-b4f0-82d6e71ca8ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a240becf-62af-4231-8e81-f4140fc99e51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4230529c-7c66-4ca5-92c2-2378ddb9f7e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c6e1ea3-66ee-4575-be0c-b6e30d1d58cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f96a7c6-a848-4c92-86b2-575d06518b77"
                    }
                  }
                ]
              },
              {
                "id": "e3847b13-4478-4b32-b034-1a8c0b999b68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fa967c2-595f-4b93-92b4-ed2f7672fc3a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffcea0f-e9f9-4120-ab0c-7c9931751304",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a046125-c6d8-48b9-9324-77eb4f07b829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29e5425-6408-44ab-8155-21772f7c45e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4a3446b-edc5-4e3f-b76f-f4424db9304f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71045414-24f1-4a3f-8a0b-d4ec2b7eaca6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9e0d0e2-1bf6-4275-8dcd-1aa09e186048"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c03f65be-5608-492f-ab09-9d97f93f168a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44e6afc2-04e5-4f46-a8b8-31a5d6ceb368"
                    }
                  }
                ]
              },
              {
                "id": "c25e1039-fdaa-4182-885b-b38a8b8af204",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "03d4ffad-e2d3-4ad7-9e47-ef936f1fd431",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cca0d44-aa1b-40e9-8e3b-0f0eefc4c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e2b413ce-2a76-4ee4-b5fc-f4ca85285be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3f03f4-6349-49e0-9cc7-c0eb8de5f94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36ff285-13fb-449e-a407-961448a173d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a70a948b-8750-4f86-9957-d719d393ff4a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db51195a-e5ee-4646-bd10-2eb7539af9d9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d74c2b00-1a4a-4672-8f6c-43ccebf8f439",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd31ac80-0c0f-408a-8fde-327f964d7c43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48abfda0-3e5d-4217-b1bd-61195f46713d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "925527fd-2cf2-487f-9136-3eb678aa323f"
                    }
                  }
                ]
              },
              {
                "id": "58fda485-e721-485b-864a-1a63e9cbd304",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49231ccb-767e-47af-8d96-548f8b94fa1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a36d6386-3ef6-40bd-8dc9-623f98bee089"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c671842-6ba8-4c29-bc2a-0f21391144e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "799e0a84-8408-40fb-a8f9-7b76b8391d4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0270894-dbfd-467a-bb5f-bb6ec911f6f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5783be02-5222-447a-b827-bbe5c25a3efa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35168b1b-e4ed-4918-9964-4ac460f1e62f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e67fdc2c-8b79-41c8-81e1-4b6bb46cac97"
            }
          }
        ]
      },
      {
        "id": "fa51495d-0175-457e-b3bb-4114712d9130",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "feda1bba-ae60-4f7a-a8f1-1c44d03c2318",
            "name": "Negative Testing",
            "item": [
              {
                "id": "426f8c99-80fb-47c6-80ba-c0848789ab7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "903d3426-1e15-4a9c-95f3-45907e2391f0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2327c0c-7f8f-495d-8f4a-7666a0bf5081",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e6603719-046d-4259-8ba7-ab550b5752b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5577071f-f992-4be4-8776-e2675788ddae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fd133a8-7300-4bfb-adac-552878125bc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05c5b1d1-c2ef-4949-bcc9-6e5a37b8c2ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50ba3219-37c1-4ba2-8bd1-333a5e3e2f44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde62b12-97c3-4f41-96a9-908548441ea2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6543f3b0-16aa-4e64-8db4-6eeff8d0349b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc868fb2-df84-479d-8f0e-5bc4a051e54b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2e8e7381-6fab-4db7-a1f4-710a638e62d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82e0fff7-34ef-4057-be58-e373b0f90522",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b671705b-6632-4437-ae62-c843ecf597cb"
            }
          }
        ]
      },
      {
        "id": "99494ad4-c121-4c49-b976-d42cb9481ea5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "570337a9-bb2b-423d-81e1-3cb3a782060e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b430e92c-8ea9-4f6d-b639-38f555e91789",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9980965b-a1ec-4fc2-9eba-b1a1354fe7e1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ed18c0-b29b-4af2-982d-0adb86f52129",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53c61f83-c318-49c7-8995-3056d405ac69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b73f12-cd8c-4e0a-8c8e-b2d0750384df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dd98d3c-566a-4f2d-8bcd-fceabdd19aa9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15713c8f-d0f1-4fa2-99e9-8f2b90be59ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5beb94c3-16c8-4b95-8139-48031ee757a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40cc2174-cc3a-45ef-baae-4069c00c4cff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e083800-69c4-49e7-84b4-65766aabb339"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f733c67-6949-4aa9-8e0b-b0a98992e8a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "acaa3cbb-c913-4a61-860b-badf751c3cf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cb5ac26-7b34-4b44-a6c8-dac2d7369da8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc22e15e-56a2-4d3d-9f8b-31c7668ea51b"
            }
          }
        ]
      },
      {
        "id": "a076aecd-ed2b-4770-b957-c89c8d6329c5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5360d0e1-800f-49c0-9cfc-85fff73f105a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84b44827-9418-49a3-a982-78e8491e786f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e1108fd-126f-42af-9810-94299af84c42",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348f25e3-762b-4229-ab9d-c641d583ab70",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a446145d-1763-4ee4-bef8-b26356ae879d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460a807c-ff19-44ec-b2dd-da9982b0ed6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dcee92f-d1c4-4360-a818-976b66562012"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70ff4c12-cb44-4c62-8d80-5f6c8077e961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4202d76e-29f0-4f15-b9ec-db6162fec353"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12a1ef15-fe7d-4111-b13f-396350233e45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e195a46-cd58-4e4e-85d9-e264489e2587"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0be925bc-4afc-4f5f-8612-53cc85f2509a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ecd6b72-ee2c-4689-aad2-1205ebb7b08e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbc1e851-84ca-44af-b328-6e0a1c0b39d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "550abbbf-2d9a-4782-bbd9-33d3c1c575a8"
            }
          }
        ]
      },
      {
        "id": "3337a0df-9744-4f55-b8cb-815ecf2b7871",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3483db7e-9a82-4e26-9743-a3a9ed332a54",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9066abaa-de64-4791-947f-fff034eefe57",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cf5c7e65-c40f-4331-a553-7f5162c06c41",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cd08b4b-3cfa-4c65-87b3-97882b7db829",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fe1fb02-9e1f-43a5-8761-ce5a12025d71",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.8253968253968,
      "responseMin": 21,
      "responseMax": 315,
      "responseSd": 18.932033559124072,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723682344095,
      "completed": 1723682369046
    },
    "executions": [
      {
        "id": "ac7fea87-846a-4cf1-900a-ede5e74dc48f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1028b29b-fdb1-4d9e-947f-98330e61099b",
          "httpRequestId": "1cc79d23-4cd2-4e02-b978-b793f3b3e973"
        },
        "item": {
          "id": "ac7fea87-846a-4cf1-900a-ede5e74dc48f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "37a57a76-39bb-4bfd-b5ad-e32496e718a8",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "2864e9aa-f384-4ad8-8845-6bed53b7b17a",
        "cursor": {
          "ref": "c715fd5d-5658-4af9-b2b8-f5e8960782ef",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ce8beb03-f6d0-4450-a746-f20113ed732f"
        },
        "item": {
          "id": "2864e9aa-f384-4ad8-8845-6bed53b7b17a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "17cb5764-2a36-4031-bb6b-f66303375b74",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "6b193a7f-ae05-4eee-a252-c45bb622a713",
        "cursor": {
          "ref": "09e93a1d-253e-48c8-8a50-e8a4b69680a6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "42a077b5-3b15-436b-95ae-409fce67c5c1"
        },
        "item": {
          "id": "6b193a7f-ae05-4eee-a252-c45bb622a713",
          "name": "did_json"
        },
        "response": {
          "id": "9bf932ae-9a54-47fb-b677-be89426dcf98",
          "status": "OK",
          "code": 200,
          "responseTime": 315,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568bbd3d-e49b-4699-bb46-55944bb4b837",
        "cursor": {
          "ref": "5798da50-10b7-4f65-a7e7-6d4bea34af19",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "af5c2a02-206d-45fd-9b71-9df6e404a9c7"
        },
        "item": {
          "id": "568bbd3d-e49b-4699-bb46-55944bb4b837",
          "name": "did:invalid"
        },
        "response": {
          "id": "dc822ce9-8ed9-463d-8a24-b67a82061ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568bbd3d-e49b-4699-bb46-55944bb4b837",
        "cursor": {
          "ref": "5798da50-10b7-4f65-a7e7-6d4bea34af19",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "af5c2a02-206d-45fd-9b71-9df6e404a9c7"
        },
        "item": {
          "id": "568bbd3d-e49b-4699-bb46-55944bb4b837",
          "name": "did:invalid"
        },
        "response": {
          "id": "dc822ce9-8ed9-463d-8a24-b67a82061ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6f90db-c710-4553-9e57-9c1f53344659",
        "cursor": {
          "ref": "a4f6409d-0405-4d29-be22-35b76e8f1236",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d7c5507c-d25c-46f3-8129-34ee834f4b50"
        },
        "item": {
          "id": "ac6f90db-c710-4553-9e57-9c1f53344659",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "21b9d7cd-3654-4e9e-b081-7149735b6c7d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887792e6-3064-40e0-b5c4-34312438b1d4",
        "cursor": {
          "ref": "5e7d1c37-0cf7-4036-a150-141080f08003",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b1795b67-4500-48a6-a741-845b51d4b6dd"
        },
        "item": {
          "id": "887792e6-3064-40e0-b5c4-34312438b1d4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e21332af-bab0-4d77-bba9-00597ed284f7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57056b2c-74f1-42ff-a10b-14e4f92dfe38",
        "cursor": {
          "ref": "4f102ebe-2708-4162-9a0e-cc93f5d14e0b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c113dcbe-2877-4e7c-9bf9-fcb8875cf543"
        },
        "item": {
          "id": "57056b2c-74f1-42ff-a10b-14e4f92dfe38",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8d02396b-08af-493a-8b68-a1ed94e2c967",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900e7b0-379b-422b-8479-1430d8baab25",
        "cursor": {
          "ref": "bb8dfea6-b1e5-408e-a561-7309939fcca2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47eb3a49-30ad-43d6-bc61-c794b67e6b10"
        },
        "item": {
          "id": "7900e7b0-379b-422b-8479-1430d8baab25",
          "name": "identifiers"
        },
        "response": {
          "id": "af8dbc4b-1fb6-4e9b-8f60-52cf148fbe27",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca31e21a-fc9a-446d-90e0-bcbe3a6bd84c",
        "cursor": {
          "ref": "b4c02c21-92a4-47fa-95c9-6d82cf51bbad",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a265f8b7-a2dd-438c-860a-5f4746fc5dfd"
        },
        "item": {
          "id": "ca31e21a-fc9a-446d-90e0-bcbe3a6bd84c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f1d8a7fc-21ce-481a-9547-5dae7a030745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2811304b-962e-4614-9442-1a8dd51018c3",
        "cursor": {
          "ref": "ec8f615a-190f-434a-ac63-8575b4e24c08",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3a193680-aad2-436e-aa8b-437c780c9c57"
        },
        "item": {
          "id": "2811304b-962e-4614-9442-1a8dd51018c3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "80de4977-22f8-4758-b863-8bc7dfb11154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f21b3d5-fc75-4bda-bace-d71298c624ab",
        "cursor": {
          "ref": "74867ead-21fe-48af-9242-34d6d03cf6c1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7071d41d-3738-435f-a1ad-4cea2bba5cb0"
        },
        "item": {
          "id": "7f21b3d5-fc75-4bda-bace-d71298c624ab",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "52bbf856-a7bb-4bdb-ac96-4adf3c9ae87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5fb72a-ed51-412b-a4ca-b1abce26a2d0",
        "cursor": {
          "ref": "166adaa1-30ac-482c-b23a-068525124043",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "82b4051c-93d2-4cf8-b78b-eed66d607f59"
        },
        "item": {
          "id": "cf5fb72a-ed51-412b-a4ca-b1abce26a2d0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4f50b5db-998f-4c8d-8668-66783eab0266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc937d7-5885-4213-8ded-abc053bc82cc",
        "cursor": {
          "ref": "e07e74e4-95ec-431b-a842-8c1b1b30521b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "735496db-565e-46f2-b41d-03b12c43b37f"
        },
        "item": {
          "id": "3fc937d7-5885-4213-8ded-abc053bc82cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e024405a-3e3e-4a0f-b07f-12fb9214a39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4c8342-cb02-488b-9643-113ac79544a1",
        "cursor": {
          "ref": "ea675431-0e1a-422d-a1b6-c7ed566d8e98",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cb38c49a-4755-48a1-9270-eaa44b753882"
        },
        "item": {
          "id": "fd4c8342-cb02-488b-9643-113ac79544a1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "414c0549-1519-42fa-8564-24a2f18e1741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb2c3bd-1705-493c-85f2-dcfc8ddd2320",
        "cursor": {
          "ref": "88ce3e28-8aa0-4935-8d45-c56f0c44aed7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fb39b59d-c89e-4ad3-b0b7-de500e03ee4d"
        },
        "item": {
          "id": "1bb2c3bd-1705-493c-85f2-dcfc8ddd2320",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6ebc7128-1ae4-451e-8097-3d7a9fd77d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59019f5d-de7a-496e-aa33-00a14eac3ef1",
        "cursor": {
          "ref": "18abcf43-3701-4a0e-b862-15231efe11bc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "810a6dbf-7557-478c-b8f5-68684653ab29"
        },
        "item": {
          "id": "59019f5d-de7a-496e-aa33-00a14eac3ef1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0fd21a8f-bb3d-440d-91db-620660f652bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6b3121-1a51-44c9-8638-bd284d2ae7c7",
        "cursor": {
          "ref": "ac3b53fd-902d-4bcf-a3f7-18e50cd11dde",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "71f71d07-15ee-48f1-a04b-ed2281ae6051"
        },
        "item": {
          "id": "4d6b3121-1a51-44c9-8638-bd284d2ae7c7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f66e7081-51aa-452b-8b5f-4468ee054040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fbce82-f994-4361-95e8-a445fe5dea22",
        "cursor": {
          "ref": "d69a23d7-1009-4775-9a34-8581e2cb48e9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f02cb2e1-cfc3-426b-8873-04873eb51f3d"
        },
        "item": {
          "id": "67fbce82-f994-4361-95e8-a445fe5dea22",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "87cf7a49-0ce4-439d-9f29-53dc0828859b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709c111b-87fb-477b-b74c-021c614b92a5",
        "cursor": {
          "ref": "c69e5b99-9b52-4d5d-95f6-12f98f88ee87",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "896ceada-55e9-44c3-884c-078265616fd5"
        },
        "item": {
          "id": "709c111b-87fb-477b-b74c-021c614b92a5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f17f9dbb-9641-4f73-be53-8fe4ab326b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959fee52-d42b-46da-a8c4-c576d07540bc",
        "cursor": {
          "ref": "b23f308b-f952-4701-ae04-6ec1cfe5aa90",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c4a803d2-3020-4d56-a9ae-71d1fe25744f"
        },
        "item": {
          "id": "959fee52-d42b-46da-a8c4-c576d07540bc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "baec49c1-8d96-4807-bac8-cc1c105e44f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df94f3cb-41af-4cc6-aa58-0daf067eee6b",
        "cursor": {
          "ref": "3f75f911-c577-42dc-9694-0e20e7edde8d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c9018534-8f42-468f-8bdd-0b167c31a5e5"
        },
        "item": {
          "id": "df94f3cb-41af-4cc6-aa58-0daf067eee6b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "318748c1-2187-43bd-9ce4-87505e468e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d30ea-2b6f-4ae4-bb46-106a279b0ea0",
        "cursor": {
          "ref": "cc0bd986-4f0b-4fb6-8851-be8c9833321b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ebfd8a53-0a1c-46c2-a01b-f6855e4ac412"
        },
        "item": {
          "id": "b86d30ea-2b6f-4ae4-bb46-106a279b0ea0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "13445329-206c-4c51-8526-c2b83affe521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7ca847-8835-43ef-8a30-b4883d819d99",
        "cursor": {
          "ref": "de18fbd5-ce17-4ad7-bb52-aff68f53da31",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f0aef547-7974-4beb-998d-23a5ba87149e"
        },
        "item": {
          "id": "ee7ca847-8835-43ef-8a30-b4883d819d99",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c521e96a-5843-4533-8ceb-c38f284d8261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e27c3b-0dc2-45a5-a93f-39e493ae0153",
        "cursor": {
          "ref": "ab2bbc87-f48f-414e-8d3f-dda1db5c4b3f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "733e0ff9-425f-4b9f-ad9b-8807fb7c9766"
        },
        "item": {
          "id": "b4e27c3b-0dc2-45a5-a93f-39e493ae0153",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3910b8cd-8210-436a-8a64-f0adc8da9c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1e139b-18bb-4104-9ea7-ab7e48f61943",
        "cursor": {
          "ref": "94e34bf1-d12f-484b-ad41-3bd85b00abc4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9f04f9c8-93c1-43e0-89a8-a750a27e32b6"
        },
        "item": {
          "id": "7e1e139b-18bb-4104-9ea7-ab7e48f61943",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "32c73a10-cd2d-4856-9ec3-3402bee50ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e725550b-c038-4300-9105-4cb19c31af42",
        "cursor": {
          "ref": "b3b46e47-5e2d-4011-8cbc-327b5362f75c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f370e9de-d985-4058-9b42-7c34a6896181"
        },
        "item": {
          "id": "e725550b-c038-4300-9105-4cb19c31af42",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "be15fdae-e2f8-4b62-9f2c-99d4af3033a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec235f3-e42a-42bd-9293-31ab0dda1ed4",
        "cursor": {
          "ref": "2fe1f219-af5f-459c-96b9-12fb668d6ee1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6751c96a-5544-43f1-9862-23abec6c97fc"
        },
        "item": {
          "id": "aec235f3-e42a-42bd-9293-31ab0dda1ed4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fc9f8492-8ab7-4d32-b780-71170480d730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a58552-7a5a-41f5-8b0d-69861c3620c6",
        "cursor": {
          "ref": "a1d59c4a-c9b3-4c58-8ccc-3bdd0b4f4e18",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "253bf87e-6470-4ab6-b0b3-c7fffa8cabc5"
        },
        "item": {
          "id": "65a58552-7a5a-41f5-8b0d-69861c3620c6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e0635f4f-82ce-4d17-bab3-247f3cf552a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7159e8-73f5-4c0d-b7ac-e162d05e4906",
        "cursor": {
          "ref": "91b3e3ac-89e3-45ef-959a-f6e100bad6c0",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a361c5cf-6ecd-4339-a2b3-5541216a8778"
        },
        "item": {
          "id": "7a7159e8-73f5-4c0d-b7ac-e162d05e4906",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "27294f74-5e9e-4dc5-a32b-3a8a673f7f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8d437f-499a-4367-b4bc-3bfb2937f6dd",
        "cursor": {
          "ref": "59b305ea-f858-4443-a6d2-734afae3f466",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "935fdeab-5cfa-4cbe-8471-021bf3573fdc"
        },
        "item": {
          "id": "ef8d437f-499a-4367-b4bc-3bfb2937f6dd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4aad842b-e015-41c0-8e5f-deb8bd3a2eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa84fc1-07d7-4735-a52c-60ffa2eafa6c",
        "cursor": {
          "ref": "4e6114a9-5acf-4fff-8fe7-6d3598baad4e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5a51a484-d351-49cc-ae57-b898deca998b"
        },
        "item": {
          "id": "daa84fc1-07d7-4735-a52c-60ffa2eafa6c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "baffc96c-f6c9-49d9-96ac-ef5b5c42b5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bc16b0-32b8-4925-974f-cb8ad76d7461",
        "cursor": {
          "ref": "1b939118-91c6-469d-8e5b-eb90b49d870b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "469ce6a6-c31d-47aa-b497-a37e7ec5ef2b"
        },
        "item": {
          "id": "26bc16b0-32b8-4925-974f-cb8ad76d7461",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "60648834-a50d-45fa-aa0d-5349fbc14f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6417ad-37a5-48e2-b2e0-5aa59c4bfd42",
        "cursor": {
          "ref": "1a5a0c20-8ab8-4fa3-af40-7778777022b1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "94125100-b5ee-4201-883a-abca469d833d"
        },
        "item": {
          "id": "8a6417ad-37a5-48e2-b2e0-5aa59c4bfd42",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d6f36872-4b48-4713-a4b3-b69647e5b8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff43b3b7-db5f-4a7e-8921-7fe6750b3376",
        "cursor": {
          "ref": "616c8b82-7d67-488b-b19d-e431c120260d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "acf8c379-98a2-4f7e-b0d3-9b02c505aed7"
        },
        "item": {
          "id": "ff43b3b7-db5f-4a7e-8921-7fe6750b3376",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ab94dff8-6d46-4ac7-820e-69e1b1bd1424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0787a461-c0e9-4685-a5df-540ec5dee262",
        "cursor": {
          "ref": "6d03fc45-556d-4e72-9976-101bc6f27fb0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c8e5a5c6-e572-4c93-aad3-571aa00a8c00"
        },
        "item": {
          "id": "0787a461-c0e9-4685-a5df-540ec5dee262",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "db19283a-f9e3-4d03-b85e-524db967232b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41f1a29-569e-43c6-b400-7e8c3717e64b",
        "cursor": {
          "ref": "3ca4ab84-f7d3-4c05-abee-ce0b0f59a87e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "623251b7-c4ad-48e7-8ad5-c3f32e362969"
        },
        "item": {
          "id": "a41f1a29-569e-43c6-b400-7e8c3717e64b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "128f3956-f9ad-4037-8559-e4b3e0bb5aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32643ab4-5e48-4cef-847a-8da7d2d9ef77",
        "cursor": {
          "ref": "94b96bc2-fd50-40f4-8be6-4f524ece55cf",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "584642ac-59a5-44ba-b10a-13de0781d491"
        },
        "item": {
          "id": "32643ab4-5e48-4cef-847a-8da7d2d9ef77",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1192e6c7-94cf-4958-9743-21bf99ee85e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fa1fab-e5ea-4ddf-ba14-e3f587435365",
        "cursor": {
          "ref": "0c83adc6-fe3d-42a2-9520-3a2227d2b4ef",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d9d690da-1c9f-4661-9ff1-9b73ed725b9c"
        },
        "item": {
          "id": "e5fa1fab-e5ea-4ddf-ba14-e3f587435365",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7605935d-1622-43bc-984c-2ab022e84ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77979861-40d0-4a4d-a983-5b6a0ec9262b",
        "cursor": {
          "ref": "af66b1fa-b613-4ab7-98ad-fdc4cc6644d4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "95b17fa8-ceb5-40af-b299-b294f2222d19"
        },
        "item": {
          "id": "77979861-40d0-4a4d-a983-5b6a0ec9262b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ad52c8b7-81ed-4734-8f0c-592817ecdd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffe7623-3a83-446b-a2cf-3cc223b61d51",
        "cursor": {
          "ref": "f468dc63-7fbb-42e5-b3a2-ca803bc05bbc",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "666ff73b-4a34-4dd4-92ef-d788cd582a12"
        },
        "item": {
          "id": "8ffe7623-3a83-446b-a2cf-3cc223b61d51",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "94988076-79d1-4d2e-9d78-30c382e019da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17def9f-95b4-4fd7-88a5-d27cc8f1b78c",
        "cursor": {
          "ref": "3c058926-e129-4ebe-8c17-a657ebdbb070",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "801c52e6-2ee4-4e7f-bb11-95360c92ba73"
        },
        "item": {
          "id": "e17def9f-95b4-4fd7-88a5-d27cc8f1b78c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5da1f5db-b3d8-422d-97e9-3043f79e63b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b81267-83a8-4967-afcd-495a8d72b6d5",
        "cursor": {
          "ref": "3addeb71-86da-45d8-a6a2-91c1a4402d55",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3199dea7-d1ed-494f-83db-5a4f9a803f9f"
        },
        "item": {
          "id": "b4b81267-83a8-4967-afcd-495a8d72b6d5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "221ddd82-9441-4d93-bf35-f5769833db06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daa6574-b1e1-434a-bed8-c68da6761d3e",
        "cursor": {
          "ref": "b93ee128-4f86-43f7-8d25-9118b91f924a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5b6ff65e-4bbf-4849-8c3b-e3c1beb88e03"
        },
        "item": {
          "id": "6daa6574-b1e1-434a-bed8-c68da6761d3e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "782baaf6-33cc-4294-a54a-4360c779ee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d35d4c6-9f59-4356-8b22-896582bf8a1a",
        "cursor": {
          "ref": "59320463-4996-4c00-94d1-753583414fb9",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8d94e6fc-47ce-4b9c-ba35-d57ea2490bea"
        },
        "item": {
          "id": "7d35d4c6-9f59-4356-8b22-896582bf8a1a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a9074844-8a44-4292-9ad8-67263f916131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688e819e-8089-4423-9be9-ce459578b26c",
        "cursor": {
          "ref": "3f224061-21a7-48b1-80d9-5745c41ecf59",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1b968a19-ed91-4861-aa22-8ba7e51f030f"
        },
        "item": {
          "id": "688e819e-8089-4423-9be9-ce459578b26c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cdb718b1-8bf6-4efd-8c52-9f3d6d883204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c044a36-b799-4f76-84c7-97b96ee81b3e",
        "cursor": {
          "ref": "6e887a92-b99f-4791-b0f0-f4c6f00f55fe",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9e13bc59-7893-45cc-a947-9a64994b576b"
        },
        "item": {
          "id": "3c044a36-b799-4f76-84c7-97b96ee81b3e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1161328d-a4c5-4301-b59a-5a964c95df1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d79895-acf3-401c-a22b-daf7b68d779f",
        "cursor": {
          "ref": "f5663b7a-ff27-4523-85a2-01996ffb4dd1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1f9d598e-5006-43c8-894a-b427b12c7098"
        },
        "item": {
          "id": "65d79895-acf3-401c-a22b-daf7b68d779f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1e6da908-db1b-45dc-a964-3923929664c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17de898f-7021-4829-8259-f45e020b7751",
        "cursor": {
          "ref": "1b0aa17c-a63e-4a01-8496-f13c9ecbb2d0",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ad16e8bf-b85b-4fc6-a087-9a3ace9a0f99"
        },
        "item": {
          "id": "17de898f-7021-4829-8259-f45e020b7751",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9f40d709-3a89-4ff8-9919-02ba711ec3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001920b8-f5a2-46a4-860c-6f776cedeeea",
        "cursor": {
          "ref": "37478120-14f5-41ec-8401-8e8078b94eec",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "faecb599-909d-47c2-8a6d-2bc13570b6d8"
        },
        "item": {
          "id": "001920b8-f5a2-46a4-860c-6f776cedeeea",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "16182880-b16d-482e-a890-0d0dd08def70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1ab274-d8e4-42b6-b03d-f74b67b0d593",
        "cursor": {
          "ref": "aa2baded-e4be-462e-b300-aa0ae475592d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "306fdd6d-87a7-4684-91f7-5d9cf5ecea8c"
        },
        "item": {
          "id": "7e1ab274-d8e4-42b6-b03d-f74b67b0d593",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aff9a4c0-8589-4b45-8495-aae727faf6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f4656c-ad47-4569-8cef-27d25dd2fcbc",
        "cursor": {
          "ref": "1d9e2c34-ec30-46ff-bc54-c34747113733",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "724e7d11-0932-4e83-a057-9613cd14761a"
        },
        "item": {
          "id": "08f4656c-ad47-4569-8cef-27d25dd2fcbc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5d51d5ab-4ae7-45b5-b2f7-3cf831d9d32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54175d87-019a-48e2-9286-ec1e849bc7be",
        "cursor": {
          "ref": "375bef64-ce9a-444c-88f0-44458354641c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "120fc726-cb1c-4735-8d9a-cf51e87800bf"
        },
        "item": {
          "id": "54175d87-019a-48e2-9286-ec1e849bc7be",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "def8ee0e-113e-4f76-b606-5ea5786bc152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb1031b-4dab-4d65-aa9a-37fcd8496e74",
        "cursor": {
          "ref": "c095e8d5-e568-452b-9e9f-1f5a6a0dd2c1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "65d746da-e9e8-42ce-a71a-4bed87448237"
        },
        "item": {
          "id": "8fb1031b-4dab-4d65-aa9a-37fcd8496e74",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8bdbf35e-21d2-4960-9563-8344e7e06fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a582b0e1-613f-4caa-adc4-3d8cecbbe439",
        "cursor": {
          "ref": "17ebbf30-5255-44e6-8cfa-d80b99225b13",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fc7668e2-b87d-4d97-9b96-d0843221f3e7"
        },
        "item": {
          "id": "a582b0e1-613f-4caa-adc4-3d8cecbbe439",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8147b3c4-50a3-4c63-938b-49846534000b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b87309-3971-4c08-8e50-8cc358994c4e",
        "cursor": {
          "ref": "0b78899a-1d19-4e3e-bb68-db9b9cefa8db",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "302e0262-01d5-4944-a80b-368f82c58778"
        },
        "item": {
          "id": "51b87309-3971-4c08-8e50-8cc358994c4e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c5b22d34-c111-44fc-85af-0e3a091e00d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c46c56-5488-4f77-9a71-4e95f53f17b5",
        "cursor": {
          "ref": "f1a982fe-6a88-4f12-8be7-d8cba67d78dc",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "029caa09-9be5-40f8-b235-ee2bed8b95e5"
        },
        "item": {
          "id": "16c46c56-5488-4f77-9a71-4e95f53f17b5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2da9a263-81d7-4981-8328-f61a0c69377e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a8d85d-1c8f-4ea9-902d-183811874849",
        "cursor": {
          "ref": "8c19e7e4-41e3-4b9f-8df0-8e127de3f8ed",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a2b2820f-057e-4c04-8d73-ad2a77670c67"
        },
        "item": {
          "id": "79a8d85d-1c8f-4ea9-902d-183811874849",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "753b613b-a66c-45bb-9597-19c239966126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e22f8c-37a3-4109-be3e-c0ddca887850",
        "cursor": {
          "ref": "23a57184-886a-4ac3-92b6-a202655cacd2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7e6a6907-e1cd-4254-875b-33c45b9d466d"
        },
        "item": {
          "id": "b6e22f8c-37a3-4109-be3e-c0ddca887850",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f7d42ca0-eb51-4fdd-b6ef-6508bd75e36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e0638d-2e32-43df-920a-05d46a11976e",
        "cursor": {
          "ref": "08481b31-6b20-4e1d-a920-749d5cc88f17",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6978db17-8c3e-4dd3-a9bc-c8372f928741"
        },
        "item": {
          "id": "28e0638d-2e32-43df-920a-05d46a11976e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7381a5c2-3e26-4431-b5f4-a6cbf691987c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3789b5bb-6ec2-4311-927a-89a12f21e045",
        "cursor": {
          "ref": "f3de25d5-1308-4a56-a9e7-29f0ff72d154",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "98270b9c-0bb3-4232-9178-9390eecd151c"
        },
        "item": {
          "id": "3789b5bb-6ec2-4311-927a-89a12f21e045",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "981da6ef-25fe-4674-b498-e04b84251311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb7c179-aca3-42de-a196-c701ef2e8942",
        "cursor": {
          "ref": "748f4378-660e-4e5f-9092-23a3ad6723e1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0088ce6d-cf69-4c0f-9e78-de537f7c4fb8"
        },
        "item": {
          "id": "ecb7c179-aca3-42de-a196-c701ef2e8942",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "552aed99-0704-4d36-b835-c2d057182031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d837210-164e-4bee-92ed-d7d32922eb09",
        "cursor": {
          "ref": "ab9c695c-f6ed-42d8-948a-a10611bec8c6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "78855141-51f7-4eef-ad24-1e60fa8977ea"
        },
        "item": {
          "id": "1d837210-164e-4bee-92ed-d7d32922eb09",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7dde8063-6f9b-4982-a4e1-be6ff6365d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020e5280-89dc-45dc-8357-b78b3e6a3236",
        "cursor": {
          "ref": "9eaf18d5-658b-4fb7-b772-7e40c281a022",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "616fdf16-9fdb-4612-ab74-0a63ff415dd4"
        },
        "item": {
          "id": "020e5280-89dc-45dc-8357-b78b3e6a3236",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "240fda87-3981-40d5-8f23-5a710addc3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c43719e-a9db-4e43-9f81-fe32797ec9a3",
        "cursor": {
          "ref": "7a8edbda-aaad-4376-a3c7-3a15de764859",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "895b948f-13b9-46ac-8905-3911e8b2d222"
        },
        "item": {
          "id": "7c43719e-a9db-4e43-9f81-fe32797ec9a3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c5313b60-5673-49d0-830c-e038c5c40eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f254156-ef2e-44ff-afdf-c83b4efef066",
        "cursor": {
          "ref": "b36b47c0-c3cd-45e1-b7f6-df867a83dc9a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "be507e89-2812-4f65-8275-214c54a0b8a5"
        },
        "item": {
          "id": "6f254156-ef2e-44ff-afdf-c83b4efef066",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e92f6714-4fd1-475e-a1a4-009a2a2fa936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2ff31c-337f-4bf3-90a7-eb3ab1dfabbe",
        "cursor": {
          "ref": "e28d3ac8-a31f-4914-806e-377434be7bbe",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fd134448-3292-4c04-b8b5-e956265d3e7b"
        },
        "item": {
          "id": "1f2ff31c-337f-4bf3-90a7-eb3ab1dfabbe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7f6c311a-2de8-4314-9e5d-0e72856e9fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9004dc3-3f66-48a1-81b7-f9932e697361",
        "cursor": {
          "ref": "4fe01498-2c64-432c-ba5b-a5bc0144ff12",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "490cf7d4-3243-4c04-b606-2c6094df76f9"
        },
        "item": {
          "id": "d9004dc3-3f66-48a1-81b7-f9932e697361",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b2916632-2862-4d94-9c8a-e52f34f9e58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174c9975-3275-4776-ac35-0a7f3a765c59",
        "cursor": {
          "ref": "10cc621c-9c72-49da-95b3-909d341b0dd0",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4844db3c-6b9f-4f4f-a40b-4d42c30e9521"
        },
        "item": {
          "id": "174c9975-3275-4776-ac35-0a7f3a765c59",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "22b1a5dc-6532-4256-85a8-6b33bcdb6b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc473619-d009-404a-95bf-f79c751edf02",
        "cursor": {
          "ref": "e0e83314-6cca-430f-9d91-3eb8e84a9cc6",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "462614f1-94d6-4d1e-a5ba-46572361ad5b"
        },
        "item": {
          "id": "cc473619-d009-404a-95bf-f79c751edf02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3d05cc1e-4251-4f04-a596-de6072d30424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29187a8c-3284-4ae9-b233-61c296f2c29f",
        "cursor": {
          "ref": "3bce8426-b0ed-4c04-80dc-2c566c94f099",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a8ad602e-a7b0-43e1-8fb4-3b4f10f6b582"
        },
        "item": {
          "id": "29187a8c-3284-4ae9-b233-61c296f2c29f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5f4a548d-12fd-477a-bc48-c5708e4cff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e12d4b2-23ad-4de6-ae04-c7f23d165af7",
        "cursor": {
          "ref": "f107d4aa-7412-4fc0-ac73-240e3cada4f0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fb105353-e817-4e3f-ab74-42acebb5ca48"
        },
        "item": {
          "id": "2e12d4b2-23ad-4de6-ae04-c7f23d165af7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d1d2999c-d761-40f4-b200-c1bfd6cb4875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f70390a-71cb-40b5-83b5-27e42bed8cb8",
        "cursor": {
          "ref": "81bdfd08-c0d8-439c-a5fd-4dae96df13b1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3da3acdb-7c9f-4d69-95bb-07e55abf1b9a"
        },
        "item": {
          "id": "1f70390a-71cb-40b5-83b5-27e42bed8cb8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "576429dc-0226-42ea-812a-aa2d8facf992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d129b8-bbbc-4496-825c-8f4434d02505",
        "cursor": {
          "ref": "e6a4e0be-fd4e-46da-b4c9-06e366342c6c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7e6247fa-2c7d-4913-971d-23399a1487a4"
        },
        "item": {
          "id": "71d129b8-bbbc-4496-825c-8f4434d02505",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "36dca333-be88-4d10-992d-ad89cb13b549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d851a13-0ad8-456e-8ecf-7148e82fd555",
        "cursor": {
          "ref": "0fcb4ef3-defb-4c7c-8ea0-36e262522d8b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eb0beb61-b5fc-4ab8-ad39-ff5e342c8a44"
        },
        "item": {
          "id": "0d851a13-0ad8-456e-8ecf-7148e82fd555",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9fab6b78-709a-4cf1-9296-c65b332d2fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213c785b-0900-428b-b4b5-8729b0fbefdf",
        "cursor": {
          "ref": "f7dfba61-8da1-4c80-8546-5555788cb7e5",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "04c84501-7368-44e9-947b-26b61ccdfd91"
        },
        "item": {
          "id": "213c785b-0900-428b-b4b5-8729b0fbefdf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "11093d5a-6295-4f00-8fbe-89216498d803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0419d3-f195-48f2-80ac-cd2470089fc5",
        "cursor": {
          "ref": "1a54fd19-4410-4de5-9d86-ca1b294a5d4b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1d1f1431-216d-43b8-8a52-de4b05530fd4"
        },
        "item": {
          "id": "ce0419d3-f195-48f2-80ac-cd2470089fc5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5deee284-8664-4c50-b3c5-257453ed4ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93875d9-be95-416d-ae2a-14cf4fe580c4",
        "cursor": {
          "ref": "f92a112b-4f9f-4324-9da7-09dbeacdc45a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "be000e8b-e10e-48d1-9498-2a7c1457d3fe"
        },
        "item": {
          "id": "f93875d9-be95-416d-ae2a-14cf4fe580c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fabea431-e222-457a-b5dc-56d1395c049d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c924cd-eb8e-4593-bdd7-431661a6a736",
        "cursor": {
          "ref": "b14f1269-b2fe-4f4a-b566-9375fac84b2c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4a7d36c2-2df6-4f53-b640-e5d714563556"
        },
        "item": {
          "id": "20c924cd-eb8e-4593-bdd7-431661a6a736",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c0daeaf2-2b11-4c44-8695-86a2a92b142e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4ac5d4-d1f0-455d-9b8e-78fb3c6e182a",
        "cursor": {
          "ref": "6df26581-a72c-42c7-afe2-18d472c29bd9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "64683f75-63d6-4c17-bff4-da5a65738835"
        },
        "item": {
          "id": "ec4ac5d4-d1f0-455d-9b8e-78fb3c6e182a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2bf1c559-77d2-405d-93b3-035930896642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d183cd89-1fd3-4cda-a0b6-950ff9fccc63",
        "cursor": {
          "ref": "db6098c0-5790-41c5-b724-bd993c9df79a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "78be1c4d-9b3e-47bc-bc73-b0a2a858f2c1"
        },
        "item": {
          "id": "d183cd89-1fd3-4cda-a0b6-950ff9fccc63",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "787c74ec-dbb6-411c-8fa8-0340cfaccdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7a89bb-4e48-41bd-bb10-5f0491372155",
        "cursor": {
          "ref": "66557d6a-3157-4dba-8f1b-a18723f7a603",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c2b20622-5065-46af-bdc5-68e3c1c55659"
        },
        "item": {
          "id": "0f7a89bb-4e48-41bd-bb10-5f0491372155",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "641decaa-6ae4-4ea2-a50d-795acb7e38a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404d3b73-adf5-4fb2-9f6d-1c41a412c5c5",
        "cursor": {
          "ref": "56c7bb81-a257-400b-b482-c89a58f2a948",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d683a588-8d66-4ab1-b3e8-a7e5ef863f66"
        },
        "item": {
          "id": "404d3b73-adf5-4fb2-9f6d-1c41a412c5c5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c694150e-8ca5-40e2-a316-397ac3831dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04904af-8c08-4042-af0b-5e090f5510a7",
        "cursor": {
          "ref": "f8498b85-b8e6-4665-ba29-f07edc14f90e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "131596bd-f703-40b2-88d8-91d1b0ecafa8"
        },
        "item": {
          "id": "e04904af-8c08-4042-af0b-5e090f5510a7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "99926613-06a5-4777-a9ac-09cde10ffd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaa0995-1085-44f4-83ea-a10f698eb09a",
        "cursor": {
          "ref": "e280ca7d-8511-4f27-bccd-2eab7c4f97f6",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4b971253-0925-49eb-8671-cb034212d0f3"
        },
        "item": {
          "id": "9eaa0995-1085-44f4-83ea-a10f698eb09a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "38d715de-072e-43a1-95f0-977d2587ca25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac38fad-5560-48eb-8895-17dc2476b7c7",
        "cursor": {
          "ref": "b31e78f7-b709-4315-8b57-dd6cf5ec637f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3f65e9fc-3c2c-463f-a377-22e66acb36ca"
        },
        "item": {
          "id": "2ac38fad-5560-48eb-8895-17dc2476b7c7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b0933355-30e5-4e74-bcce-85f561a4ba28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1647b2-e83e-4445-812f-b2da0fe73580",
        "cursor": {
          "ref": "29e047aa-4360-445a-a870-95094aac83bd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c52f3909-7301-461e-9ea2-c1d6714346e3"
        },
        "item": {
          "id": "bc1647b2-e83e-4445-812f-b2da0fe73580",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "31cbcf56-1b58-4dfc-a842-7c9e5af864e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ad736d-0228-4d5a-b581-cbee9750ace9",
        "cursor": {
          "ref": "607b3562-da56-41a2-8bfb-978546d86759",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ed00aa26-4d3f-42bb-9c2f-ec24b0c94037"
        },
        "item": {
          "id": "80ad736d-0228-4d5a-b581-cbee9750ace9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "32214053-e195-424c-bb73-f4b6d389c1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c816dd55-3626-4ce8-bbe6-2b1bf6af19df",
        "cursor": {
          "ref": "d73b07fd-ba68-4bf5-b025-a10ea1ae92ce",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c1590abd-66e0-4318-ac2c-95e81695dc31"
        },
        "item": {
          "id": "c816dd55-3626-4ce8-bbe6-2b1bf6af19df",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b79a25f9-705b-4c8e-ac4c-7c8936c5728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439960f1-21d7-48e1-abb8-5965be8eeee7",
        "cursor": {
          "ref": "daa3929d-38c0-4a78-99e4-4756b301513e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "65db5fc1-e925-4df7-b26c-47851f51f9e7"
        },
        "item": {
          "id": "439960f1-21d7-48e1-abb8-5965be8eeee7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5f95520f-b2ec-448a-83cd-ceda769f2132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74bb6a5-58c5-4b3f-8331-3880d4cab7a8",
        "cursor": {
          "ref": "8a372b9d-5832-4cd0-a0ff-f81c7c911e15",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7058d615-f106-4315-8605-57e00b0c0f52"
        },
        "item": {
          "id": "a74bb6a5-58c5-4b3f-8331-3880d4cab7a8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d07ae08-20ce-4b8e-a2d5-22a393b3be7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c414028a-70a0-4a4c-81ef-e2586105e67e",
        "cursor": {
          "ref": "f68d3c3a-5ca0-4fa3-adf0-42f08b90270d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e47898b1-dd1a-462f-afd5-d28c7e2bf87c"
        },
        "item": {
          "id": "c414028a-70a0-4a4c-81ef-e2586105e67e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d7cecc7e-7979-4cea-8666-9f2d15361ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b1ca26-ded6-46e7-bf0f-23c4346be2dc",
        "cursor": {
          "ref": "752041e8-bb0f-4301-a177-e0ff3dd01e45",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "904caec4-7f46-40e1-a7a0-5398c5dfbb73"
        },
        "item": {
          "id": "b6b1ca26-ded6-46e7-bf0f-23c4346be2dc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4b7160d4-6131-4a87-9e4f-9e24682a697a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408c5d32-b3f4-4f16-ada3-f8b1026b2a64",
        "cursor": {
          "ref": "69f89abc-c43b-41ae-8e6b-9e1d38c8e5f8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5a708446-ed11-4000-b2a7-ff318415e71a"
        },
        "item": {
          "id": "408c5d32-b3f4-4f16-ada3-f8b1026b2a64",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "19575597-5b94-40da-b53b-2952955512e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be5e7d7-b906-4fc6-adab-6f29eb236060",
        "cursor": {
          "ref": "f2036086-34ae-4a05-b26b-074d960c96a7",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "61d2e331-f7fe-4fe5-888e-a7c250d65edf"
        },
        "item": {
          "id": "5be5e7d7-b906-4fc6-adab-6f29eb236060",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ec4813e2-3200-4928-b4b4-0a604aaf112f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddec822-3201-4cad-88ab-142b0e0fd5eb",
        "cursor": {
          "ref": "cb786b4d-1a63-4dd3-abc3-aa317156ce3f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1c71f820-a9bf-42ab-a024-0a825b0fc46c"
        },
        "item": {
          "id": "7ddec822-3201-4cad-88ab-142b0e0fd5eb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2d7f4b7a-5b22-4f13-8a36-2c0a2fadf7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5641d6b-b00c-4e14-95af-1dc1876e6771",
        "cursor": {
          "ref": "75a45169-1c8c-4a35-9249-06015c934ac4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "486768d4-2dc5-42e8-afcd-e4f39430a283"
        },
        "item": {
          "id": "c5641d6b-b00c-4e14-95af-1dc1876e6771",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "36b969c6-0ef0-4c3b-9c43-bcabb5e3a950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea7fbcb-730b-4b23-8745-e5c191e8d3c1",
        "cursor": {
          "ref": "e6878318-bbd3-444e-a5a8-090a1aa4df6d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5dbb6f04-acb5-4d90-900d-e5fd72a3e58a"
        },
        "item": {
          "id": "2ea7fbcb-730b-4b23-8745-e5c191e8d3c1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fc9c2b3c-192b-461d-9208-0fc9c7bee63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e0e1e6-806c-48ff-9dec-20049d8764c0",
        "cursor": {
          "ref": "e9b09746-aa3d-4518-addb-3e32a2527287",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "27803ea7-58fe-4846-93da-3b06e7371285"
        },
        "item": {
          "id": "b1e0e1e6-806c-48ff-9dec-20049d8764c0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "17cf5bb3-42e8-4cf8-becc-2aa856df0a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ed6639-a5db-47ef-8325-793be009f81d",
        "cursor": {
          "ref": "daed1d6f-dc6b-4f81-9af9-d42a3b1c4bea",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ed950984-6c98-462a-a5c7-6e6b8de1c918"
        },
        "item": {
          "id": "89ed6639-a5db-47ef-8325-793be009f81d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "90c65bba-fb16-45b9-8709-c8e8cfc2a200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a383239-8e08-464a-af5e-b442236a53fd",
        "cursor": {
          "ref": "4616343d-80b4-49b1-b9c4-31fd2d0469dc",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a803b27a-0ccf-49d9-adf1-061efca590fb"
        },
        "item": {
          "id": "0a383239-8e08-464a-af5e-b442236a53fd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e503c650-5a2f-4fec-b006-bf679c770257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b478983a-ccd9-4e15-84b2-57e20b720e15",
        "cursor": {
          "ref": "3d21446c-f05f-4390-b8bf-4e5631215a64",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b6a35d2e-24c7-4592-a4c6-e3e3523e3381"
        },
        "item": {
          "id": "b478983a-ccd9-4e15-84b2-57e20b720e15",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0b2a4d4e-6c4f-46bb-aebd-261f5e563273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76e1e2a-5254-4341-9c50-25e63ec454b7",
        "cursor": {
          "ref": "5cebf43d-088c-4d21-beb9-85f5105e14e1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d427cec0-dfe1-4108-942b-0d20a8eedfdb"
        },
        "item": {
          "id": "d76e1e2a-5254-4341-9c50-25e63ec454b7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0e5faa92-b7e1-4a82-9c2d-d64074844652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "48248958-814b-4a26-ba5a-486c5d2da46e",
        "cursor": {
          "ref": "fb4041d7-42ec-4e38-880c-4651be291aa8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "41843be8-e59c-4dd1-a4d5-306bc65447d7"
        },
        "item": {
          "id": "48248958-814b-4a26-ba5a-486c5d2da46e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b69f1a80-e6f7-4812-bbfc-2ca972abf50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "50c0a3d6-5089-4e34-a39f-09d2a660c0f7",
        "cursor": {
          "ref": "9831c128-43d9-47ea-ad91-0d7ab091bc68",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c309eda3-8cd3-48fd-8327-f62f96332cd8"
        },
        "item": {
          "id": "50c0a3d6-5089-4e34-a39f-09d2a660c0f7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f771a397-cd92-4650-9dae-9a6768451663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0ca090b4-4dc6-4724-bd1b-86ebd09e68ce",
        "cursor": {
          "ref": "54ecc641-d911-4b8f-a516-672d2c8b2f51",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "09222cff-f9c3-4279-9899-410fee15c2e7"
        },
        "item": {
          "id": "0ca090b4-4dc6-4724-bd1b-86ebd09e68ce",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d161c40d-41d9-4559-83d3-e82db1775b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "65496c9c-b99b-4f10-89eb-8ff498bd70d3",
        "cursor": {
          "ref": "8a767230-01b9-4168-9087-b87e294624e8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "09f307d7-0527-46ff-9745-56afd52cbf89"
        },
        "item": {
          "id": "65496c9c-b99b-4f10-89eb-8ff498bd70d3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5221a408-f886-4985-bc5a-50dec2d810af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f2e90c14-88b0-4b50-a4f2-1d35be371ef3",
        "cursor": {
          "ref": "8b870e9b-7710-40d8-9a86-703f8003130f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e9ed8135-cae3-4da5-aa9b-5865f8773ff2"
        },
        "item": {
          "id": "f2e90c14-88b0-4b50-a4f2-1d35be371ef3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5e6329e5-2d30-46b8-b8e9-398e31834833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4c828d59-a7b6-482b-a1d8-1bf0d10ab675",
        "cursor": {
          "ref": "1b8685f1-92b0-4b3a-8e36-4aef25799b0b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "08eade7b-b53a-4ce7-83f8-49f4ac821130"
        },
        "item": {
          "id": "4c828d59-a7b6-482b-a1d8-1bf0d10ab675",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6de343e2-0a30-41cd-87eb-55a43e30ee9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ec14bea3-47a4-4320-9773-0dcf08ca1403",
        "cursor": {
          "ref": "c397c0f5-bba3-4ac3-9a6c-256875312052",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "929b310f-25cc-4269-ac87-94d83f5b6106"
        },
        "item": {
          "id": "ec14bea3-47a4-4320-9773-0dcf08ca1403",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e00abd5b-ebb1-4366-9bd1-6195d150ced7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a2e221-98d9-455b-9fd4-4c0fcb4c6019",
        "cursor": {
          "ref": "41b49b93-0183-4b45-9566-8d07564f08ea",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "be6830a5-4cd2-4203-9443-bd711b37f8dd"
        },
        "item": {
          "id": "36a2e221-98d9-455b-9fd4-4c0fcb4c6019",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "90e97d71-5910-4bb9-9d27-4ad36c1c7212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f1ad70-f3d1-42bb-ab52-421b1ffedadb",
        "cursor": {
          "ref": "7b85fc6c-0c6f-4209-93d3-46633f242bb8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6d8554e2-8c4b-4cd3-9c71-cc4b13e4758d"
        },
        "item": {
          "id": "90f1ad70-f3d1-42bb-ab52-421b1ffedadb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "16d7b7c7-0291-4e62-bfd8-deb64d3b0508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127b7655-531f-4aa6-a91d-897efcc7d24e",
        "cursor": {
          "ref": "3da32a2b-87d0-49f7-8231-89c04aa7d561",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2ff505da-18c0-457a-8402-761a514aae01"
        },
        "item": {
          "id": "127b7655-531f-4aa6-a91d-897efcc7d24e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ad42ad39-17ea-4457-b62b-150e2960784d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd6dfc2-a92e-4d46-9326-33094b5e3158",
        "cursor": {
          "ref": "6e774db3-6ef2-4465-92a7-bae531798f6b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d4c6bc95-737f-40af-bef6-f73a5406691f"
        },
        "item": {
          "id": "cdd6dfc2-a92e-4d46-9326-33094b5e3158",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "33893e8d-3a3d-4f7d-89a3-22190e598650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6205f3e-8585-4891-ad08-048a7a252db3",
        "cursor": {
          "ref": "fec9c6ad-ddae-4678-9222-11860c999bc8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5f58f6a8-5b86-4048-ad45-135504818351"
        },
        "item": {
          "id": "b6205f3e-8585-4891-ad08-048a7a252db3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8a7a9abf-15cd-4195-af41-00b7ff9144df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eed67a4-9e8f-4b37-a33d-0d886975a0ea",
        "cursor": {
          "ref": "c4c892d5-74ba-47d2-b6f4-930e3689b7a8",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0fe5575b-7faf-4ab4-92d0-0c1ef1e7375a"
        },
        "item": {
          "id": "6eed67a4-9e8f-4b37-a33d-0d886975a0ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1be28b96-74aa-40b9-96cc-33cc986b2759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2472b1b-9a9b-456e-97e4-d466155bb0c9",
        "cursor": {
          "ref": "4a7f28d5-1055-46ed-b0d5-12b3bcf1dacd",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b113981b-1dbf-43d7-82de-3bcff528d8c6"
        },
        "item": {
          "id": "c2472b1b-9a9b-456e-97e4-d466155bb0c9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6a842faa-8140-4726-b2d6-27731642e48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5579df2d-919f-4dd7-9ac3-dba06c49fb43",
        "cursor": {
          "ref": "3c3928bc-954d-44c0-9faf-6e713da11912",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4f8cb117-0280-4ecf-837d-898893b92089"
        },
        "item": {
          "id": "5579df2d-919f-4dd7-9ac3-dba06c49fb43",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "66bb23ab-3b91-4d6a-8441-a7d342715946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7adf907-f3c5-4e76-abd3-74c6a4e28e38",
        "cursor": {
          "ref": "5e64a718-a79e-4a84-965b-64c5352b0ab2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a044c1e1-5e8c-41b7-936b-72cf1428aa98"
        },
        "item": {
          "id": "b7adf907-f3c5-4e76-abd3-74c6a4e28e38",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "43bc36d5-ab70-40fe-849d-3ddbef6e0f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cb171f-1c52-45ad-b98f-4b36b9c92ec5",
        "cursor": {
          "ref": "af18792a-5683-454c-a52c-9dc9554c7f56",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4f94b700-3ab9-4624-8c96-7688f643f6bc"
        },
        "item": {
          "id": "75cb171f-1c52-45ad-b98f-4b36b9c92ec5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1be55280-ee8f-490a-83e1-c6307af2ecd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ad4506-279c-4fe3-8faf-cbd74ffee46f",
        "cursor": {
          "ref": "90a440c2-3c7c-4453-8a27-632f370c3db4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "aad7065c-0cb7-44ba-b8ce-154d504c64f6"
        },
        "item": {
          "id": "19ad4506-279c-4fe3-8faf-cbd74ffee46f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d470050-a5cb-4675-a749-66f1483694f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44681b82-ddaf-4f82-84ae-722a247a6a5c",
        "cursor": {
          "ref": "03ed761e-7e1d-41d3-9fa1-981acc156f9c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d04222ef-35f8-469a-9c6c-b1864685d741"
        },
        "item": {
          "id": "44681b82-ddaf-4f82-84ae-722a247a6a5c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "956610f9-331b-4916-baf0-a892e8d63d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cfa77d-e388-4b1b-b844-e6a233deeebf",
        "cursor": {
          "ref": "df98a6d5-a31a-4438-ac70-2e5131fb5f76",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ff38e6e0-8150-473e-b3c3-448099721059"
        },
        "item": {
          "id": "d5cfa77d-e388-4b1b-b844-e6a233deeebf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "31f968ad-268b-4975-a4e9-9a70c37a2518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48557415-9e78-48f5-92b7-6c603c659810",
        "cursor": {
          "ref": "ffb06a7f-147a-4881-8090-be53981f6022",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7a1410c4-e031-46d1-8f68-cacc9588edc2"
        },
        "item": {
          "id": "48557415-9e78-48f5-92b7-6c603c659810",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cde0b0e0-e255-4e3c-931b-5f2c80143bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b90d64f-0392-4ba1-8463-9b05c6776da9",
        "cursor": {
          "ref": "9c626424-c5e6-4875-a742-38cedad006e5",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4970b7a5-d5d0-40e7-88c4-05b2b272f787"
        },
        "item": {
          "id": "6b90d64f-0392-4ba1-8463-9b05c6776da9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b5ffc7ba-bae7-4ed4-93d1-61259513705b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f560c51-9399-40e8-b739-00e743a0fd2a",
        "cursor": {
          "ref": "e861338a-2f9e-4397-a6c9-9f15caf7dd85",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "03faa1ca-e043-43e0-8ff6-7cdd3ef8f126"
        },
        "item": {
          "id": "0f560c51-9399-40e8-b739-00e743a0fd2a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "037ee828-2601-4cfd-aa12-2dc8cf568d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db4c97b-ff41-42f9-8527-3657f2d7bd98",
        "cursor": {
          "ref": "cf133ac6-c6a1-4b03-8d9b-6cfb71571f6d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6c58dbe5-44af-4361-a19e-b9c1555b381c"
        },
        "item": {
          "id": "6db4c97b-ff41-42f9-8527-3657f2d7bd98",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8461314c-363d-4b6a-807b-cc1918bba1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022af50f-9751-488a-9c5a-19048a721619",
        "cursor": {
          "ref": "c25686b1-6235-4e53-9b0d-caf573b11b74",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b0f9e27e-9aef-4482-ab08-225406f5c626"
        },
        "item": {
          "id": "022af50f-9751-488a-9c5a-19048a721619",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e5b2dd33-6f17-47b4-a809-54ebd1538dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f707f7b4-acc9-47db-b1db-d68039f9ba46",
        "cursor": {
          "ref": "44ba6f6f-5545-49c3-9d42-6fc24eb095cb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6dbbca86-18ab-4398-ae25-440efcd1f1e8"
        },
        "item": {
          "id": "f707f7b4-acc9-47db-b1db-d68039f9ba46",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3fb59c94-7c21-449d-937a-52c6c93b8bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3840aa14-d497-4b84-837b-6127db4770b7",
        "cursor": {
          "ref": "d100d53c-4ee0-4b78-aa64-9cb3a4bb37a6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "abad0009-f599-4472-9b27-7be611b93872"
        },
        "item": {
          "id": "3840aa14-d497-4b84-837b-6127db4770b7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "60f3cac2-9570-4c03-88e0-a60ba4cf364e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda16da4-830a-4968-80a7-57ec7e1be40a",
        "cursor": {
          "ref": "d9baac58-151a-4008-8274-64a6d33ae585",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2f5a36e2-80c2-4f5b-ad1a-5ca1443eb62e"
        },
        "item": {
          "id": "dda16da4-830a-4968-80a7-57ec7e1be40a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eed972a8-0748-4083-b3d2-09c0a77ff60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5e4d8b-4933-4c97-b88c-c9a60f78fabf",
        "cursor": {
          "ref": "3fd5b909-b547-4174-b3b1-92c6fac7e9cb",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "51722f6f-8c07-46fd-a61c-290e512737f8"
        },
        "item": {
          "id": "ba5e4d8b-4933-4c97-b88c-c9a60f78fabf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a5a1d9d5-4141-4854-ba2b-8b29ee37747f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c676b3f-763c-4f39-a54d-96a16172823d",
        "cursor": {
          "ref": "8b541c0b-cdb6-4578-a263-54b0831f52d6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a197e24b-7197-41e5-8f69-c06e603f1c7d"
        },
        "item": {
          "id": "9c676b3f-763c-4f39-a54d-96a16172823d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "18776804-b2ea-4a73-95b2-65f545335674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9944652c-556c-46e5-aa8c-592c14e1cf03",
        "cursor": {
          "ref": "09e28e58-86d2-4187-ad5c-fc42170e9567",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9fb98c96-d694-4b94-95fa-6e7334d0b37e"
        },
        "item": {
          "id": "9944652c-556c-46e5-aa8c-592c14e1cf03",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f25e3b53-2011-4c07-b81b-df881833be80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d98ba9f-270b-4de3-b8e4-c89b6979b302",
        "cursor": {
          "ref": "331abb84-45f0-408f-8198-1a7af9924d7f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5c045ff4-7907-479a-8277-d6039367e603"
        },
        "item": {
          "id": "9d98ba9f-270b-4de3-b8e4-c89b6979b302",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d46968c2-ebd3-4964-8c8a-8927bd311440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86537505-74cb-44b3-8c80-3a0cc194f981",
        "cursor": {
          "ref": "0b4a5f8d-5b02-4917-ac0f-cb5e6b6e92e6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "271ab6eb-1b31-426e-867f-7d919545981e"
        },
        "item": {
          "id": "86537505-74cb-44b3-8c80-3a0cc194f981",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "180301f4-e726-456d-a0a9-028b585a4bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5509831-92db-4345-9e5f-040bbca1b556",
        "cursor": {
          "ref": "5f7e4ac1-34ae-41a0-ab00-e12da3c6e71f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "838fb67f-8258-4396-b381-a9b87ec9bdd9"
        },
        "item": {
          "id": "f5509831-92db-4345-9e5f-040bbca1b556",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2b92a9a8-e7ee-4158-9ddb-323d9f66c785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8124f49b-238b-4750-a490-7eb09dcd255b",
        "cursor": {
          "ref": "7e85b1c3-ba87-4e88-8467-2b9a34825dad",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d95639d5-bb88-4c84-8e1e-542881006b4e"
        },
        "item": {
          "id": "8124f49b-238b-4750-a490-7eb09dcd255b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "95005756-00e7-4991-9436-beca71c7d075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa073f7-79a0-4d8b-b123-7a1a7530c32a",
        "cursor": {
          "ref": "b3aa0f4b-2719-4ef2-8136-afccec3ade4f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "81f9772b-1a40-447e-bcdb-1ef803b28b4e"
        },
        "item": {
          "id": "4aa073f7-79a0-4d8b-b123-7a1a7530c32a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "88fa927a-6f8e-40d2-bcfc-0d55f88c4654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29abdb85-fb55-4e12-96bc-26a906cc7067",
        "cursor": {
          "ref": "d51e9f28-2b5b-4c8e-bbed-619c804f99bf",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1893bdff-1923-487b-b225-8269f0f7f0d5"
        },
        "item": {
          "id": "29abdb85-fb55-4e12-96bc-26a906cc7067",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "524d2aae-205a-4e30-8a67-9fbfde768291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dadef4c-0b00-471a-930c-7cd8282a3d85",
        "cursor": {
          "ref": "94a1b272-8dc2-48de-9f55-023bd62fdebb",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ad3c527a-5d0e-45d8-b809-859bc7322725"
        },
        "item": {
          "id": "2dadef4c-0b00-471a-930c-7cd8282a3d85",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f264b1bb-ac3d-43c9-a8ab-d7a463abea4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fe319f-77d7-4b6e-bb59-e5f441ce8291",
        "cursor": {
          "ref": "ce8bd362-416a-4303-a858-e8d14ac2ffc7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "63f731e4-15b2-4451-b776-931547650d96"
        },
        "item": {
          "id": "74fe319f-77d7-4b6e-bb59-e5f441ce8291",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "142e13c8-2f16-47d1-a041-02b8200e2335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d07e9d-7e25-4922-b6e2-3746b50ec88f",
        "cursor": {
          "ref": "56c9734e-081f-401f-b49e-d86c6696e537",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "63ad5419-9ffb-41d2-97ff-f8ad34d6319b"
        },
        "item": {
          "id": "54d07e9d-7e25-4922-b6e2-3746b50ec88f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "314efd41-b560-4295-bafc-9b32c6036b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a940b465-810d-4ac2-9a26-9e8893e41196",
        "cursor": {
          "ref": "4a0b458a-9f6f-4ec2-81b5-27bf8c7c790b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4a2f1a04-85db-4ef8-855c-3192d70126ca"
        },
        "item": {
          "id": "a940b465-810d-4ac2-9a26-9e8893e41196",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b0238136-4582-476c-a4d2-58a13cea023e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4d4312-2c07-4fb4-8ec2-c45d4ee14e72",
        "cursor": {
          "ref": "3652939d-5fd6-4f72-b05e-db6927a1c0be",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9b368e76-75dc-4628-8e52-c8143801495e"
        },
        "item": {
          "id": "9e4d4312-2c07-4fb4-8ec2-c45d4ee14e72",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "75a1f39a-06e5-43f4-ab8f-b3c2f79c4ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577c1b19-e439-47d6-bbb7-302e465a20d8",
        "cursor": {
          "ref": "5f322ba6-6ec9-4151-823e-d6159237e4ab",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c49b1832-608d-43ba-bd57-8b8b4fcdd013"
        },
        "item": {
          "id": "577c1b19-e439-47d6-bbb7-302e465a20d8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2a12dac7-ab6e-440d-b72b-5eee908679e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408bed1f-5f9d-431b-9c48-373294fc7677",
        "cursor": {
          "ref": "2751a02c-c774-4f5a-b0c8-2e6bd1213db2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "914adab4-c3f7-4792-ad6c-d801943c878c"
        },
        "item": {
          "id": "408bed1f-5f9d-431b-9c48-373294fc7677",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5f1c903c-991b-4346-9aba-b888ffaef29c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeeebad-a90e-453a-b3f8-224685525d73",
        "cursor": {
          "ref": "4f3a6f94-1e6b-462b-88b4-11d2228e0664",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "08df000a-2fc1-41a7-b134-28d6064fbe46"
        },
        "item": {
          "id": "ffeeebad-a90e-453a-b3f8-224685525d73",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cf81d246-8d05-408b-88d5-b1ae784d9679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fe0513-16ee-49be-bcd1-09d41f647db5",
        "cursor": {
          "ref": "2cc96713-adf3-444e-ba5d-0ce2615b06a8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4a8fdb16-1693-4693-bbab-efb4dd8b164e"
        },
        "item": {
          "id": "84fe0513-16ee-49be-bcd1-09d41f647db5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0beb365e-82ee-458a-ab77-b09f2197d0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3d5781-e7a8-4599-8ac8-9fb760838d52",
        "cursor": {
          "ref": "09c41051-9213-4612-b3bf-ab4a265d0e43",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8830d544-d7b9-4341-990e-328a5272912e"
        },
        "item": {
          "id": "ec3d5781-e7a8-4599-8ac8-9fb760838d52",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9437374e-5c31-46b1-a827-1d45e2b3e55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53df9022-1c81-486d-955d-299522bba809",
        "cursor": {
          "ref": "f230b630-acc0-4094-ac90-ea0a0cda615b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7c2d4d37-3744-4dbb-9308-0b7e7ddbb245"
        },
        "item": {
          "id": "53df9022-1c81-486d-955d-299522bba809",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b0c0bebb-94f4-4c62-a4de-a56799f2e782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ef3d18-4597-4ea1-b0ed-c191df51cafe",
        "cursor": {
          "ref": "d5e27904-7a70-4e85-8db4-03df71c79d30",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d1b1741c-0932-4edc-a52b-85c52db07c77"
        },
        "item": {
          "id": "d9ef3d18-4597-4ea1-b0ed-c191df51cafe",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3f132feb-8c4d-441d-a4da-2b5980311bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89097fa2-0ae8-4b2e-a85a-89ce8c78ed21",
        "cursor": {
          "ref": "81d66404-9675-400f-9de4-b09592d5743e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "02ba8ca0-b29a-4a48-b34e-6cc72dae0085"
        },
        "item": {
          "id": "89097fa2-0ae8-4b2e-a85a-89ce8c78ed21",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "45a1bc53-7460-47e4-a375-a999840ddb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c117b91-2aa8-430e-b9f2-4396959afffc",
        "cursor": {
          "ref": "d7526695-88cc-4ac6-98e7-c9895436112f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "777e0fcf-7ad2-406c-adda-1be0daf7fa7d"
        },
        "item": {
          "id": "8c117b91-2aa8-430e-b9f2-4396959afffc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "12debacd-6ca6-44ca-95ae-517bd404feb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82aa048c-660d-49d2-bf5f-68ae3962b51b",
        "cursor": {
          "ref": "46bc6aba-dc91-49c8-a4bf-39661e2f854d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dcf9bd73-6ed6-469d-8c12-ffb7014c71d7"
        },
        "item": {
          "id": "82aa048c-660d-49d2-bf5f-68ae3962b51b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ef714fc0-c528-489e-96ef-a49d90600028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e110cd3-4244-487b-977d-861def536d55",
        "cursor": {
          "ref": "3623910c-5d0e-4dea-9264-9b4cdd1408cb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "da5c3249-d66a-4918-a6f3-d6db2367a060"
        },
        "item": {
          "id": "0e110cd3-4244-487b-977d-861def536d55",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8c499f7c-ca60-4405-9fae-935c2b52f14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54455d38-13b6-49ba-aa1f-0b5dec42d1a9",
        "cursor": {
          "ref": "4f11e8ba-2e78-4b59-86ef-48e198ef4960",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "24d113a9-d582-4711-b19d-be6fb22c1d8d"
        },
        "item": {
          "id": "54455d38-13b6-49ba-aa1f-0b5dec42d1a9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cb23b522-d451-481e-be3c-64774d3afe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feab8d60-52f2-48f5-94cd-3a7060831826",
        "cursor": {
          "ref": "af08ea13-dc88-4ce5-97f1-0ed84d2aa88c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "39d8395d-a2f6-4b36-a8b6-54c720c13be8"
        },
        "item": {
          "id": "feab8d60-52f2-48f5-94cd-3a7060831826",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e362ffc6-3bcd-46b8-b7a3-5f5ec1438089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71265db-3548-495c-9de3-9c0d2cb33b42",
        "cursor": {
          "ref": "ad8cc1e0-ab1e-4774-9d0a-9f88b6e50142",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7ffbe3de-eb4e-4110-b515-219cd03917d1"
        },
        "item": {
          "id": "b71265db-3548-495c-9de3-9c0d2cb33b42",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1fb6f608-bdb6-41ff-b392-7edacd334b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dad756b-ee95-4c18-b0bf-32569d1e7642",
        "cursor": {
          "ref": "1166f560-61a2-45b0-9240-732b2a0e87ba",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "64647b6e-abbd-41c7-b422-5c17530fd4c8"
        },
        "item": {
          "id": "6dad756b-ee95-4c18-b0bf-32569d1e7642",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f66f9819-7a5e-4df6-ba6d-a3db0918ab3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6771a7-df11-46dc-aed4-dcef0673d475",
        "cursor": {
          "ref": "d1813a16-58e3-4262-88e5-03ff0619199f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "12aaa7c0-8d89-45cc-be7c-941b59cfcd42"
        },
        "item": {
          "id": "8f6771a7-df11-46dc-aed4-dcef0673d475",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6df46607-f5b9-49ff-b097-85f81284bdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ebd479-7c36-4163-b650-bbf367981686",
        "cursor": {
          "ref": "2331eb69-f46c-44fc-af2f-0817cbaf8584",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b4fe4fed-ade5-4267-b47b-788cc7aa8f56"
        },
        "item": {
          "id": "c2ebd479-7c36-4163-b650-bbf367981686",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a835092c-727f-45d8-b15f-93aa30433ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40468959-0ceb-452e-9141-099fc975c95c",
        "cursor": {
          "ref": "7e684a9d-5008-4411-b2d9-73b4aee581b6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b639ccb0-7460-47ef-9a65-650aa56ce371"
        },
        "item": {
          "id": "40468959-0ceb-452e-9141-099fc975c95c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f480264f-f5d2-4dfd-9bb6-871d2f8392b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b7f1d4-8313-4880-b329-ed51c319591a",
        "cursor": {
          "ref": "d4d7923a-7b5f-49d1-9aa8-14905800f46a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "400bcadb-f7bb-4fd5-97c8-fec11010144f"
        },
        "item": {
          "id": "15b7f1d4-8313-4880-b329-ed51c319591a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "299e29fc-a5e7-4f1e-8999-4fa7bf7603c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdf79fd-0422-4c48-95cb-a0bc2119fe26",
        "cursor": {
          "ref": "3b8c95a1-108c-4dbe-baa5-4baff23c4462",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9c231d64-c962-48e5-9177-7665a42620fd"
        },
        "item": {
          "id": "7bdf79fd-0422-4c48-95cb-a0bc2119fe26",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8ad95383-a44a-417a-a330-d0632d123152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d749f-c796-434d-ba49-f07abc1ed309",
        "cursor": {
          "ref": "0af4397c-2fcb-43ed-9d68-a9dd739650cb",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "956b9713-40b0-4f2f-bf96-f053c0eba84c"
        },
        "item": {
          "id": "6c4d749f-c796-434d-ba49-f07abc1ed309",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5783029f-7219-4ad9-8a01-6b841265b6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9bd318-e5de-445a-a985-e5a246bf7716",
        "cursor": {
          "ref": "187ebcd2-b4fb-4479-b9c4-a80664f44ff2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "985c98c0-c53b-40ee-aed9-9157f7875615"
        },
        "item": {
          "id": "be9bd318-e5de-445a-a985-e5a246bf7716",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0c6184bb-38e5-4fd1-a646-58f4594b4597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b506b906-8abe-4c14-998b-6c96ba3c1c9d",
        "cursor": {
          "ref": "a007183f-939b-4d75-a5af-050d8475b789",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "524efa39-88b4-4a00-9e10-f84f3298bbcd"
        },
        "item": {
          "id": "b506b906-8abe-4c14-998b-6c96ba3c1c9d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "999f2d1a-7bc1-4b28-b028-ee467a23ed1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a243cc-3b95-4eb8-9b66-a00604b45442",
        "cursor": {
          "ref": "d65f2aca-ba8d-474d-8f13-8e9601e110af",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "73bac1cc-4fd3-433e-88cb-264e9074d09f"
        },
        "item": {
          "id": "e6a243cc-3b95-4eb8-9b66-a00604b45442",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3935d659-4489-480b-a46d-22de650850d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06fbb7a-0e1d-41a6-9c1b-1913001797d2",
        "cursor": {
          "ref": "804062ae-5142-4951-8566-1e8cd9ea9a57",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8de6eea9-6945-471e-94a9-53d96149dd07"
        },
        "item": {
          "id": "e06fbb7a-0e1d-41a6-9c1b-1913001797d2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fb14bd29-c4ad-44e7-bdb0-0b93cc35fd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81349d12-ed3b-4936-b41f-5591c4260e52",
        "cursor": {
          "ref": "88b0add5-0328-4673-b7c1-b80b3385a5d9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "27b7979d-7f7a-47a6-8371-d5164bd911d1"
        },
        "item": {
          "id": "81349d12-ed3b-4936-b41f-5591c4260e52",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dd7ddf55-7411-4a83-a183-e2c189582534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea01e3b-d409-45e7-bdb6-a5344d0ee83c",
        "cursor": {
          "ref": "27f3d451-16ad-4ef3-b7f9-62b6cbd60dd8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c73c8798-55b5-4ad1-bbac-e50118402e1e"
        },
        "item": {
          "id": "9ea01e3b-d409-45e7-bdb6-a5344d0ee83c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "930f060a-bd87-4a3a-82b0-1f83a18a19d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d51cbc5-cd71-4373-8d61-d54feba9476e",
        "cursor": {
          "ref": "58ff3fad-bd42-4481-a9ed-f7c8a372d0c8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ee23d8bf-8eee-4ead-bcf7-be5964c4c107"
        },
        "item": {
          "id": "6d51cbc5-cd71-4373-8d61-d54feba9476e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "37de83f4-818b-4db2-b022-aa1e2e394da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2bfdd1-bb64-4bc8-b16a-f6da2934a1db",
        "cursor": {
          "ref": "afa63c4c-870b-4618-81d5-34ee4f0f9dbb",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f8b082db-adb7-47da-877a-dc836146f539"
        },
        "item": {
          "id": "8d2bfdd1-bb64-4bc8-b16a-f6da2934a1db",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a55c9eec-86d9-4182-b108-5004f93e5127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d77939c-9d10-449e-abca-59b451709810",
        "cursor": {
          "ref": "bf17da5b-913a-42c7-acc8-23719c1768d8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2e5fe9fd-26ee-4fb7-81a6-c4b13c0c0dfc"
        },
        "item": {
          "id": "8d77939c-9d10-449e-abca-59b451709810",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "def900ae-e0e9-443d-be24-eb4c0c258ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56131a15-bf22-4293-be3a-8c4417434563",
        "cursor": {
          "ref": "a469d5a2-4eae-45ab-8bb0-19628f7b8c69",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5d4c2373-a44d-495e-85f2-f61c83eec302"
        },
        "item": {
          "id": "56131a15-bf22-4293-be3a-8c4417434563",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e484429a-1828-43e1-82da-cf3b3836925b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db741ab0-cd33-4a87-848f-df0f6e8f8117",
        "cursor": {
          "ref": "79eb4ad9-ae91-434e-a08a-05524591472e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c762f9e5-5956-4767-a303-610c3502d1e0"
        },
        "item": {
          "id": "db741ab0-cd33-4a87-848f-df0f6e8f8117",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "83cb1431-c94d-482f-a831-0f29a7537a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc013d24-f42c-4df1-9986-5c4708e02e9b",
        "cursor": {
          "ref": "def1a4fb-04a8-4e03-9f4c-d04858f9ad89",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ac032fc2-acac-44dc-851f-b68e1232aac0"
        },
        "item": {
          "id": "bc013d24-f42c-4df1-9986-5c4708e02e9b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "85b74df6-83a7-4914-8b64-6475cacaef72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a84e35-efa8-4d0d-b3ec-9ad0734d3923",
        "cursor": {
          "ref": "81a679a8-86e0-4e11-9ee7-5a30412f23e5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "945c9565-ce75-4df9-870e-af272901bac8"
        },
        "item": {
          "id": "27a84e35-efa8-4d0d-b3ec-9ad0734d3923",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "02ba6e73-c01e-44c0-9849-7cd631f68b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdfb39a-0271-4155-a222-45cac618daa8",
        "cursor": {
          "ref": "986bd586-6c15-476f-89f6-6548ba21c0a8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "db10034f-a36c-46ef-8cf1-eae975ed275e"
        },
        "item": {
          "id": "2cdfb39a-0271-4155-a222-45cac618daa8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f35d4ac8-42ec-4571-b643-12ba5ce1acfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab8502a-106a-42cf-8a6b-70856b4cb8af",
        "cursor": {
          "ref": "7035d12e-3276-4e78-94c1-bbcd80f0bb56",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8ac62e84-c7f8-4ccd-9302-2ff56e0c4a2c"
        },
        "item": {
          "id": "5ab8502a-106a-42cf-8a6b-70856b4cb8af",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9b916a05-8eb7-43c1-83ae-7a2492d806e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb2aaff-caba-439f-9564-18fe3d45edd4",
        "cursor": {
          "ref": "8364e7be-dced-4c28-85aa-4ceb9442c6e2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1b7dab4f-9384-40c1-bd85-156378a6b55a"
        },
        "item": {
          "id": "1cb2aaff-caba-439f-9564-18fe3d45edd4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2d6e65f7-85b5-4ce6-8e14-db3638b9750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d402547-1680-4366-8558-053b75d2273c",
        "cursor": {
          "ref": "65748d24-a554-45e9-a8bf-ebf8c1be2fa9",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bb724ad0-5845-40ba-806d-3d1f97e46079"
        },
        "item": {
          "id": "0d402547-1680-4366-8558-053b75d2273c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b3e8054b-2587-4f2e-a89a-bce3e8ab0b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9e7a54-3041-4d03-850f-195192c44715",
        "cursor": {
          "ref": "207bfa05-a70e-403b-ab8e-ff123e4d853c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cb09770b-40d3-48e6-bfeb-a1b59383cd5c"
        },
        "item": {
          "id": "3c9e7a54-3041-4d03-850f-195192c44715",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a88e4427-78dd-483c-b6fe-f848ba2f1a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c605d0f3-57bb-4523-b5f1-ecddbaf522e8",
        "cursor": {
          "ref": "68f4ad68-12b9-4e56-9a66-16fc5c58acc7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7e561a7b-ed05-4103-80f7-dbd5c8d6a156"
        },
        "item": {
          "id": "c605d0f3-57bb-4523-b5f1-ecddbaf522e8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "330f8fc1-99d0-43ac-8773-7354434746a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f098da-b4e9-436e-91aa-903b2eac01b3",
        "cursor": {
          "ref": "dd521df8-463e-44db-88b7-07aaf07e6653",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "715267d7-0f57-43b0-b5ea-a91be5b2a90c"
        },
        "item": {
          "id": "93f098da-b4e9-436e-91aa-903b2eac01b3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e0a0e040-2812-4507-8472-db820564591c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967ebf4f-319b-4385-b880-c8c8eec38fe3",
        "cursor": {
          "ref": "d4f3892b-be29-4e9b-8066-474ee3c459d4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d98bcb3d-62f7-4495-a706-1b5de71f3aa7"
        },
        "item": {
          "id": "967ebf4f-319b-4385-b880-c8c8eec38fe3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d0c4ab77-0e7c-464f-804f-5017ed04dc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc1847c-fdaa-4a39-9cae-fd596dfeb674",
        "cursor": {
          "ref": "96bdc9d4-e6ad-4f48-ac0d-9d4a66080f40",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a69560ca-4cb0-4135-9120-cd86ca805992"
        },
        "item": {
          "id": "4bc1847c-fdaa-4a39-9cae-fd596dfeb674",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d4953e82-e913-431a-8ec1-16ed4241a03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5c199a-b25c-4c76-b7ed-e050aae21152",
        "cursor": {
          "ref": "0619539a-ee59-4fbe-8706-d913c5b4d34f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3edb138d-ccfa-41f6-a7d6-109fc83f6aa3"
        },
        "item": {
          "id": "8e5c199a-b25c-4c76-b7ed-e050aae21152",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "98196781-eaac-4874-8a03-d3a734d9dc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86751f1-63a2-440d-8c56-390116d2e80f",
        "cursor": {
          "ref": "db4d81ad-eacb-4bb6-b1b7-83afc6522951",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "909f7ba4-9204-41e7-884b-d12961aea30e"
        },
        "item": {
          "id": "e86751f1-63a2-440d-8c56-390116d2e80f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "178d9be8-c289-496b-adc0-a9fefe96ec8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eda5dd-f8b3-4800-89f7-8cdb157e6829",
        "cursor": {
          "ref": "2a4ba469-70b5-4582-8911-23fe6e5269ea",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a0df918f-ccf8-417e-8479-f63d940aa0b2"
        },
        "item": {
          "id": "69eda5dd-f8b3-4800-89f7-8cdb157e6829",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "70c205cf-ea59-4fd1-9c22-b9925dbde571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410b5e0e-4ffa-48da-8153-9e651cfb62f4",
        "cursor": {
          "ref": "8b8e0d5d-3668-427b-884e-f2b3c0ca15d9",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f01b6899-b344-4cf2-baca-fd37afc6ab01"
        },
        "item": {
          "id": "410b5e0e-4ffa-48da-8153-9e651cfb62f4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "05aa35e6-cbe6-4d6f-a2a4-30fe73899f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2c8e73-7103-4bab-b29e-9f807fc60b40",
        "cursor": {
          "ref": "9a6caae9-f309-46f0-8723-3a6d11b4187d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "87708b2d-46ea-498e-8135-77d00a11e783"
        },
        "item": {
          "id": "1a2c8e73-7103-4bab-b29e-9f807fc60b40",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4c7cf775-b9d2-422b-80fe-6771710b7ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660e0b6e-ce8a-4856-beff-9682abae1261",
        "cursor": {
          "ref": "c90b8372-cf87-4585-80ef-77ef3eff35ef",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1403ec04-3e23-4c8b-8bd2-158f469a12f7"
        },
        "item": {
          "id": "660e0b6e-ce8a-4856-beff-9682abae1261",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3ab0c8dd-ad63-46c5-b28c-322951f1ae46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d6bc67-19b4-4091-bef4-1369b27212a7",
        "cursor": {
          "ref": "80eab373-d3b5-40b7-abc3-9c3ac6636cde",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "63cff59d-6be1-49da-a042-ecc410df82bd"
        },
        "item": {
          "id": "34d6bc67-19b4-4091-bef4-1369b27212a7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4747c580-e8e9-48a6-b15e-5ceca55f9102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ab9c97-98e1-4014-aed0-65ed65cc6b10",
        "cursor": {
          "ref": "76521318-4741-401c-b8f1-3f588b34e394",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "387a6ccc-9501-4848-9c2d-490b7b541b6b"
        },
        "item": {
          "id": "69ab9c97-98e1-4014-aed0-65ed65cc6b10",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "68f11ecc-9878-4d21-bb60-a309aa2c2305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5fc964-139b-4876-a2f0-2b341346b0dd",
        "cursor": {
          "ref": "a2047f4d-acc6-4595-be2b-50574081a4a1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2adaf4c9-a889-4124-ba13-a6457f4a90ec"
        },
        "item": {
          "id": "2a5fc964-139b-4876-a2f0-2b341346b0dd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c1d45704-d6f4-4d88-ab33-a22d1c30f8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8157fd66-6e9e-44c6-936d-6b5ed09be091",
        "cursor": {
          "ref": "de869960-5c5b-42b6-b2b0-357491235fab",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7804b590-f607-47ad-8fbb-021523a24422"
        },
        "item": {
          "id": "8157fd66-6e9e-44c6-936d-6b5ed09be091",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "68ff2e54-2fb8-44eb-a8ba-fa871df0ff83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4e18c2-bb8d-4448-b59f-77f5a01e84a4",
        "cursor": {
          "ref": "d3fa08c4-d797-4c13-bdd7-2f6b3c5e185b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f0da57a3-9188-413b-a160-23eec369ac00"
        },
        "item": {
          "id": "2d4e18c2-bb8d-4448-b59f-77f5a01e84a4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "530efb04-af9a-4c38-8d31-cb33ed7f80c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8befba5-241e-4a91-940c-547c150acc8b",
        "cursor": {
          "ref": "3e0aca6d-1859-4263-be1e-4a2439b4c613",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bc2d8d06-fd47-4a5f-9e28-4261a4ca6d8f"
        },
        "item": {
          "id": "a8befba5-241e-4a91-940c-547c150acc8b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4ef34fdd-dbaa-4fc2-ae3b-fa9010fcaf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daad023b-ea5e-4565-b0d2-30609ddbfd94",
        "cursor": {
          "ref": "2f7c6af8-3f3f-4141-90d7-9de14fbc1d2b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2299da00-ec73-413d-9192-8b460fe72fff"
        },
        "item": {
          "id": "daad023b-ea5e-4565-b0d2-30609ddbfd94",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "298fb080-3b3a-41b6-ba2c-6b87560f513a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb4b534-95d1-484d-bd04-6d8329415085",
        "cursor": {
          "ref": "c820f257-8a11-41ad-9f82-fdbf00bbdf74",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c64a94c6-0bbf-4630-b49d-0bfefbe0ac6a"
        },
        "item": {
          "id": "abb4b534-95d1-484d-bd04-6d8329415085",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c4f06f44-9098-4d72-a325-21942e23493c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe47c0f7-719f-4761-8f71-53057ebc49f1",
        "cursor": {
          "ref": "b028bd87-99f3-4a8a-a27e-30f6a19716fe",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2af8f8c3-0ec7-45eb-a5fd-06ee76f09982"
        },
        "item": {
          "id": "fe47c0f7-719f-4761-8f71-53057ebc49f1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7bafeddd-3c28-4992-85d2-2c5ab3da1321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59c918b-fd6d-42f6-9b23-43647cca6772",
        "cursor": {
          "ref": "9658dac3-b7b6-49b1-9713-972156c453b9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "876f0605-c6e2-445f-b241-74129420a4ad"
        },
        "item": {
          "id": "d59c918b-fd6d-42f6-9b23-43647cca6772",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0f9e1ded-3fbe-4fe3-8cf7-ecefd8177740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9e98a5-e785-4bb5-9659-a85e46cf00c0",
        "cursor": {
          "ref": "5689e73e-3694-4428-a0f4-2f1a3f47cc65",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8f16949f-9be5-455e-a8d0-629e2ec35d9e"
        },
        "item": {
          "id": "ff9e98a5-e785-4bb5-9659-a85e46cf00c0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "68b06bbf-8007-45e5-a1b2-972aeec824da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687f7bc8-b489-44e0-b619-d8c8550e5b08",
        "cursor": {
          "ref": "683025b2-f5d0-40d6-8f0e-e722412f67a8",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4d59c5eb-7ac8-4cd9-ab82-7273fdf78046"
        },
        "item": {
          "id": "687f7bc8-b489-44e0-b619-d8c8550e5b08",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9d27e9cb-6265-4588-b095-784defa9ce17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eefe08-7318-4a1e-aa33-85d348c06d8c",
        "cursor": {
          "ref": "f10db202-279b-4c96-a62f-46150b1309a7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a7283642-20dd-4613-aa6a-181e3c8844d3"
        },
        "item": {
          "id": "c5eefe08-7318-4a1e-aa33-85d348c06d8c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "52afcf18-53b1-4a51-bf66-4df25551f85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fe3a96-9a19-47c8-a118-5b8d3f14fb61",
        "cursor": {
          "ref": "ea555133-7762-4d9b-ad28-9c0f885bbdb8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d9b6b2e5-ad30-46fd-8760-3a66831f3e26"
        },
        "item": {
          "id": "f3fe3a96-9a19-47c8-a118-5b8d3f14fb61",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "deccedb7-582a-43c2-9a8e-eccce6b4a908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b621e7c-b56f-48c4-a579-d65d8b3dac56",
        "cursor": {
          "ref": "8cfe4ee3-2727-43c5-9779-8727261c2c5f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7f76a725-0d1c-42e1-8c54-0608431b8b76"
        },
        "item": {
          "id": "4b621e7c-b56f-48c4-a579-d65d8b3dac56",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c6f51881-def3-4488-ad53-628ce5f04415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60cb74-b250-4909-a06a-f5aaf77a7c96",
        "cursor": {
          "ref": "cb7970ab-8409-47d3-b12b-5ba54a0b4d46",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cdbb07f2-ffbd-4e07-b90f-3e5803c3e15c"
        },
        "item": {
          "id": "fe60cb74-b250-4909-a06a-f5aaf77a7c96",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "12215081-e419-431c-9c7c-e0d1c4a02cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d61d6f-413c-4261-8cb7-2a6e91e0009f",
        "cursor": {
          "ref": "c30ce43a-f0ba-4e50-8108-608ada6d509c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "abc62882-db9f-4cb0-8f2e-1a2286a43739"
        },
        "item": {
          "id": "37d61d6f-413c-4261-8cb7-2a6e91e0009f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9098707f-120e-48df-89ef-b3aedf018a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1c8fe7-efb1-4617-ae6f-cc28dee633e1",
        "cursor": {
          "ref": "fa91aeed-18d6-4aee-aea5-8f47f85c392c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f0ff3157-c9ea-4e42-b4e9-3c3b0422fbe2"
        },
        "item": {
          "id": "1b1c8fe7-efb1-4617-ae6f-cc28dee633e1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5cd7bd56-44e8-4cbe-b0c8-3f483dc6e62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc88868-def6-411d-b537-80e7a1fe82aa",
        "cursor": {
          "ref": "37d02fdb-e65d-42e7-84a7-27ce66109dc1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c9fbae16-e83d-4585-8c9d-25d62caa3ed1"
        },
        "item": {
          "id": "1dc88868-def6-411d-b537-80e7a1fe82aa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a8c02e35-2eda-473f-8457-2d56e030f225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd265bb5-0957-4a20-92c4-9b207e98858a",
        "cursor": {
          "ref": "d6b31194-e759-4760-b76d-82476fbdae2b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9e5ddb4e-2028-4edd-87d1-bed57099ef16"
        },
        "item": {
          "id": "bd265bb5-0957-4a20-92c4-9b207e98858a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ac053dfd-09dd-4a34-ac4b-bb74e0ffe229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed6a3dc-058d-4dfd-bc73-6e4977043e13",
        "cursor": {
          "ref": "e03c26b2-e405-48d7-9dce-d18952474c40",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fc9904c4-1891-4b35-8117-8071da6a3807"
        },
        "item": {
          "id": "0ed6a3dc-058d-4dfd-bc73-6e4977043e13",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "43f199f7-2822-49c0-9196-c30488c1fccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01343c65-0e35-4f93-85a2-f4392defe98d",
        "cursor": {
          "ref": "327ac256-7468-4063-ac0d-902ec3d0c831",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d83425d9-b677-4a7d-954c-ffeb83215434"
        },
        "item": {
          "id": "01343c65-0e35-4f93-85a2-f4392defe98d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "61c54859-174d-4410-a2ad-a4017eb8677d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2907c54b-b132-4b9f-8f36-3654d349c454",
        "cursor": {
          "ref": "accb5ea6-b7a5-48a6-97b5-a481874896d4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f6edc8b2-76d8-4b93-b68f-7a08d26ade6b"
        },
        "item": {
          "id": "2907c54b-b132-4b9f-8f36-3654d349c454",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "60c30c4f-b4b6-4a25-835d-cb72ac8494be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c57f01-d8b4-40dd-aa0e-14dc575cf9df",
        "cursor": {
          "ref": "ce0f5fff-bdb3-466c-8eac-2849240d87ee",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "58d48fd7-78c8-451f-be17-a0ceef77cffd"
        },
        "item": {
          "id": "38c57f01-d8b4-40dd-aa0e-14dc575cf9df",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4b2f4aeb-bb3f-4d46-8709-cd8ae0d2d91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e158476c-979a-462b-b47f-c52f9c18d42c",
        "cursor": {
          "ref": "1720cacb-13c6-41c1-8bf6-9144a69639b9",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e8095f61-9224-4c58-bae4-e5390229fc9e"
        },
        "item": {
          "id": "e158476c-979a-462b-b47f-c52f9c18d42c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b54236e1-c3d7-4b6b-86e2-c2ff7718a81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f1be3c-ddc1-471e-a34b-79ab148f03bf",
        "cursor": {
          "ref": "0a1a0ed1-b702-4a96-b54b-c2b6982e5b8d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "66f8b877-9c63-4107-b7c5-0090f91955b9"
        },
        "item": {
          "id": "42f1be3c-ddc1-471e-a34b-79ab148f03bf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "af62fd21-bee9-4172-a668-1724fba3e35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60895930-969c-480a-9057-590d1e234957",
        "cursor": {
          "ref": "e485994c-9f3c-4d50-a850-350875820a34",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "985ccc9e-b509-47e9-81e7-9a2023ea4b8b"
        },
        "item": {
          "id": "60895930-969c-480a-9057-590d1e234957",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9836d8aa-e8b6-4d7c-82e8-f9f279106bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395ba810-6dde-4881-b6a3-03389cf2216b",
        "cursor": {
          "ref": "b12828bf-fa52-4e76-aeaf-70c1d72fbb94",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d9f04582-ad3c-4cf4-bbf1-9aaa98bc804e"
        },
        "item": {
          "id": "395ba810-6dde-4881-b6a3-03389cf2216b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e09cdfbe-0d6c-48ea-ac7a-f62ae277dd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eb7cdc-56c3-42ed-a998-84b4b572a72d",
        "cursor": {
          "ref": "9f4ce223-221a-410d-be2a-49907a36eaa9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c0da59df-3caa-4370-9e2b-ce2767d11648"
        },
        "item": {
          "id": "22eb7cdc-56c3-42ed-a998-84b4b572a72d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "70fc869a-708a-4d2b-b495-eae13c80ef48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510d6b6c-8dc0-4ad8-8875-457d3cf4fd55",
        "cursor": {
          "ref": "d967982a-38eb-465d-9c0d-181944028eff",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9b4c9a90-aecb-45f4-87fc-d2829f29e0c1"
        },
        "item": {
          "id": "510d6b6c-8dc0-4ad8-8875-457d3cf4fd55",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "34206247-557b-42bb-a6bb-44ad715470b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74988376-31f3-40d4-b071-826b2eea5db8",
        "cursor": {
          "ref": "a30c0b12-9f85-4e49-a0db-28ced5d3af43",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "934c57a0-6802-4414-bb1f-bf8e21c61bbb"
        },
        "item": {
          "id": "74988376-31f3-40d4-b071-826b2eea5db8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0a5a3d9a-5e81-4bb7-b239-2bcc218a3940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ca3b96-e256-453c-b498-f45a54040c49",
        "cursor": {
          "ref": "f3e5acd1-4219-4b76-9b60-bd4b62b58f33",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "39e81995-8028-4f92-813d-00b718db68b8"
        },
        "item": {
          "id": "90ca3b96-e256-453c-b498-f45a54040c49",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f7ffebe6-26d0-44a2-a4fd-2ad65db2f2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc086198-87e7-4255-ab61-b2c5d95b5c22",
        "cursor": {
          "ref": "9d6ffc2a-3ec2-4d08-b04e-a1a7229ecf52",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "03e37968-0a22-40df-90c0-6bb782f52a41"
        },
        "item": {
          "id": "cc086198-87e7-4255-ab61-b2c5d95b5c22",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "222abde7-06bc-474b-b249-2954fbf86abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005b0d8e-98f8-4995-a645-9f8d6bd57292",
        "cursor": {
          "ref": "a4b2cdb0-aac1-4fd3-9e80-72b5f558d98f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e6b4379d-bf8c-4c32-bbfd-f18a53baee28"
        },
        "item": {
          "id": "005b0d8e-98f8-4995-a645-9f8d6bd57292",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "54475bf6-2dc3-49bd-9a64-1b1c7e20bfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70f26ff-653f-4ddb-85ba-14481bf09ae0",
        "cursor": {
          "ref": "dec46828-e8c5-48ce-8411-d1fa01351567",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "90c686f0-11ee-43bd-89ac-83ff8ea34679"
        },
        "item": {
          "id": "b70f26ff-653f-4ddb-85ba-14481bf09ae0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "57e73230-9942-4a6b-b52f-f6e02f6b6658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9f0398-e39a-4211-84a5-09792f3702a8",
        "cursor": {
          "ref": "0d0e1c84-52c3-422b-a265-e176744ee30c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "16b46f97-6b08-4ba3-abe6-0f2eb88e5de5"
        },
        "item": {
          "id": "5f9f0398-e39a-4211-84a5-09792f3702a8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "59738102-fac1-4d9e-b697-881d29ee323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07572d65-7a41-420e-a924-477937f0a044",
        "cursor": {
          "ref": "95a23717-b1cf-4b66-b59a-771d42ddf21e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2a84c293-643b-4388-9cab-38af466329da"
        },
        "item": {
          "id": "07572d65-7a41-420e-a924-477937f0a044",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dbab19ab-d646-4ec2-8dd9-0d91ec63d9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e755c51-0e4c-4ad3-8cb8-1dfc870c757d",
        "cursor": {
          "ref": "59a86dde-ed51-49a1-8891-e1a0f8067d3c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1f5cfe35-7213-424d-ab98-b831ca995091"
        },
        "item": {
          "id": "2e755c51-0e4c-4ad3-8cb8-1dfc870c757d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1039c2c4-9359-4eec-893e-be5fc4946c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c6f73f-e2c0-4972-9721-1eb4e8baacd1",
        "cursor": {
          "ref": "8e870149-491d-4826-8559-00bc6aa65438",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ad4dcf88-cc08-4b0c-9f51-c738d88e0041"
        },
        "item": {
          "id": "36c6f73f-e2c0-4972-9721-1eb4e8baacd1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "22ff724e-1094-489c-a1f7-b12c2e5951d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb1f9a7-7011-4f3b-8bec-c51a765a1bf2",
        "cursor": {
          "ref": "af989ea0-cf58-4351-b59e-17c3ec4808ba",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c5e8e621-3924-4931-86f9-1f88f51df78b"
        },
        "item": {
          "id": "7fb1f9a7-7011-4f3b-8bec-c51a765a1bf2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2661b494-6ce8-4af7-b52d-06d63a64cdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51efb106-e2fa-4491-9096-b707489a90d2",
        "cursor": {
          "ref": "67a0c332-bcf2-40d6-b17d-813c39a6446a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "65a3e76e-631a-4b06-81c9-cd31eb8edb29"
        },
        "item": {
          "id": "51efb106-e2fa-4491-9096-b707489a90d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f8798b38-cfba-44b8-8578-7b4edacb8f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98406279-1fa0-4bce-99e4-00e22c13bde4",
        "cursor": {
          "ref": "dd0c9556-10a5-43ca-a2cd-b7efaf761f24",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8ec9b2ca-c3f8-40ae-af7a-2e7490f811ae"
        },
        "item": {
          "id": "98406279-1fa0-4bce-99e4-00e22c13bde4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "de2d553a-2409-4e85-9877-bb687f0f55ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b098bb-49eb-40e3-a75d-766d13a97c1e",
        "cursor": {
          "ref": "c23e899f-533b-4e8d-9eb4-248a2cb654f9",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "790ab874-e2a8-4101-a0a6-3fce473aa639"
        },
        "item": {
          "id": "79b098bb-49eb-40e3-a75d-766d13a97c1e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d347f2a6-a028-4014-a749-6fd41f90f793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd8ef32-f814-4fdc-aac6-dec668367168",
        "cursor": {
          "ref": "1126e82a-a252-48e5-a4b5-349733f0932d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cffe7088-529f-44c4-821d-29796d8a8676"
        },
        "item": {
          "id": "3cd8ef32-f814-4fdc-aac6-dec668367168",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f219c83d-ba98-4f0a-85fb-d754aca857c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429bdde4-21da-4695-8af2-dea1508a92ba",
        "cursor": {
          "ref": "b9a269f6-25fb-4300-8a37-3e93dbdc6abd",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "410ef1c9-3a80-4fb5-b2d5-8f1af180b433"
        },
        "item": {
          "id": "429bdde4-21da-4695-8af2-dea1508a92ba",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fe3ba565-2b10-4a38-8f26-e73731a711b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff6596a-d633-4fb9-bcf1-cf3df4b862b8",
        "cursor": {
          "ref": "ef3f092b-3f94-4b77-9a24-7121cf98852e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3d1f70a5-dda5-4a22-a628-42e574ffa1a9"
        },
        "item": {
          "id": "cff6596a-d633-4fb9-bcf1-cf3df4b862b8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "47ef5eb7-5b76-40da-ae37-229ee3b551f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9805a1-e3fb-4e5c-af43-c17439340582",
        "cursor": {
          "ref": "cdd6cd72-b80c-4ca3-9a7d-797a5c5a95eb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ac10dfa1-d95b-4c35-8edb-372da207f93c"
        },
        "item": {
          "id": "5c9805a1-e3fb-4e5c-af43-c17439340582",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "46184de8-3f32-43e4-be74-b8f345acc15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aede7cc9-44e2-44c9-ab75-804224ff42f1",
        "cursor": {
          "ref": "46ec04c2-a9c0-4cd9-a9d3-4ad6b5884900",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fd93facb-8c0b-482c-bffc-e529ce1938e3"
        },
        "item": {
          "id": "aede7cc9-44e2-44c9-ab75-804224ff42f1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "97c06d52-e265-42f5-b561-e07a342ab83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e35ab5-b6f7-4470-89fe-fd3b27591926",
        "cursor": {
          "ref": "b32bdf47-8904-45f0-9993-075d47a5c438",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "681baeeb-37c1-46b4-8a43-bb24ec5077aa"
        },
        "item": {
          "id": "60e35ab5-b6f7-4470-89fe-fd3b27591926",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3388afe0-777a-43ed-a3cd-bc3e553b3893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040b1628-0886-4e6d-9f8b-2d46aef92b36",
        "cursor": {
          "ref": "f7c05e0e-a8ec-4e57-951f-5cc3403cf975",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4ff29f57-f076-4871-993a-9660b12dd889"
        },
        "item": {
          "id": "040b1628-0886-4e6d-9f8b-2d46aef92b36",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "98aba05b-d394-4a92-8917-5915f420ed60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa967c2-595f-4b93-92b4-ed2f7672fc3a",
        "cursor": {
          "ref": "e1deffb2-edd7-467e-871f-0e81adf2f57c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8fceaf22-7edc-44aa-a9de-a7dc98928317"
        },
        "item": {
          "id": "1fa967c2-595f-4b93-92b4-ed2f7672fc3a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ef60ecda-ba13-42cc-ac40-5280dd7b93ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d4ffad-e2d3-4ad7-9e47-ef936f1fd431",
        "cursor": {
          "ref": "83185199-fa95-4036-803f-67a308d8db3b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7cdaf63c-0d54-49e8-aa53-1a4ea7edf565"
        },
        "item": {
          "id": "03d4ffad-e2d3-4ad7-9e47-ef936f1fd431",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9be7adaf-5c87-4077-828c-e36ac84228a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "db51195a-e5ee-4646-bd10-2eb7539af9d9",
        "cursor": {
          "ref": "27dfdebe-db01-4832-98bb-1ab078d55309",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "af30cc76-47cd-4004-ae9a-996bda2db45d"
        },
        "item": {
          "id": "db51195a-e5ee-4646-bd10-2eb7539af9d9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fc58fda8-cff4-4cd4-8955-c715ea657c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "58fda485-e721-485b-864a-1a63e9cbd304",
        "cursor": {
          "ref": "038d0978-405f-4fa8-8775-c63d1cdbea6f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6175ba1c-8f88-470c-befd-2adcb3e84353"
        },
        "item": {
          "id": "58fda485-e721-485b-864a-1a63e9cbd304",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "45b8e356-5572-4cb3-9863-6fd917cf35cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "903d3426-1e15-4a9c-95f3-45907e2391f0",
        "cursor": {
          "ref": "0047628e-9d11-40d8-9c45-9018af4d140c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c7cacae7-1606-4db8-bbdf-1df9235ec2e7"
        },
        "item": {
          "id": "903d3426-1e15-4a9c-95f3-45907e2391f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8410b751-7729-4a63-a5ec-85e7eee818af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d3426-1e15-4a9c-95f3-45907e2391f0",
        "cursor": {
          "ref": "0047628e-9d11-40d8-9c45-9018af4d140c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c7cacae7-1606-4db8-bbdf-1df9235ec2e7"
        },
        "item": {
          "id": "903d3426-1e15-4a9c-95f3-45907e2391f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8410b751-7729-4a63-a5ec-85e7eee818af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9980965b-a1ec-4fc2-9eba-b1a1354fe7e1",
        "cursor": {
          "ref": "de750cfe-651e-4357-882f-8e346558d49e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "21aeb591-9e05-417a-8eee-2bc68fcc154c"
        },
        "item": {
          "id": "9980965b-a1ec-4fc2-9eba-b1a1354fe7e1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0beb8085-c803-471c-bb4b-d269a2b16385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1108fd-126f-42af-9810-94299af84c42",
        "cursor": {
          "ref": "88e59f80-8cfe-46e4-a61a-31d8a90edc6e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "203565e6-62c2-4678-aabd-c4fe268f0216"
        },
        "item": {
          "id": "8e1108fd-126f-42af-9810-94299af84c42",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f66e0e75-8f09-4f32-9cac-b1ce8133986e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}