{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3ec47e07-7e1e-41d0-a537-8faf933cafc3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "27c6a051-780b-4232-860a-27f583c3ff23",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21415974-6d07-4a25-86ac-d5e98bd3236d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dd348c45-f06e-4493-b1ca-61febe0429df"
                }
              }
            ]
          },
          {
            "id": "4aa17799-61b0-4da4-8910-df2d68cec96a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c7ea858-8c9c-435c-a447-6af743dcb1c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25855ff7-b6f4-4ab4-8ce7-0633befeaa42"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "96049afc-2821-4483-88e9-a9419b5eca60",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f59f712e-0347-4b1e-bbcc-dcb4de138abf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "35905d83-0975-4f0f-bd76-bf2e8db45a05",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f5b1ac4-e644-4d3c-ba56-c7da1ec0b3a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e40db1b-645a-4c4b-9378-9be755c9b3e0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51334345-379a-42f4-83b8-4a0844c2c5a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3dd9fd5d-bde4-4c0c-8948-86477111bb3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6809d82-9dc8-4eb8-b407-1983e9351e4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d867a40-b9d9-4361-971e-5dde770e4d59"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abe1098d-21f5-4abe-b6a6-ff8c577d1192",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a7cdbe49-be8f-4aa2-b0de-00f7959d53b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eacc489d-c070-4c44-8ae9-d935a05aea81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7f9d08d-45e9-4943-8433-5284b5b3c72d"
            }
          }
        ]
      },
      {
        "id": "e792d3cc-924b-4575-965a-24cd23adee95",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5664cf5c-6c23-4c0d-b131-26c902e0f53b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9451852-ca89-4574-b9a8-f4c1d8af0aad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23cdfcdc-d2d7-4577-b041-f91fc856fba4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1f3c19-90da-4881-9af3-18b98915f16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6407a98d-7e1d-48b3-8da7-b86e8310ad35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4744a8e0-6d85-49e9-b78e-0e45eb54df5a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dd9907-3ece-4f53-b9ac-36dfaec43868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a17889d4-b153-4c77-8e37-d7326f0e0e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd63e0e0-9950-4da7-b33a-d3a897369d35",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b27b69-653f-4d04-b37b-62025fa9fabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7ea344b-63bc-436b-8d94-6c98aa6117a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6705615f-0783-4fc7-93a1-04803e68874f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3238fea-d099-40f7-8189-ddf5cfdef77b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f094b5e4-6a52-49a0-8d86-841ea05ba6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c365b42-860c-481d-8935-cce2ddc9337e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e271947-d0b4-4a69-a476-d1823cf1bcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70adaf65-5755-43f7-8d64-9892983fa7d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cd0206dc-4e29-4330-bc05-2812ed803701",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75cdf489-a027-4b3e-9052-c07c2503eab0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55a14654-06ec-4dcb-8bee-458bd99eac88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "770c1fff-c315-413e-bc2b-5885cbf97256"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05a9075e-7f8b-42d6-88b6-a4fec21e7db5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c6c8eac3-fd71-4562-8c95-02d6f239eaaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6789a8d-d469-4f4b-8a00-7b21f68cf1d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c3990d5-9f0e-4ae0-8b87-2cd5b8ce62d7"
            }
          }
        ]
      },
      {
        "id": "e6f628e1-65c5-46b6-98df-01f7480fa1de",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7eab7a79-972f-4e22-a654-79f75a432c73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbf6d99b-b76b-4490-90af-f0b19cfc2f5c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "efe85d99-90bc-4525-878f-b1288e230216",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e598a029-e6f5-4fff-b1d9-bd35879704be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847095ec-eb60-4c72-a808-7e50d6738c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5b75f4-ce29-45a1-8ab7-c46875454eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a72306a-3eaa-48a6-ab08-0044c760d12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472112be-a952-4796-8d19-b7ac8cfe1c74",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7d4763-f68c-437b-900a-27fa3029a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5de037e-ae5b-4912-87c0-fa90f10d1e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc3f85e-9611-4a26-ba22-4242f0ed5e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a06a29ad-bd1d-4305-bd20-fad7cc7a12ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cef5783-b334-4092-bb09-c4426ecd815f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5cdcbc-55f1-41de-b180-b5debf463901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0d8cc2-d8ab-43b4-80da-a613c58f4ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae474d99-6b17-4f19-b4f5-b3d99126da0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b0af193-a33e-482b-9993-ed000e560e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fef5e09-9f28-40b3-b11d-160b2bbb6522",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef2ab88-7f12-409e-a5e3-9acb54b1dd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe79045-0272-423a-97ec-a378161812aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30ff299-7737-47d6-b192-b8e1fbfa2d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8230057-0fbe-4386-bfb3-a96cf96f8f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8d6e95-ca03-4eaa-9bfe-6515f24eb8d5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d266207d-37f6-4acc-955e-fc09ec3e1c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc850e6e-6445-4050-98d5-b167289f20cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fcfcbc-67b5-4a3b-bd18-8b8fdb47bbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0126cef-d1e3-42f4-bbc4-de0feeb7d535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cdae33-3e70-4a88-b0f9-f1beb5b9cb3a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ff5583-89b8-48e3-9654-f1a454faf26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da7beee-a9e7-46d1-92b6-742ed41f9447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95d1130-becc-4b5e-a079-44e058d68ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47be982e-62b2-4065-a141-e1cb277a5a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027acba1-1ddd-4640-baf6-20e1db055a71",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7959343f-88a3-4d79-8235-9f76ae6503dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031954b6-c01c-4571-b9c9-189e70385cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ed08f-b476-41be-aa2f-f75114e94651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "706f9949-203b-480f-9764-0993bc24dffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff3dee5-2ecb-4f50-867d-30add1c37d2e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc98acf4-5581-4b18-bc65-17caae7a7b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28368fe-44da-4fb1-ab73-565c472b37f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dc7b0f-6e52-4e27-a768-ad51e635377c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ab75ad2-dfec-44f1-9436-9d9ba57962d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea1c33f-0c67-442e-890b-98f3fa0a7ba6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6b199e-6823-424b-a934-c8690ced34e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92404fcb-7aa6-45a8-bf1c-a61bb9149c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcebbb67-18bf-4fce-b239-c64edb75d44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "042572e8-4709-4e9a-aed1-814932791c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438b6a3f-3e18-48be-bed0-bb8e04d56e80",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8955d7ba-f30c-4bfd-9c40-211bd64d79ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d064e000-2c7d-4696-b727-aa16030ae574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a35213d-7b7e-4411-8b1c-ec06dbf0f39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e228b62-cad4-4b54-a4a3-af58af9c0034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa41dc2-3488-47ea-bad9-d2e0133a9bdd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96663f9b-5416-437e-8b39-81bca518cd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922574ee-b834-49e2-b991-f10be4343d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e7bb1a-06d8-4aae-8320-6e6b0181e16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba6f4e8b-f71b-4242-b3ab-a161472e5ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c066ce4b-2861-4a7a-ab53-606431a68948",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0163f592-8e2d-48b7-990c-5a6f58956619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cecd98f-a9e5-4b9c-8bbd-f7f8d3e641b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa4f903-5e78-44ac-b4ef-17c0d9a18f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7842f94-7c9e-4aef-b54d-e115e2536834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ae4484-f190-477f-9014-f15a66add963",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dbc003-1a3a-4911-a189-ebdc6de37160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df9f198-d716-425a-a70a-283b8d8019b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011a16e9-3b56-4cde-b20b-61a9de4c3e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3016beeb-0e9b-4a81-b609-ec263d54b847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbaf89f-052b-46ec-ba06-84600b62b0fc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b654de8-6d01-4266-b9b7-4401fe45b7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e9777e-982d-4ffd-b600-6ffd135ae159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a227955c-bbe6-4980-9830-cf5771b08423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e5c73ad-911f-42c2-9da1-373d7c1485c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9122ff5-1c36-45a5-9f0b-65112168c1d1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53367954-343b-489f-afc0-9d61b2dfa5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2db7ee1-f5c7-47d6-bfba-792fc441b7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2de4f6a-b299-4485-9c89-74c7612e080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07f38cf1-168d-46f7-98be-f32d17e06537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dac1259-554e-495c-aa4d-faf081d3fefc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff13c47c-5045-431f-a378-ca55fab0bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9001239d-133c-434d-8c2f-77b2c5cb8bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8d895b-7a89-4452-9a13-ff2a7d9bafe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e17f1ea3-7ec0-4cd4-854c-35e49810996d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2268ecb3-ffd3-4cc9-b69e-94a129b2dc63",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c9dff-4488-45d5-a240-fd5e85d6c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb27fc0-7bbc-4e54-b7d5-eaf572e5e20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650aa8ff-7b42-43d5-8f3b-327d5e3b0b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c50a05f-8a5a-4aad-8d7b-daef6d41c355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dadd3e3-22de-4778-a6c4-a19e6d960419",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436bd644-85f0-4643-a366-67f25f4669f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09afdc44-4bf3-440f-97a4-2d696774bb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892f632b-18cb-4f3d-b358-62a3e7a7ac0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f91971b-7cc2-473e-a494-3bcb09691c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edff23c2-2b69-4829-a28f-05e0571e5092",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57a67ec-249d-404e-ad6b-508f848aeb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de823481-67fe-4584-935a-6061cf104406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0126260-0086-4416-9972-88a499ffdf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa59105-74a6-4f4f-bd0d-94f509293d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395082f4-bf47-4225-949d-90b20e6b72b7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f81650-d425-4610-9e04-c1b28e492471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5119abde-000d-42ba-9459-a4841b2adffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008aea46-e4a0-436d-b7fd-f1d2f6d2076f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9e62e6-af76-4bfc-bd2b-5ad0b8b10959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6ab99c-672b-42be-8469-2ad92a8e8488",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72da1e9-9220-4322-91e8-12ab30e41817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc6cba9-98ef-4549-8b7c-77dcdc5f42dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83103486-a538-4ba1-82a3-a6551d7ce58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f6f18e-82c8-46cf-9cc1-d1be67fb025d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750b2c92-95f0-4abf-bc94-a0c898e70195",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509ac691-9c6d-4516-b9b5-04c5e4f4d42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed73f70-fe13-446f-9eaf-44705edcd3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65fa1d4-6c6a-4b3f-9f1f-ecb2922e2610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f42ab6fd-8175-48d3-b86e-9bf49faa5f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb236f96-bd36-4ddb-a40a-033ed790bf4a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12877a8-449e-4d3f-8cb2-8d9299c2e1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff78c765-b3c3-47a1-80ed-81e2b6203057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd82f48-df5b-4919-8cd4-10dfcec22a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "969726bc-e30e-4e37-9145-aa3638088242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6b12d0-767a-4d60-be92-3d1d5be8d655",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a4210f-4703-4c05-b9fd-a7d4d13035d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8083b5a5-6111-4293-aaf1-672c6ed74570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433e8810-8c8d-4419-b1a1-ccfa3722cbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b42f096-9bfa-4b58-90c6-85d662ee699e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb497ee8-6508-4594-b947-fb4857d9de66",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d724f-b95f-4dad-919a-405bfa4967b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf54611-8930-4d2e-9c01-dd46fd895fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c54b4c-f627-4c12-a665-9c51348e502a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01cabaf6-4f44-409a-b944-2bc8448e8af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9934be-2ed1-4e51-a827-f0a3608dc8bf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f06426f-54f8-4b18-b121-85893d81b045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afef6dd-3046-4205-b184-7300d308e8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0d4f0b-8d1e-4fa7-ba6d-7eef2e039856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d640ef-5bc8-4351-92e9-58a7f3429b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186a3d59-9265-4b6b-9727-22036cc8fef0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c692d6a-6bb0-41ad-8ef5-5fe7674e10b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7cc9c1-2796-4e6c-908f-5b29ae57bb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3c859c-ff4b-44bf-88a8-60a62b85fcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10bc435-770d-43c4-9ac2-03cb29097460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18068bb7-3630-40dd-b3ea-7355160bc9c8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1921172b-9029-441d-b274-9c922b2ff66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c930457-eeec-4380-be15-817265c782fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c140e6-59b0-4329-b2d0-73969b2a81ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd22c7f-ee03-4da0-82b6-31352ae4ef48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c43726c-7136-4cf7-bc56-cf54959c5d9f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b14236-1f2c-493d-935c-c7eb9ada740e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35080f18-75df-4a11-8d55-273a3461cc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3783c525-9170-4678-919f-5288609fb932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "edb4aed5-f40f-43f5-99d3-5e70daeeb727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08abc49e-fe1f-46f2-b965-c8302e7211aa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53037448-264e-4ce0-88da-fc8f98d6a9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58951dc0-a746-4645-bc3d-90aa0e9b28e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76891f09-1e9d-42c5-a80d-20c89e42bb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67f8c24-6725-4ffd-a8c2-7aa80d06e70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da8bf36-5c9e-4651-8446-e918766c77dd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f5aaff-4d59-44d2-aeec-4d9b6a567fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27755d04-2947-480d-ae6c-82006ca18cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565b3efd-9036-48a4-bff3-f1b798f255d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4979e003-ba8c-47df-9b2b-614dadfe5caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf40409-f7ec-4abe-b49d-6dbcf79ed094",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58480959-1280-49e3-b6f9-7f00dc8bf703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9932ead-0801-4398-9fbc-1142e9b8c684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c23803-6b15-41af-bb4c-b63105adf988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0977b25-eaa6-4256-b727-86888d54c1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53417d0-76f9-4e98-a019-975e9b997072",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522c7e48-44a3-4d44-ab98-f86109333362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fe6a58-8cdf-437c-bad1-42d7ba09848f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259626d7-f0b5-4192-b776-df53ab0f94de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1e5719-1609-45dd-bf7d-f458d0e4862a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c815a639-11a1-4ec8-8855-db9738946c8b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753fc3b3-d87f-4095-bf9d-164ba9d8bd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6af0015-47dc-4f47-8363-f179fc729df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caca1265-e449-4e6a-bfb0-3cb10ee740b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd841506-35bc-4742-a9b3-a36a9cbae0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b716d7-23d3-4525-8d3c-2fee0d209285",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cd0f20-071d-4063-99fa-6c586f313ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899a74ac-85a5-4315-bd52-bd5cf292b905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9f5f00-9770-4997-8983-49ce83ff8b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "620feefa-395f-4db1-b0af-244eb9a0ab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a54d6fd-a183-4ea8-a3d3-28ba6057dc1d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be398096-3c15-4bdb-9c90-5bf938237321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00af2314-2a11-4d66-ba55-a852ad6ce57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364d6a69-89cf-4d0b-b3c2-ea2cc2d7ac78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b60d46-ff25-4eae-bf8a-3b9c3280de57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d500cc-7711-4ad9-b8ca-a7bc34b7f301",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55526e93-2f52-4741-bd24-c9c68fad77e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a785cded-cc10-491f-88e6-b75a5687580b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fefb527-d0c4-4431-935f-40c648c15112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f9ceac-a4d3-4422-a42a-3f21bc0f331c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cb8660-eb61-4e42-9e12-2eb8144412d6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946ca7a1-2378-49f5-b38c-23c069597709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9ef56c-cf64-425d-813a-5687f0074f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee04ff8-ea4c-4970-bd65-115ae07ba688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acfa61a1-15c1-41c4-aa50-8108a76067c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d8ff25-7585-42f3-91bf-f3e26a2b5ff7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482f2c3b-8a1f-401d-886a-f15bb8240e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cab515-c7bf-4552-b53f-e22b76d9b30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322fbf1c-c90c-48bd-a80d-128edcbb16e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d80dfd-0909-46fa-8e69-17fcf49f0046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c41abef-03f6-4eb9-a90c-806c35e2ed93",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37434586-96b4-4e47-b8fb-4510ffa2444f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a62394-dbee-41bb-8845-0bdb90303788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6046e472-c7cc-4c6e-9380-63967fcd8659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a54bdcd-36b6-457d-8458-07101119ed58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b61285d-b7f9-43af-8448-86f6bff0fe77",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79291598-2eba-44e7-b882-8e653ddc3ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41444485-2210-4a1c-9e13-edbbec6f7718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982ad615-9bac-43c9-b857-6dceaf84467d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62f6a4a4-229c-453a-b184-65efc987a6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93debacb-8dbb-46e5-960e-07b231f82eea",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089762a5-46d3-4b0f-a0c4-3ce0f28ff24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb5cdad-ff05-4ef3-81e0-c7e122e0f3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39257fd4-1e89-4568-9a05-264184d868a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "35b8d390-98d2-45e9-becc-42fe042da106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1c7224-6c28-448e-b72f-348f6897610d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1927988-7869-4865-a560-1e32ee3a5731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3b9d19-292c-472e-b4c8-834ec3221943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de57241-48e8-4a08-a7db-ab3b37d6e6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c883a721-d445-4e0b-a58f-260b60f54018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6784140-ee30-4350-824e-c3b13919c1d5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c095721e-f77c-4ae3-b2bd-40013554b4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a250449-5cd0-4559-9557-4e98c3dd76b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6d3e51-2f8d-4ebc-9282-cc16d77553c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d195afd-56d0-4114-8f1e-0d40d93b30d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a9c28a-ed61-425d-b9db-02b50d2940f9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103e04c9-12ec-4657-a762-49f04c829097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697af4a5-1d82-429e-baa7-70ed6c6a282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670fa438-6a6c-4455-b122-3a94d824f030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa3a359-1c89-4e9f-9955-2debcf9e3ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1ff796-ab0d-4c14-9217-9260e0ea081f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472d2a61-ef7d-448e-99ed-462eba6623ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92465b70-3728-4591-8ac3-1c4c76e6543c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552af710-5ac6-453d-a49b-18a6010ed1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c39e686-75a1-4df7-aa72-280399e8d5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c10a45f-a02a-41e4-bee0-45dcd2782c1e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58da38ce-79e9-4115-80e3-01562fb830f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73defa41-6e75-4bd7-be0e-701be380a731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f44f0ef-af2c-4cdb-baf2-d0119969a368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef47cff-a906-4cbf-adaa-f4f91faa9b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f8b543-e7d0-4ca4-a032-49136a0e2a6b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbc543e-583a-49eb-8bf5-230f62735e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b919298-b0d9-4c3e-bc34-21525cb9ae92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cc45f4-ce25-408f-b836-d9e5d5a38d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dfda3f-3d6d-4298-96c3-9d77ed860bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a4ec5b-8167-4ccf-b544-62fd0906eabc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91305fcd-156a-40d9-98de-58a518e898f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d51efd2-5f3a-43ca-b68b-0e84aab134c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0915f525-9e96-46b1-8653-4599b5dc9b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b9e2e6-f8e2-4326-8f71-ba41a9249dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6636f7-05c2-4f0f-9aa1-343248d252b5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1686e13-4ce2-4dd3-a229-2e4b4271cdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4368525-2216-42a1-990c-60abaf499fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d572f9-6fe1-4c0a-a05b-012b463f955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb16162-5ae9-49a8-bb79-32834aa3322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85e99d4-bb75-4e32-ac5f-f44b2ece6e01",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb011bfe-8c9b-43f1-b464-93539b6fa480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1d33c3-2542-4071-baff-e179509c9973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec9ffba-71db-4ef3-bed2-d57ac26b4135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b007fbce-2cab-4c71-9e41-9598504927c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a3c7e0-dfaf-483a-9476-c59bac63c48a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e714fd-75f2-4c24-8de0-b8032b47ce71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5eb5720-aa7a-4d2b-8faa-372f14a31e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd25768-7e0f-490d-8383-3e4a5725707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9c9d4f-2d69-450b-983c-db40cfc28bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96618e41-313e-489b-94d6-c0901e67065e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d383d8c-cea4-4474-a482-af27c4112675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcba6307-a3f5-4527-9963-e918f9ce91c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d3181-0167-431e-a3e2-2ca75acd40d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88fe02e8-4e0d-4034-a03e-b043b14de46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1823bef9-cc56-4a07-97cb-c64f22bbad3f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfb6722-4399-4e79-9f44-ceaa8c6eac67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6d068b-4525-44b8-a477-7e71bb2f0976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54b05cc-dd01-4d08-ac10-a52b27ea42fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1443072-08e9-4ef8-b8a3-b8f30c979673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e82b74-0bc3-4e48-aff2-8fb66b413aad",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dd62c6-0a02-4449-b31c-6c3f88fcbf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917ee795-173f-490f-8ad3-a8f5cffd24d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9456bc40-20d1-40b4-8ed9-fcfa4c77fee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a10b351e-093b-447a-be5b-fca3b6f50142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d56dd09-93f6-4bf9-92fd-a276ede25597",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e795a8-094c-489b-9849-8ae6688effff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c34f4e7-8d88-499a-a37a-0ae1f029d173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65993374-848f-4b30-9197-d3a2411d8b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b78d7a56-fd05-4264-bae7-0b0d17fc594b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa788282-7993-421d-a795-3f9c1b49046d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7878c875-e220-42f5-92ae-9868c8df914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918daa57-cb96-49c7-a535-16c32742a679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242198eb-f04e-4b33-9808-10f825da6a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e88ac953-2612-421f-8c68-8f1824ec4033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ae180b-c2c2-4ddd-bd9a-effd067de730",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6538254a-05d8-4dec-afa6-866ec59e8dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4619f752-f2b9-4eff-a8ed-5b630bb3fd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d2a2ad-803b-4f82-9fc5-0809840ecdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2184f1f5-2715-4147-bfd0-f703f71b35f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b334226-4968-416e-9b79-124bdcd91436",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f43ef1-c00e-4a36-b241-331b391d96a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742110e6-36f2-4a5c-aea4-8187803875cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4c0c52-b02f-4ac8-933f-98e50ce225a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6bd04f-286d-45f1-be19-1651795e2b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a32752b-a66a-4ae0-a7c6-c61c87847bde",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5fe4d9-55fc-4dfe-ae19-e1f249100e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f03148-ff45-4398-bf1f-69d5bf59d466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fe61c5-cb98-44f5-b3b8-1640681febf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64485faa-f3c2-47f5-85fa-e68d37fae202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327a37fb-722f-4c45-b72e-a3a8b68b822d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae4606f-f346-4b35-a27c-04a6596aad1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fdfd8e-e4e6-483d-8c5d-78eb9b1089bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6d818c-9403-4b9a-bf3e-855d8927fb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f874ec-eea8-4c9a-9cc7-62ff1152e63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bae54b3-cc71-42c8-be2f-98cdc33c421f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20a8254-6a4f-49b5-9306-0667a504b630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7212c353-db30-4018-a382-ee089a19e75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65292609-ff83-4d3f-bceb-06167b55526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9002e0ef-448b-4c09-8e5d-de4089a04380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ecbead-2ad5-4a59-93af-14fa8b496258",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c7006b-d774-427e-8d58-11ff921b8dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d2767c-2b67-468b-9320-cc0c47454c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1ccd20-a4a1-4f93-8112-f5187f0bdf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbe461d-d9d7-4c9b-967a-3b01ce6f9fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c859c69a-b495-4b1d-8c90-2d647399ec21",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff7fe2-a27c-4e9c-98f5-f105e410fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0640379-6ee3-425c-9544-6643eb8d27a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d549b925-117c-4c77-8559-3befbd95a35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d94ae0d-bac9-47f6-80b6-7b52ffa618b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c80f891-4cf0-4697-adfd-8708958971b5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0490a69b-078f-4ffd-8b45-dd85361cb7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997741db-830a-402d-9b9e-2307f7d8bf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb4c9f0-23e9-4510-a47b-6efc4f09935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d008638-873c-4f39-b083-341b43484dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527314e0-9677-485b-ac46-3561835552b4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f964e0-c1b2-4b88-879f-25a0f718584d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d6ce6e-9485-4d1d-9c07-b5eff9378e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed24197-383b-4328-bb67-c8fc2c01d8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea31bed9-971b-4d1c-a711-65f8571257c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787fea23-bc6b-4259-964f-2da305edb4a9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd08da48-7e41-4dff-9d66-802b74fc376b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b0b951-2bdb-49ab-83bb-de93ecc270fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc19cc-cfe8-4cbf-9b93-0d7c682bdfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5102f280-44aa-4179-83ec-446c4f7b6754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a58c2fc-c11a-4791-b1ee-3c090452fb9c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625fae08-3135-4c45-b6a6-5360cf8ae060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe372b8-47f9-4997-a327-3586c6f55c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f61e168-1053-439b-9b6f-d7f57c90cfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "94690f43-1108-46ff-a51e-4cc788757ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f652ba-f3d0-4727-841a-8b02864a3314",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabd9e88-7020-4d4a-86fd-7432dbfcb50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba037a4-897c-4406-9ad6-8033712c3c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5138aa5a-77a3-4d6a-b0a6-a2c6cb7a39f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "452763da-4035-48b0-9079-a30d0f1c3c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224852db-5468-4f40-a640-03e00ff9358d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca3e949-5fb8-4830-aac0-adb69d05f84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af308271-efc5-453c-b2c5-54b4ade1b983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacd661e-58b5-4d92-9172-170f3b6809d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e7e499-c42f-45e2-abb5-465d8da63fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b88e240-7acd-4ca7-872e-8b247c546b10",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765aea31-090b-4e07-b90a-2ca5e494d2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b569af91-140e-4de6-821f-7da75bbb8b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9acbba7-9cb0-4e15-886f-f5a8f552ac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4923501c-8aeb-424e-a6e2-965461a4ebe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc0e123-39cb-4269-8c9f-29547cae4833",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053dce13-9b9c-4132-90d9-6abeac9117c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d53dc0-1184-448d-955f-20f3fa6f0ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2544e5b2-2431-436e-a8a8-3f3e45d17b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab03188-9475-4a6a-a475-f0f56403b044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3afc761-7f75-4b32-b7c6-dbc67e18430e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed49db6-13cb-4e1a-8557-a390a6adee8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8d8e5f-7aa7-470c-b428-86c2bc8f62ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9d0bfc-e415-4c71-abab-735d6b81fccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0237cf6a-a23f-48ca-a1fb-cc4940f13e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bd3da5-af6a-469d-a51e-72616c75ad3c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5574847-ca61-442b-b241-8a53793b4208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6120fd-a17d-4731-a69e-1b0ccef959c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7e3171-45cb-492f-8825-e6d537e0ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d99a67-30e3-430a-8ef5-db216e7ddb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a2babc-7b3e-43bb-8ddd-c9f1393b58e7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb8637c-243f-46c0-b08c-1dede62cf4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc6afd2-534c-436b-b1c4-a923fa0b8d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848b1f9e-e792-4f39-a8ba-c8e69bc56fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04437918-c7da-4f42-99ee-d1aef33c6d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b58a24-5841-41b6-8703-797c3f96bc6a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3132f4fe-a09f-457b-9359-8b19d8e6a602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6504429e-fee6-4248-ac1f-2cf34557e97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee74f8a-0683-4158-8bf5-365313b6d94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb734a6-31bf-4d58-a65b-ae82daddce1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d840f1f-b15e-4451-a27b-4021f2bf3afd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8d3158-46ac-46f0-bec5-00bdc0751d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f9371e-cb46-4d80-946a-d36274d2ab82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95898bf1-20f9-4092-9441-1a08d9e3448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb79c41-9fb5-4fdf-9275-ff55d10c8e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec28352-6639-4fbe-a379-ee2e4933d462",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da60487-9c02-4e89-9cba-c69640057961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df602404-ff92-4baf-86bd-a839e9cddadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a90d405-b33c-4ae8-8968-967b47c5b046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c66cba-44b2-49c1-846c-3fc469a0dcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab914e6-8929-473e-bb1f-9e24edb6d289",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e44824b-2e5d-4b70-a338-1273eb2660d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc7331a-a82c-4df0-85eb-491649b112c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b369d9a8-442f-4d2b-92fd-c89492f55e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "544b3be9-2576-4418-8551-c28c4b2ca79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c160225-2733-42dd-b2ad-66baca2f3c84",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5e673d-9ee3-4221-90c4-41c6734f707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dc5f4e-1e37-41a7-b5e0-9cc7696fdd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b317aa8f-d7dc-46d9-8a57-85186769c3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47d4759a-dcaa-42ed-aa4e-c69977ca3b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8300a4-7123-4261-b2c9-127d3ac63ba0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a14205a-2311-41ac-b295-9437536cd937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab11f05-da82-4c37-a9e1-ab3d31b10cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b0a1ed-d4c2-4693-85e1-543092bb8158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8330f81d-7151-4c19-be94-aca22f1ce50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862751a5-fee5-4476-881c-9ec19a674f02",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779de655-043b-4d5f-a063-9ecbfc55f474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faa3828-a248-4840-a290-c2e7450b3b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62f4024-7553-46a6-ab32-4881d0b767bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5936218e-66ef-41dd-80a6-0b8cd660c964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244b06b3-3460-47dd-9b27-b0bae4bd4c5f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa3106d-35d0-4dc3-b146-3583223ed5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ead8d4f-e71f-44d8-b865-9e8ac41bb300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1e4434-9d87-4cc5-8c90-4f7184e9cc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9b5f87-4835-4cb9-928c-bcb225e44e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee9aff4-cf51-4ddc-988b-84bc7683f296",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0358b76a-bbc4-4768-9b4d-7b066fb5aab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacb0d09-603e-4bf9-9438-53d0da80687e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cd065b-c4f2-4fb9-b78a-0d2eab7e9db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f8b624-3756-45d2-b012-6b926585000e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07b705f-6748-44f9-9571-267e8e0213e3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d332fbd-674c-4e53-8240-ee3922a44cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ea80fd-5689-46b4-9917-9cf786f21ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e604e4bd-09cb-4a9c-8374-1ddef407d38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b03a56-e854-45a6-af42-2db7af7fdd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8c4d88-d723-48ba-8127-bc2d533b802a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbef6354-757e-4664-adfe-a3d21b80a7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0188ab37-cfcd-4bf0-ad3a-bae2a4d5ffe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76ac694-5868-49b9-a1ec-950ca640d12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa50094a-6068-41b7-8a36-e91fe8df078b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a88fca-7493-4e8c-bbf8-678bfc9b1e18",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d831d7fe-6904-49c2-ba53-869f728c850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c3c7a4-c13c-4315-b696-947250cb1a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779f00df-5f78-4ddc-8eb5-e2687c1f20f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10cccf08-03e5-4d09-9457-d415f2cbad01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e230c8-1aee-4919-92df-d035305e3c8a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2f5c89-e715-4898-8456-25fb3e27a215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3c436b-9172-477b-b146-cf3fe2f7372b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e6ee38-8f2b-4f24-80c3-95a11fcd35fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "23a3921f-5b3d-491d-857a-ba5977bc1295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8850bd-1adc-4995-831c-ee1be3c4238f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac4dc10-0b2d-4222-a22a-ed79c08cdc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc9c4b6-c4fe-4f3d-af84-dd5113308eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ec6381-161e-44f6-843e-d3d9d0523e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb3455f-b8d4-4944-ac82-814ed5c4ba3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ad7c87-3027-4960-806e-7e066f24d1ba",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9c581d-e1ee-4311-a008-2ec1238f59de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba70bc24-a263-4a2d-bd72-f986f1054381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d780f981-2174-4b54-8dcb-e1d4dc68a342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81fad07c-7997-45e6-890c-083108f895cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9bb44b-3667-401f-9b94-7b9eb85f046d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc6c1be-144a-43af-987a-5fbe15e12908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b023cc27-38da-423d-a6ba-baf3692ab1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12ca17d-5f2a-4500-bc99-0d57bcca6d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d25da0-1354-494d-8fa4-92a82b61f2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e9af4a-558e-4d90-a3bf-caf988470e05",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb24f200-220a-4607-aa82-037fc855a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7fe6c9a2-1411-4d89-8147-54739f9bc64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43df07f5-6a1d-4ea5-8b47-5ecea5700328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a39e7d2-0532-4bc7-bb19-db7bcf0c8527"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc233f6c-9aa0-47b3-86a9-d39729f3ad91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e52a39e-bc51-460a-996f-cfc463d66ef2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d1553a-1119-4c02-ad13-cf0a58a12dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1af4839b-1188-4ec8-851e-5500db0249e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbd55d4-ce59-403b-91b6-17f927f8ee34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72a7d75a-7b7d-4756-8e60-1b0251fe1c4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "219291c3-545b-46cd-8c40-5aa689558968",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ecbb62b-8556-4843-9836-90805d04ee74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a2f131e-50b4-4f2c-94f0-bf76851ec1c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6e26847-8cb8-484d-8415-dc2206e1411b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f185245f-f7d2-4a75-82ff-2a805af1be99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "470e6c43-34e1-448d-9ca1-e4769837b78d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "600eae18-5e46-4d74-8fa7-9f57a95ecdcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c6b976a-93ce-4255-92c3-94c6ac5ddbf0"
                }
              }
            ]
          },
          {
            "id": "41143b39-9d79-431b-99b7-1d84f4a9ba85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e6d9fcb-ae2e-410b-92c2-ccb77fef4f19",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8858820d-f953-4b52-8606-0ea4b9e6bf64",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553ac958-7c45-44cb-988c-4a06b51f01de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c06884df-98e4-454a-b6b0-5457229d8916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef3212f-eae4-43c8-a1aa-02755c5cea66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011c3c79-32df-424e-91d3-5731d502d500"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e4a8eea-d518-4415-91c0-90700be381b7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8b651eb-4281-4676-9f90-99d5a04cbfd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3f9a56-72c4-4041-abc6-b265cfa59a6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db6ea0e2-6b2c-4e4a-b79f-3ec2180c568e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "974566a0-9ee2-4d6c-9911-99bade3c5bb1"
                    }
                  }
                ]
              },
              {
                "id": "0feb8e31-e3c7-4b42-a47a-9feef74d69f4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c483e49-5451-44b3-8a51-17bc4a6ccaf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79ba7471-937b-4a81-846f-05d59464dddd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcc444f0-23f6-47f2-ab64-963fe9755a44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9bba37fc-667c-4fa5-94fd-38c5e3df0759"
                    }
                  }
                ]
              },
              {
                "id": "328eb389-2562-4591-a8c7-0c01b759d575",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5486398-5bde-4230-9c48-eb5335e962fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51ac3a77-7879-442a-9300-183b5f7f45de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20b99858-a58a-409b-9e00-ec256a4158e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "930a91e4-4241-4a5d-a05a-59a1fbf7d07d"
                    }
                  }
                ]
              },
              {
                "id": "850119b2-6529-495f-ae35-5d8c1e39ea04",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "662fb84b-a8eb-4371-82d8-44fff6197b12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dd1a108-3898-4cc5-8a5c-cf035e5109c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e393e22e-ac1d-4c4b-bfb9-c9c54967ca18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a9c53579-40f0-4444-8c61-fde7757840c6"
                    }
                  }
                ]
              },
              {
                "id": "9551f29e-4f59-4be6-8afa-f9dae2c34ca7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57c23a37-3b5b-48d9-980b-df23208bea0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c59120a-e140-4771-86d7-24dce775b910"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1b61650-84bd-4cb2-9f1f-0fb671a34c2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "adda4105-6928-4f74-8c3b-104da46d4c0e"
                    }
                  }
                ]
              },
              {
                "id": "65a89fac-a54b-419e-94e5-17c4c3478b83",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0cd4766-9d4d-4a28-8134-d94bbae271b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc8ae55c-4fc7-40fd-9920-fb1ceb6c611d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdd2e0b2-876f-40ed-bf22-fe55c79e6ab9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "995d48b0-841d-4da1-ac91-a65ea0377f85"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6609f7e2-a6de-44a5-b56e-8423b08880ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "056f3fb3-64f9-4eda-af4c-bb3e6b62512e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb9a04d7-3c9b-48be-bc05-d0bd0901b1bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "220da64e-88cf-4af0-b5f2-9dbab8f4dcfa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbda0ccf-f8c5-413d-b2b4-e8fe5b69d2bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "011617b0-9cf2-4d72-82ed-3234942dff18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9649adca-737e-4b6c-83a7-02ae58375ea6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95c32fdc-e42f-4d51-8b4b-8c7afe2bd7a0"
            }
          }
        ]
      },
      {
        "id": "397d5887-10f6-4b94-aff1-e2380151b087",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7b5558bc-712b-49ab-9467-bd95f6632977",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b387113-8d27-4569-b8e0-2a660ef9be28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "275bf597-57a4-4433-90a4-569968791b4b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da363e1a-f36f-47e3-95c8-697fb7f746ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbee1df-8528-4484-a790-71d06b8d0151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f81549-d2ff-4a6c-9da8-7bb1c98955c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c466ab-8a3d-4d48-b231-65e77ac90cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86831853-e53e-4977-af37-2b4f1005db47",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eee0d3e-e60f-4cb5-aeab-7d03021bcb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07cd173-041c-4dcb-b49b-65a2d2ee1a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a147e9af-9b95-4095-8950-eafd55bf89ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0692c857-1090-40ca-b6ae-2c29c8731268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee057e7e-3b76-4edf-80ad-b9ccd41cb9fa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f137c41-b243-4cbf-a865-e8b55fb8b609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fdaf0c-c969-459c-9189-87a965d7e07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161cc119-94db-48a3-ae4c-c6e63e8512b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e807504c-7c4d-47a4-946f-31ac58f2bd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27dcc18-82c7-4776-9678-448849c9dad4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5e0178-1423-4ac1-9dc0-70187ba5994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be6a0e1-795e-444a-b7c3-512592bc7244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cd2b97-9546-4c88-9511-69bbd4fc38ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b4d57c-2bc5-48c7-adf9-6938ed07cf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acec384-b089-4999-9c33-105565aab85d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d5e127-6dbc-474c-9269-beb26f0b581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdaa8705-dfa9-4dbd-808c-8bf1a5fc2126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aeb909-31f2-40f8-b33a-3094ab49a13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7319a840-5df6-44d3-abda-16817ddb1c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5801f0df-04b6-42df-b030-abc9e0566143",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9af34c-63b0-45f6-b313-ecb275bc29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7847df8d-3fd7-45e9-bc0f-5e99d213ef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b72b9b-022c-4fdd-9a8d-ea6a6e143938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a438c9-3e1f-466d-bfdb-262c1abf0ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7edf41-11e9-4930-9883-669757d3d602",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49511f4f-04bd-4136-84e9-5ac1e26d0457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e4e81e-dc2d-44be-a69a-d454e88e53d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8b9f65-fedb-423e-965f-5bc0d8ae625d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5d9eba-7d25-4e3e-92ab-63e73b758e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6517f3-0eea-4379-a466-b30e57e19b48",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4890d649-1c43-4fcd-9c4d-9c35984e794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5485101-254f-40ef-a46c-7de83f785623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4b5f5f-405a-47bb-b77d-5bda6983633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cefcc047-4c8e-496e-95c1-aef996bf16ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c857e9-3f2b-4fac-9ef2-b0454e4f31a2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c45b87-d8ba-45a5-9f0a-35cc7834cccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f718efe8-e5f1-4ae9-880f-ab6dac6220b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1918f3-73cf-465d-b595-b227a797bc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aebb3ddb-d843-415f-b85e-25781538c91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d04f08d-558d-412c-83eb-406a78ef6690",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d774efed-8903-4e78-af8c-f2ed7c97fb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6d328b-5025-47ef-9651-c878992e5c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fa4436-a81b-4bca-b667-a7d0e22e701b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceee93d3-6e98-4dfe-8881-60773019cab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a46066-7a79-4b09-8dac-e54ae3a3b799",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e5b88a-0d0c-4984-af20-1b1ba3537a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1496d4ab-c447-4330-a237-e91ed230d07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cdafbc-3c56-4a2d-82d5-3341208f9b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6b59cfc4-d03c-4a31-99ea-3583b9f0618b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa9df43-45bf-43ec-ab28-c49d6545a32a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9e7653-2047-47f3-b2ad-d61ce7506b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8eccfb9-90bb-4b40-995e-acf820cccea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a8d64c-8e7a-4831-a419-e89a847f013d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e982e35-f788-4daf-bd6a-e757b48b9d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bc504e-4ae3-496e-9b3d-5faa56a02a32",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d17fba4-1a77-4db7-bdd4-78e9ebea65ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935dd653-c154-4752-8add-aff6b5060a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295b458c-4288-4ece-93c3-e2038567f528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48071b44-1466-41a7-a160-1a35076520b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a9b730-4238-487b-a279-365a4eb62c08",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838ee4bb-135b-45c8-847b-152926fd778a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5500326-eefb-441c-b34a-a2416609ce1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66993a1-48fa-4c25-a62d-e79b2ebe3d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9641843-6f59-4e45-9838-f51243dee046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5116c9-3fc3-494c-8e82-f9767bf6713a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48b7e20-fae1-4be7-b0fc-820024ddb722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698f76a8-3435-40fb-8f9c-8ff87c4024b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f4a8c5-2494-4450-bcfe-7cc4cddcd505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e305a8f9-1a8a-4d7d-a448-4ba365ac39a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94caa72-0f23-405d-81ae-5713bb8a7230",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5be69a2-2513-4883-9c6e-6b82d0b3979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c414ccbd-1c9f-4b27-9668-54994a31b393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9bed0d-1187-481b-899e-4236567370da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "312a94ee-8c8a-42e2-81ba-ee64d76f24da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82212405-eee9-48f0-91c4-6ae54c36c972",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7a4766-389c-4987-9fd1-d4d0a6ade113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9d3d72-9ce0-4152-969a-8f69ceb38605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682f1839-9e1f-46a4-b84e-c45b8f3fcfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b6b5d8-9bf5-4b9f-8a94-bee1dd3cfe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3fd45d-71fe-4fcd-ad1d-adc4f46c0c39",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67eddb81-a7e1-47fe-9ce1-3907b9791f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff7d588-5994-4419-a463-f8a09a81d65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265b48b5-dce7-41e3-ab95-273037154935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc59ef5c-9d3e-43a1-a233-fd535a8f44c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274b447d-9052-4123-b665-345d1d65d34f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bc75c4-7bc0-4944-a1e4-e05a64eeada3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb6c351-4398-42c6-af0b-40795f5e0455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26a1367-e5bf-4f8e-8860-82a7b3ae89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ea779a-1988-4e09-b209-a5a78adb05e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa14576-8fc8-4d47-824d-f161a8b61bf4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e36610-e2e4-4844-abdf-ae22cdd600dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8286396e-295a-4600-a0e7-ed6251829f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb35712-45b7-42e4-a573-870901af97ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae09a5a-10c5-4f89-b7f6-75a95c8c4397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2533737-3caa-4012-a42c-43a31e8c23c5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209cbd83-8441-4774-a9ad-291bc9090bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b7d037-7c86-47b0-820a-ad683a09440d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d96d79-5a38-46eb-be28-3e448cd2de91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba466dc2-146c-4d7b-b1e3-ff1319f20ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a08859-a121-4662-9a8a-a8c77950ada7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acd2c61-5786-4248-907d-0b8c71071d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb2a625-4dab-4016-82ab-31549b2ebc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9acc1b-6622-472a-9db8-b3a50250a6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14eddc12-04f3-40d6-b443-d90626613747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d5d648-b95f-4024-96d6-0c74d430bd47",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a7af7f-5fc3-48d0-9db5-aa28de785be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f7d41b-2647-42ba-8320-6ffd358aaba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687ac49e-b65e-4d4f-a72e-781fc4b96200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2486e862-3684-41c3-a944-b16523ff8ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08f14fb-4441-438c-a67f-24a1a2a4e2ea",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7732d2-dd32-43bd-b537-bcbc7efade0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c096a66-c01d-436a-94f9-9b87418cfa6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bb2ab4-1bfc-4e88-bfb7-e5db898a5445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa79a4ce-2827-4ebd-8bc9-e25f984b956f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047bbf19-67bb-4ba2-90ff-1fa9e511ec94",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5b8c5b-1cbe-4d23-8242-dc56c60c6d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fef21c8-2644-48e0-8e41-c9d23f77c4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07f817b-55ac-4831-9258-f21856d39b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d57f27-569e-4607-8bd4-71f8da6eb5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c053fe1-7f96-40aa-bcf3-d38333fae858",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f8e6a8-7cee-4c6d-adf6-11b8980cccce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ad7c4e-4c08-49a8-8fa9-6ddb76f9049c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db55495a-0a9d-4afe-8524-8a36b2be2b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c067a1-2e7d-499d-810e-76a8beff64a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca50c3e8-3d76-4b66-9772-567f9e6121dc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2c24d6-5469-4dad-8439-dc9fff50c03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f56cec-b06a-42de-ba32-0c3cff9088de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a038bc96-b6c1-47f6-b78f-dc6f61f132ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b65ca9-917a-4343-a211-9d274eeb4a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab63f234-2b7a-4b8e-9ef4-6283ea9fa6b6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1210c32-ba34-47cf-82c2-140f2ee1d3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2450ea91-cfc2-4716-a902-4f050ec2f928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98dc9f8-f80c-456a-96ef-1e5b9f45eea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47bb5d04-e26d-4b76-9754-3abc58e227aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f415ac5-c0da-4a2e-95b9-2239d2458969",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85b49cd-0a96-484b-907f-244753aee049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf04c690-272e-41d4-ba25-c9701ee2eefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fd7611-8646-438e-a1fb-a3b0596e2cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63963b5a-ee07-43bf-a76c-c905371f54ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476d5f1d-766a-431d-9b0f-6d6249bda4ee",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0fd253-e840-435b-8127-e3be02a188be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9790400c-db56-4368-8830-4f9de39f2cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762d1df7-1937-49ca-b4df-58254e7fa54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ba686c-2aeb-492b-8970-66663783639e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa11473-fd28-4e37-aeb1-99aa7a6c2d1a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a53ddec-8e39-481f-8eb8-1cf3303ef6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22396d02-8cd3-4c8a-8dcc-2e021f99e7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3569edce-6f2b-478f-80d9-b7bced2a2286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00ab028-c52f-4f36-a59e-4f23eb9d3714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea949d57-eb93-4ce2-be5d-402ee1deeef0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e02cef-3cd4-40a4-98c3-7bfc7053c0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d2b855-b87a-4600-97e1-7b4a614bc99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3138d6dc-be03-483d-b81c-27dec023615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74dca7f8-cf15-47d6-b6de-c44b240133fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3df5bf5-c172-4a4a-9898-c4f7e4d77223",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514e3aa2-69b8-4ef6-a770-c2244bac215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050af5b9-4d3b-4694-965d-5daaa0d1a167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634fd6af-5db2-46ec-b452-8dbf9cd39e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57dab2e4-3ddf-48b7-bd6d-1d152455ce5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c84b8c-9d75-41b6-93d0-948a16d87aac",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf06641-e6cf-4f44-9574-ef128d6e5714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083e72f5-46ad-4294-b45a-4f440e6c49ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d7058e-5999-4fab-a14c-f15f1c8af35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51216563-cdf1-453a-a238-e199b499a0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929fb195-18f8-48ce-83f3-e1c1d4d15c29",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0e5aea-0583-4046-88b1-76c7a60be218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d7fd44-6ec3-4c92-b3d8-b46ceafa8b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f374f945-764c-45a6-a1fd-91d4aa0e69f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f47f86-2b36-4010-b984-c0a8f75c9deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3badf947-dfb8-4f21-9adc-db1e849ecc92",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f07cf5-f240-4308-b005-f9b07a1fe85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1963d16c-fde9-40ed-bab9-fc789a1e46ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3c0ec5-a3a7-4c7a-b369-addcd7df3ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b38dd4fd-2c7e-4b60-8967-11163ba24f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033fc9ac-c26a-40d8-92dc-892096133bd7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1217818-f95b-40bd-8056-e760d212e2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb3f453-f26f-45ef-b40b-a0186702d216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e9362b-7dc0-4055-a645-d3c691e1451f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b697a811-7379-4966-8582-05b7c8d09e11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3937faef-4dd4-40e0-82cc-e6d8258251b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adeb28a5-b497-4ffb-8538-b4e66612028f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff966a5-bb57-4021-b68c-787ddf961070",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e21adb01-69e1-44f6-88d4-a6af4969ddd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfac1b8-b981-41b6-851c-9d8b4422016c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d95f721-1c4d-4b3b-8827-fc3b05827254"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cfc0b46-a781-4b13-8c2c-fa1f464e5db6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a277f36e-f112-49d0-abf1-78c767a00bba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91928738-cd86-4885-a664-40f7b887de4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d085a9c-5f15-4038-810e-6931c3b470e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "816fcc0f-87c0-4622-a867-d0e94e63609d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3550a2f-0ee1-4a99-a41e-d954dc382e1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57be9e86-dca7-4bbb-83be-bf102cef859e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c0c616c-a072-4d23-971d-a8353d5718a8"
            }
          }
        ]
      },
      {
        "id": "7a0d7376-2f37-4e96-88ea-f8f9621b5004",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "aa552237-97f3-4b84-9d73-8a451816eeb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "160c9a9a-0ce5-4425-a439-6c855290ba13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5104b58d-0cd2-4648-92f7-fd2850edcef7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de08194-b4c2-4a62-a0c6-413f4354040e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1023942-38f1-43dc-990c-8e408ee0e49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11f7e1a-a339-4a7f-be43-5cc96c5bce0c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd4f9f0-db6c-40a7-bd5a-9756d6d79821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348df31d-4f42-459e-a454-66f79806aa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37485d39-e8d5-4b01-b488-a4291f103cd1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d859c96-be8d-48e9-a7a1-ad1c2a82df8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3776fd82-9535-4f83-85c1-2e8fa81a5e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0983cf33-12bd-46fc-a903-6a1098ac5547",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d7a2e7-6e0f-481c-9525-a7623d3729a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6e1cd4-cc87-4920-b84a-dd9b37ec582d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435e6441-0884-4b8b-8b5d-ac5f276fcc0c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7803740-4ac9-4280-9462-170f48197037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f6db0a-d6cb-4e65-900b-7e4a79c3432e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1536649c-3fed-42ec-8894-cce077117009",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1481cd89-48cd-482d-82d1-a41a9667503d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31c7d87-6fcd-48b4-a465-24c80e6cc878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0797cad1-bed5-42fc-8076-4494b17df45c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b468c83-c380-463c-bf9e-0838551aab51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05be05a4-8692-43c1-9584-89600e17b8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeca4f21-ed77-4360-a154-18057bb3670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e771569d-944f-4763-88f0-7a5abefedb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c46498-efca-45a8-9fce-471b6f0af50d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955a9a3b-9c35-4564-b0e2-cc9ec50da216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f728876-e069-4d3a-a162-96c6cc5338d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba17af1-c785-4135-9537-0d40af2f372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3279bc-151c-4710-a229-0a3328897129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aef344-b4e9-40c1-92e3-14b74cf717e4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9722b7-71fe-4198-8764-2d0512f2c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69843090-8d61-49f1-b089-e0352b85e3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c20192-5dad-4ab9-978f-ad7b08b06128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e134d7e8-85c5-41af-a5dc-3aa520c5474a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1c3224-10b3-4e19-95ae-63a417a3399c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546be366-e4cd-45a5-9ed0-6cd46ce17808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744d2ca9-a129-446c-975a-7c7ac295bc52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf1c126-ce35-4aca-ab3c-bae5a3906f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc1e7a1-4187-404a-a876-e57fec525f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a556ee4d-8f53-4381-85e9-122ae0fac227",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f2d251-23b6-486c-8279-b052827cd02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcab898-1c27-41fb-bd29-1ee3c4a4997f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88df8cbe-7c75-4b94-8056-3d4cc04f594d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b1428f-80a1-43c1-b4e7-a584c17fb17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7297e865-9ce9-451d-8c8e-a116728689bd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a36a51-b2e0-4967-97e4-cf7584f1acfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95608cd-016f-4dcb-9a4d-391fa56fd11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb9dd70-b5a4-4328-b595-823afb2f6818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df5594a-bc2a-4fb0-9f3e-47518af49c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f141bda-e4d6-4579-b8d8-04d1af22859c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796390b7-8b20-472f-ad7f-ac163aad34a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ad042d-8e7b-474f-a714-8d6e9c8b107a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608278d2-f7b6-491a-b2e2-ad173335ad73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b24c3b-da21-478b-84b8-0ffdddb5d261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af60bf7-1c59-4a12-afa3-d22a711adb9d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7969fac6-9c79-48f0-bd9c-3ed5f81bdff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16afd5e-16d5-4ea1-9b69-74cf609dbd99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83787ff-a096-43f7-bbff-b3eb69d20e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79240038-30bc-4fa2-9085-5b5fa9951a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efbcea1-7d15-4837-a552-35322ca196ae",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a53793-4e54-402d-8009-df22fbdc6ebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6372aad2-adfe-4acd-afbb-755bf3319e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af95ba91-5c9c-4f17-b5a2-75bf944f98c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcc5594-7ef8-4e16-9ee0-ffb8db5d6bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1520727c-eb63-422e-88d9-3180dabe7530",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab8905c-0afb-40f4-aee9-082c85bb6389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e9f17b5-8a4b-44ac-b934-0cdde41fa30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84849c8f-7074-4c2c-bd12-df9f5b2a68e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005a2e9f-d9d7-4111-89a0-d2196a90141e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401fb9bf-5aa5-4ccd-804b-8c45bd882028",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e463334f-3b37-41b6-b31f-7a00d42d677a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30766eaa-f6d1-45ee-a0fb-6787522b7d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b9abe6-3a36-4a9a-b4eb-f9f685ac1c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d51f915-43f5-4605-a432-bb1b168a3834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430824d5-9da4-4bc8-8aa9-db83dbd06ad8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438861cd-ee8e-4d66-a03f-5902f3236636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7c5fa5-e366-4e16-a96f-58e081a28087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdd6772-ecd7-43d1-8f79-2d1582ad4696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3617ccbb-b393-4c28-92a3-5be030b9dae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c588b7-a962-465d-9f1a-bb329f6f14f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d8f5f2-7525-4bda-adf9-01a378acce6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9143bd4-639c-4fa4-b2c1-5d7df665cee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc4292-fda4-45e8-a7c5-9d49b78d3e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ca4b66-2483-4ab8-aa24-96642d822238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc28bd82-0049-4009-bbb9-ac1ab7857056",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639a3f2f-010c-4869-a811-97184abb4ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b236d7-c4b1-4cdb-891e-f7107ed88683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c8e106-27be-40e4-a84c-41076155d87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125c73d3-11e8-438b-8959-b2e5ae18be3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c36849-275e-40ea-bfcc-59fa9eefe22d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46635ba6-0e7f-4816-8c8d-c85d8da58397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704ca1cd-7eb7-4884-9e98-5bdbeac04a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9300b674-4f26-4f5a-bdbc-2006762d1859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c825a13c-8e3c-4101-952d-0f3686ffe1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b710877-e7c9-4e66-8651-8e83445531a9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df332a7-92bf-45ef-8382-3900d093e7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9f4558-6ffa-4f96-868a-3a777afa9b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe8f544-c50d-402d-bd29-75f7b2485ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b4a9e2-39e8-433c-9862-1363a7b59eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e917e24-a981-4d57-9fcc-519a16b53af4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3419393a-0d94-41f8-8ba6-5a26e5ec7773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1421c74d-cb4b-4fb1-92a3-0eb2a9006cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5c9104-ebfd-4e1a-ad0b-778e5ab5c63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c353654-2029-4aa4-8437-f5b8940d4c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daad411b-e1f0-493b-8185-913d8ae3ec7d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9f55b7-3c4f-4ae5-989e-e102f8c81162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "905e034a-13df-435e-b835-211c7e6dbcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b689e35a-ec8f-4dde-a7fa-886d0aae8c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab49fe7-299b-4384-87a5-8e2f83683be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3693345e-86b2-4a87-823f-0afec50f3ea2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0dcd8d-2e13-4e41-8126-ebef46c8ab22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b15eb9-e64a-4fd0-a840-8105f33bdbff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6bfeba-bb9d-4cf2-b85c-547dea380b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5180d23c-4cac-42a4-8fd7-849cc9612afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe7ef3-a202-43a9-9bdc-03436da1914e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4502d51-a049-4fb6-980b-ff2d4637563d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc965ccf-e73c-4c00-a951-ceac246b8a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460b3067-0a83-42d2-8ee3-4410cde88394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1b7133-fed8-4ae5-9ea5-2a13e2d40f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8c84de-d064-4196-9ea6-1c047ef5f56c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8669c8b6-bb83-455c-ae55-c062f30cdcaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55bc72f-b866-41c5-b595-ca8ff6d8a649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f92175-aec2-417b-b4fc-f155d97d818a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a99c457-a52f-4da2-a00b-594053328009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958652d5-e5a8-4ff7-8107-49c169f14444",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb80ca7-5ec6-433d-8c5d-ab02cfccf403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b9c2b3-f289-4d37-be6b-be0ae073bef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654de705-6dd4-4539-b9e3-6869cec3d936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbaa63d2-af09-4d1c-aa36-5fe948eed604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0465cb-befd-4999-b5a9-fecf3949cc86",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eceb7e-710f-4eb6-8330-e1cd1a6f7f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b33309e-ec47-4081-8234-0b0e2abc8254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1f07b8-97fb-4727-94c4-ce6141d4220f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4781cd7e-5e79-490a-92e1-9ba35719af91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f92fba-d554-42f9-8442-36010ce9db46",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f4540f-d9c1-4477-a384-d3bddf8cee25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953103f9-4bcc-4a62-ab1e-2f75f28e31b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df850606-b398-44d2-adfb-4e01c48c13c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb422ee8-18c5-43c7-981a-913caea32872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55689cc5-9557-42fa-9e84-657f24248676",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4a9830-0e43-424c-8211-3b62ac62b5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc9fe959-6dd5-4dab-b7c1-b9c68bcd702c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bcd28c-3a1b-4519-9260-7fafae38c6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28914d8-f9ef-4cef-b0bf-221917133b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac26d8fd-a20d-40e5-8dde-1f0900657549",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def684be-9a7c-4edf-a09b-ca934f310e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06078673-9f07-41d6-9171-46d729a0e926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315fdfd9-f733-4bc7-8c61-c11d83ceba74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f17b76-e3f5-4591-9951-07ca4900a8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39ef99b-bcff-40f1-b43d-f0c4ac2b9ca0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19fd554-5f0b-4168-9376-525b95f6da5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79a907b-56df-4b95-ab4d-1cd408d3c89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ff52f5-59e4-4b0c-a668-f460985d2e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05453e8-a631-4d95-b209-ec96f8e938cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22ee275-25a6-4ea5-a6f0-320adc753fd0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b160a3-04cd-485b-a1bb-c5c867f9a751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3820b0f1-fea3-4c0b-8816-16b78b773229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4156d6-b6cc-4d4c-9c75-ad0e7c77f24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b274bcb7-964d-48c5-b1de-24301cdb2c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfba216-7732-4f69-b460-ade85ae01b3d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7758bd19-271b-4f80-8126-f1046851f4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a351a2-0414-457d-ab83-41e4e9f82b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2233a0b-cd7a-4b33-a3a0-4f3bc249385b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba2bd10-db01-4b39-bc0c-9980476ef6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38662c0c-007c-492e-8766-23ed43a3eb35",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d89f76f-a26f-4698-8966-5a7ac4497280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddfff96-e45e-4194-b0d9-c79f51e26054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc32d6a-c6d4-4519-bf4a-41697ea238f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72ed92c-a99e-4920-9f19-c2f9d27e3cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db099108-4429-4313-bca7-0414e3ca3433",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178a37f1-cd5f-4742-9580-7e4b42228ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a066949e-c31a-43ef-8ec9-202ac90543bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29699520-234d-4c7c-b24d-8715ee89284e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13cc1a9-0d1e-406a-9b0e-408a2e03cfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571e6afe-6d91-45dd-9ef9-d2cafa2dad2a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b794ad-2287-436b-846a-46e6eea3dce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1777cd44-a186-43a9-a999-9de5a8ecd26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e12ea3d-897d-46aa-8fce-ce66ef6e523d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428006a5-a624-47af-8034-9ea59210e113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cda2e1-df84-4480-a740-edd3b67ca0cb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140f95d5-f7cb-4b7a-9d83-e0745aa2e37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1260feb6-664c-4801-b205-af6317cb5e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df18e92-217c-4da4-8369-a53f77044efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5656db5-972f-4da6-aab9-05af5a8d4216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6ae049-bf19-43bd-a4cc-1e2075758bda",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2773784a-35dc-4ac6-90ca-43ff59325eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d0c790-91bb-46ed-add9-2d49a14c6c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0bd628-247a-4f93-867b-5e943ccae530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20d0841-a1bf-418c-811c-8eb22e412eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6890e58-07b0-4da4-a4d6-d90152ac6903",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59cfa08-d77f-483a-a49f-cfb038430fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6c68fb-fee8-4975-b401-e9d6cdafb10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c0317a-f3e5-4777-8888-0d7bf1f31715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50223d66-b88a-4a9f-be4f-cc4f35fd59c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5aabde-189c-4991-baba-b8b71210034b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d736c50-df41-4a42-9a4d-4128cba30c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dc0d26-996a-4a85-b6d6-ac9a4c45ff99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca3a1db-c1fb-4082-be24-7b3e19389750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a247a5a-888a-49cd-8cb0-38a66178eb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcc42dd-1c13-4786-b7fe-d645e976416e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd96b6e-09ee-45cb-8f82-1f6a715e4485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d100fa-7095-4786-8db0-d2742d7e47aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acc6afb-aa38-4222-a88e-4bec0cf56644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e40ba52-1ccf-49b1-bdb1-3d9d5c467972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d830af9-c41f-4c9f-b354-036e8e6220b7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b8d305-195a-4c22-9c62-52c7525ac206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4302fff0-72e9-4ed5-ac92-291967f745aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485bff78-1339-4685-aa23-706dbe811bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ac3bf1-bd68-4682-9c24-e68167e3e992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a04ded-2c48-4962-9742-cff68e44d9e5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d039f4a2-6994-4825-984f-2412f6cea986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c162820-f3fc-4af1-bb49-b93a79b5ed8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064ebc7e-0c96-48f4-ab6d-9e11ae83518e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093d0dcd-13c9-4f30-be80-dcfc8f84533d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122100a7-61cc-4cc6-b9a1-71a7e9421e88",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034d87c7-ed6f-44a5-ac32-9d35920801f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21dc790-11f0-4f90-b030-d9bf24ba3b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8b6bd6-ae90-42d3-8252-b29a6811a038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f461addd-48f7-4a72-be15-deeaaf493bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18da1a77-d306-49c7-b17a-b630082d2cb2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cd2207-5587-4ede-a95f-faed4fd6ecdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc216e6-a4e8-4737-8c8b-e74a4b0d49a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db79cd45-8637-40ea-9043-88a1b961af50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b8a38d-7ff1-4c27-b2c2-dbe75de4f880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ede102-9ce0-4d1d-84c6-f29df570d59e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b48bbe3-12fe-4376-bde1-249ee188503f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa95d3a-5d98-41ee-98e1-692a90043dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2111c7-f3ee-47da-9de0-baf69e100909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294b10fb-ccda-479f-8149-dc5b51ced048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a6c835-8cf7-4265-8478-7cbed127b090",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c438ea3-15c0-4616-a1fd-d3f20d536eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85648089-0cdc-4feb-acbd-3c34031a7d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29ca600-9f80-44f5-98dc-5783a7a3f4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe25e079-0529-476e-9cd8-fbd70be64b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad714c4-e4d7-4bfd-acda-59e4239339e2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d8a632-1d66-432c-ad73-e5106832a40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a945e30a-bd22-42d1-8645-a2315bddb3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a60b0d-2af5-4c29-8672-8f4c34072f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8574a4-8443-4185-af1f-728f900def6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13d1b80-b22c-444e-a2af-1f6e394d00e4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4890fedd-2511-45fd-ac28-b912f9732d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86503019-2934-46c3-b42e-1d8871b554f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2971d9de-b978-4028-8317-732694cdb4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be22784-dcd7-4238-8c10-ab83c04cd2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc7287a-2c3b-4d57-b930-c0ab0623a79c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8052df16-9cb2-4df0-ab13-30a53162aa38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d18e924-943f-4524-ae6e-3f5dc9f9b70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c1314f-6f53-496f-99ed-6d9c287c20ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806cda24-6e70-4f5b-a8dc-c0085f855b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301a75f3-1b2c-497e-8e62-1a10f16611c1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693848f7-6ed9-4ed5-9d4d-954a3b1421d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b072518-8add-4486-ac0d-bab951c326a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119658a3-0572-4007-82c0-1a16fff47a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8aae72-fd6a-4d49-8511-c006172aab3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eac4f4-efd0-49c1-ad61-2edf8db10b8c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25109db-9403-4490-9ae2-2c2c24af3bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14d20c4-6dfe-4cbf-8264-da0dce19bbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7959cb50-5c21-484e-a9f5-3eba6df64c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd853c5-d3e9-402b-8257-212180789462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290aea9d-7a00-447e-b089-8230ad517624",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77345a7f-50dc-4c8c-87ad-3c85a3b1d9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a5137f-e6e9-4e48-8e1c-5b6c05c1d382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26be384d-2d37-468f-9616-5676c55c482c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ddaf67-35f9-4e97-9f8c-df7af204c13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d82bfd5-3bd4-4a51-8f0b-a05b9e416d30",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8c52bd-3c93-47e3-9260-d808b0ceee3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f807a5-d83f-4708-9bf8-02631bb62348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a313c9-45d3-49a3-a4b4-bc7ce8d5c4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46486d7-1356-4916-8658-722b8dec5544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ac345b-76f5-4012-bb83-605d58682849",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d36f1b2-2c58-43b9-acdc-9126e558bf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3505595e-3a84-42a9-acef-e4e6e555a39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53d94e0-6304-4b89-9b3a-25802a0eb2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8be114c-4b14-4ddb-a7e7-3ff59d9b27f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ab4011-e8ef-4590-b625-1da97a33c3f5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aca01a4-7bda-42f0-81b0-cfc5782e05bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd782484-f9d6-44b4-b932-e3b09de5d330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4853d385-6601-42b6-807c-f2cca28191fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6a476f-f9b9-43d1-9dc4-f570e6b498a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2f902b-0997-4893-8ee7-5bbfae1622f1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0790c9-c957-4e70-8eff-c748f20c705c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6082174a-8c30-44aa-9913-72271db98a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ff8f26-1692-43c7-b884-2e9b6ea33560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ade86f-0376-4b60-a855-146c8f1f18c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609bd274-4e38-4158-a426-b824650754f9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbce83a-8007-42e4-9978-4421518f3124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4cc431-65e2-439a-bfb6-c2abcd93a0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774f9987-21e6-4705-ba73-d47e1b42f2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf6b44e-d423-4c08-89b0-2e1d5b57d537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d38065d-10a0-4e6e-a710-949d914a7bab",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b84e9d-3470-440d-9568-68bde57d9412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e28f1d-eafe-44ac-b443-202fe5d6ffb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc107cc-b383-4a15-9019-4f2101b1c478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa46f9db-384a-4d9a-88ab-a70a1493543d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a803e4-441f-42c8-8bed-a1f558d6c616",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda85c85-1f44-4149-97b2-3497649f6345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16247703-e02a-4ab4-9e9f-37b0cebb6e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9fe83c-486c-4282-a89f-a7ce81e9246a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2648caf-102d-42d5-8d4c-0eaec74ff420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5f59f-8651-487c-b282-1d1c50caaa83",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a328184d-7805-4ca6-85bb-dee32a85ce04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fd85fd-48bc-4650-9bb5-16ec3848702e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a27f602-f611-43ed-9c1e-f59ce7eb2826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bac3c8-64b6-4952-89c4-58c7baae30f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04400e0c-3c9d-48a9-8fa2-f4740251af5f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadc5a16-db4a-4553-8675-868e82c3107b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fedc4400-96a0-4f37-af07-2487483d4697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682266d8-a602-4e6f-bc0e-a9ee1eb39e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dea17d5-1b68-4c6a-863a-d52c08d23bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218decf7-90f0-4f6d-bab6-a94c25ed778f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4acfc64-9843-447a-b05c-1cd71fad144f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edec4685-5f69-4b8b-902c-89de0dc8dc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab0915c-3d48-4f16-b82c-46ed7d2ed482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ff7ccc-5473-4bba-84f6-754dc3a1d1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04da957-3e9d-4ac9-bc71-1b8505ee4a49",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d141c5d-c0e8-42b0-b80b-db5885b764e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3f602f-f73a-4b27-9ab2-3e2cd5aecbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4675e723-7e6f-4a99-84c2-89a08ad76cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308134e7-f8af-4872-b20d-2b711368b2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5879fc6-2968-49ca-bb9a-946bdc8684e3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3b4bd0-6537-4375-a06a-39059894e50e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffbf24d9-9fee-4f3c-8d06-a352916ab8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fbeffa-0ace-4faa-9394-c9d367966f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cce949-f0f6-4a7e-a002-b118d1ffbfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5219b011-93e1-4bf8-8fff-d394e30ebe41",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed66dc2-f29a-43a2-87c9-0a17b92bd785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efcaa692-52ce-4d56-8d45-3d4a34ac7f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be961ea3-d39d-433f-aa1a-eb43adc00012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15975b54-4f90-43c4-aad9-b6a505f42fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b9529a-1640-451a-a512-a8bb6b5f0464",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f8292a-116d-48e8-840d-1e02c88e0805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a3332bf-8eec-4ad0-b94d-c4250b188127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99fca72-7ab0-4a08-9f3b-d969cd4086bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8e351c-771b-4bb2-a0a8-30bb6e8a5e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfaf729-6701-4738-97f9-af3c95316269",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2bfe15-aa08-41c7-b1de-6a03b7f9e66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5341025f-f56b-4a21-9ef7-7112f640c7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c33800-e053-4169-9f86-bb18e57eb2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1468016-d395-4467-86ad-dd350803d009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c302b3b3-c4b3-4a1e-bc46-ff38c37000a0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b680f8b-5a5f-496f-9023-f44906367d84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "909462a1-0c20-44fc-a827-b268edbfbaa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddb7f25-d580-4507-83b0-7038ccabcf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56806f8-b9fc-4fe2-99c4-3ebb467966d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c7a145-0a33-44d8-a269-92d46f5c0247",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e55546-fe2f-42c9-9d2c-8b083de26a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436a5cb2-e494-42fd-bc96-9ff75dce6b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc0ce07-f2e7-4b44-b836-b8adb43daf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e442566-9b94-4f00-895f-692bd65d1871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f96777-ee9c-4486-b50c-9d1ea04e9371",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8bab0b-9445-4fd4-b5e2-1325b4a2e008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11a5ea3-fd4d-4c60-89c4-6534bd2f15c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca85551-49f0-4727-9ff8-1d12332799f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93d7c47-1f01-4f48-8acd-f319d0b902c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5060d16-389b-4909-afb1-70d1630b142d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8bd39a-bd64-4fee-8857-96a22ca88ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54e576b-ba51-4e5c-8db9-1faac01e4220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e358c49d-e6ea-4440-a46c-3c5a9cb337ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e12017-e1e7-48b1-8acc-191cd64c6271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d1b7db-3acf-4402-b7bd-ac9788f0cc66",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4a9107-7940-451f-aba6-99b083005f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a196d8-f16a-43c7-84a4-157c3f83c24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a99ed6-0e42-4c22-9d79-14eb433008cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695e3974-b2a6-46a9-8037-7d40e445e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9917b208-e1b8-4042-952e-4e075bb368ee",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c530af-2887-41ff-b677-88de44bc41b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46866884-c906-438d-8884-bce1ed0184f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde9355c-3a5c-4a48-a9d5-5caea8f39b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f40d241-63b2-4eda-af4f-403be4f19491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c64b36-7553-4079-a529-85115d82f6df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73048040-ef20-4892-8991-409ac3f19124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab0a834-47af-4793-87a3-9dd9bb80a536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd58120-d9ea-45e8-a122-fb65f2bd1ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94eff862-5cd2-41ef-819d-52bc3de2f222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099c1858-b3f1-4af6-8063-aa4b3f2b23df",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad826dd-89f6-4edf-a0af-157420e90dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866efdc7-2632-4daf-9b58-39239f05f4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4182ecdb-d1ea-411b-9501-810b57bd7d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33577a99-1fb5-4f5f-85a2-2b6eda33305e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa624882-9ffc-46b4-b616-e567c127ac8b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c21e13-4179-4d9b-a8cd-2f7011009da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d6e13e-8a73-4a27-a6c1-2533f973812e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00871462-87c9-4043-b63e-e4547d573863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2621be78-5ca3-4703-b23e-e71d7343f0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67815b50-63c0-43a3-8148-86e81db76e4e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f025f3-8536-4ad9-a15a-9a06e439c510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072f595a-8edb-46fc-a91f-42cc9bd26620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6b867e-1e9d-4df7-88ec-7f19a6a87ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef82808c-a378-4d2e-88a7-c303626976ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa56c238-07f0-497f-972f-a1ac23b4931d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9504e7-ec62-4213-bebf-e60e4dbed642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a71bd07-ef3e-43a1-91da-2d7bea855b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d656b995-d2cc-4cef-ad76-497838ac2f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c57973-db28-433d-93e9-b14a9a4459c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39363a3e-3237-4a6e-ae7b-de58f4b687ed",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0daa278-df48-4c3c-92c3-b8f53f5ee4e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d04f68-f9f3-42d4-8705-d7a043fb956b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b576abf5-7517-4228-83fc-2f1ca7e0828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3df2ca-633b-4067-a1cb-9b9094a60e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b952f308-c90b-4325-97f4-4fe12c745695",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c52e0f7-5668-4ee8-9dd6-77f79a927969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6920d6-5984-4e89-8be3-492fd8eaecd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c17379-5621-41f2-b88c-5ff947c2cdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a103d7-58c0-43a8-af4a-564f7b596aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19057d2f-d318-42e4-832b-85aa9112efc2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c5bbf2-abdf-4e45-bb2c-e0ad93cc9815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c54ce0-4d53-495d-88c5-6394245fd77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe68809-f011-47ee-9d56-3f7812124745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9866649e-154e-4a6d-81a0-ddff869f084c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86cd445-cd21-4269-9d3d-95b19b51d681",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb8a2b0-9f2b-48a2-83c4-eaf35e2f4ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96e4d7ad-9582-404c-b071-e898e05a1665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa73904-e851-420d-b7ff-12757f482279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1680ae98-240c-4d09-ad9e-651add016198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12f99a6-6777-40c1-b541-76ea02d181ba",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9f0497-a3a7-4258-8c66-f2b8d0d654fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91201f41-f987-4fe8-8c5d-afb9f3eb107c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cdad1a-5f62-4b74-99de-ee9587354949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7db8813-17a7-4823-b804-c0c3b76aea50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e7b92f-1335-4055-b3b6-bcf0a668951e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba41ba3-75cf-4b91-a2bc-be2f4d461ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e22940b-d9af-4fd4-9aa5-f5a6f71c1d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49dd8a4-6200-41cc-9575-360e503d4762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e7048f-3ecc-47fe-a7d1-2a0b38190641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13f24b4-da0c-4b75-89cf-809a4a1bcc86",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619ffe02-a3c8-41dd-88e1-7fe3c26e206b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c57bbb62-0d42-4876-a9b4-3c00321b0351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3fec55-864c-4ba0-b818-55b1f66de27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac16fe2b-cc09-4539-915e-a6a96361712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10768f3-f2d2-450b-87fa-cacae383a4a4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8019b3-f410-458c-bd88-e4358f346102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd33e6e-07d0-44c4-a7cf-c7d306d237c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55984e8-dcd9-4365-9101-9684c2f3b7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf68ccc3-1ed6-4d40-9859-c44798192efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932dcd5a-e4ca-47ce-8979-865ff6d864fe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f26fe0-1625-402b-baf1-53c49a5838cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f07137c-4387-44dc-9b0a-f00d4f830b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2cf01a-f4bf-4085-b3af-558552022d02",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434b8cab-576a-47ba-b72e-2e4427237614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e02c2bf-e1f2-4864-bf0f-8511532f48eb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d023538-16bd-44d8-bf4b-43614c87cc55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d844ab-3a83-4e3b-a64a-06981e513a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06bc60c-713f-46f6-ad7b-dbfe49b34826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd19556-a0bb-4538-b7f0-9eeb07ff8524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee53ad48-2ab9-427f-b499-181107b4d444",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8c49f2-56a7-498b-a443-7b1c26ebf0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e5f3c2-70b6-44cf-b704-1e35b2d36f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d45396-dd0d-457b-aacf-fe559f2a7d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1755d7-6285-4ec4-a006-ac6e236f4c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daab308f-392e-4e97-a80a-435ca2e8cfd1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fa1c88-4cc7-4b17-802d-7d0b90815e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3862a8c0-ee2e-452d-abc2-4951dc1a209d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399c844e-034b-48eb-bb10-7f169d490768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ba306f-9c20-4e39-a78d-3c87296e2454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82699db4-819d-4a7d-9bd4-7fc62ac04241",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8fb185-7441-4eff-b078-4f3eebb2ba14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033083e0-5e48-4e1b-bd37-3ced02b18e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1849e477-f868-4b37-a731-37310a6512ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48774070-7f94-4090-904d-5ce47a23194b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe27b4c-d3f8-425a-937e-01dda6fa3554",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c47424-3b9d-4ede-9223-68ae0c78f1d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d11a794-50da-4915-bec9-62b259fc2601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaf1fa8-3f8e-4acd-a186-b41e8a4615ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b932cb1-4052-47c2-82ed-572142cc89bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144846c9-c6c7-4c4d-83d2-6129ee6e2b94",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e1e809-8419-4305-821a-aacd67d85eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc588c79-9c40-4930-98b0-344a17a301c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6657768-def0-4067-8bb8-1611f3a4b330",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecc4567-a3a6-4195-b47f-0964ef826a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285ca6ba-2e42-4372-817a-c04285919e1d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f528af-1dd7-4a60-b741-3bef3c323856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6035ef28-f6a9-464a-9e55-49169a30648e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9f266e-0523-40b4-a099-fdbd4cc363a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f9b2e8-c190-4ade-a9e7-a55dbadb25ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acd16a0f-97d5-457f-a16c-5d1082c8567b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5eec1338-c13a-4ea0-ba4a-498fb404d5dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cec9438-bda3-4f06-a773-a6d5725685bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "517cca9e-e881-4660-aaae-4fdda7ee08d9"
                    }
                  }
                ]
              },
              {
                "id": "3a90b4f0-07bd-4b16-8c27-5dc874f135cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20d19d37-a0f6-4c63-a3e2-7896f3ba88b1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b95d4d-bd53-4a34-959e-b7b7905e6065",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f93a0597-53fe-450f-a566-94f7eb962170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a13d0-998c-41d1-a416-965b72d61e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0234c0dc-b509-4e24-97bf-f09c7a59f4dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8496214-1a2b-4963-a35a-3ebf7f41ef9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31735a46-51e4-4481-b702-6f21a3b0b553"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c984a9f4-c3bb-48c1-82d6-30094c428e1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b28eb2f4-7a97-4ea5-a5b4-2fe0862fbe2e"
                    }
                  }
                ]
              },
              {
                "id": "d12012c6-9287-4ffe-b484-15fe15bef102",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4c487639-865f-4f60-895c-f5c2d8e0d0bc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4df570-e92d-4026-93b8-88aac707f297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9985e90a-897a-4783-ba12-f2cf508ab953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa3d33-218b-4327-bc93-cbedfd62c2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa595a2-382f-44f3-9e8c-35c93484416c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ea740b26-6c57-491a-9212-687e24dcd0f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa7f9625-0215-44c4-9519-f39eaec3ec11",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3667e7c3-5d68-4347-9bca-5d90666db355",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "74c5e059-2e2e-4422-b0c0-c5999fe0778f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a71ec85-e204-4c19-8253-730e12fe3fe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8364dad-152f-4e48-afea-726f8afb18ba"
                    }
                  }
                ]
              },
              {
                "id": "4fdb7811-1eac-4d2d-a894-23a7f5021c5c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53544247-a6f1-43dd-9c42-f477c65b45d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b3717251-afe7-4a3f-bc1e-8265608a980f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f493cfd1-029c-4627-9405-106a76026fd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26bb99df-84e8-40a8-b78e-4d35c32ae1df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af040969-e509-4219-b7be-38f37bad3449",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3f7d72a1-e5db-4c80-ae80-d65c7b657744"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "303ca937-9e54-4837-a293-6bc8f4e761ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af90b922-305b-4c6f-9d32-3da8bccac9f3"
            }
          }
        ]
      },
      {
        "id": "399df8eb-b0c9-4108-8212-a2a3efd7953e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "94d0cab8-d2a3-47d3-85b7-f42b29e72474",
            "name": "Negative Testing",
            "item": [
              {
                "id": "276ff0fe-46ad-4b94-a4d6-911724e6ba79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8218dcc-2fb8-4f73-8127-934a3adb6cef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e10a904-00aa-4d49-9a5f-aec02a066068",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6fb426d1-0181-4740-8484-4fe77dc138d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00de26c6-70f5-475e-8274-623af7b71ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b87164b6-2c08-48f7-a446-45b5f0c528fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3c49f37-9b6f-46c4-91fa-f71e2ecea27d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72ead018-870f-490b-a058-2869d4ac6d4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60bb1f01-1030-4b95-8abe-c3c86c4da7db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62beec9c-d5b0-48dd-b784-16e5fc8f07fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5a56542-ca8a-43d2-859a-a9e63d5c3947",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a5b22bba-be2c-4a95-aafe-8a04c3a554b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2504f7f-d3e0-4d36-9420-3555f8d84017",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c991c19c-8ad6-4ee2-acdd-110325cae8aa"
            }
          }
        ]
      },
      {
        "id": "9f3d48ea-11bf-4991-9a5d-4d42345e50cb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bf2ee19c-9d3e-4e3f-8cff-3fa17371b9d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49b85f68-4443-4f44-890e-acf026050e4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e0e479e-7534-4f14-9c8a-d87f949a3b47",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8bf03d-6482-4435-addd-ce0a8de31247",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf91fca3-5194-4c1a-b3bb-6a5252c539a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085a824c-da0f-4246-8e05-8e396654888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af540eda-d458-4e49-85e9-7c7df4bfe82a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed5a4e54-fa99-427d-bc33-9428fa1bdd89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c541062-08fa-4e75-8090-da2be8bcc024"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00f5778a-ff1a-4931-871e-b56f24bf402f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ca2a4de-7aba-4484-b557-1210372ab139"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fa7f9aa-0946-49fc-bb4d-1e9f16273e79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5aefa0c3-8f77-469b-a2aa-9a0cb6da2126"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3258f8c1-5d41-4b69-8888-e04b6f3bffa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d67a151-7700-40a6-a415-02d894d1643b"
            }
          }
        ]
      },
      {
        "id": "bf66d235-c99c-412d-9f46-7c2faa743587",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7a8ca50e-d008-4d09-b46c-1b7cfa4174c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17074323-9d5e-4d49-aafa-92f01f32b30f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8243b55-1cd1-4d34-8593-9de0f80d3c09",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db732356-e0c2-4907-98a0-9fb814ab517c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0f50fb9-96f8-4f32-b19d-a3c37d6bdded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d317f8-6209-4077-856f-ea56cd733642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "464652d8-4cac-454f-8f53-6908311157c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8576a863-bda5-468b-828b-5bdd983a0f73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3382333f-9cc4-47a3-8994-651be9866329"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9101fee2-879f-49b0-86b9-d97ab23d748a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93c64632-6361-4447-91d7-8311542e3f26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa7882bb-7e7b-4ecc-8b2c-199b7e5b0f09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd9dbee8-579e-43c6-a442-ba7633d92a19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f34f613-ef15-4882-9bf2-c2b809531f0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42ab8d2a-e0b7-4c74-86e5-655478101a5d"
            }
          }
        ]
      },
      {
        "id": "14ea561a-7a47-4aca-b219-b1287f158bc2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1e980f9-25e5-4bce-9f46-539f0fca844a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a065fec1-456e-40ab-b485-e38842218825",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "82149b41-ccb4-4679-8dd6-29495372100f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccf29c4c-948b-4469-83ea-2f62dc1a79eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfad6f62-b0e9-4499-92a2-a87be69f7eed",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.4563492063492065,
      "responseMin": 2,
      "responseMax": 705,
      "responseSd": 46.1211534224905,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726533374156,
      "completed": 1726533384040
    },
    "executions": [
      {
        "id": "27c6a051-780b-4232-860a-27f583c3ff23",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ec76df2d-7274-4c97-9751-8ac43fc10246",
          "httpRequestId": "89daa0c1-a9b6-4924-8835-c9d0fbead45d"
        },
        "item": {
          "id": "27c6a051-780b-4232-860a-27f583c3ff23",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a86dfab-c813-4b71-b0df-f5fe50292f46",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "4aa17799-61b0-4da4-8910-df2d68cec96a",
        "cursor": {
          "ref": "ebc01c97-b836-460c-be3f-caab9b872904",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6b4aae70-c9ac-4802-adaa-5b3df46fab10"
        },
        "item": {
          "id": "4aa17799-61b0-4da4-8910-df2d68cec96a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4baf0ded-d5bb-4074-8f83-43921ef7e9a0",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "35905d83-0975-4f0f-bd76-bf2e8db45a05",
        "cursor": {
          "ref": "01213048-4102-4877-ad11-b20bd06ef29e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "032f5a38-6df1-4fd3-b600-34eff87b8726"
        },
        "item": {
          "id": "35905d83-0975-4f0f-bd76-bf2e8db45a05",
          "name": "did_json"
        },
        "response": {
          "id": "7f719082-4e20-4005-a25a-854a655d3541",
          "status": "OK",
          "code": 200,
          "responseTime": 203,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cdfcdc-d2d7-4577-b041-f91fc856fba4",
        "cursor": {
          "ref": "f5dd9c18-ad23-4cc4-b25f-1c5fe618f87a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c7bf3a49-7371-4b57-b021-0bd93c9b7ad6"
        },
        "item": {
          "id": "23cdfcdc-d2d7-4577-b041-f91fc856fba4",
          "name": "did:invalid"
        },
        "response": {
          "id": "a68614dd-9b25-4a35-b5e0-4f914c39b4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cdfcdc-d2d7-4577-b041-f91fc856fba4",
        "cursor": {
          "ref": "f5dd9c18-ad23-4cc4-b25f-1c5fe618f87a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c7bf3a49-7371-4b57-b021-0bd93c9b7ad6"
        },
        "item": {
          "id": "23cdfcdc-d2d7-4577-b041-f91fc856fba4",
          "name": "did:invalid"
        },
        "response": {
          "id": "a68614dd-9b25-4a35-b5e0-4f914c39b4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4744a8e0-6d85-49e9-b78e-0e45eb54df5a",
        "cursor": {
          "ref": "73997bee-9f4f-46ca-bbfe-d9fd7e800be8",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d4c62385-4204-43e3-b6a5-38c526bc8157"
        },
        "item": {
          "id": "4744a8e0-6d85-49e9-b78e-0e45eb54df5a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "81d2f1ec-92a8-4fbf-8abc-91183f268dbe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd63e0e0-9950-4da7-b33a-d3a897369d35",
        "cursor": {
          "ref": "2bdc8cac-9810-4660-aa23-6e157c31dc69",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1bd8ba09-6ea3-4259-a053-0983380804de"
        },
        "item": {
          "id": "bd63e0e0-9950-4da7-b33a-d3a897369d35",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fc4481a3-9333-4a03-a2ac-32575a5b4c2f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3238fea-d099-40f7-8189-ddf5cfdef77b",
        "cursor": {
          "ref": "1cb62f0c-e6f1-4a0a-8bbf-72cbbcbb962d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4eaa5a06-b676-4d8c-9f94-1ae237d636dd"
        },
        "item": {
          "id": "e3238fea-d099-40f7-8189-ddf5cfdef77b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4d3a0eaa-6552-493b-a9a6-bea8ad02bda9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cdf489-a027-4b3e-9052-c07c2503eab0",
        "cursor": {
          "ref": "29054834-28bc-45f7-8b3b-ba8822c669ec",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "09f326a2-b449-4ec0-b948-3bf15e6fe6e1"
        },
        "item": {
          "id": "75cdf489-a027-4b3e-9052-c07c2503eab0",
          "name": "identifiers"
        },
        "response": {
          "id": "55877f26-2c48-41ef-b99c-4d00253e5d0b",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe85d99-90bc-4525-878f-b1288e230216",
        "cursor": {
          "ref": "f521232e-64fa-4d7d-be53-a3248e73d4ad",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "92999958-b551-4563-82b7-4eeebdbaf317"
        },
        "item": {
          "id": "efe85d99-90bc-4525-878f-b1288e230216",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1f3f7332-e4ab-4a46-9ca7-e5c71f107d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472112be-a952-4796-8d19-b7ac8cfe1c74",
        "cursor": {
          "ref": "3386c5c2-37b4-4fa2-9c6a-b991d80a1549",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fb20e34e-ae2f-4922-8e56-d5b275d5ec28"
        },
        "item": {
          "id": "472112be-a952-4796-8d19-b7ac8cfe1c74",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "df55ff6e-24ed-4ed6-9192-4c26abc54a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cef5783-b334-4092-bb09-c4426ecd815f",
        "cursor": {
          "ref": "2fce6bb6-8ca9-492d-9dba-f4048962e939",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2d476395-eb49-4202-aabc-017d8b3e07de"
        },
        "item": {
          "id": "2cef5783-b334-4092-bb09-c4426ecd815f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7d07f5eb-ffd7-480c-9ca8-3bf927dad25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fef5e09-9f28-40b3-b11d-160b2bbb6522",
        "cursor": {
          "ref": "d823b271-90e1-4e05-b826-220786ce1a43",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b6adaed1-749b-4858-a80b-c3c2a5cd3313"
        },
        "item": {
          "id": "2fef5e09-9f28-40b3-b11d-160b2bbb6522",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b0a96a2f-3c67-4e4e-9402-dd73891b6459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8d6e95-ca03-4eaa-9bfe-6515f24eb8d5",
        "cursor": {
          "ref": "584bed82-2e8b-4a4f-afa8-25ca69730f6f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e5a88954-3fdb-4dcb-8e06-c7684e23eaef"
        },
        "item": {
          "id": "4f8d6e95-ca03-4eaa-9bfe-6515f24eb8d5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d78e1c62-4ab7-4c44-96ba-29a0dc66d898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cdae33-3e70-4a88-b0f9-f1beb5b9cb3a",
        "cursor": {
          "ref": "600b432c-ad2b-4081-9e2c-b6c58934a035",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "306d2235-2d7c-4118-95cb-8e42bbb776a7"
        },
        "item": {
          "id": "e6cdae33-3e70-4a88-b0f9-f1beb5b9cb3a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "75cbd7a5-b1c7-4512-bf77-e67b2a81921a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027acba1-1ddd-4640-baf6-20e1db055a71",
        "cursor": {
          "ref": "8bd7fa18-4ad6-42ea-b2e7-ff9558d47017",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "04a69cc1-2abc-4f17-bb67-730be7755a02"
        },
        "item": {
          "id": "027acba1-1ddd-4640-baf6-20e1db055a71",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8311d525-1987-4bc0-93cb-e963960d1428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff3dee5-2ecb-4f50-867d-30add1c37d2e",
        "cursor": {
          "ref": "776f1eea-ffb2-4864-b097-241d9117b402",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ba36447e-27d4-4cd4-9867-325a84891512"
        },
        "item": {
          "id": "dff3dee5-2ecb-4f50-867d-30add1c37d2e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5ca967e2-add9-4224-98a2-6f80d47dcb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea1c33f-0c67-442e-890b-98f3fa0a7ba6",
        "cursor": {
          "ref": "77dc92fd-d4a0-4a2c-9bec-55255f54b340",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6ed3335d-327e-4d9d-bbf6-c694e94b6b21"
        },
        "item": {
          "id": "bea1c33f-0c67-442e-890b-98f3fa0a7ba6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b6994da6-d85a-4e9b-a509-7539c2799366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b6a3f-3e18-48be-bed0-bb8e04d56e80",
        "cursor": {
          "ref": "bcaa0ea4-84e6-4403-b79f-041039ed04e6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "134058e9-42cd-4c87-91e6-89bb9ae651ce"
        },
        "item": {
          "id": "438b6a3f-3e18-48be-bed0-bb8e04d56e80",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aad66f05-8dd1-4e14-9f37-e87631550a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa41dc2-3488-47ea-bad9-d2e0133a9bdd",
        "cursor": {
          "ref": "257288dd-be3a-4c6a-9bfe-fc01469d7431",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7b6b2603-3f4c-445c-99b0-6de811ae9a3f"
        },
        "item": {
          "id": "0fa41dc2-3488-47ea-bad9-d2e0133a9bdd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3e7807a4-8050-4005-b9e5-d2c8e6280c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c066ce4b-2861-4a7a-ab53-606431a68948",
        "cursor": {
          "ref": "57c8eb63-16c8-4f73-b0b7-0728350bfd65",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b3b5ae3d-0a9d-4374-9402-f2576c629252"
        },
        "item": {
          "id": "c066ce4b-2861-4a7a-ab53-606431a68948",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "95c5de88-d5bc-466c-a01e-ef130a2a78d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ae4484-f190-477f-9014-f15a66add963",
        "cursor": {
          "ref": "704123c4-87d0-4f57-80af-277213411904",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3de69c52-86eb-4132-8a1d-1e325a834a3e"
        },
        "item": {
          "id": "e6ae4484-f190-477f-9014-f15a66add963",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0dffd38a-5165-4aa7-983f-726b82d6311f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbaf89f-052b-46ec-ba06-84600b62b0fc",
        "cursor": {
          "ref": "df70a08d-041d-4e21-9638-88020fc38b19",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6bc16635-94f2-4b8d-970e-c0f779b70148"
        },
        "item": {
          "id": "8fbaf89f-052b-46ec-ba06-84600b62b0fc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b91f6488-1c6f-4870-8f86-9843c029354b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9122ff5-1c36-45a5-9f0b-65112168c1d1",
        "cursor": {
          "ref": "4cd7c82e-4d09-4156-827d-6e4c35902466",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bf94a7d8-e01c-44fa-a1ee-40df555366fe"
        },
        "item": {
          "id": "b9122ff5-1c36-45a5-9f0b-65112168c1d1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "27bbadb1-fadf-43d8-8d72-c2e526dc43f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dac1259-554e-495c-aa4d-faf081d3fefc",
        "cursor": {
          "ref": "7d83e311-eedc-4845-a3f1-2e4927c1e1b5",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c74c09ad-2eca-4d6f-878b-4ff9afc11510"
        },
        "item": {
          "id": "8dac1259-554e-495c-aa4d-faf081d3fefc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7b1f4926-56d8-421e-9878-98ce66a8fb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2268ecb3-ffd3-4cc9-b69e-94a129b2dc63",
        "cursor": {
          "ref": "d3620573-fbd6-4fa9-bdd2-f9cd789daf39",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "98f75fa0-5a7b-48b6-bf1b-1df4b4b84037"
        },
        "item": {
          "id": "2268ecb3-ffd3-4cc9-b69e-94a129b2dc63",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f86e0a5d-8356-4dff-af71-620486110e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dadd3e3-22de-4778-a6c4-a19e6d960419",
        "cursor": {
          "ref": "c075f98a-a4b9-44ea-b5de-f42cafafcfe0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ab75e34c-0c2a-4731-bb82-89bcaad47ba8"
        },
        "item": {
          "id": "3dadd3e3-22de-4778-a6c4-a19e6d960419",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dfe14f65-f384-4111-b36c-dbd5c3a92359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edff23c2-2b69-4829-a28f-05e0571e5092",
        "cursor": {
          "ref": "014f532a-ba51-49b1-8be5-68f4a5e57261",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b13aa576-b38a-492c-8068-0d08b0f98be6"
        },
        "item": {
          "id": "edff23c2-2b69-4829-a28f-05e0571e5092",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "986e9827-c8ae-495f-b339-51ec94c0b048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395082f4-bf47-4225-949d-90b20e6b72b7",
        "cursor": {
          "ref": "5e26096d-d62c-4e45-ab92-2b386ee4e5f4",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "95cda0d4-970f-4d32-ab9f-d345de9df3b1"
        },
        "item": {
          "id": "395082f4-bf47-4225-949d-90b20e6b72b7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "494f22af-b01e-42b4-941d-c829a21d7654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6ab99c-672b-42be-8469-2ad92a8e8488",
        "cursor": {
          "ref": "7a4fd5ee-affc-446e-b9dd-58b4d26583ab",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b18e7d92-6255-40b5-9437-67ed2a65022b"
        },
        "item": {
          "id": "ea6ab99c-672b-42be-8469-2ad92a8e8488",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4be52db8-1de1-49ff-b209-ba42ae32c265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750b2c92-95f0-4abf-bc94-a0c898e70195",
        "cursor": {
          "ref": "0678c317-1c20-4b67-90ab-5b920023ce17",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8cef15f0-94fb-4630-bb7f-74b53b973554"
        },
        "item": {
          "id": "750b2c92-95f0-4abf-bc94-a0c898e70195",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b7cfed15-c180-4dd1-8c0a-fbc1c1d104bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb236f96-bd36-4ddb-a40a-033ed790bf4a",
        "cursor": {
          "ref": "c53018ab-8103-4820-8f7c-6016ded068f3",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fd45adb7-4612-4d9f-ae13-3a929f3193a4"
        },
        "item": {
          "id": "cb236f96-bd36-4ddb-a40a-033ed790bf4a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "be4cc5ff-16c0-42f1-93ca-83212313ccdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6b12d0-767a-4d60-be92-3d1d5be8d655",
        "cursor": {
          "ref": "bcba40df-df98-475a-87c8-fcaa6e26cbf1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7702dd02-4209-4a9e-a960-f8c035bbb510"
        },
        "item": {
          "id": "cf6b12d0-767a-4d60-be92-3d1d5be8d655",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b32f8e39-de1a-4f98-a8c4-8e2f8e0321cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb497ee8-6508-4594-b947-fb4857d9de66",
        "cursor": {
          "ref": "c7691bd5-865c-4f56-8f50-3edf55bebf83",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e9e48959-4b7f-49cd-8217-1e05c96b5c14"
        },
        "item": {
          "id": "cb497ee8-6508-4594-b947-fb4857d9de66",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "89598020-e245-4b3e-900f-7d7461abba5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9934be-2ed1-4e51-a827-f0a3608dc8bf",
        "cursor": {
          "ref": "10f01c3c-3a44-417d-b2ac-df5ed2b21f23",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1536b0e8-30fa-4f9b-9275-bb4018ce4015"
        },
        "item": {
          "id": "0b9934be-2ed1-4e51-a827-f0a3608dc8bf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c2a0c6e6-939c-44cd-9fe8-53964c28c713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186a3d59-9265-4b6b-9727-22036cc8fef0",
        "cursor": {
          "ref": "d788e72d-044a-4ec1-9692-534d42325853",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "03921702-7914-43f7-ab9d-84e6ece330e7"
        },
        "item": {
          "id": "186a3d59-9265-4b6b-9727-22036cc8fef0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "555bedc2-e9ba-4669-80a4-88f2d72f365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18068bb7-3630-40dd-b3ea-7355160bc9c8",
        "cursor": {
          "ref": "2ee0ab99-3d04-4206-9e6e-9dc889d7602a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bb68b553-e5ee-477c-befa-c1f5ca45d969"
        },
        "item": {
          "id": "18068bb7-3630-40dd-b3ea-7355160bc9c8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "99710482-2c30-4c87-9e3d-d07629ce0445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c43726c-7136-4cf7-bc56-cf54959c5d9f",
        "cursor": {
          "ref": "e44bcca7-540b-4e45-a854-6d3e41b52414",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cf70fd49-9116-4fe3-98d7-ac01d76e3014"
        },
        "item": {
          "id": "0c43726c-7136-4cf7-bc56-cf54959c5d9f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "84a55c19-f302-416e-a862-e15a655fbbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08abc49e-fe1f-46f2-b965-c8302e7211aa",
        "cursor": {
          "ref": "61cda7b1-8d49-4dd6-887d-e9813889f6d2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f8f4552f-151c-4a41-8bdd-a126a9fc85b4"
        },
        "item": {
          "id": "08abc49e-fe1f-46f2-b965-c8302e7211aa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f325a0fe-a4dd-44b8-b510-9d1de2f9d641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da8bf36-5c9e-4651-8446-e918766c77dd",
        "cursor": {
          "ref": "a96eec20-b7cc-4a74-82fc-ebf501930b74",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "78a2eedb-dbd8-45bb-9cff-b4be3512047a"
        },
        "item": {
          "id": "8da8bf36-5c9e-4651-8446-e918766c77dd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ea42bfcc-56c4-4549-b881-dd8225bfc4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf40409-f7ec-4abe-b49d-6dbcf79ed094",
        "cursor": {
          "ref": "41b04f27-734b-4941-a034-510881f344d8",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "17055cca-39d0-44b7-abbd-09e607de66a1"
        },
        "item": {
          "id": "4cf40409-f7ec-4abe-b49d-6dbcf79ed094",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1a62fd8f-9f39-41a0-befd-73ee04223b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53417d0-76f9-4e98-a019-975e9b997072",
        "cursor": {
          "ref": "f80db204-585c-4967-b188-607ab9c5d461",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "046d2c89-0917-445b-9237-f5a549541006"
        },
        "item": {
          "id": "e53417d0-76f9-4e98-a019-975e9b997072",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c5146f06-61c2-4903-bdb2-67fb5408683b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c815a639-11a1-4ec8-8855-db9738946c8b",
        "cursor": {
          "ref": "748e0a58-5f7e-4cec-8e7c-118d3b575744",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "49fb3ae6-fdfb-4f42-b81d-b7efca8abdcd"
        },
        "item": {
          "id": "c815a639-11a1-4ec8-8855-db9738946c8b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de04ea09-23d9-4bd4-8873-0ce5ca9d4d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b716d7-23d3-4525-8d3c-2fee0d209285",
        "cursor": {
          "ref": "0a2b3c54-08f6-4875-be24-84ff478ff324",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "adb6ff16-44ef-4e08-bc03-d8ff8e51b822"
        },
        "item": {
          "id": "d3b716d7-23d3-4525-8d3c-2fee0d209285",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "acc15335-c11d-4b5a-869a-044e5e78fba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a54d6fd-a183-4ea8-a3d3-28ba6057dc1d",
        "cursor": {
          "ref": "ee30e4e7-9235-4416-b536-d2c0afd2aa0d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2be62459-21fc-4ecc-83e6-57d276ff2304"
        },
        "item": {
          "id": "6a54d6fd-a183-4ea8-a3d3-28ba6057dc1d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d6a41595-dcb2-482a-bb4e-5242f31f3327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d500cc-7711-4ad9-b8ca-a7bc34b7f301",
        "cursor": {
          "ref": "e2f34bb6-1a76-40e0-b3a7-b42c8f56733e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fe477d04-d537-4199-a279-1201780fe0cf"
        },
        "item": {
          "id": "71d500cc-7711-4ad9-b8ca-a7bc34b7f301",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "654d0c12-8353-4e93-914c-133ae0c8f75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cb8660-eb61-4e42-9e12-2eb8144412d6",
        "cursor": {
          "ref": "5515091c-c406-42b1-84b4-b5cb142e3f61",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "56a34281-fb0c-4c15-9daf-9d94399ee55e"
        },
        "item": {
          "id": "e7cb8660-eb61-4e42-9e12-2eb8144412d6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d7dad10f-8f09-428f-97b5-2993fb3e2d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d8ff25-7585-42f3-91bf-f3e26a2b5ff7",
        "cursor": {
          "ref": "1238a708-8142-4a28-b627-6c7b7efdfd87",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "56f07849-5c81-42c5-8422-3a1c01a7e566"
        },
        "item": {
          "id": "d3d8ff25-7585-42f3-91bf-f3e26a2b5ff7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "982854ab-834c-4107-8dd0-5e18624c63df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c41abef-03f6-4eb9-a90c-806c35e2ed93",
        "cursor": {
          "ref": "01e8cec2-eeb2-4b1e-9459-e6afeeca762a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f9c03327-48c0-466d-9142-6b1263d65b19"
        },
        "item": {
          "id": "8c41abef-03f6-4eb9-a90c-806c35e2ed93",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "57d50b7b-d560-4278-bebe-f3d7954f0b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b61285d-b7f9-43af-8448-86f6bff0fe77",
        "cursor": {
          "ref": "2c2988d4-c9d1-4252-bd44-de93a3a8ed9b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e77a16d8-7965-4af9-8c03-024a415cd865"
        },
        "item": {
          "id": "2b61285d-b7f9-43af-8448-86f6bff0fe77",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e8deaac8-446b-4fb8-bdf8-6df305618731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93debacb-8dbb-46e5-960e-07b231f82eea",
        "cursor": {
          "ref": "7e72cdcc-2881-447c-aead-b371155f4994",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b8f77abb-abb1-4d1c-adcd-96fc7724e295"
        },
        "item": {
          "id": "93debacb-8dbb-46e5-960e-07b231f82eea",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9f3d72d8-b03c-4b31-b21c-5171cfaf193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1c7224-6c28-448e-b72f-348f6897610d",
        "cursor": {
          "ref": "1a4b9f36-dea5-454c-af74-9e581b77bdba",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c883d429-8eaf-41d2-bbcd-c701fc0636e5"
        },
        "item": {
          "id": "1d1c7224-6c28-448e-b72f-348f6897610d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "63d1bcfc-4bd9-4369-a33c-a619a4103058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6784140-ee30-4350-824e-c3b13919c1d5",
        "cursor": {
          "ref": "07e79c51-9c35-40d9-8d67-396ddd04e05d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5e2e7873-6e04-4bed-a50e-cb8158d6711c"
        },
        "item": {
          "id": "b6784140-ee30-4350-824e-c3b13919c1d5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "28976f32-360a-4f84-8a99-832241b726c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a9c28a-ed61-425d-b9db-02b50d2940f9",
        "cursor": {
          "ref": "347d2550-dbfa-4c9e-8f35-a8925f290a07",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "69e49c39-799f-43d7-ab57-e0a4e3b66d55"
        },
        "item": {
          "id": "13a9c28a-ed61-425d-b9db-02b50d2940f9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a79c6d26-4198-4505-9d85-47d7ed5b5a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1ff796-ab0d-4c14-9217-9260e0ea081f",
        "cursor": {
          "ref": "8493e61e-54fc-4814-ad84-a3878aa8751e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "711baa36-6a44-4a51-87c0-9a0239109b17"
        },
        "item": {
          "id": "9f1ff796-ab0d-4c14-9217-9260e0ea081f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fad399ff-552c-4f87-abd1-2123aa9e1567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c10a45f-a02a-41e4-bee0-45dcd2782c1e",
        "cursor": {
          "ref": "f68115a6-7ed6-41ef-9d04-7bc04f5f767c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f9b90566-559c-4391-9873-e704593bfd2a"
        },
        "item": {
          "id": "4c10a45f-a02a-41e4-bee0-45dcd2782c1e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "50be9bc6-faf0-4f24-b311-0a015928aa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f8b543-e7d0-4ca4-a032-49136a0e2a6b",
        "cursor": {
          "ref": "b813c67a-6bc7-45dc-9963-cde13e71516c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "94169bf7-f5d8-408e-8b1e-f860922b4a65"
        },
        "item": {
          "id": "a6f8b543-e7d0-4ca4-a032-49136a0e2a6b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ed235700-9d76-43a6-86fc-822ea0d53364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a4ec5b-8167-4ccf-b544-62fd0906eabc",
        "cursor": {
          "ref": "9781749e-2092-461c-947e-231b39b50959",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bdc87949-4ee1-4955-a9a9-07acc940aff1"
        },
        "item": {
          "id": "a4a4ec5b-8167-4ccf-b544-62fd0906eabc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "18df2759-0996-4b22-83c3-573bf5904826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6636f7-05c2-4f0f-9aa1-343248d252b5",
        "cursor": {
          "ref": "1e92ecc0-96f0-4396-9f5f-6fe74eab6a67",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a668b2ea-fcb1-4aa1-b3dd-43e289c8ebfe"
        },
        "item": {
          "id": "ee6636f7-05c2-4f0f-9aa1-343248d252b5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0b6f6250-35e8-4b5c-9dfd-c2e8f725e10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85e99d4-bb75-4e32-ac5f-f44b2ece6e01",
        "cursor": {
          "ref": "92b188bc-dec9-4213-985b-74b09cf835fd",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4a0bebb8-8aaa-4a0f-ad9c-bccc7c37bf8d"
        },
        "item": {
          "id": "b85e99d4-bb75-4e32-ac5f-f44b2ece6e01",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7e25798d-7f16-4de0-9010-301b77f15fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a3c7e0-dfaf-483a-9476-c59bac63c48a",
        "cursor": {
          "ref": "7e8df916-59c9-40ae-afd7-81bc45916319",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "23e34d5f-6e75-4383-8a53-4190ed17c000"
        },
        "item": {
          "id": "a4a3c7e0-dfaf-483a-9476-c59bac63c48a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "04054c61-ea02-4284-850c-91291499766e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96618e41-313e-489b-94d6-c0901e67065e",
        "cursor": {
          "ref": "7b9f0db4-7a35-4c56-97e2-0405cfea386e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fe8a3085-b653-4aa3-be7d-dd05cd9975b6"
        },
        "item": {
          "id": "96618e41-313e-489b-94d6-c0901e67065e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ce14889a-ead7-4ae8-9a6d-27668105ad83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1823bef9-cc56-4a07-97cb-c64f22bbad3f",
        "cursor": {
          "ref": "000430e1-8e8e-40c4-893c-3059332b2752",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a28a38ae-1de0-4ec6-9619-00de569e6108"
        },
        "item": {
          "id": "1823bef9-cc56-4a07-97cb-c64f22bbad3f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "03f3cb05-d26e-4ec6-96ad-ce6d00e8caf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e82b74-0bc3-4e48-aff2-8fb66b413aad",
        "cursor": {
          "ref": "521c8765-6c0f-4252-b718-068ff4a289f0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "691ec221-2871-49f9-b866-077aa6d4e35f"
        },
        "item": {
          "id": "96e82b74-0bc3-4e48-aff2-8fb66b413aad",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c29be2ca-3ddc-4912-9632-89a759a4c40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d56dd09-93f6-4bf9-92fd-a276ede25597",
        "cursor": {
          "ref": "bde526a3-362d-4346-9b9a-7cdffc2c146f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce9f520a-12dd-40cf-ad9b-71367d94c653"
        },
        "item": {
          "id": "0d56dd09-93f6-4bf9-92fd-a276ede25597",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b6b428ae-394c-4f57-9d01-abc5c85f535a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa788282-7993-421d-a795-3f9c1b49046d",
        "cursor": {
          "ref": "e86209e9-c381-4359-95f0-99643d040e84",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8985de17-a83f-45d8-9d00-6c754528c43b"
        },
        "item": {
          "id": "aa788282-7993-421d-a795-3f9c1b49046d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dcca384d-3351-4390-8ca7-72d7aab51fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ae180b-c2c2-4ddd-bd9a-effd067de730",
        "cursor": {
          "ref": "81593ec6-bfc1-4ff9-b339-d70a47fe726f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2671dde9-5082-4f4c-979c-bb1455a01b2b"
        },
        "item": {
          "id": "d3ae180b-c2c2-4ddd-bd9a-effd067de730",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ac333860-291f-40ad-8ab2-210e2d67292e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b334226-4968-416e-9b79-124bdcd91436",
        "cursor": {
          "ref": "049bc238-6910-45da-9814-ee12b1b529ff",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e6a782c6-61f6-43ef-b0b0-a74ded5c17d7"
        },
        "item": {
          "id": "9b334226-4968-416e-9b79-124bdcd91436",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a6ba13d9-023b-4f11-b116-912df4f4dfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a32752b-a66a-4ae0-a7c6-c61c87847bde",
        "cursor": {
          "ref": "78511fa7-5271-4628-93a8-b80ea3bddcf9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8db80078-a6d0-4a20-9b35-71372e7e8ff9"
        },
        "item": {
          "id": "4a32752b-a66a-4ae0-a7c6-c61c87847bde",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0cd153b0-0f7d-4cc7-a674-118211468a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327a37fb-722f-4c45-b72e-a3a8b68b822d",
        "cursor": {
          "ref": "d60bca1a-b0bd-4ca0-b8cd-23903118c0e3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1dc6c4f9-78b1-4d14-8947-25c6a5f018da"
        },
        "item": {
          "id": "327a37fb-722f-4c45-b72e-a3a8b68b822d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8792397a-e687-4036-959b-0a4ab2573efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bae54b3-cc71-42c8-be2f-98cdc33c421f",
        "cursor": {
          "ref": "b32ee350-4cb6-4bd0-aff8-d7be71141a8d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "76d96a18-c7bf-4239-ba81-ce4d92d5dde5"
        },
        "item": {
          "id": "9bae54b3-cc71-42c8-be2f-98cdc33c421f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d87ebd8c-4b4d-4759-8aa5-fa9cd9e98a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ecbead-2ad5-4a59-93af-14fa8b496258",
        "cursor": {
          "ref": "680f1b1c-ab61-45ed-a350-72dbcf153704",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e2818497-8f53-4034-a55f-8871b72b7c05"
        },
        "item": {
          "id": "f5ecbead-2ad5-4a59-93af-14fa8b496258",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7c2d5ee8-89e2-4d2b-8cd9-c17582d0821f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859c69a-b495-4b1d-8c90-2d647399ec21",
        "cursor": {
          "ref": "89ea7270-daba-4545-903b-7e4e431cc752",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e713efbd-7138-4b3a-ad22-976d6e1c5c06"
        },
        "item": {
          "id": "c859c69a-b495-4b1d-8c90-2d647399ec21",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fb79bbbc-1c79-4200-94d2-7c91aa9031e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c80f891-4cf0-4697-adfd-8708958971b5",
        "cursor": {
          "ref": "72b243be-d1b0-4f75-b230-c3fdb44c7107",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8289bb1c-6dc7-495f-9ecc-bf75282444e4"
        },
        "item": {
          "id": "4c80f891-4cf0-4697-adfd-8708958971b5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2d7c4c5e-9008-46da-b55c-70c4aa7da22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527314e0-9677-485b-ac46-3561835552b4",
        "cursor": {
          "ref": "3cb820d6-3791-4230-af1f-859c73032e70",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a685853f-4545-4b1a-ad9e-d9708e280d60"
        },
        "item": {
          "id": "527314e0-9677-485b-ac46-3561835552b4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cabcfa25-adaa-4ae8-9c71-9c56106ee5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787fea23-bc6b-4259-964f-2da305edb4a9",
        "cursor": {
          "ref": "25079f37-d330-4f4b-9dc3-71a9d9c0e40a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "af5e5510-bf68-4ef3-a907-37cb3447b8fe"
        },
        "item": {
          "id": "787fea23-bc6b-4259-964f-2da305edb4a9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "84db2fe2-975b-4e20-ad8a-6cdba769c23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a58c2fc-c11a-4791-b1ee-3c090452fb9c",
        "cursor": {
          "ref": "392d123f-ccad-4330-9fef-6af90b8c6df1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1846006a-c047-4086-b59f-0c27c8f9d772"
        },
        "item": {
          "id": "5a58c2fc-c11a-4791-b1ee-3c090452fb9c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c639cfa9-d814-4098-803b-9789fbe82ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f652ba-f3d0-4727-841a-8b02864a3314",
        "cursor": {
          "ref": "317f1c18-48fc-43ab-9c4b-91e58526842e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4701298b-c5fc-42f0-8368-e1c36555fcbf"
        },
        "item": {
          "id": "51f652ba-f3d0-4727-841a-8b02864a3314",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7f92c09d-9a96-499f-92e7-83892b617451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224852db-5468-4f40-a640-03e00ff9358d",
        "cursor": {
          "ref": "0a7f4e0b-9726-408f-a1e3-82f6ed8e76f3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "89e3b461-3159-49f6-851a-224a2ecd0cc4"
        },
        "item": {
          "id": "224852db-5468-4f40-a640-03e00ff9358d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1ede920f-abc9-42db-b295-3bd8892417a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b88e240-7acd-4ca7-872e-8b247c546b10",
        "cursor": {
          "ref": "443517aa-463a-4873-a912-ee212b1f6d8d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f394409c-85dd-4487-b341-d281eb6e7636"
        },
        "item": {
          "id": "3b88e240-7acd-4ca7-872e-8b247c546b10",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b2ee3987-e794-485f-9af6-4cd51852b439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc0e123-39cb-4269-8c9f-29547cae4833",
        "cursor": {
          "ref": "647960b6-b83c-4cf7-855a-978ae655dd17",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6da71eb5-a06c-4836-80de-7e2cc5312231"
        },
        "item": {
          "id": "7cc0e123-39cb-4269-8c9f-29547cae4833",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3b658832-ac6e-44bf-9e3f-521f9d484296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3afc761-7f75-4b32-b7c6-dbc67e18430e",
        "cursor": {
          "ref": "58b1c77c-c763-44c8-8b9e-dff901a9391b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "77053635-1982-4079-b5c1-53c7eb3754bf"
        },
        "item": {
          "id": "d3afc761-7f75-4b32-b7c6-dbc67e18430e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "24172e44-8e63-4118-acf0-8e52975660f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bd3da5-af6a-469d-a51e-72616c75ad3c",
        "cursor": {
          "ref": "b903f2d0-289c-4a14-93ef-99e183a7bef8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ffb4ccb5-3720-427c-91cd-923f5ab109ec"
        },
        "item": {
          "id": "03bd3da5-af6a-469d-a51e-72616c75ad3c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f0099445-8795-4d2e-853a-8175f8900ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a2babc-7b3e-43bb-8ddd-c9f1393b58e7",
        "cursor": {
          "ref": "438ef2dc-14d9-40ea-9271-1bd0032b2d29",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a14d4a40-f40d-4f1c-9758-348d152337f1"
        },
        "item": {
          "id": "92a2babc-7b3e-43bb-8ddd-c9f1393b58e7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "04efa7fc-f113-4328-9aea-80da16b219c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b58a24-5841-41b6-8703-797c3f96bc6a",
        "cursor": {
          "ref": "acc7eb18-c347-423f-a410-bcbccc34b335",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8c075eec-629b-4611-be17-ea40d536cb57"
        },
        "item": {
          "id": "42b58a24-5841-41b6-8703-797c3f96bc6a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8647271c-5c13-4508-9252-edebe2f178cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d840f1f-b15e-4451-a27b-4021f2bf3afd",
        "cursor": {
          "ref": "ecdca941-c848-41cd-a51b-678461ce0da1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fd6cbc4d-1de9-4bb6-bfbf-19b054268cd9"
        },
        "item": {
          "id": "6d840f1f-b15e-4451-a27b-4021f2bf3afd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4e7a3aa8-01bc-46aa-b16d-463a65fe73eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec28352-6639-4fbe-a379-ee2e4933d462",
        "cursor": {
          "ref": "cf62479f-e71f-4d88-87e9-f52d32f77d24",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b96df3ff-be1b-4932-9ccb-ee2122b07bfa"
        },
        "item": {
          "id": "0ec28352-6639-4fbe-a379-ee2e4933d462",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a85853c4-96c0-4fc0-9531-417bc509c6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab914e6-8929-473e-bb1f-9e24edb6d289",
        "cursor": {
          "ref": "7fc629a3-456f-4de5-bf66-70c7d1934250",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4c0a5019-7154-413c-941d-06ea13feda6d"
        },
        "item": {
          "id": "1ab914e6-8929-473e-bb1f-9e24edb6d289",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "67a33959-c7c3-4b8f-b2c8-1342f1e46cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c160225-2733-42dd-b2ad-66baca2f3c84",
        "cursor": {
          "ref": "73bc2d5a-9ad4-4733-8f51-740d17205b5e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "effa3181-7086-4416-8117-605b12259dc3"
        },
        "item": {
          "id": "6c160225-2733-42dd-b2ad-66baca2f3c84",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5f7c2993-7fe5-40b7-8488-6f82eb04fe10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8300a4-7123-4261-b2c9-127d3ac63ba0",
        "cursor": {
          "ref": "a36007fe-02f6-41c6-9fbf-3bde2c5c1b25",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9db10220-bf38-421a-8122-2aa69c6324d8"
        },
        "item": {
          "id": "5f8300a4-7123-4261-b2c9-127d3ac63ba0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "726335f7-c917-4cd4-9413-dadf5710d1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862751a5-fee5-4476-881c-9ec19a674f02",
        "cursor": {
          "ref": "51398c01-d4a8-4e1f-89ac-bc7469acc775",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bd2824cf-5a8f-4a49-a315-8ace750ce068"
        },
        "item": {
          "id": "862751a5-fee5-4476-881c-9ec19a674f02",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "df5fbeda-1f09-4bd3-8014-7051317f2b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244b06b3-3460-47dd-9b27-b0bae4bd4c5f",
        "cursor": {
          "ref": "a4b46bd6-1f93-4b88-ae0d-cebd87226e95",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "67a5d0d6-2a61-4005-b7c2-79b12cb8c1dc"
        },
        "item": {
          "id": "244b06b3-3460-47dd-9b27-b0bae4bd4c5f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d199a5f4-b01c-4521-a05a-fb5cbb2acca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee9aff4-cf51-4ddc-988b-84bc7683f296",
        "cursor": {
          "ref": "dd64fee1-5f6a-4e69-9f12-0188f302764a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5dc9f248-8e71-476d-94e4-522e56389c9a"
        },
        "item": {
          "id": "0ee9aff4-cf51-4ddc-988b-84bc7683f296",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3bc4e4e4-4c04-429e-aa30-f13b0a6b26bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07b705f-6748-44f9-9571-267e8e0213e3",
        "cursor": {
          "ref": "3457fa58-1342-4cde-98a1-c32e6eb99b8e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "20889397-2c43-45a3-bc29-9a036ee82d26"
        },
        "item": {
          "id": "c07b705f-6748-44f9-9571-267e8e0213e3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3c8a1c1f-d0ec-443d-a078-e499786605cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8c4d88-d723-48ba-8127-bc2d533b802a",
        "cursor": {
          "ref": "29898fbe-e68a-46bd-840b-6d1d764b30b1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "73230aa6-63d5-40b5-abe4-0da5de6c80fe"
        },
        "item": {
          "id": "aa8c4d88-d723-48ba-8127-bc2d533b802a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7c1660d7-82f0-4a3b-8d20-5ebef4a8c510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a88fca-7493-4e8c-bbf8-678bfc9b1e18",
        "cursor": {
          "ref": "5c96cd18-6597-445d-8edf-1a1afc9afe77",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3eaeac79-b1a8-43d5-b71d-4d6ebb80ee96"
        },
        "item": {
          "id": "43a88fca-7493-4e8c-bbf8-678bfc9b1e18",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "079f35d6-4d21-4da1-9e81-3f7bfcef83d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e230c8-1aee-4919-92df-d035305e3c8a",
        "cursor": {
          "ref": "62941618-fd11-4fee-9572-ff9553f1b8bc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dfac288b-fb8c-4ae7-b4e2-e51b295bba47"
        },
        "item": {
          "id": "29e230c8-1aee-4919-92df-d035305e3c8a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "134ba8fe-99bb-40f0-9b41-861380bea343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8850bd-1adc-4995-831c-ee1be3c4238f",
        "cursor": {
          "ref": "7f6eb4d1-b49f-42d9-9511-4a632c652c52",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "24b4c385-dadc-4922-b6c0-2bfa4b111d2e"
        },
        "item": {
          "id": "9c8850bd-1adc-4995-831c-ee1be3c4238f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ae9e2159-9ae6-4f02-96fa-1e89d794fa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ad7c87-3027-4960-806e-7e066f24d1ba",
        "cursor": {
          "ref": "9db9421f-6ae0-4f69-b2e0-50a11e070a18",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "99d6e461-bc4d-4e2a-a23b-83b48a6da912"
        },
        "item": {
          "id": "f5ad7c87-3027-4960-806e-7e066f24d1ba",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1525d288-106a-42c0-b51d-81068af11348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9bb44b-3667-401f-9b94-7b9eb85f046d",
        "cursor": {
          "ref": "8cf4bb0f-5a75-4f6c-afaa-6a16da78cdeb",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a7e9f7e4-e9d8-4c2a-b94c-098ffebc1827"
        },
        "item": {
          "id": "ff9bb44b-3667-401f-9b94-7b9eb85f046d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8abf4280-766c-46fe-ab95-15d5ef161242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e9af4a-558e-4d90-a3bf-caf988470e05",
        "cursor": {
          "ref": "a46c5cc5-5c31-4d9a-90b2-be96a8b5983b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cdd3ba02-9348-4700-aeeb-3246112a5e55"
        },
        "item": {
          "id": "94e9af4a-558e-4d90-a3bf-caf988470e05",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fd8a4b46-09e3-4c83-ae76-e59b0a571add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e52a39e-bc51-460a-996f-cfc463d66ef2",
        "cursor": {
          "ref": "6c33b277-ad19-4556-bb2c-d06efaa509e5",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "34af7b70-6fe5-458b-9172-e9e854083854"
        },
        "item": {
          "id": "3e52a39e-bc51-460a-996f-cfc463d66ef2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "568ad0a8-fe01-4a62-98bc-2ad13b6cdbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8858820d-f953-4b52-8606-0ea4b9e6bf64",
        "cursor": {
          "ref": "661b5a42-a26c-4b9f-b63b-10b9430f6911",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ed5cb77a-ef8b-4d3c-b456-b0b127f2a977"
        },
        "item": {
          "id": "8858820d-f953-4b52-8606-0ea4b9e6bf64",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8529bf68-5975-41ab-8e87-85c1ab1e37b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5e4a8eea-d518-4415-91c0-90700be381b7",
        "cursor": {
          "ref": "59ca50a8-ac14-4c43-9d68-54720b01de26",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "83b94549-fdfb-4c30-90d1-6a473805d437"
        },
        "item": {
          "id": "5e4a8eea-d518-4415-91c0-90700be381b7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "213d35eb-3026-4c21-bff2-c67d23a4d5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0feb8e31-e3c7-4b42-a47a-9feef74d69f4",
        "cursor": {
          "ref": "bbff29cc-443d-4a09-a61f-8af0c131bf03",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dcaccee9-b598-4903-b82b-7a49552884b1"
        },
        "item": {
          "id": "0feb8e31-e3c7-4b42-a47a-9feef74d69f4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bee50c7d-7364-4776-b727-509863f5ca03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "328eb389-2562-4591-a8c7-0c01b759d575",
        "cursor": {
          "ref": "5f145275-89bb-423d-977f-a827154fa51f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c3887fb5-3c1d-46c9-a926-5139b25035be"
        },
        "item": {
          "id": "328eb389-2562-4591-a8c7-0c01b759d575",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c51d43cd-f1de-4468-91cb-99cd7a28ac5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "850119b2-6529-495f-ae35-5d8c1e39ea04",
        "cursor": {
          "ref": "1d5a05cc-3c43-44d0-ae9b-d00bf55d403f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "813924fa-395d-4dd3-b254-92c8438b21fc"
        },
        "item": {
          "id": "850119b2-6529-495f-ae35-5d8c1e39ea04",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "08248f5e-1414-4eb5-8cb3-d083598c4c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9551f29e-4f59-4be6-8afa-f9dae2c34ca7",
        "cursor": {
          "ref": "dd85f2bd-e5b5-4598-b617-604109f7f0d0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "273a006f-3ab6-4d66-b3a8-ea7cf3e3a91a"
        },
        "item": {
          "id": "9551f29e-4f59-4be6-8afa-f9dae2c34ca7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f2232273-2516-4ca6-9643-0044cc776e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "65a89fac-a54b-419e-94e5-17c4c3478b83",
        "cursor": {
          "ref": "16dc8a96-ceca-48cc-b61a-de459a6ce5f7",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1eeaf049-da39-4f21-bbc4-73e89c95c366"
        },
        "item": {
          "id": "65a89fac-a54b-419e-94e5-17c4c3478b83",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f1ff0344-1918-4e0f-816e-cd8fc4512a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "275bf597-57a4-4433-90a4-569968791b4b",
        "cursor": {
          "ref": "763e561e-5358-4538-abc7-cf91b8ede45e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a9a9394f-1135-4347-8566-a68f94526732"
        },
        "item": {
          "id": "275bf597-57a4-4433-90a4-569968791b4b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "02c500c6-6778-4e26-9648-5477aff17f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86831853-e53e-4977-af37-2b4f1005db47",
        "cursor": {
          "ref": "d27b96bc-518e-4b62-803d-d31df2bb96d6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a138aac8-ec86-4936-8457-2ba2208fbb51"
        },
        "item": {
          "id": "86831853-e53e-4977-af37-2b4f1005db47",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "693777d8-77c7-4f22-8b49-9e0cf1993ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee057e7e-3b76-4edf-80ad-b9ccd41cb9fa",
        "cursor": {
          "ref": "6d114b9c-b370-4452-819f-1556ceb99d40",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "271774e7-23b4-4e69-b1aa-c8e9aa34e0f2"
        },
        "item": {
          "id": "ee057e7e-3b76-4edf-80ad-b9ccd41cb9fa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0aaf893b-5f7c-46f2-bb83-0d7eb3c34f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27dcc18-82c7-4776-9678-448849c9dad4",
        "cursor": {
          "ref": "8b43ed63-ab71-43d4-92ca-679d0b9f10f1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "16b26f3a-590d-43a5-8a7d-ae24ea261150"
        },
        "item": {
          "id": "a27dcc18-82c7-4776-9678-448849c9dad4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "19bdde6a-a7d2-429f-bc7a-02b4c4974a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acec384-b089-4999-9c33-105565aab85d",
        "cursor": {
          "ref": "8d8882aa-dab9-4fa0-9dce-42e7823a654a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "65a4d21b-e204-496c-a000-42762e7f4129"
        },
        "item": {
          "id": "6acec384-b089-4999-9c33-105565aab85d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0839d0f9-48be-4ddf-8170-4cb8197065b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5801f0df-04b6-42df-b030-abc9e0566143",
        "cursor": {
          "ref": "87eae2a5-0939-43aa-93c0-8bba0210790b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1b27e751-722f-4b9a-9e61-66713d45fc70"
        },
        "item": {
          "id": "5801f0df-04b6-42df-b030-abc9e0566143",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4a55765a-b107-4a0e-a938-49851d27fa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7edf41-11e9-4930-9883-669757d3d602",
        "cursor": {
          "ref": "428a9676-a8d6-42b7-b674-58b2d1ae5a24",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5316587b-f0b1-43a7-a594-ea8412299eb9"
        },
        "item": {
          "id": "4e7edf41-11e9-4930-9883-669757d3d602",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "58a5716b-c2c4-4050-8a24-fe41e448aecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6517f3-0eea-4379-a466-b30e57e19b48",
        "cursor": {
          "ref": "ce9e6e47-cb18-4d5b-a211-c31797b03547",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f7927c21-74f8-4cf1-b9de-4a4e82544b59"
        },
        "item": {
          "id": "5d6517f3-0eea-4379-a466-b30e57e19b48",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "392c365f-381f-4359-9b0c-78f84a23eb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c857e9-3f2b-4fac-9ef2-b0454e4f31a2",
        "cursor": {
          "ref": "a197db60-aad9-4ed8-9b54-e39a32c2bccb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9a6d39b2-b187-4a80-8a2d-2ed362d2c3df"
        },
        "item": {
          "id": "e3c857e9-3f2b-4fac-9ef2-b0454e4f31a2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fc2354e4-9854-41d8-a06a-ce810aed65b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d04f08d-558d-412c-83eb-406a78ef6690",
        "cursor": {
          "ref": "c89ec547-f67c-49af-a8b5-ce70d970aa2f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "02131143-0c94-4f07-9d3f-a8dae7e1d0fa"
        },
        "item": {
          "id": "6d04f08d-558d-412c-83eb-406a78ef6690",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "708160d3-9631-4f97-bf96-1ee7cabb69a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a46066-7a79-4b09-8dac-e54ae3a3b799",
        "cursor": {
          "ref": "41ef2cee-e633-4689-83b0-ea93cea5ae1f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5e6933f3-f748-40d3-8ff4-e73dab745405"
        },
        "item": {
          "id": "c7a46066-7a79-4b09-8dac-e54ae3a3b799",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dac2c605-ddcc-40fc-abd3-684593b0c25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa9df43-45bf-43ec-ab28-c49d6545a32a",
        "cursor": {
          "ref": "13054015-e583-4381-8a50-b842a2628a3e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dc98360b-3db0-47f9-bf86-2009822a905c"
        },
        "item": {
          "id": "4aa9df43-45bf-43ec-ab28-c49d6545a32a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "704528f4-19bc-4fef-a59a-36056011d169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bc504e-4ae3-496e-9b3d-5faa56a02a32",
        "cursor": {
          "ref": "48d55a79-4522-4ab7-8a0e-597d93214e28",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c109343e-d97b-483a-ad62-0d1411af39fe"
        },
        "item": {
          "id": "b8bc504e-4ae3-496e-9b3d-5faa56a02a32",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "038b248f-7ee0-4bb0-97a6-0d988cc094dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a9b730-4238-487b-a279-365a4eb62c08",
        "cursor": {
          "ref": "3bb35d54-2412-47df-ad15-b2759819faf1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8a3e9a22-166c-46e7-bd82-2846c57cf517"
        },
        "item": {
          "id": "84a9b730-4238-487b-a279-365a4eb62c08",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5751ee78-2aad-4401-82c9-04f181fae895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5116c9-3fc3-494c-8e82-f9767bf6713a",
        "cursor": {
          "ref": "16f148ab-30c5-416f-9636-d234e8a137a8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6fa6089a-31c5-43ec-8457-64ea37b00568"
        },
        "item": {
          "id": "af5116c9-3fc3-494c-8e82-f9767bf6713a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3a9d3471-78e6-495a-aab0-e346ea1b938e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94caa72-0f23-405d-81ae-5713bb8a7230",
        "cursor": {
          "ref": "95da7277-3dfc-4f63-8fdb-94ea50c8dc89",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f09d48da-1364-45ca-885b-ade15b80ebb4"
        },
        "item": {
          "id": "c94caa72-0f23-405d-81ae-5713bb8a7230",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "39258013-4b69-41a5-a187-e7e7928e1287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82212405-eee9-48f0-91c4-6ae54c36c972",
        "cursor": {
          "ref": "7f116bcc-c03d-489f-8864-326c93741bd5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "44597ed9-0aaa-4b3d-b2ea-369574160eba"
        },
        "item": {
          "id": "82212405-eee9-48f0-91c4-6ae54c36c972",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "70ece310-c6d7-4043-aecd-2e9af12791d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3fd45d-71fe-4fcd-ad1d-adc4f46c0c39",
        "cursor": {
          "ref": "45139ed7-f084-469e-8ee0-ac30b1cb2495",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a5137fb9-5b43-4b90-a5cc-9b1312409d7c"
        },
        "item": {
          "id": "ca3fd45d-71fe-4fcd-ad1d-adc4f46c0c39",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "030d657f-ea0e-462b-861f-65d211ae647f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274b447d-9052-4123-b665-345d1d65d34f",
        "cursor": {
          "ref": "ab1ac80f-639f-459d-b139-aac5a31379e8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "113ab842-3e7a-4209-a7ea-fd15b27a5343"
        },
        "item": {
          "id": "274b447d-9052-4123-b665-345d1d65d34f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "06467224-50d8-4d13-babb-86bb2754f97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa14576-8fc8-4d47-824d-f161a8b61bf4",
        "cursor": {
          "ref": "57101e89-7a4c-472c-bcd8-868123f9da67",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d2e93367-1dd0-49ec-b188-0bf89571d012"
        },
        "item": {
          "id": "7fa14576-8fc8-4d47-824d-f161a8b61bf4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cdcc5268-c96f-4455-bccb-445a82960790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2533737-3caa-4012-a42c-43a31e8c23c5",
        "cursor": {
          "ref": "26e4a444-1c5e-4129-b839-0dc1660ccbf7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3443ffb4-cd6c-4a22-a79e-ff48a9f84b96"
        },
        "item": {
          "id": "d2533737-3caa-4012-a42c-43a31e8c23c5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "988bb698-8880-4176-93cf-5416b9803043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a08859-a121-4662-9a8a-a8c77950ada7",
        "cursor": {
          "ref": "58f046c0-05e7-4ee2-959d-f059bb1b0d01",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dbc5a7f4-93d0-4b21-9fbd-4dde3b293265"
        },
        "item": {
          "id": "13a08859-a121-4662-9a8a-a8c77950ada7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "16876275-1bd0-4bc9-9003-112fbdb8f83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d5d648-b95f-4024-96d6-0c74d430bd47",
        "cursor": {
          "ref": "298da1fd-cc2d-4500-891e-7c2f5cc3b889",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c41ed121-fe6d-4261-80cf-91d18d1c6e7b"
        },
        "item": {
          "id": "69d5d648-b95f-4024-96d6-0c74d430bd47",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0217155b-86d7-4061-bde5-60c92297f76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08f14fb-4441-438c-a67f-24a1a2a4e2ea",
        "cursor": {
          "ref": "b1dfa80b-afa2-4256-ba4a-a8e07a7f0d4b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fe68d8f6-7534-4faf-b8d0-9174f04efba4"
        },
        "item": {
          "id": "d08f14fb-4441-438c-a67f-24a1a2a4e2ea",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e155b70d-3371-4570-adc6-2f0c6e015a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047bbf19-67bb-4ba2-90ff-1fa9e511ec94",
        "cursor": {
          "ref": "e384b114-07cc-4ba3-af33-8e079c028c67",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2d2a6ee1-09df-43da-ad69-a83d59b57d51"
        },
        "item": {
          "id": "047bbf19-67bb-4ba2-90ff-1fa9e511ec94",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "37684365-c106-4bb5-a5b9-9f6455f955b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c053fe1-7f96-40aa-bcf3-d38333fae858",
        "cursor": {
          "ref": "12a1c451-5454-44d4-becd-2efc6e5a4777",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4395ad14-f6eb-48cf-96b4-bddb6b191a17"
        },
        "item": {
          "id": "0c053fe1-7f96-40aa-bcf3-d38333fae858",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fbb6924a-41a3-491c-93f3-99c93b00bc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca50c3e8-3d76-4b66-9772-567f9e6121dc",
        "cursor": {
          "ref": "47f1ec77-dd25-4d88-ae43-0286d2fe1b55",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "87391341-0c09-4cf0-81a1-cf57fc556220"
        },
        "item": {
          "id": "ca50c3e8-3d76-4b66-9772-567f9e6121dc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c1afda89-d27a-4382-8471-de4cfbb90610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab63f234-2b7a-4b8e-9ef4-6283ea9fa6b6",
        "cursor": {
          "ref": "e4172111-ffbd-4572-b3ed-6dc0ec6dd95c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9e64c580-b053-482a-bbd7-06f29b8b5db5"
        },
        "item": {
          "id": "ab63f234-2b7a-4b8e-9ef4-6283ea9fa6b6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f1c2163f-b26f-4496-85a5-7fde9880fd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f415ac5-c0da-4a2e-95b9-2239d2458969",
        "cursor": {
          "ref": "543e2593-9714-4972-8fa7-5cfd535571fa",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ceba9f0a-763f-4242-ad8e-df6ff83961cc"
        },
        "item": {
          "id": "1f415ac5-c0da-4a2e-95b9-2239d2458969",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2817c3cd-0288-4862-8fbb-b50a3c766506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476d5f1d-766a-431d-9b0f-6d6249bda4ee",
        "cursor": {
          "ref": "143f432b-9b54-4332-959d-474c1b50f266",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "06c0f520-933f-4d68-819a-f8923718e8ae"
        },
        "item": {
          "id": "476d5f1d-766a-431d-9b0f-6d6249bda4ee",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f23c6889-84e6-4311-a0d1-e54eb7678bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa11473-fd28-4e37-aeb1-99aa7a6c2d1a",
        "cursor": {
          "ref": "3814e40a-3a68-4e02-a87a-23b9bb1c20ad",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "717337bb-9e16-4470-bf2e-d4bd0a02ed86"
        },
        "item": {
          "id": "afa11473-fd28-4e37-aeb1-99aa7a6c2d1a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91c287be-2ab4-47b1-9eb5-41ba25b4579a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea949d57-eb93-4ce2-be5d-402ee1deeef0",
        "cursor": {
          "ref": "3de55530-3d19-4a2b-b109-c6108b819579",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b5351683-918e-4ede-ab0f-c531264da1dc"
        },
        "item": {
          "id": "ea949d57-eb93-4ce2-be5d-402ee1deeef0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f832f394-abe5-4299-aeb6-3fcabbb7fa0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3df5bf5-c172-4a4a-9898-c4f7e4d77223",
        "cursor": {
          "ref": "da19e332-ce97-4700-b430-e5e2323ef39d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b664c6cc-9ebe-49b6-8847-621daf95574f"
        },
        "item": {
          "id": "d3df5bf5-c172-4a4a-9898-c4f7e4d77223",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "552abf56-3495-4596-ba14-c1e98ba4b71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c84b8c-9d75-41b6-93d0-948a16d87aac",
        "cursor": {
          "ref": "1bda49a8-f096-42e0-a5c6-c598631fabcc",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a159c4df-5fa4-4dc4-bda0-7d22b21f3812"
        },
        "item": {
          "id": "c9c84b8c-9d75-41b6-93d0-948a16d87aac",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "960271c5-fd2d-409e-80ae-d942bbbcdefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929fb195-18f8-48ce-83f3-e1c1d4d15c29",
        "cursor": {
          "ref": "f2cbdfb6-23b4-421a-9206-806004131346",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b98c3c08-3af8-4f59-9ef9-edcadc6314e8"
        },
        "item": {
          "id": "929fb195-18f8-48ce-83f3-e1c1d4d15c29",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "034421af-d024-4438-8eb5-720a33836960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3badf947-dfb8-4f21-9adc-db1e849ecc92",
        "cursor": {
          "ref": "22265083-d907-466a-a0da-ea0c0d0ff4bc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "871761c2-9cf9-4ce8-8bcc-eadab790e59d"
        },
        "item": {
          "id": "3badf947-dfb8-4f21-9adc-db1e849ecc92",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e76ac857-02e5-45c6-8ce0-53d0a54c1777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033fc9ac-c26a-40d8-92dc-892096133bd7",
        "cursor": {
          "ref": "8dc4f805-ae7b-4734-b85c-7b9cd37fc75b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d4c0dc3f-5f5c-4fd7-9f91-2bfe7c78f003"
        },
        "item": {
          "id": "033fc9ac-c26a-40d8-92dc-892096133bd7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bbb60a97-159e-4c2b-9d1a-710385673a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeb28a5-b497-4ffb-8538-b4e66612028f",
        "cursor": {
          "ref": "3e65698f-8e10-47ee-a35e-621957ff804a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fadadae0-209e-4c14-9802-3e6c2dc20532"
        },
        "item": {
          "id": "adeb28a5-b497-4ffb-8538-b4e66612028f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f55929ce-87f7-4b4e-95bf-faf1fd994312",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5104b58d-0cd2-4648-92f7-fd2850edcef7",
        "cursor": {
          "ref": "ba7f547b-5c4f-4bcc-bf6b-1908deedb9ee",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b379a440-068e-42ff-8571-4daa45ae92d2"
        },
        "item": {
          "id": "5104b58d-0cd2-4648-92f7-fd2850edcef7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "15b171b0-b22a-45d5-92f8-5a46368bd344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11f7e1a-a339-4a7f-be43-5cc96c5bce0c",
        "cursor": {
          "ref": "97d91135-f802-4125-babb-8d82fc1c99ba",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "aec5d9b0-221a-4264-848c-f3a0b1980e09"
        },
        "item": {
          "id": "b11f7e1a-a339-4a7f-be43-5cc96c5bce0c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "385fc234-d24f-4d43-a4d7-80b222f9b9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37485d39-e8d5-4b01-b488-a4291f103cd1",
        "cursor": {
          "ref": "bcc581d4-e20a-4737-acd5-e31ae03964cc",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3465a825-d907-4d5c-b108-4c1cf3a5e93f"
        },
        "item": {
          "id": "37485d39-e8d5-4b01-b488-a4291f103cd1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cd860848-ecbb-4fc4-8289-c9c52b2309e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0983cf33-12bd-46fc-a903-6a1098ac5547",
        "cursor": {
          "ref": "7abde2e6-f1ac-49e9-bb30-f0c9a20b2aaf",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b7a7fa6f-880d-4c04-bcce-5e6f53d4d759"
        },
        "item": {
          "id": "0983cf33-12bd-46fc-a903-6a1098ac5547",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bbbead6c-fadd-4cb1-a768-658a298fdc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435e6441-0884-4b8b-8b5d-ac5f276fcc0c",
        "cursor": {
          "ref": "2b754ccd-3f85-466b-85c4-6a70f754b4e5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "19a2dffd-c83f-4428-9667-22d894132f5a"
        },
        "item": {
          "id": "435e6441-0884-4b8b-8b5d-ac5f276fcc0c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e6e1610-887a-42f8-bf7d-f2ba324b4716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1536649c-3fed-42ec-8894-cce077117009",
        "cursor": {
          "ref": "eef90a92-93b0-434a-a9b2-7a53b0a74279",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eb30489f-34a0-47aa-9606-2fcfd00bec06"
        },
        "item": {
          "id": "1536649c-3fed-42ec-8894-cce077117009",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d7453b5d-05e9-433c-9e18-00c44e278b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0797cad1-bed5-42fc-8076-4494b17df45c",
        "cursor": {
          "ref": "91aca188-c8ca-41af-80fc-81ccc10af541",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8bae2c1c-9de1-49b1-966f-410ba1cd1a12"
        },
        "item": {
          "id": "0797cad1-bed5-42fc-8076-4494b17df45c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a4a91725-88a2-4be6-9639-c73c2219c37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c46498-efca-45a8-9fce-471b6f0af50d",
        "cursor": {
          "ref": "d5b6924b-b328-41a3-8071-3b387af3fdf1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "86561d83-5341-4f5d-8da1-ea55c6b81b4c"
        },
        "item": {
          "id": "55c46498-efca-45a8-9fce-471b6f0af50d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a985ba6-2a06-4af9-875f-60e711565255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aef344-b4e9-40c1-92e3-14b74cf717e4",
        "cursor": {
          "ref": "cb86d4f0-6fd3-4670-94dc-9af4f7000afa",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b098f096-61db-4aec-b3f2-0319b8823093"
        },
        "item": {
          "id": "19aef344-b4e9-40c1-92e3-14b74cf717e4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "51658d14-b9e9-41d0-8f8b-afc7470535c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1c3224-10b3-4e19-95ae-63a417a3399c",
        "cursor": {
          "ref": "4cd48be7-1716-4475-8f5e-ae4f010952f8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "704d594b-93cf-4f7b-a574-0e072c3772e9"
        },
        "item": {
          "id": "4e1c3224-10b3-4e19-95ae-63a417a3399c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3bb1b236-a14b-4330-baf3-6e443a735000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a556ee4d-8f53-4381-85e9-122ae0fac227",
        "cursor": {
          "ref": "b3cf6fdd-1dd9-4492-a9de-c8ee8e668dba",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4f5335b0-abaf-4c4f-a602-1b3e356b1ffa"
        },
        "item": {
          "id": "a556ee4d-8f53-4381-85e9-122ae0fac227",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5df5abbc-bdd6-4a53-bd6b-b84aaeb172ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7297e865-9ce9-451d-8c8e-a116728689bd",
        "cursor": {
          "ref": "81884126-05ee-4f63-b7d5-f09b5cc058a1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5b1131c1-a948-4822-b912-c433345477ac"
        },
        "item": {
          "id": "7297e865-9ce9-451d-8c8e-a116728689bd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e44879c6-483b-426d-952a-594083a0e643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f141bda-e4d6-4579-b8d8-04d1af22859c",
        "cursor": {
          "ref": "bfaa46ce-ae44-4984-96ba-839e61bb499d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b72e5644-b38f-4586-8ab9-8483ca52e26d"
        },
        "item": {
          "id": "4f141bda-e4d6-4579-b8d8-04d1af22859c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2dd798ab-40d4-4406-82c8-951d920272a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af60bf7-1c59-4a12-afa3-d22a711adb9d",
        "cursor": {
          "ref": "f5b16503-6809-4ec1-8cda-0d5f1cf052e9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e29706b6-dd77-4789-987f-b687a35218d5"
        },
        "item": {
          "id": "6af60bf7-1c59-4a12-afa3-d22a711adb9d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5228c04e-5589-4cb0-9d85-cfde29e7744c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efbcea1-7d15-4837-a552-35322ca196ae",
        "cursor": {
          "ref": "84d897d6-2aca-4b70-96d4-1dd0e415ff87",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eb7fd7fd-4fb7-410a-9cd9-3abb2c540277"
        },
        "item": {
          "id": "5efbcea1-7d15-4837-a552-35322ca196ae",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e462e5de-98a0-438e-bfae-ddfa734c5330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1520727c-eb63-422e-88d9-3180dabe7530",
        "cursor": {
          "ref": "0262e4a9-0bad-4c93-94ee-a9f9591beff0",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5ca7bfb8-4c73-4cbc-87db-eb3b19f4295c"
        },
        "item": {
          "id": "1520727c-eb63-422e-88d9-3180dabe7530",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "828ea9ee-c65d-4fcc-ae45-04bc55139ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401fb9bf-5aa5-4ccd-804b-8c45bd882028",
        "cursor": {
          "ref": "c2789c3d-89d0-4f30-83ac-1dd221253556",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3e6e5172-84fd-464b-82c1-9ac57e80c0ea"
        },
        "item": {
          "id": "401fb9bf-5aa5-4ccd-804b-8c45bd882028",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8cef509d-2da4-49b2-9e36-936c99566957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430824d5-9da4-4bc8-8aa9-db83dbd06ad8",
        "cursor": {
          "ref": "f8112342-9f04-4525-85b4-4df8901682d8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "29b8a47c-c1d8-4344-839d-69c70446004a"
        },
        "item": {
          "id": "430824d5-9da4-4bc8-8aa9-db83dbd06ad8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "926f2936-56da-4f17-98cc-3d0dfe633c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c588b7-a962-465d-9f1a-bb329f6f14f7",
        "cursor": {
          "ref": "e54c342f-d0d0-4afa-bbdf-a3784d2210a0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6695a726-ddd7-4e3f-95aa-8961833fab82"
        },
        "item": {
          "id": "18c588b7-a962-465d-9f1a-bb329f6f14f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "79adc25c-c327-4f17-b3d2-3ec90e3e57e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc28bd82-0049-4009-bbb9-ac1ab7857056",
        "cursor": {
          "ref": "0acdc95c-b821-4ad7-81fb-2d165cf27b8a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "34f0920d-7be1-4820-b8f8-8305de70c558"
        },
        "item": {
          "id": "cc28bd82-0049-4009-bbb9-ac1ab7857056",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8af667b4-f389-4b53-8676-8f580da9ceeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c36849-275e-40ea-bfcc-59fa9eefe22d",
        "cursor": {
          "ref": "c2786c2e-bbe2-40d5-a4ab-cd074cc870b4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cc39d8e5-efa4-4421-be9d-ee1f98d79ea1"
        },
        "item": {
          "id": "75c36849-275e-40ea-bfcc-59fa9eefe22d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cabdace9-27bd-43fb-b31a-e0c8f671a612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b710877-e7c9-4e66-8651-8e83445531a9",
        "cursor": {
          "ref": "c6069d72-497c-46c9-acfa-fa5f77d27712",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e3addc5b-1f9d-4947-83b3-8d6fbbbce018"
        },
        "item": {
          "id": "8b710877-e7c9-4e66-8651-8e83445531a9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e6aadd5f-4ac7-4aee-9f7b-78f43ad2e763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e917e24-a981-4d57-9fcc-519a16b53af4",
        "cursor": {
          "ref": "b449548b-6467-426c-b2cd-c8c3049a108c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "959dd8a7-727a-475f-bc83-71e04d6dbbd5"
        },
        "item": {
          "id": "3e917e24-a981-4d57-9fcc-519a16b53af4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bdac4d81-0326-4b82-93dc-c1487788cbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daad411b-e1f0-493b-8185-913d8ae3ec7d",
        "cursor": {
          "ref": "e2f83066-b78d-486a-8adf-168ddd731583",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "00f7945f-9f1e-4a93-b0cf-cbeaf83dd65e"
        },
        "item": {
          "id": "daad411b-e1f0-493b-8185-913d8ae3ec7d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "affa9ce1-a6c7-46c5-9523-ba419cec8e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3693345e-86b2-4a87-823f-0afec50f3ea2",
        "cursor": {
          "ref": "9e0623da-4e0a-4950-b18b-48d1333de7b7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fdee51ab-4206-4f6d-a0ba-2badc49a6877"
        },
        "item": {
          "id": "3693345e-86b2-4a87-823f-0afec50f3ea2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1d628335-c04e-4dc1-b4df-027bec7682d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe7ef3-a202-43a9-9bdc-03436da1914e",
        "cursor": {
          "ref": "77c7910b-150e-4778-8e21-a5ef3be8595e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b1568b2a-cc9b-4417-a1bb-1c5f6043e5d2"
        },
        "item": {
          "id": "8cfe7ef3-a202-43a9-9bdc-03436da1914e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "716a7ba7-54a7-4cbc-a9ca-f82acff89597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8c84de-d064-4196-9ea6-1c047ef5f56c",
        "cursor": {
          "ref": "441e01b4-0ef0-49c0-b908-8771d2e425a5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "250152b0-45c6-4785-81c1-16dfe601fe58"
        },
        "item": {
          "id": "6c8c84de-d064-4196-9ea6-1c047ef5f56c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c84d9aab-c79c-4f50-89f3-d677e317b7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958652d5-e5a8-4ff7-8107-49c169f14444",
        "cursor": {
          "ref": "e83c7cd1-48d6-40be-9061-e6da85a13aab",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d224a27a-a391-42d2-943c-c6c66b8c94f4"
        },
        "item": {
          "id": "958652d5-e5a8-4ff7-8107-49c169f14444",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc78dce8-7226-4fae-a29f-3466ddbc80f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0465cb-befd-4999-b5a9-fecf3949cc86",
        "cursor": {
          "ref": "68354a43-ffe0-4c4f-b27e-37543202553e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "18787923-43d3-450d-b493-57a0a86eeb14"
        },
        "item": {
          "id": "9d0465cb-befd-4999-b5a9-fecf3949cc86",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "19e04254-f82b-4e50-9f33-656cc19868d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f92fba-d554-42f9-8442-36010ce9db46",
        "cursor": {
          "ref": "26004414-1297-4c7c-8bad-92adacdacd5a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "16a2c06f-680c-43a4-a6ef-e8284ab35a18"
        },
        "item": {
          "id": "35f92fba-d554-42f9-8442-36010ce9db46",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "16ad8a00-7d01-4973-b5bc-5ed3b4b81c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55689cc5-9557-42fa-9e84-657f24248676",
        "cursor": {
          "ref": "338be3d9-ab57-4d55-9d55-7f735fba9dc7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "56952d09-3769-4f4e-a2ad-f61df8ae324b"
        },
        "item": {
          "id": "55689cc5-9557-42fa-9e84-657f24248676",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "63820f70-426f-4450-8e05-6f49ded056cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac26d8fd-a20d-40e5-8dde-1f0900657549",
        "cursor": {
          "ref": "bb717532-282a-4008-8b08-92a4ec85ebe0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "689af5e0-7853-4425-8a82-a7e443d03681"
        },
        "item": {
          "id": "ac26d8fd-a20d-40e5-8dde-1f0900657549",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "eaf6246c-3568-4920-bf99-007d3dc22104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39ef99b-bcff-40f1-b43d-f0c4ac2b9ca0",
        "cursor": {
          "ref": "848782c1-421a-4231-9102-e03d7d29c420",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "feea9217-2830-4f5c-9567-a0d79fbc84f6"
        },
        "item": {
          "id": "a39ef99b-bcff-40f1-b43d-f0c4ac2b9ca0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1187e3c6-3beb-4c7c-baef-18a9e0239bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22ee275-25a6-4ea5-a6f0-320adc753fd0",
        "cursor": {
          "ref": "3677cfaf-cb58-40e6-9797-e1edb622978b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "61621928-d9ce-4c4a-ac0a-c7eb640a66c9"
        },
        "item": {
          "id": "e22ee275-25a6-4ea5-a6f0-320adc753fd0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3f2d9444-e456-4b62-9d35-7d10f9085a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfba216-7732-4f69-b460-ade85ae01b3d",
        "cursor": {
          "ref": "4dd36383-2492-47fe-b4c4-1177004d203a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d34b993e-ca8c-47de-a53e-f850a6ef83f9"
        },
        "item": {
          "id": "9bfba216-7732-4f69-b460-ade85ae01b3d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "827e2730-abed-4cdb-929d-a4226c0bc181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38662c0c-007c-492e-8766-23ed43a3eb35",
        "cursor": {
          "ref": "ac26b128-f242-4a1b-ab35-27db923b7101",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b70ee8a8-d904-404e-9799-ab6c2af03df5"
        },
        "item": {
          "id": "38662c0c-007c-492e-8766-23ed43a3eb35",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aff5a3a6-977a-4d12-8467-040cb830a437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db099108-4429-4313-bca7-0414e3ca3433",
        "cursor": {
          "ref": "30d4a7ab-7fdd-41a8-b277-123d60e1fe24",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "988375ca-5cd5-49b0-b4f1-0bffd4276433"
        },
        "item": {
          "id": "db099108-4429-4313-bca7-0414e3ca3433",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0ec473ef-b994-42e4-8cf5-ac1e56a91e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571e6afe-6d91-45dd-9ef9-d2cafa2dad2a",
        "cursor": {
          "ref": "8bab9c0b-6a6d-4d9a-853b-29d911196d75",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "061af9c5-6774-4d98-9afd-fb782759455d"
        },
        "item": {
          "id": "571e6afe-6d91-45dd-9ef9-d2cafa2dad2a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7908e364-14da-4d3d-bdf0-e721ed139e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cda2e1-df84-4480-a740-edd3b67ca0cb",
        "cursor": {
          "ref": "5146d346-f496-4dff-87ee-ccb9e0614c4f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1710c4bd-a40e-4af6-afcb-b6c9700b32fa"
        },
        "item": {
          "id": "c5cda2e1-df84-4480-a740-edd3b67ca0cb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c92e85a3-177b-45d5-856d-1677a12a6315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6ae049-bf19-43bd-a4cc-1e2075758bda",
        "cursor": {
          "ref": "5f38c309-34f2-4982-b310-a8c3c6d52bdf",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b177dee4-f257-4121-841a-fed26217b2a1"
        },
        "item": {
          "id": "6b6ae049-bf19-43bd-a4cc-1e2075758bda",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "33a8339b-6815-4e4b-9c5f-63981cd57e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6890e58-07b0-4da4-a4d6-d90152ac6903",
        "cursor": {
          "ref": "a5197120-8450-4fe4-88e6-1021106eccd5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6afeadb5-387c-4553-96e4-44f1ff6ca783"
        },
        "item": {
          "id": "c6890e58-07b0-4da4-a4d6-d90152ac6903",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ba2dca3b-0965-403c-bb9f-05d78817ba3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5aabde-189c-4991-baba-b8b71210034b",
        "cursor": {
          "ref": "c1cd336f-d666-487b-ad49-b19bed23d8a9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "26d44f72-ce70-4e64-a83c-a4956e7d3695"
        },
        "item": {
          "id": "ff5aabde-189c-4991-baba-b8b71210034b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "47d8ecff-0a61-49ab-b88b-daa7aaada8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcc42dd-1c13-4786-b7fe-d645e976416e",
        "cursor": {
          "ref": "3f64a1e4-bfa3-426f-805d-5b6e5b67b408",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b4b3cd3a-3294-4ecb-a730-714cd70cdbc8"
        },
        "item": {
          "id": "3dcc42dd-1c13-4786-b7fe-d645e976416e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b731543e-0769-4b3d-8186-d776db948973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d830af9-c41f-4c9f-b354-036e8e6220b7",
        "cursor": {
          "ref": "1b207f4d-47b4-4ca3-a170-f1e256b00f15",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "25c75d87-6021-4d13-942d-fd2a1afc716f"
        },
        "item": {
          "id": "2d830af9-c41f-4c9f-b354-036e8e6220b7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "90dba61e-2501-4c84-a4e3-f4232c2c78e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a04ded-2c48-4962-9742-cff68e44d9e5",
        "cursor": {
          "ref": "b6253331-ed15-43b9-8877-8a1dcb3215bc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6be1776e-0acb-4d0c-97c5-faadba5941c7"
        },
        "item": {
          "id": "47a04ded-2c48-4962-9742-cff68e44d9e5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7cd40d0a-3760-4374-b27a-714233c63b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122100a7-61cc-4cc6-b9a1-71a7e9421e88",
        "cursor": {
          "ref": "063c5a7d-0572-4a87-8bef-e232eeb107de",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ace2a2ee-a513-48c6-9f2c-6bd84de04eeb"
        },
        "item": {
          "id": "122100a7-61cc-4cc6-b9a1-71a7e9421e88",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "68a1f47d-8a8b-4eb7-91cd-108cb52916a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18da1a77-d306-49c7-b17a-b630082d2cb2",
        "cursor": {
          "ref": "5ae11256-43c5-4c6a-a4de-6a6177ffa31e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f426693a-97ea-43b1-bbdd-6440673b380a"
        },
        "item": {
          "id": "18da1a77-d306-49c7-b17a-b630082d2cb2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3fe69ade-664c-4888-a5ef-a20470581c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ede102-9ce0-4d1d-84c6-f29df570d59e",
        "cursor": {
          "ref": "2e3688dd-5940-4d8a-8b9e-d002dfcd1649",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a11f1715-56d8-47de-9a7f-55b88a73f2d2"
        },
        "item": {
          "id": "66ede102-9ce0-4d1d-84c6-f29df570d59e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fa74dca1-4db8-4311-aafc-8f0a0ff4bdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a6c835-8cf7-4265-8478-7cbed127b090",
        "cursor": {
          "ref": "8f7f738e-cf02-429c-9673-0dd2f9c9ae00",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "684020d2-2143-472a-a7fe-b0a0a25664f5"
        },
        "item": {
          "id": "56a6c835-8cf7-4265-8478-7cbed127b090",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0a133b59-88ae-4c98-941b-406928d7c09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad714c4-e4d7-4bfd-acda-59e4239339e2",
        "cursor": {
          "ref": "2c67ee89-e2af-41c5-abf4-ec3c00ff341d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "97bbd7b0-264d-447e-9692-1673c084aba1"
        },
        "item": {
          "id": "2ad714c4-e4d7-4bfd-acda-59e4239339e2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "114f110b-7376-4fa6-9efc-313bad0654d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13d1b80-b22c-444e-a2af-1f6e394d00e4",
        "cursor": {
          "ref": "74914455-ecf3-484e-9e4d-ab9cf0f95d32",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "43433118-d158-4db0-ba92-cc21419d0141"
        },
        "item": {
          "id": "e13d1b80-b22c-444e-a2af-1f6e394d00e4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "db118753-639e-4536-aa8b-bd7e424bda63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc7287a-2c3b-4d57-b930-c0ab0623a79c",
        "cursor": {
          "ref": "47bd9be4-7e0b-4f9c-9366-cdde7f8de4da",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "84e97278-4e32-4985-8582-e8ce1072067b"
        },
        "item": {
          "id": "afc7287a-2c3b-4d57-b930-c0ab0623a79c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f62aba1d-dd42-4e8b-87d2-69676401c734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301a75f3-1b2c-497e-8e62-1a10f16611c1",
        "cursor": {
          "ref": "da696782-2496-460d-9ef0-db46b276876f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "83f53c07-5cd8-44b3-ab71-f3512aee6132"
        },
        "item": {
          "id": "301a75f3-1b2c-497e-8e62-1a10f16611c1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "809e3695-a0da-4a69-bef2-5f3d0ae25d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eac4f4-efd0-49c1-ad61-2edf8db10b8c",
        "cursor": {
          "ref": "fb8751e1-e859-4528-836f-c35b3d9b8aea",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f05af366-9303-4ed7-be37-8c1cd22a8e3f"
        },
        "item": {
          "id": "b2eac4f4-efd0-49c1-ad61-2edf8db10b8c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "886e216a-d29b-43b8-b612-5c053a931714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290aea9d-7a00-447e-b089-8230ad517624",
        "cursor": {
          "ref": "3965fcfe-50e2-405d-923f-cce16fd00f3d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d787e4ef-5fed-4a9e-a2c2-17a1d873f5b9"
        },
        "item": {
          "id": "290aea9d-7a00-447e-b089-8230ad517624",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "46c1a7e4-0e38-4567-9bb0-32d03ad373c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d82bfd5-3bd4-4a51-8f0b-a05b9e416d30",
        "cursor": {
          "ref": "74aa7aa9-9cd2-4067-b178-b3fb5f32c286",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f6ac84c6-fd00-45ca-87a6-1e4a86aff1b8"
        },
        "item": {
          "id": "5d82bfd5-3bd4-4a51-8f0b-a05b9e416d30",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3cf7f01d-bf98-4a61-b157-4bc4dbf90965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ac345b-76f5-4012-bb83-605d58682849",
        "cursor": {
          "ref": "25900c95-8208-4d37-90d2-5e29f91503ef",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3ca0796f-7cd0-4a4f-92bd-da17bfd10863"
        },
        "item": {
          "id": "c0ac345b-76f5-4012-bb83-605d58682849",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "59cb207e-d108-4428-a51b-e6c750a4173f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ab4011-e8ef-4590-b625-1da97a33c3f5",
        "cursor": {
          "ref": "e12c56df-47d2-44ef-91f3-000e2269f76a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "40cb61fd-29eb-4ba6-bdcf-31381818ef78"
        },
        "item": {
          "id": "f8ab4011-e8ef-4590-b625-1da97a33c3f5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "14a1ef73-b8f1-4fcf-a944-de342b46e460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2f902b-0997-4893-8ee7-5bbfae1622f1",
        "cursor": {
          "ref": "61c81c08-2424-4c26-966e-5eb171844ad3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e9beadc2-644c-49cb-b60a-ddfb142fb3e4"
        },
        "item": {
          "id": "da2f902b-0997-4893-8ee7-5bbfae1622f1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0de2fa8c-3cfd-42a7-86c4-c31f90bec8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609bd274-4e38-4158-a426-b824650754f9",
        "cursor": {
          "ref": "f2daa55b-86bb-4a9a-8831-d219f3a9ec36",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3140592b-d5a5-43e2-9bd2-a4084af3eefa"
        },
        "item": {
          "id": "609bd274-4e38-4158-a426-b824650754f9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9b48a2e0-c5c2-441c-8d2e-9575f8ba49a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d38065d-10a0-4e6e-a710-949d914a7bab",
        "cursor": {
          "ref": "dc15ff5f-2999-4965-9a35-90b0603d2b23",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3a3cc046-8153-4078-b2b0-87b3fc2b3771"
        },
        "item": {
          "id": "0d38065d-10a0-4e6e-a710-949d914a7bab",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "28994311-a819-4c36-9d71-25b9ff7355f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a803e4-441f-42c8-8bed-a1f558d6c616",
        "cursor": {
          "ref": "07155feb-a6bf-4063-a739-68b0ec7b625c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ac1c3e75-5482-408b-8b0c-0d00974e8902"
        },
        "item": {
          "id": "d2a803e4-441f-42c8-8bed-a1f558d6c616",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "24ad7966-f17c-4e91-b07c-f3682c0da954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5f59f-8651-487c-b282-1d1c50caaa83",
        "cursor": {
          "ref": "ef0c3984-ce04-4b17-9165-ba429fad42c5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "51cfca36-2190-47fa-871c-89db5a3687e1"
        },
        "item": {
          "id": "47f5f59f-8651-487c-b282-1d1c50caaa83",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "979f5a5d-2fbc-4f86-812d-9a89766f1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04400e0c-3c9d-48a9-8fa2-f4740251af5f",
        "cursor": {
          "ref": "f636ed86-648c-4234-a236-ffc5433c1175",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "28a93c74-cd12-4cce-989c-fb5b655b6238"
        },
        "item": {
          "id": "04400e0c-3c9d-48a9-8fa2-f4740251af5f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "58eb4d5f-ca09-4bae-9e99-b8edd6d4fb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218decf7-90f0-4f6d-bab6-a94c25ed778f",
        "cursor": {
          "ref": "ab37d15e-36d5-4ba2-b8d6-821390cf171f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d859b21f-2e2c-4532-8425-dbcb43de028c"
        },
        "item": {
          "id": "218decf7-90f0-4f6d-bab6-a94c25ed778f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a77fcfa5-2e25-401a-a23e-e6f0ddd9a2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04da957-3e9d-4ac9-bc71-1b8505ee4a49",
        "cursor": {
          "ref": "7cea8c9c-902d-40fd-a751-75dc1cbb4cb0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b4fc7657-048c-4c7c-8fde-99478b35873e"
        },
        "item": {
          "id": "b04da957-3e9d-4ac9-bc71-1b8505ee4a49",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1103d890-1b18-444c-8843-2a52ca573871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5879fc6-2968-49ca-bb9a-946bdc8684e3",
        "cursor": {
          "ref": "20dff565-57bb-4b10-8900-49adf88ac78a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2e85fe84-0c61-4528-81f2-600671a074e5"
        },
        "item": {
          "id": "d5879fc6-2968-49ca-bb9a-946bdc8684e3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f8792e5a-ccfa-4109-b165-800f59dc37e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5219b011-93e1-4bf8-8fff-d394e30ebe41",
        "cursor": {
          "ref": "7d57fd8a-ad5e-420f-b4f5-a2516b3210c4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "306b523f-6c9a-4a6b-be0b-ed87412e78bb"
        },
        "item": {
          "id": "5219b011-93e1-4bf8-8fff-d394e30ebe41",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ce51e4ac-efb2-4a85-aa27-7261501e63f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b9529a-1640-451a-a512-a8bb6b5f0464",
        "cursor": {
          "ref": "d57313d5-e581-44a8-a046-8b785169f96e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "58095bf7-3f08-44e7-9071-2ae284bf5980"
        },
        "item": {
          "id": "86b9529a-1640-451a-a512-a8bb6b5f0464",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "307f9791-6944-4f55-97c9-0a13746f0c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfaf729-6701-4738-97f9-af3c95316269",
        "cursor": {
          "ref": "088c51a0-0c62-481a-b552-602e8b99c909",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6155589a-96bb-4ece-9a7e-9c6a87b276a6"
        },
        "item": {
          "id": "adfaf729-6701-4738-97f9-af3c95316269",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "47f27a70-3269-4d94-8f92-c3bed7c43903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c302b3b3-c4b3-4a1e-bc46-ff38c37000a0",
        "cursor": {
          "ref": "6a471e31-6868-46df-9f75-3b63988ae0ab",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4154c71c-8fdb-4164-a07a-4cfba479480c"
        },
        "item": {
          "id": "c302b3b3-c4b3-4a1e-bc46-ff38c37000a0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "642aeb9e-317c-4b96-8cef-6c35d76ffffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c7a145-0a33-44d8-a269-92d46f5c0247",
        "cursor": {
          "ref": "d9b28b96-3274-4f0d-aa25-31b8d3ffaa13",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "68239a97-866c-4ea3-99c4-f2a37a5f53f3"
        },
        "item": {
          "id": "80c7a145-0a33-44d8-a269-92d46f5c0247",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "95fcb7fa-c1b5-4357-aaf3-2f29aafe1354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f96777-ee9c-4486-b50c-9d1ea04e9371",
        "cursor": {
          "ref": "94d5e7c8-e685-41ed-807f-b9cd74d9a950",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e6610d52-e266-411e-ad58-00a6f925dc12"
        },
        "item": {
          "id": "16f96777-ee9c-4486-b50c-9d1ea04e9371",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "07f0735b-e0bc-4130-892b-ebedf44934c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5060d16-389b-4909-afb1-70d1630b142d",
        "cursor": {
          "ref": "c954ba44-1668-4cba-a06f-4bff04ca7fdf",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a15d3cba-9eec-4678-b14e-2a5be3365b2b"
        },
        "item": {
          "id": "c5060d16-389b-4909-afb1-70d1630b142d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "92e2d442-886c-42aa-b18f-6f4bbb313b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d1b7db-3acf-4402-b7bd-ac9788f0cc66",
        "cursor": {
          "ref": "3b628bc1-7c9a-4d29-8330-07d16a860642",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "adee4592-9c86-47e2-b454-362e9523a857"
        },
        "item": {
          "id": "65d1b7db-3acf-4402-b7bd-ac9788f0cc66",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "22a13ff1-e5f2-4fde-9263-e491a6762c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9917b208-e1b8-4042-952e-4e075bb368ee",
        "cursor": {
          "ref": "e08f70bc-117d-49c0-838b-591b2e7c23d5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3b6d2418-9444-4c80-8858-633224e0c049"
        },
        "item": {
          "id": "9917b208-e1b8-4042-952e-4e075bb368ee",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f0786a5d-c424-4609-8c84-c66fd7dd1e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c64b36-7553-4079-a529-85115d82f6df",
        "cursor": {
          "ref": "f11fcfa3-926d-45a8-b043-c4bfbc3cf369",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c9ebbe7a-e3e1-43a3-a087-011fbeb464fb"
        },
        "item": {
          "id": "24c64b36-7553-4079-a529-85115d82f6df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bc1af38c-415b-4613-9428-130d5d218e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099c1858-b3f1-4af6-8063-aa4b3f2b23df",
        "cursor": {
          "ref": "1ee3d32d-a3dc-46c7-82e5-be5ab6570a38",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "35401ab8-f4de-4087-9456-ca8afce0408e"
        },
        "item": {
          "id": "099c1858-b3f1-4af6-8063-aa4b3f2b23df",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "005b0b83-6b1d-4e55-8813-775be7abda36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa624882-9ffc-46b4-b616-e567c127ac8b",
        "cursor": {
          "ref": "342daa8f-c97a-40ce-b6cd-509c039d1177",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9120799a-c70f-483e-ab0c-88953999ae2c"
        },
        "item": {
          "id": "fa624882-9ffc-46b4-b616-e567c127ac8b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e38f997a-acec-445e-a1d0-8e9c2bd93685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67815b50-63c0-43a3-8148-86e81db76e4e",
        "cursor": {
          "ref": "9fe22630-aed9-4710-b505-30fb91ea30c1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a6f113ad-2f1a-4d59-804a-832574df8069"
        },
        "item": {
          "id": "67815b50-63c0-43a3-8148-86e81db76e4e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ead3fffa-563e-426d-b8e5-c182d7271db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa56c238-07f0-497f-972f-a1ac23b4931d",
        "cursor": {
          "ref": "19318cdc-a8be-4b2c-9c1c-ba8f620bfb4c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9f9286d4-c959-4d5d-a1e1-94587cfb9008"
        },
        "item": {
          "id": "fa56c238-07f0-497f-972f-a1ac23b4931d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ae9a399b-e5df-4788-92ab-a2447612cb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39363a3e-3237-4a6e-ae7b-de58f4b687ed",
        "cursor": {
          "ref": "8d179321-ca5e-4da8-a92d-473a15cdf2b2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "01f79dff-b587-445c-b8ce-9b77f1d6140c"
        },
        "item": {
          "id": "39363a3e-3237-4a6e-ae7b-de58f4b687ed",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b4f3cbe3-4a6e-47fd-8161-66f529a2aba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b952f308-c90b-4325-97f4-4fe12c745695",
        "cursor": {
          "ref": "73b92773-d8ac-423f-9ff2-f415f6731e0b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "97c5dd2d-2f0c-42ef-b116-5c8cfb052007"
        },
        "item": {
          "id": "b952f308-c90b-4325-97f4-4fe12c745695",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4741d8ea-2b95-4f4f-bdea-f5177cf5564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19057d2f-d318-42e4-832b-85aa9112efc2",
        "cursor": {
          "ref": "9881c8e2-ef50-4eb5-8099-c262d451546a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9016a6ff-0bf9-4745-bd3e-4801cf5d499e"
        },
        "item": {
          "id": "19057d2f-d318-42e4-832b-85aa9112efc2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c1b6bd82-4cb0-44ae-8700-2e8c86415b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86cd445-cd21-4269-9d3d-95b19b51d681",
        "cursor": {
          "ref": "593f2762-fc7a-48fa-a9d3-5b79952da176",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a12d299e-2f08-4540-8ae0-93919e004801"
        },
        "item": {
          "id": "e86cd445-cd21-4269-9d3d-95b19b51d681",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "57d2414b-c777-4bd6-8804-7d9f013f59c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12f99a6-6777-40c1-b541-76ea02d181ba",
        "cursor": {
          "ref": "bf4e1fd7-41d2-44c5-af71-0265914d2494",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8e7ad00c-85c1-45cf-8b22-5bcdd934296e"
        },
        "item": {
          "id": "b12f99a6-6777-40c1-b541-76ea02d181ba",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2db8123c-1dcc-4463-b4d2-c8aceee17c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e7b92f-1335-4055-b3b6-bcf0a668951e",
        "cursor": {
          "ref": "8e9ac298-e4eb-4716-a88f-bd77ca0a7b1c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c7a474b2-fce7-4a54-9f14-0257bd1fcbb5"
        },
        "item": {
          "id": "a2e7b92f-1335-4055-b3b6-bcf0a668951e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1449f051-4410-477c-ad1d-c7d7d6a46d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13f24b4-da0c-4b75-89cf-809a4a1bcc86",
        "cursor": {
          "ref": "ac554265-e29a-483b-88c5-37e63b8d6727",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "828be34f-6726-4eaa-bec6-024fcdc28eff"
        },
        "item": {
          "id": "d13f24b4-da0c-4b75-89cf-809a4a1bcc86",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "60c340df-9fbb-474b-881b-fe7f88d38cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10768f3-f2d2-450b-87fa-cacae383a4a4",
        "cursor": {
          "ref": "762b4fe7-eed7-46e8-aa0a-fbebcdd46e66",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fb079383-0e22-44c6-b314-a8b578db25cb"
        },
        "item": {
          "id": "d10768f3-f2d2-450b-87fa-cacae383a4a4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e46c792f-a163-4889-8184-4128526df8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932dcd5a-e4ca-47ce-8979-865ff6d864fe",
        "cursor": {
          "ref": "641b9d47-0116-48e1-abf8-91a0931f1d15",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5e5fb9d3-8f0a-4b0c-96cf-ee45ba707135"
        },
        "item": {
          "id": "932dcd5a-e4ca-47ce-8979-865ff6d864fe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0142493d-dc02-45d5-b0d2-96b0eb94728c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e02c2bf-e1f2-4864-bf0f-8511532f48eb",
        "cursor": {
          "ref": "8ea38fee-3568-4f30-9032-5b4d9961a301",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "894943fb-a977-4b90-b11d-0fdb81e569d9"
        },
        "item": {
          "id": "4e02c2bf-e1f2-4864-bf0f-8511532f48eb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aedf8110-f95f-452b-89b4-0726ad833cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee53ad48-2ab9-427f-b499-181107b4d444",
        "cursor": {
          "ref": "fc03fd88-0c91-4a69-8295-d9f9d408b402",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f0a1b9da-51de-4f6d-9c6f-a81a003f9814"
        },
        "item": {
          "id": "ee53ad48-2ab9-427f-b499-181107b4d444",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d2bcdbc5-438f-4e8c-a707-0f9ebfda7b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daab308f-392e-4e97-a80a-435ca2e8cfd1",
        "cursor": {
          "ref": "704b3b53-7988-4ff8-bb71-9face2abeb96",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "23fdc712-2b5f-445f-9902-3fa7d6312791"
        },
        "item": {
          "id": "daab308f-392e-4e97-a80a-435ca2e8cfd1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3fd522b0-0572-48bd-af60-8d9bd5810d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82699db4-819d-4a7d-9bd4-7fc62ac04241",
        "cursor": {
          "ref": "353d99dc-c901-4af9-bd76-2ded6b4579e9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d6648d95-2ae4-4c58-8502-90007565ad40"
        },
        "item": {
          "id": "82699db4-819d-4a7d-9bd4-7fc62ac04241",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d7b5bc5-110e-49d8-8935-4df38937f526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe27b4c-d3f8-425a-937e-01dda6fa3554",
        "cursor": {
          "ref": "d83f5179-ef28-4399-8727-e420d4ae95f0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fafb5932-24bd-455c-b18d-1895722cc959"
        },
        "item": {
          "id": "2fe27b4c-d3f8-425a-937e-01dda6fa3554",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "be729f59-7ac9-46e0-9706-c472f917d222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144846c9-c6c7-4c4d-83d2-6129ee6e2b94",
        "cursor": {
          "ref": "2c3f3d0a-6f5a-41b5-af47-d6b3457f7069",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6d92b467-c0a9-41b1-b1ad-6b06a7e6c576"
        },
        "item": {
          "id": "144846c9-c6c7-4c4d-83d2-6129ee6e2b94",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ae19b48d-4420-4cb1-9124-9c3ffd3e5ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285ca6ba-2e42-4372-817a-c04285919e1d",
        "cursor": {
          "ref": "dc80fbc7-eb0b-4a75-b1c7-f531193d4f8b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b1a613e0-8eab-469f-9b52-3ad464d1fd32"
        },
        "item": {
          "id": "285ca6ba-2e42-4372-817a-c04285919e1d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "29f0b97d-cb72-4301-af52-c15358fdf485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d19d37-a0f6-4c63-a3e2-7896f3ba88b1",
        "cursor": {
          "ref": "de6c8149-5fc1-4913-8c83-e8b03bc284ca",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fd872e58-130e-4bae-a491-0b99444477af"
        },
        "item": {
          "id": "20d19d37-a0f6-4c63-a3e2-7896f3ba88b1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7dc30fed-0664-4587-80fd-e31830ed1a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c487639-865f-4f60-895c-f5c2d8e0d0bc",
        "cursor": {
          "ref": "9bf94d80-853e-4ee7-bb07-e4c0cda31e33",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cc6292b5-cf54-47da-a89e-060433b955a0"
        },
        "item": {
          "id": "4c487639-865f-4f60-895c-f5c2d8e0d0bc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bb08c247-a4df-458f-8861-a1910a817d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "aa7f9625-0215-44c4-9519-f39eaec3ec11",
        "cursor": {
          "ref": "70cf8c7f-c61d-4f1a-bdf3-c461b1cb6ee6",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c4312b7-f175-4593-9b34-17d1e0dc0dc8"
        },
        "item": {
          "id": "aa7f9625-0215-44c4-9519-f39eaec3ec11",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7f6fa4de-19e7-4257-b950-65cc385459dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "4fdb7811-1eac-4d2d-a894-23a7f5021c5c",
        "cursor": {
          "ref": "fb0aa6de-75e0-40b1-b751-a675ae860c5d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e769ab23-2c7c-4913-9ba9-49f209ece8b6"
        },
        "item": {
          "id": "4fdb7811-1eac-4d2d-a894-23a7f5021c5c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5a788cfe-af5c-44d8-a70b-bcc179aea23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "c8218dcc-2fb8-4f73-8127-934a3adb6cef",
        "cursor": {
          "ref": "7e641ab0-df79-4f68-876a-24617f58acc2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1cd62f8a-678e-45bc-be9a-3cefcdf6c989"
        },
        "item": {
          "id": "c8218dcc-2fb8-4f73-8127-934a3adb6cef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4071559-45ff-49bb-829d-d5c96ce5af34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8218dcc-2fb8-4f73-8127-934a3adb6cef",
        "cursor": {
          "ref": "7e641ab0-df79-4f68-876a-24617f58acc2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1cd62f8a-678e-45bc-be9a-3cefcdf6c989"
        },
        "item": {
          "id": "c8218dcc-2fb8-4f73-8127-934a3adb6cef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4071559-45ff-49bb-829d-d5c96ce5af34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0e479e-7534-4f14-9c8a-d87f949a3b47",
        "cursor": {
          "ref": "9b5ea15d-e1e4-43dc-a4e2-038b6ac418e8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d174fe9e-afeb-406f-acec-fb9000c3ed39"
        },
        "item": {
          "id": "4e0e479e-7534-4f14-9c8a-d87f949a3b47",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b79d9245-cc6b-4a02-9b48-ec6970efcfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8243b55-1cd1-4d34-8593-9de0f80d3c09",
        "cursor": {
          "ref": "dcaeab27-914d-4c7e-b021-c0592bf568ca",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "260ccb6e-8091-4ed5-a62f-0d34076999b1"
        },
        "item": {
          "id": "a8243b55-1cd1-4d34-8593-9de0f80d3c09",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fefb766e-883e-4943-9fde-cd83a0d8e45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}