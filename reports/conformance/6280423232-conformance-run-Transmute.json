{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d0544127-c4e2-467b-9b90-2937db8ef730",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e7f55c85-fcd1-482a-a1d3-a2a9e879b27b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30b759d3-bbac-4756-9c9e-2f43017b37ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8225bb80-d537-4235-aa04-4940ff1fa359"
                }
              }
            ]
          },
          {
            "id": "9ce3f321-3b93-40f1-a83e-2d7b66685807",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e99d0366-dbd4-4435-ac0f-5b161957cf60",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "14d14647-9b22-47b3-809f-e945c042c942"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c3d74fea-46e6-4899-959b-4d700fc97550",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c0f741bc-4118-4ce1-924b-36bc210c8896",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df4c0efe-6e3b-4064-a26d-a360eb038218",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9847d306-0d11-4af5-95c1-17a229dceca5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ace4b8b-55c0-4fbd-b067-94626082f531"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b55a97c7-9164-4484-83f3-f84a01377465",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59c32b3f-cba4-4e70-ae42-0d5bdb54f1dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "645992c3-eaaf-4b98-98d6-ac502e156250",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60a646cc-6032-4d25-a2f3-839a739db165"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bae9ff94-accf-4b70-bd70-96af7cbdff49",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "28942273-a63c-4710-b2e4-499e5395a069"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cf5342e-df0c-4b88-bdcf-796aa34ac260",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb4a851d-1387-4be1-8ae8-ed00f3d90e37"
            }
          }
        ]
      },
      {
        "id": "1075e000-3bdc-471a-81ef-5f91a39ba2fd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f3dc8d35-3d55-4fd2-915a-c73ca84c270f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8bcda2f-aca1-47b0-9b5e-0ce0bf6042a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35ba44c6-9197-4125-9547-fbb1b213b63a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acae8c52-5bbe-487d-8e1a-68bbc0c274ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ecd20bd-0c6c-43dc-b230-5cf6fab553cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a332d3aa-20c0-4103-b364-0ade24273848",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23ea5c5-393e-4198-b058-0bfaeb780449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "694b7d80-6726-4d6c-b561-5b91cc3d155e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2f3013-8f31-4829-8a2b-9fc5c2787d62",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5d3433-2b46-4e64-b967-73da8d82212d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0b68c4b-d15f-441e-8e43-fb339dd0bf60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7cb652bf-62cc-43b7-87bb-23433c097fe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "983084e5-860e-4bcb-be7f-99e268968518",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527ca45e-bb01-4746-9268-4a1592535a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "523fe639-b7a6-4657-a22b-55b7673a5a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cabcfb5-57be-474f-9848-de6cb2875ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc09ef4-896d-4100-8f54-5d1a7b4e14f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef1ffd99-d5ef-42b1-beaf-75b1fd03ff0b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73e53ed2-d18c-438b-bf1f-daa3d5628bfc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d2f347a-7174-41c7-877f-3a10fb304bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "35c744f3-3488-4ce2-974b-0c6009bf1367"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22563303-c542-4525-b404-1ecd52a5a5bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "caa5f3a4-5f9f-410a-910c-246e23647ffb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05f3bf9f-08d9-4c57-9c63-381d7f7f12c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b28a6d75-c828-4bc3-9874-9c71e382371d"
            }
          }
        ]
      },
      {
        "id": "a37f6843-f9e7-4d10-8d55-2d73908ba038",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e187a792-d566-4cfe-93c3-175e35108a5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "431f7e71-52e7-45b3-8cba-ab207b23a45d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0a8d2ec1-6788-4cf8-adf3-23f390127988",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5847455-6747-49e9-9431-c4e833dc066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a4f92f-e0d4-44c8-80f1-2d1f855f1b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2ec9fb-05ae-4472-90f4-04517c453048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99fd907a-6198-443b-bb62-9e24dcb52813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37e3962-9541-411a-808c-15670eabadf5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314ad5d7-c7d3-4719-b774-979f417224e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6fc209-6b1a-4a06-854d-22b767d41434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c19481-3965-4a9d-a671-0fb90606d2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20ccbb31-2b19-4d94-b95a-5d0498857eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab93e00-a455-466a-9c54-a9be1d05d6ac",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9b7585-72fe-4ca1-a614-b512af472c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e5e1cd-8040-4fda-9127-48408105d5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff304fa-9929-4e35-ba75-8fb4854e993e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0b236e3-abb1-4f9d-a385-0be7b427e1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a91106-db88-4518-ac61-e97c2decd7de",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c25a05b-aac8-4dd0-819c-cb800d5e61e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1903abe8-0b8e-40f4-918e-2a6222fbb29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3a50ca-ee1f-4ecf-b8ab-21ac4a263468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2acb77bd-fc29-4ca5-ac1c-fa70e9c75a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03170894-f178-4a29-9f55-f450736d7ac1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8652cc8-f200-481b-a4d3-e5ee2b9d168d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16507505-5193-4176-a8fa-be0c04acbd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c986a54b-2a2d-42de-9d45-a21c6c09a641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c9b7f8-d805-4ba7-8831-1325b0244fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f870222-429d-4c1c-a1c5-c230868405ac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039bb592-d37d-4c8d-8ee5-25d91d29e652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262f186b-9025-4e5d-9074-ba0786516fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3232b4-3311-4797-8a1b-363e5597f82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01a6f17a-481f-4f77-a59d-215c6eefd1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b46e7e-51e8-430c-83cc-75c3eb3c7338",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0ccee3-3b92-4dca-8612-35ce3b07f4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf350f32-769c-4c9d-b4d9-90baa31fec61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb1fb53-ee39-4e58-ae44-10b811f4e458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ccdb1fd-17ae-45bc-8e2c-b13b4ed586a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ae74bc-a6f6-41c3-9f6d-75c75c33c91b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c08b5a5-b883-446b-929b-4c6a79723779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cbe150-9e3e-4486-aeb3-3889cba7eda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2aa56f-99cb-4135-aa92-09a3abbfb7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af2015e7-68a4-418d-8cd3-0ff243f4f284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df485d6-74fb-487a-8b1d-3cb269b23b8f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6eb82-0dce-4f0f-82b3-d61d5ce8fb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973d082c-6f08-42e5-b4bb-5edef77ca1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e2f3f1-a43e-49f0-a6b8-a3d500042047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c45d5a20-ab3e-47d0-bf2f-40484028fa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a6de3f-b032-4ee9-a20b-327eb19dfcf7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03369fb3-dbf6-4a91-929e-c2a35ea71907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63097259-0ef5-4f3b-ac92-79e850a4798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf30f71-134b-4d50-8b38-3724001b1bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01b11443-a44d-4cc5-9397-a2dccfb44b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec4d9a8-b95a-40d7-b069-ee718815ecc0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c1eafa-b83d-47e4-a9ce-525330dc288a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2ce16b-9314-4254-a161-d6f739774e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84808561-e4c0-4540-a230-94aff082b7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1314cf01-bb7a-4720-b771-294f6368331a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdaac59-c57b-47a2-a6eb-7ff07f37745c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cfcc3a-5f42-4ca4-b395-1e2af17a43cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e2d38d-e1d8-42e0-a6e5-31f374d47000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e882f0f-1900-42ec-a89a-195a128aff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54c52f85-71fb-443c-b50a-59f7e45fbc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc31dcd-db7a-4d3c-9c4d-2c50f14685a5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b388eb-aeb4-4226-bf7d-f7950b19fbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb59b3d9-5b10-44ff-85bf-950313f03939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a38496-054d-4541-a30c-8e95a15c6a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41bced53-4713-40a8-a1af-1a18e7d1e96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932a8096-c13e-40bb-b741-db3b3cd0758d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcfb4cb-f130-437d-b2a1-1c84ff5a6d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b1ec77-1ddf-4ab1-bbbd-d9695e85d425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82eb689e-8217-4dd8-95a0-e3f9a757b00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6da0e40-58ae-446b-b4b5-13a455211c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75fe4f9-8a72-4e0f-8a4e-b6a277a309fb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102c05f2-bb0f-4b1f-bc92-b73a41ce2c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc569c74-51b8-47d7-b93d-5209b3658f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba520445-4222-411c-9723-fd07b0e5d6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c5960c0-edf0-4b4c-a161-0a2be26bfa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97136d93-f38c-4a27-a7f8-75bf6aae001c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76918fde-2d02-416a-b958-abf3a283cbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e25278-909e-4881-81ed-0c7a19b37531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0b992a-334b-43e6-97d6-7d00cefac718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa93acac-450c-483f-9377-4fcacbf96c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ca6e0a-45e4-424b-a36e-3e1b727b2919",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5b05ea-7962-422a-9e80-c9936d1f3eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3718ba58-03bd-4df7-b8c2-00a66218ac8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e34c25c-c112-4d25-ae2d-da163482003f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72c564f5-b1c1-4098-8b66-bbdc8d325965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b6139b-ba9e-41a0-bd27-2991bf68303f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf70e18-48d3-46fb-a8cb-c61298a38ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef8aec0-0fe8-4311-9e56-6891c4672bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66c3f67-10ec-4eb2-be85-3ed90a760019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "67dce503-4e62-4a6a-9a4d-3b0091979ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a723ec-ab3f-44a9-9636-5d907da11c48",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf4a6ff-365f-4fc9-b3e6-61992b8eee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bc0393-3f16-4dd0-8326-b15ec71c35db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5561562c-1f3d-4fe3-81ad-64e20e4c7d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ed1355-24d9-488f-a337-26b1a9c37840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f036c05f-a88f-4cb1-9172-9cb4cb29dc78",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416a8a48-6185-41c4-b01e-65707f7be3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15518d23-5ac5-484b-a9e5-cd2ee3cdf08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db98190c-1757-49f9-9008-3d502d8d2723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fad7f98-1a4a-4fa6-aafb-1803940c75dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8553ccb2-7d23-4cfc-9521-02262ec8fd77",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bbad25-ddb8-44c7-ad7d-6495000dbcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06762ec3-d4c8-4e5c-9b06-6fa6d2c29e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809ee5dd-b025-41dc-aca6-8640a5d2dd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db5c433-5519-4c08-8f0f-011fd6952354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdac2c4a-764c-4f8e-9d60-37e262929acc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320e8717-ce0d-439b-a932-8582bfe413b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02acdb27-77d2-4722-aeb8-b3f18d1ff489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f46c9b0-0990-45c3-89b8-bcf03a401d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f398c5-41c0-4fc0-8e56-cee4ee2ef55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9003a68d-689f-4ca7-a2fd-f63a1652db6b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffebfd1d-25a7-4381-9ff0-4d456d4c7052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c26dec-1d03-4978-bd30-a6acb1f2c6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23c456c-b182-449e-8d12-f23f672a9163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b81609d8-1726-4c3d-ba3c-fd3b3197e735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0e5895-e05b-4675-9f13-a2ba10f227b4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2cadce-082a-4e8a-8c28-593f2be2ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ff7899-4358-44fd-a9e1-50c627c105ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69dcf33-a9ff-4a0a-b8e8-399531dbb8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8fa3f3-1a7e-40ba-a097-57b092ac005f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f46e60b-9e76-4501-ba6b-d54e3f686af7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafc66dc-c227-424c-bd26-7c52494d4dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04da6b61-f77c-46e0-9553-09e56752246d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a04365-020e-46a7-bf34-b3e9e4d3dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6901cd-0d3e-4101-b403-85aad52e0be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afc31dc-cf91-46a8-9556-539854c0a92b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb29835-ddbf-4913-bcfd-728774e62944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14aefa66-6344-4355-95d0-e7380d5c9618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b160b04-a3a1-4112-a9da-0590a5d05b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb737f18-aa95-4ec4-980f-27e2360a5742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95298de5-bdfb-4ec3-a516-c6ede0875993",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e01e98c-8ba0-479e-9746-eaf70d603419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039d00ab-2baa-4227-ab42-f626087d5aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03464bc2-3e49-40bf-8ee9-f16c2f4c8ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36223e36-e785-49e1-8fbc-47bd8a45ec16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5b8a6b-864a-4910-9602-bbd501939e13",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7367e7c6-9721-4437-a7f9-0a058dba5816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3056e00c-0522-468a-b9e7-8b3a47dd0dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b615ca-d2f7-41b4-b890-3366fbb2481e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6827d323-44a0-48a0-9e32-d613ba38cccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc07070-e6b3-438d-94db-17392421f4fd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446e28cb-ded2-4556-bd09-37955be92084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba50f4c1-eb42-4d93-b92b-35d34e82976c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622be6c8-1517-4a19-a043-14f2a5fad767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04aa5409-1e30-47be-b0d5-ba807902c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d45b3ac-3172-4416-90b2-6f5e92e50b81",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e1bddb-d349-46c1-a988-9cd3be8b6004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e74d6b-a60a-4b77-a200-d7bcf7de5577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449ca56f-2a77-481c-9cac-4a5528f621c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2515b9-9c5e-4ea9-bdc5-022c9d3b42c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b685e-b1c2-4078-ad9a-bf79d411b773",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95c963d-2e8a-47d2-818a-1f75da0eadc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791bcd84-196d-408b-b434-819ce8e44219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763bf195-bbc7-498b-a3a8-7f7aee22b421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae34330b-ad6a-4e19-b797-8c4836b296e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c956b569-b22e-46fa-b662-0f202bc4fcb3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8093c9c0-733a-48d9-96a3-8008b47c5f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43109198-ccc6-4b0d-bdff-c5d249198b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbbb9d7-50d5-4aef-9cc3-9809ce125118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c513ea-dfc1-4773-bbe8-677431abcfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6424b2a-99d3-44c0-80a6-8ac4de515d89",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce3d162-8bd7-4f01-ba6b-30a612377bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a64fb2-3d9d-4eda-bcec-c9c9b6340916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0c8de4-9822-4e9c-bd74-61dc09a0a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33228ae4-74fc-4b5d-89ad-4f24e095710b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbecf7a-6049-4ad2-a96d-01f80508f713",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d017e6-153a-49f0-93ae-3cbd6f06cfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b216cf8f-86f4-4dde-9670-b0a7e29e7b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8ad9ec-5dba-4ea4-aff4-43e422d864a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1087fb-5522-446c-a705-54e417e5304f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cff85d-b8bb-4004-b2e0-f849b4a2ade6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada618e2-e2ca-45e9-b963-0b05b1b8c22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f537ca9f-30c1-4321-88c0-e8283398fed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013e3e87-8153-4c8e-af82-8ae8f83d9db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "004980da-e93e-4d5a-86fb-c7b81458ab2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06438cb-50a2-400d-86a0-2d4628c7b2a9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69290944-cfd3-4280-a9de-ebb09cae2ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34741d97-389e-40fa-9877-7f5bf3fe6a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cb903e-6242-407e-a26a-8df7e31c2a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a818e443-b4ac-446c-bba1-c24820054e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a6f096-b4c1-4be7-ba7f-70977a769aca",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7931c2-9c1d-4168-b4a9-5326cd3c1e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a6c4f7-47e0-45de-94a8-124b1ee5eb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538b4a44-7b26-447b-b3a9-bcd1a92c776d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4c3128-38e6-4977-aea5-15e713c67afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297a59a9-68b7-45ba-9c37-c2f887594dfa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b3c48b-7031-47b6-a9b9-21bab85e104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5105dc0a-d943-408a-90db-bd8aa0f2f7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1aa433c-90ae-4e44-9e30-56db44779a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "23b2546d-d46f-400d-8b6e-fa117330650d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3787373a-891f-4b85-a23b-e00584559f24",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37b011a-18e7-44b8-bfd5-16e6e03ae7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5787ed-2a4f-4b21-84d5-bbed39f2705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5400a2c0-1425-4247-b576-e3b8dd8714a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "932c9d81-7a65-4f51-b195-a332b1a25563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba20381-61b6-4b58-93c2-385abdc12a6c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca4e925-b86b-442d-8b4d-fd690facf139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b357a3-2006-4f67-acb1-04fbdc2b7b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a07a5a-e6af-41aa-b4b8-61aabed475a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c74d51fd-be15-4960-96dd-87bea45d67e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fff8c8-e1f6-443c-9575-851e53b66f52",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a8f902-c7cc-4d7e-bc44-157a13b371f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f446b3fa-e91c-464c-8b3c-4c001c28bd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d33ef0-6b0c-4aac-89f6-0539158a09a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae77d9e3-dee0-4e7b-8bfd-54570efcd729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92391a37-e660-4674-a0dd-3b90f3583edd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16467289-f5db-466d-ae70-586432848027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4387545e-b618-42d3-b06a-b6c2d3b52d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c5df66-df20-41c1-aed2-d8ac21a618b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "38f0b0d4-8d93-479b-a50d-fa3e0650e21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ead794-8ddd-494a-aa0d-bbd330b587d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eeab18-a2dd-41dc-9d86-b6530f180619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ad5339-5dae-4022-b6f8-d2b6560de2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e9d171-6c39-438c-b87e-8412e4f363c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8176784b-94e4-4518-ab12-97f6a5445c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6316bb-28b8-4a5f-a421-4b1cc59237bc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3de4ed1-2825-4bcf-afd9-06891e171517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c037fa0-c7f5-4116-9155-05e625d3e326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc56328-77bd-47de-a7d4-b23c92d5cb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a68e33-ff78-47c2-ba43-2c2fbe73a0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75119dc-ced7-4a2c-ab4e-f663c0f8140f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5740111-b540-4713-aec8-b2aa8554dcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf6cdac-325f-4c4f-8ad0-48dbb0e6143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77759324-e0e8-4053-91c5-a13424b32dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49a52d2-09a7-4003-aa78-56f657be4317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f9cf97-fc6f-429d-8d3c-ef2deac847f6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62efa8d8-4412-4b6b-89ca-d00116010bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d982bb-91cc-4074-8e58-e91a342cae3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57199efb-2f05-443c-92da-e1e68b428e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83843161-a524-4734-9ca5-33ea304687bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c49ba24-dbdf-4e50-a14d-48e8eedc9d18",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3cb36c-a171-4748-8926-a04bbf0d756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7573a01f-3e27-44f0-951b-249ffea9503a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5d915d-0225-4b49-9cf7-a126c10fddf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e71409-a851-487b-90f3-12ac6de766cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce77b268-f07f-49d8-93bd-9028c7a81771",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1cfc8e-c95e-4e12-b48d-b4387acdc149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c1ddb8-7e2d-4eb1-a954-fa7e5b77741e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8159fa2b-3192-4393-8983-b0ff0d0bc2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92b9e951-35f4-4de4-b603-f8b10de037df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd5c109-5d5e-4106-bef9-59a33eeb3785",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f61573-edbf-4432-aae4-f092bab654ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9f3d92-7e8b-4153-a20a-9f200c50694f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e9a78-f53f-43c2-8541-a237802ccf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7624c79a-01c6-471d-a54b-5be7c5ded4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed83259-7d0c-4fd1-a82a-1de3c093d6fe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f11f82e-4387-4cc8-a03f-77619c72c0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02508483-f9ca-4a56-9ee9-e747880e5fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983ecf29-2e8b-4672-b3b1-20dc3e1aa51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f64b429a-8ec8-446f-94b5-d6c62705bcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1ea0c9-e9df-4019-a684-f25e09c47185",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22435ea-0c72-439e-95dd-f5f098817818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12124af6-1fed-4a14-a05a-8ebb19d8798d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c32eadb-9769-4130-9f17-4e26f41eb46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b16890c-9cea-4cdc-a5bd-1f83c2bbb983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c381f4-06e4-43bc-be26-429f242ef1c9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da27fc9-400a-492c-8439-fb31bca9ea65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0fe29f-f154-4aba-a48b-2915eeeb80c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8762807e-f346-4139-9067-74a746f3b3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d343f7-8611-4c51-96c5-b42ce9f92737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065559bc-ebef-47f6-92f9-c98f032eb2ce",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6646be2-66da-436f-b76b-1f51207bf957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f6be42-4300-49f4-8b43-1e4142c135cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5750f1f-896d-4498-83f2-468c57840500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "043d610f-4d00-4c70-beb5-4c262f0dc241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45de2af-247d-4247-a8e3-108c4b8569c7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380706fc-f5e6-4cbf-b58a-393102a205e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631a19c3-da23-45f9-a65a-a453dd837ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80326e85-36ff-4760-a5eb-1ebcb1a624af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b201c0-43f4-4731-a42c-291e2e9ef01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1eefd1-0212-4baf-be62-eb7347e1187e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83305bed-f49c-4bf7-8ee7-9ec2ae6ca6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbd10fc-055e-42e9-b8eb-67172645ae72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6547d8-0db4-44b0-af38-2cff6307c7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4802a761-d7d8-4493-8d8c-40c3a0dd826d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb8f2cc-6db0-4155-84fb-4f56324158e4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4124a79c-6335-47bd-bed8-794d65de8868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4eb3f70-6a0b-42bd-9d79-5a1211eef136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e06b2-9a92-46a0-aee6-8ad91654f148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "418db417-b9e4-4d85-b0b9-b0394005b8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c6e415-8d23-466a-900c-67f85a9e3427",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb4f41d-1ea7-4879-8310-28d7aa7c5f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf68e4b-27b0-4080-8edc-4af0ea8fda2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2934839-6a98-4213-9abb-8e561efd4042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db49e998-0c30-401c-b0fb-68f121b3b6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67155ab-656a-4e2b-9fec-d1d723bfb449",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac2cbdb-4616-4430-b1af-e13571998589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f364775-f336-49c1-83c7-111c7f43c1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa0170b-9fd2-491f-8f6d-815e9920f711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60a30a53-bb09-4557-915b-6db1f2091fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ff0e03-f5b4-4811-8f74-03247d6be6d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fec204-9dc7-4379-9c86-815226e083cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0cb565-b477-4035-b94c-076701b16172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde117ae-469e-471c-b76e-673c11d92874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cdc416-4ccf-4070-917e-3ab3f46a24eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4d8194-cac8-4fe4-a102-5bc5b7c1918a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a918f72-923c-4b90-accb-c5e91728d9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0788f8da-6c7c-4e19-9f7e-b22957772221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb280296-fa03-48cf-8e78-5b20c3bbcded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcc5a64-104e-4dac-b0d9-8d453370aca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c8e307-7745-4494-95af-20daec98ecbd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4bc843-0bc7-4e03-a9ff-edadbd926377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797deb7b-cabd-4c00-9d33-ca0136d9eebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd23cb0f-0262-45d7-82ee-a16004d38fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44ade7ed-a924-41c7-915c-df4603a6b6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a7f90e-9c29-4171-98d8-cb8d97846df0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cded441-4f49-4b8b-801a-32f639d2a78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d4d22e-3944-4343-bf18-c7169b145c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982eb000-3eb0-420a-874e-c694dc476ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "41daa9c6-170a-4bdc-bb8c-9ffe472b81aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dd813a-8cf1-49bd-bf0f-ce80ad7d316f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c29350-e0ee-41e2-91c5-41c143846626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec5dce7-b405-4401-95be-ba5b58b2abcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b594a8-7dba-40f5-85b0-eebeabd56a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bf123f-e8ec-474b-83c5-e403a831dae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0a1236-a73e-4b72-8aed-fd8a593fb7d8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a522b99-d062-4480-a45d-58b429690fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2a6646-d610-49af-9816-b4b6e9c05f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b452bed-bb52-423a-8add-f6edeb7de436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00263e8-39f0-4fa6-88a9-bb0477a69ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bbdd74-2693-41ce-bb5a-dcc28fc44a2d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa340aee-3458-475b-9661-0ec610a5a504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352d9107-d5c6-4c0e-a2ff-fcea05f45e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723e9b68-292b-416d-99e2-f0c837f150bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8dd6d2b-c1b7-4eaf-87b6-87bbfcde6fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e36f98-1419-41b7-a77d-327d79afe532",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72339383-ad06-4b43-989a-5c6534070d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728e3427-625e-4a0f-9c2f-66d57215c5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808c2bf4-e4ee-4f98-b6f4-e02bfff77cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0351cba-18de-472e-835c-d3461b2a6f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ecc0a1-07a5-45de-b129-252672f2ec68",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173353c9-aec0-40f0-b193-0bdc6f3a8138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e13dda0-6376-4de9-827c-d8ff6a0f59a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788151b8-1678-4eca-9fec-0e2da89485bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a96484d2-2d94-4581-a224-689af6c43ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82415cc-abd5-4e51-88c2-08430a4886fc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c1c303-a53d-4206-9999-6b2a56b62e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e48e490-7b0d-47da-bd11-df9a6d3748ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcc86d6-c8d6-4d13-9cb8-f9c4e62e7bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fa2d96-9b9e-4cd7-9efe-5b74398bdf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad429434-406c-42a6-b0f9-f41124f862f1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f117c879-6eee-4b05-a299-583ea649b6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6387df57-10c2-46d3-a1ec-36b4f8404f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cddff2b-8108-4d99-aa09-d3afc7bf5482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "209771e8-809b-4559-b329-1e7bcd99d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19e928c-64eb-4a05-8c28-dd038ac9f5c3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f4b2d0-dff3-4d94-b27e-2ee38fed0aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40cf333-cabc-4480-a55e-4fe21fb5063f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5131e82-6892-4754-b7c7-16a199aac77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06fbcd4-0058-4a23-90bb-c53287ced852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ecbf0e-c34c-4eb1-ae56-48a99c1411ac",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45e1f23-51cb-4d12-a0bc-2fa45496bd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9f0513-f8a8-49ff-aa27-ddf6a11224c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c186c539-5824-4690-ab91-2226dc1f03f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2bc242-ea83-4325-bb9e-18ae31286402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5010bf5-639d-4caf-a1fd-a849d6308a38",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f67278-33fd-46d9-b524-fd132fce12ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe7ac9e-155e-4f1e-8ea5-7afd8b6fe0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe32f550-85eb-4ea9-a598-25e1821df83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeed49f1-5aa9-4bc8-a227-a653a90baef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1435ca-cdb9-46f9-9deb-7ac5eb59b358",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca53f31-54da-4f5e-9db3-3b56876c574d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3282085-e371-4645-a43a-ae54de6da68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1899349e-21d6-4b7a-9e80-ad7bf5fc3bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "047ea5b6-6f87-4a01-90ac-cbf409ff1f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418fc1b1-44c2-43c3-beee-8cb130b1da3f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b3c0d6-de80-4992-982a-d428e1ff0a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226c3f51-5faa-421a-b3c8-c9b122e3bf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ae694e-e41d-4959-85df-995cb4d136a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc56b39-36db-4c1d-a300-b57bd54b97b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0feb460-ae6a-468e-b9dd-9db39076efee",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e8f88c-8867-4eb9-842c-9bf29ed4d7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e5fcce-5a2c-4d5c-a17b-3c919f84be86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b55574-5df0-477c-832a-611826607f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d4e7fc-0764-4e31-851f-83bea81aeec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acf75c2-a32f-4e76-821e-6486e75920e6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fb9920-45b1-4b07-9f63-1ef14ea8065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61ad1a2-76bb-45ec-b77c-4367385f1a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cc1184-841a-49b7-946d-7094aceb1ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e23771-c9ce-444a-bdc4-67d4e4a37707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea41e7c6-13c4-4f4e-8f0e-3cf28cfdb4fb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8345fb-f95a-4623-9429-c527078c27da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19520517-e54b-440c-894c-63e67c804e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061b1044-acb2-443a-a8c0-c21c5a6a2fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6795a3d5-d3ee-4054-927a-bb5faca94e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d7b406-0c73-431c-b6fe-92523527c5ad",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871e4183-6b68-43e6-8efb-e549c76f2bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4c35bc-76f5-4666-8840-4717e2ebfece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329dd9fe-d57a-4cb0-a27f-2d9313a2a582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f99e8611-a38a-4d2d-b133-b98470e4e06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90f47b6-7a43-4321-b167-c179188b14c5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7b0768-cc27-487b-9866-82e86fe33d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179fa8ff-163b-44db-b4af-a6a796bff6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367f1652-881a-4e32-8705-cdbbeb36cca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69f8cb06-6722-47f3-ac6a-374a9644d921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17c6456-bd73-45bd-a005-c7b27433bc93",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2b5169-5f78-49cc-8d77-47cd960831ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974b78ba-0868-47ba-8dc2-6d2e8c001371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccf0ad6-99ed-4bc1-a38e-ee5a4e6539c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b85d9047-14c8-48f1-bce6-928930a4b793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17095079-d871-4da9-a4df-d0eb1fc40492",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f36e0e2-b932-4063-953f-1fe50a7eeb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b61b020-f93d-4168-84b2-08258dc4d279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b981eb9-ff6f-46cf-b5b5-83af12d57ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01e67917-eef9-41b4-8991-d0fc6b9d9c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716e7cda-5188-4ae2-87a7-a7c62f90eb2e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec07d203-1372-428b-9a94-b9677d3066c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b00ab2d-eb64-4bc8-b4c8-b73297ce4f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d60a49-b868-43e5-8f3b-7434f277c251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9014c7cd-f7d1-4a88-a006-44ba1b238ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53f8436-8d01-4044-90f5-ea04b44e7918",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d56e83f-9fb7-49f9-8ecb-a11ba9b1080d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebfd852-c805-4352-8031-668abbce699a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b94124-40c7-47ae-b93a-08834d13caec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e716aff7-5d10-4fae-ac76-d28c1059cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365945fc-31ed-4328-8b81-e6aa43f02cd9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfa8b4b-83dc-4461-88d6-e614da548b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5867c540-bb48-4d0d-82f1-8cb20982a1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f83c510-1e3f-4529-bb4a-49c334c5675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2735739f-4758-4a4d-832b-6ca712e86663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8ec492-97a5-4455-9e3b-eed7c20ecb58",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3268c9ef-c773-4fbe-8fdf-fa1f889e048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f8d1e7-a799-4d98-a8f9-3496faeaf09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c422ae6-d387-4dcd-a62e-c6149b95af08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57cd2180-2bc9-4879-a733-2a6eee634cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb1a89c-69ef-4626-a6de-1abe11ec8616",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54da974a-1fd8-4630-8016-751767abc11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e6fe7c-ec4d-47c0-be10-80634beca019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3996248-e9c4-4aec-97ab-36be4561686d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f3bdcd-2204-4bab-aa12-ff435f0965d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973620d9-e266-4c29-9428-4a9dd7d48b58",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58973ff8-6a75-49c6-b071-74f58a4cbf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed774ff1-4785-4547-8250-44a2151ee004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0914825-2baa-4954-a61d-d417d1c7dbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0501586a-6cdd-4c90-ab33-beff15fb2a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cade9e5-ec63-46d2-8d71-b4b1c78e8e63",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7eadb0-1fb1-4856-bdfc-92dfeeb0ba47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92ed2e4-ea22-4c57-a4a2-86bbce1e32a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ec0895-6426-4416-a238-df3956ab1af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a409a741-feb7-4908-9231-1396fa491a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ffd87f-d1d4-4a95-ad5f-013a0b766ba2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fac48a-3bbf-4255-b0ea-64e826d0816c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9254fb6-8f7b-406b-bbac-e47a6b447eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db3c904-d8fc-408a-a1be-744ae23eda83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc084b1-ff1e-4f01-9621-f06d9f4b8249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d469b8b5-4ac1-44a4-90cb-9e6426317efd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3605e68c-a892-4c88-a1b6-cf1c9bef7f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38db0577-78c8-4233-96ae-2790918668ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6773a2c1-a4be-4ed8-85af-e5e54aee9514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7ca2a3-99d5-429e-a596-513e8ab8eb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ad042a-d355-47c6-82cc-4d21b3075a37",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a12afa-b56f-4202-a34b-cbe3a1c72a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559b4c62-6d46-47ce-b6e6-091c0b8c8f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4debf8c-c4b2-4c9c-bbb0-8d3fa8b565e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c04e843-84e6-4980-976b-a1bee91e0598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a461cb95-2dcd-497b-9bdf-7cdf377be4d0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf460c1-6200-4682-ad3d-c2db5f821707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d0365e8c-c29d-4b0f-a4af-e91747481d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be637b1-080c-493c-8e9c-24337b6ecd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "16513569-22ff-4a12-bb4f-f30d87ccff0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06d62c08-da48-4e31-8564-c8bb3d836eb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c0abdaa-d9fc-4e41-b51f-d43152994d2e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4018c98-2454-4c4e-b132-77f2a245e769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdc47cda-99a6-4ef5-98d3-c9ec015e125e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eba23f-fbf0-4b33-aff7-3eae0fad4403",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d66fe733-2554-4363-a8ed-5486aa0b9ca2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01fd43e7-40c0-48d2-a3ca-4c3834c46b9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de466063-5db9-44ef-aad6-d61450d60625"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c466f05d-83ee-4882-8448-874a97113168",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbc94508-5496-4997-980d-31318d7bd77b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99d58f71-567f-4e33-b1fd-f4a69f3ec5f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d06e0c52-40da-4752-838d-b61a9d204a04"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76d7f79d-740f-4a80-921c-b6d73d880f83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "793ce01d-a8a2-436c-9d62-c2b5e6de9b7f"
                }
              }
            ]
          },
          {
            "id": "cda94b4f-2dfd-4734-89fa-516df16ac9b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "61acee33-c533-4841-95ef-261d6a11efe0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2186be97-c37a-40c0-b180-b618a8067680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93a481d0-03ab-406e-9f20-c8f2b4e69f77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ce37c43-4e44-4b9e-875e-fbe5048fdc56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43ff2935-4840-4ce3-8d67-ca152b447558"
                    }
                  }
                ]
              },
              {
                "id": "ac3d2bac-f24f-4048-9e06-e751e0bca5aa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "838dbac1-e65b-4945-aa25-7d04a270a69f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8965dbb-eadb-43fe-9735-16525a9d10f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdaf79fc-f979-4ddb-bbd8-7f32d96fda50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae97b1de-e4c4-46de-bf7a-4903be517433"
                    }
                  }
                ]
              },
              {
                "id": "1b26a067-0361-4b5a-98af-8c5c9567e5c1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3024ddcd-a715-4898-8956-2fcbf1b478a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fde98199-ca18-4508-aa0c-1453e4d9af49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd73dcb9-1c40-4fad-9df0-34bbd6d720f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a63d1a46-bfb5-4daf-9aeb-e431d63fa8e4"
                    }
                  }
                ]
              },
              {
                "id": "53f4aa4e-c66e-4bba-b682-53e656fc5509",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d8a195f-c60a-47da-a792-6b8fbabdcf62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f2bc3e6-ab79-4cac-9d8a-6b8842973a64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e095c307-ee38-4997-b167-276f362694c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1e9b8bdc-e2c3-4b03-b798-b61512c72607"
                    }
                  }
                ]
              },
              {
                "id": "927b1054-9435-4c62-9bad-ec320f835750",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7900277e-d6c7-448e-9425-b3d795787f6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9899fac0-d94d-4154-bb83-d9f1e8f44067"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f1a3f0a-1816-4f03-a849-799a413018d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "22e36f1f-70ca-42c3-847a-67a8f6a85776"
                    }
                  }
                ]
              },
              {
                "id": "4018a376-ef00-4349-ad14-7d41eb7ef2ef",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "772229d8-8e2c-4ced-8bed-f287f0e6b92b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b6ecc46-2a09-4d23-9ac9-fda6c90c263f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "634732ba-3ecc-40e0-a9c0-b631ddbede0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0dc888b2-64bf-4e9d-96f7-923d80e63100"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77500c72-e508-46c8-936e-12e4e4863a75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bc0ecbb-6844-47d8-9b2f-ff70e4ecbcc6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a492f44b-c19e-45c2-89ca-7e3808c932ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9191f993-a0ab-437b-b1a4-807ba8084202"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5a356d3-527a-4b23-9bb5-3fc7fb8cd5b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7c635488-2aca-4149-a694-2cf4a3eec073"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79a7e097-0668-4c50-8215-4aedd0bfdc72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e1a7479-1464-4009-999b-29092268bba0"
            }
          }
        ]
      },
      {
        "id": "7d60f675-bf45-43e3-8435-4974acb2b25e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e893fdf7-ad95-4249-af22-c79e1e7bac5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bf75ca7-a497-452d-b612-02240ebbca78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1c9ff28-9741-4160-9014-42522286e8c7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3d21d1-92ac-443e-86b9-7c5bba023caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1d4834-b9e1-4715-99fc-9a72327dd245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7379f8-44b4-4f9c-8459-0f3987b6ec2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f52ec0-739a-47ac-87c2-ce878565cc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090529b8-351b-40e9-8e01-875133e7467d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6d50a0-efe0-4321-b63d-42cb870358fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f466c4-2663-4144-93f2-e4e49a7b4694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0255fb4d-46b3-4a61-a5ea-795f1a414e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf582d6-0c3a-4168-b370-683d21379488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fccb75-2dc7-4f22-bda1-7cf84a32b4b6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95737ee8-c850-4968-a2c4-7d59892cd336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89c007c-8832-446b-a031-c8ece6c40394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2262f679-72b4-4242-9aa9-f1e375c05b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6694d187-90a7-4b08-b5e8-2bb467a505a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a664d159-9b29-47f0-a623-75cdb5c92630",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ad4b43-c1b4-40f2-ba65-1985252f92be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a624391e-a755-4357-a558-aee455b7337f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b429e959-537a-492a-b4b9-b37c6c24f963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed37555-f119-45b8-a67b-c64eed088855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05defceb-a4c8-4053-86eb-cad26a14b753",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ff48aa-9ac1-459c-9aa9-ebfd80831bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e1a9e9-dfba-43c7-92af-c324bd9a4984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcd6fc2-7806-4e52-b214-b955f88ddd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1bae2f-a218-4764-91a8-aa6b4a57ba05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4174e0-b325-490b-8b70-0963ab8e448f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b358f3a4-0a8a-4db4-8c1d-efeac682a945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581feffb-6f1d-4a5f-b789-356eda2432e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20020493-3330-4bd3-9513-7fb2791b8f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b1b676-fc0a-4292-a8d8-42ecafb772e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad93b529-014e-4e04-bf23-c3f891ed9ac8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b31eb1-21e5-4f92-9948-dd0ab2d633d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021e78a5-e028-4148-aece-96263e488787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a34f308-c18a-4276-8b77-cda5ab646567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea32ddc8-d9f8-4ab5-abe9-8664300cd372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41aa2162-8b43-4389-9082-7a857378c0c4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539d3607-a8a2-4897-a4cd-9e821a11a180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670e07dd-e093-4c98-ac14-da30b8789e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b63ddb-6174-4f0c-b9b9-58b802717576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fa8a37-600c-4163-91cf-0ed7b750209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfefc2ed-75f5-40ca-8ce2-67175fc93662",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82be1039-fc0c-4211-8750-3248d7fe7866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a27d35-ae05-4e22-8b04-6cb46d850d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3f2670-c1c0-4b43-a306-d86d2ffbf81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8929d4c-1beb-4b65-9643-9bc716414b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d999d59c-e4c4-4e16-91a2-e8a27ad78c6a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca18e52-2ed9-44b3-851b-7bd34fcaef0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0cc235-09b0-4434-b9a4-4de278ce0deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f620cb-a885-4753-aadd-417313cdc462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe83bf70-1857-418d-a33a-fddbe0466c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1937d97-adfe-49bb-9d50-66371e9e1f0c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7bc872-e63c-47d5-b666-133a1b7f4a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f87f2e9-97fd-4339-b485-879d6eb34e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f023189-494b-4f29-a295-4eaf583ae385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "31902219-7f76-4cd4-8dfe-65b7fdf093bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70e4bec-3fdb-437b-980a-3857d9ed7cd7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0c6bff-8e3e-42e9-9e54-b7b2625cfa19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d421d6-557a-4202-b5f0-9f4e9bdfd34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b882afcf-3166-4dab-b299-22df74d09cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68a982c8-5cdd-45a9-8924-d0309058f89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321e3a42-4004-4e82-a843-c72a2795a165",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d666fcd-c8ee-4d61-9a5c-681329ee02b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6114476d-27b4-4c1d-8c41-f432f1f149d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdd9f77-4e15-4b24-94c3-3367c368eb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a31503-9a6f-4f5b-ae80-96dab4557a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabb779b-6659-461b-958a-d981be72432c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f74318-77dd-47ca-870d-040c13430455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5212c9f-cb03-41cc-afb7-72db7b03bb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d141d72d-c7e2-4bd6-9465-0257399b1170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "679c3cc9-0f83-42cb-b614-e8ae86eb0740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091485b7-04b1-4425-bfda-d89768635474",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec4520b-3073-4f47-a014-a54a3aefbda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aab8937-bc3c-48e9-82f6-268f6c0f94a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7286adc-eb33-4db0-92b8-081ad310baf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "92729ce7-2382-4055-b65e-f3f6b3504b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154c5de0-80ed-4040-82ce-454d6607109c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c5078d-99fc-483a-9437-dcd0cf7a8c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbef6a7-cc77-4770-a0c7-06175a150612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0e7c67-71d0-44c1-84b9-873491fce88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd8829b-2834-4bee-884b-64cdab8e3b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4d8b0e-c3a4-413e-9889-1e3ba677f3ee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9082dedf-63eb-4de6-9127-20ddc9b1bc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592b1f83-85d6-438c-bbb3-fdf447f399b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3f9dfc-eb44-4c5c-b9d1-dfec309e65df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67babd4-7f10-4ca5-ac0e-4c17a665a1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7951bc25-3cfa-463b-9349-6a4a9334a685",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7293ef7-2cd8-4bc6-8be1-219717b0d5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a472799-1aaa-4750-9c80-759ea68f831d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf99947-bd0a-4540-a3b5-4111719af8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ccc9df-f8b7-47bc-83ac-e8920c22ea9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0778b36a-41f7-4a80-b31c-d13f6ea20f8c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f4da25-8b9b-45be-9200-3e39e2cae71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa98c91-4dc2-4dc7-881b-03ba694ba1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2a553f-def5-40d9-9224-8b2556da9ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec69d09-474a-4f10-8970-a5a0ec8a9d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccfb090-55f8-4415-8158-73b37453b43a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e69ca61-94c6-4b8d-963a-756b503e8cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93a10fa-7c2c-425c-8172-b9951ee8a899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f03067-53a3-4403-b234-09b3d913da44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec34442-1dff-4833-9110-5d925025613b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651cbb9d-2ea1-4643-85ed-3f12a02283c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4e3ebe-95f6-4de0-8741-edb8b133ca9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1266b070-b38a-4683-a484-ed052f4d1013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7ea17e-8bfd-4d32-927c-a3f780cf9b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71aadfd2-7d68-4791-a2b8-542feb4361ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a241f97b-4b0e-4e68-a229-e1d201d9025c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d85ca5-ef9c-4e29-b7cf-6b80a028c498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4e9204-558d-4bec-b815-ab71784e0bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f559dba-d294-4bf1-a8a5-c57dff08715c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60cd9c1-39e7-4a2e-aed3-35da20574000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817e1fc1-9873-44f9-96ac-9c5c402e3776",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6670d3da-4d2d-4c98-aec0-abe3344b5c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816c561e-264f-4544-8193-aa1e2667ab7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffd17a5-e3f3-43c9-934f-8ef48510d746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ec1380-a7a2-4056-9ab8-b21857ce6145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839e570f-1cb7-489c-83f0-fed23e83f29b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1738bb5-47a4-4356-a232-111329a98f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426edefc-5107-4d9f-8b8b-bf024a20426a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d152d140-38a4-4540-be34-3d9ee43837c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adeca402-498c-4846-83a1-31ec297bd2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b185e2d1-283b-4453-a179-31971bf69da4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4a99e3-71f1-4ec5-895f-6bb70bb5562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a596ad-f71d-41a5-9b48-fae309cfc3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10509076-ac1f-4bf2-8851-31668db31067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f356aa5f-6ad3-4665-8e42-5d61bc5eb092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47173ff-025f-4f03-a76e-83943bf487eb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c21b9f-d556-4314-a6f7-b9ee96e64169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac329be-07d2-4968-80f3-f2fea98f2ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e0d9cb-62da-4597-9a0f-8993f51935cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b24a116-4f81-41a1-8280-de25a24e3ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b04f35-e372-4032-a7ef-0e6235c8e390",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa52cc6-95a4-4894-a15b-f2bebc4ec251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0ab904-e307-4825-9fba-2287a30dd3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1f1b9d-7185-446c-bf78-4763474471c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5572f187-2d5a-4bae-84c9-17220a8d24e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1744066-6962-4548-b6e6-299fba4f6d4f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ad4d08-0993-4fd0-a53d-984af9bd7606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c731cd5-6fc6-4cdd-934a-34964356f720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec89e79a-08d7-44a7-af17-d35a08b18bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e007846e-dbca-40f0-8492-d2b01923f3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff60a18-6538-456a-aee9-076f7115ce59",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8533cc49-2d60-44df-bd07-894219c555e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f53ac6-c56b-46f9-b4de-cc0b9d147782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b642332-6ffd-4765-ac4b-1cf2f714625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bbc2b3-2286-49be-8130-49840977d32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55d9544-445c-4994-b44b-ba091918514d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d39104-b673-4f10-b664-26928ec00c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3cb700-1caa-468a-b667-36c4f7324de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256ecb3d-34f5-417c-8135-c1a2d9f5e451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df864b41-44ac-4cc8-904d-daa5972ecea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ba2c98-0647-4a65-baae-a5e0ec82a595",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675ae144-add6-4c63-9dd5-62e95e87ea8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921dec0b-dc75-4aa1-88e0-7470949d308e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd6f1d-93a5-4cb3-9b85-3f346c788a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34770402-4c8a-4a6c-9133-91d058ccafb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57456396-4eec-402c-8194-b8865fadbba1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e45f5dc-b97d-4909-a048-549285542c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9237facb-432e-462e-b64b-670023e86c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d96e10-84b7-43d9-b903-136cae4173dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0822eeb-05d1-4604-b3b4-e30bbd23d102"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39a12810-8ec5-41eb-afe9-a8b27958aea2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d355f0f6-34eb-46e2-8f0f-5e09e351d82a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e9cb04-5156-41e1-a2ce-e851adc718a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b170d030-5232-41ac-b3a5-2af5361277d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af56d6a0-1c52-4057-822a-04e588086c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6bfe047-7d2f-4e4d-8612-42299f84a9be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2723bc0b-2cb0-4af8-9999-6eef885fdbd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7425a86b-6a5f-4e74-9586-6815915aacdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30a8c2e7-9f25-44f6-a047-b36cb8a90119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49919cb1-239c-4bfd-a7fb-2fd3bfe0153f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "378cd802-6504-4436-8ad8-6ba1a6d9909e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "192856ef-3e34-4ed2-b82f-f437bc1fde45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2efa19ef-4134-4631-b442-7c8183adcea3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5ccd04e-497c-4ee2-84ac-56d6235efedd"
            }
          }
        ]
      },
      {
        "id": "3379350a-d84d-4bc5-921d-afefcf11e275",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "06513d31-ff5d-4760-b8b0-7ff04d1f44dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c268698e-1077-4eee-93b1-2321c5ccf4e9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bd25a3a-e893-470e-8582-2835c0d31928",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c8e3a4-8f6d-4a21-937c-232d5f4ba764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3991a991-ff75-48a2-ab9c-a6123cf7360f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff73810-641b-4aab-82b7-bbd07cc96aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc45ad0-cd42-4005-bbcd-b35f44ec4ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902ef2cb-876a-4a09-a405-7410fa52abc7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facd39aa-3b99-492f-b681-9aea70fe7b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96549bb-e666-4335-81e0-b090719d9c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e475e774-f51c-4dca-a6f5-2691d8d7f039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9035abf-d5c5-4a09-b1e8-d0219e8f59d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f88253-daca-4b32-bb7b-a217d02b1107",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dcaabd-ae8e-4d91-9b9c-02e9bf2a6d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c41a4d9-9357-45a2-abed-6f230f041ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455b0bb8-6d08-4399-9240-1095a1191229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef41062-9503-47d1-aca5-29bdb9b1093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4b137d-f1a4-4f0b-b32d-29026e4f9b5c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1dee4b-2a3f-4c85-b431-fa8ac59940fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117f0cad-4d13-4cf8-a2ad-822b864a5d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b21bbcf-4fd6-41a6-8ec7-5ab5ae74660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2233e082-c27e-4716-bf64-7aed6109343c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95769a78-fb27-4a47-80ea-7fb1b833a25c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8034c45f-25c3-43c3-9530-7e446cefb945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dddd5b7-093a-4e8f-8a2f-417a5ad36571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85722f9b-19d1-40d5-8f3a-dd357a92b008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a37fdcbe-ecb5-408e-8856-8baa26c21b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cf8390-7f93-4ae1-ba02-97624baad2a5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d464a07f-767a-4f9e-9fe1-7c12cf8dc011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb08487-f60b-446f-bd7e-9d81fac210e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b184d6-6755-478f-8ac2-f8da839d4315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04ca9b8-aaa0-4dcc-99b8-6501de0d737d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbc502e-ab20-4185-b45e-8fa3bca1c083",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57050cdf-49c3-43e1-9f08-e7f07037dfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ccc237-5154-499b-9cc9-2251884e345c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f504d357-9a81-4c78-b77d-94f86ff0d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a154350-d3fd-4a28-bf8b-4babd4de3d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eca8ab9-fe6f-4bc5-88be-f45cfa6fe956",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2673cc14-fa38-4ab6-a596-84169449c772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3dc7686-84b3-4df6-9160-79c1952c2b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40f1b25-913a-4054-987b-81a04f343688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baf12928-c3bf-4b87-8c1e-b38e83517a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cc305e-6ea8-4100-be85-b8b4d9ac425a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8853d401-6fd6-4ec2-be97-ede054e9fe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f09bcb3-e837-4848-aa9b-0e91412bdb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e7de5e-a507-42ba-9315-b79068aca80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d41740a-8cd8-4d0e-b230-97d9b1776079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7245ab-4017-4b8b-99de-4af8ac51a07e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be3c93-4137-4c67-ab39-14aa6901a2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e030fc-6a0a-4355-b1e5-0492e1c77fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a583348-0f8b-4182-be3f-a0b7cd82eab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac98568a-c92a-41ba-9e10-d933151fb45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb2742e-b42f-42e4-b017-c4694e04c585",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a24a17-b3cc-4403-a2d5-778c6f24862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077d0d7c-3b61-446c-bce4-f1549caa34d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a4377e-fe80-41a2-b5b1-d106e585e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eac0e9ae-9132-47b1-a3f4-f2629870afda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d35771c-1eb0-4f2c-b5b6-592d943e36a8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aed1231-f59d-4092-9999-c61ef83a1559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9156b1c-8a5a-4304-8380-aefe6301fffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb9bce8-2b3c-4696-9aec-069202da72d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "792af975-78bd-4b38-ada8-0d2bbf716ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c4c67-8f86-4e9c-a4a8-10d88464a902",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27cc93e-eebf-48d7-b1b1-c6623bc16a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612a2d9b-e481-493e-b313-718968b4cf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5925f735-3325-4336-bc81-9aa7875e90ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05853efa-fba3-4d7f-8f92-54b344662284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d738a2-0190-468f-8f69-c231cc44ae6c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cea406e-c241-483b-9b2f-8597fa6ac66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74be0240-2031-48b2-b18e-49f6e367c63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf518481-1d16-41b9-9d90-a54fd9587254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99f3edb-dbda-4b1e-8f96-e95e44bd0eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dd57dc-eeaf-4c08-9c89-4aac4b5476a1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa18793f-adfc-40bd-80ec-77a6f8fe1de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06d592e-fce9-4a3d-98e1-4202b3e33a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b5e193-f13b-4c4a-ae41-69bb4f08b375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f419347e-f287-4d28-9108-31d924d84576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47136f19-233b-4272-9255-af55914900db",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580e35df-37dd-43af-b0e7-b7f33794da60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41453f4f-56a6-44bf-84ed-d3a08a2a5059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cc3595-76f3-4cfb-b8af-d2ff6c29f04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f8fe59-bf13-43f8-8d2e-60206c0bfcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13d889a-4a7e-4f9f-b827-9b28b65a0c7e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb9dd3a-51db-470a-a502-671150a4ec30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b76fd8-0a41-43af-ac98-7ffd2493cfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8c477e-953e-431c-ab95-acf976fa9b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d626bb-02cc-4dbe-85e4-4d69ecef0b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314a15c7-1b41-40e9-af67-dee5d85e543c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77221ed-723d-4d53-bb7b-462a0385af98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e51806-001e-474e-b436-8f81aa514a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcee2d7-6687-4d54-aef8-64d7b9c8181b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95177345-919e-47da-8f4c-7ebf19e660ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690e23fd-194f-4f27-8425-1553e4c29a61",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ed3899-35c4-424c-a1ec-f404c9b22438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b956e2-9337-428c-9213-49a36751f2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0e3391-bf49-462e-93ae-8fb153239f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8e1b58-c70a-446e-9572-5e21c933fa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff8bbfb-792b-4495-a73c-133e0e81d286",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ad4fa1-79a2-43d6-91af-57406b80fb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cee2cc0-fbab-454a-be4c-372713180df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3dc8eb-679b-452a-9d1c-c539d486b905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4754c6a5-7269-4e82-990e-e267249e68f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ab3484-427e-435b-afe0-4ba7e7b10451",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0825a3-7c38-4476-858e-f93240892931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2240f9d3-02b4-4890-88d6-94979beb96d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b859dbcc-c649-4b2c-aa3c-40b54c03283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b74ff643-3de2-4571-9de6-94b84a7ba978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547fa94d-d288-48b8-880e-1b694bf43160",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0945679f-fb9c-49be-8343-d1bd3275ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc33baba-8854-490f-a02e-24b32cdb46f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956c58c1-8168-44d1-bf43-feb2835adcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40650b14-2294-4613-b3d3-297c070820cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f93a05-75fd-4b6f-9715-81d627254245",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eb6743-1f7b-4474-96b9-268af5c68a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e4345e-5737-42d0-845f-52d8f25836cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1fd580-e57e-4c99-91a6-f914f8a15bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4326969e-60b2-410c-b5f9-1dcd45c1d130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e63923e-bb43-4844-8e8f-c1c6f3525213",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea85fbd-4274-4aba-9673-07979278f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d9341f-f873-4bde-ba6d-3ffb840d967b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539daf69-7d57-4d57-af5f-480a06f04973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db5801c6-2676-4935-b370-dcb8da935353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90945ce-c6ea-4277-a89c-0fbc1a3c6a58",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4576e3-584e-48fa-aedf-f8f7c4ed469d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb36b996-ed14-4d39-a3cc-ec656dd4600b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f204e2d1-a8a0-41ca-a456-7925d7e2c272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c37de99-e3b0-47fa-962a-1062f37497b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1f612e-496f-4957-a644-94f08ee3dab4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58813d54-7c62-4d44-86cc-6cdc6a290efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08c9e93-e397-45c1-8ac2-d88d94749c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3219a4e6-4754-4ed6-88a1-d6a9f1882aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9baadb-7ca5-4e7a-8498-b141c344f55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9e279c-c480-4528-a19d-67066911c5c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6849e1cd-2a4b-4ae2-949a-d0ec5a70a561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d74272-b663-45a3-863a-e6b48d535343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121b0ad4-23c7-4486-ab55-b33f704b666c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "880aaafe-d174-4b3b-977b-44305576676a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349a98de-8bb0-4b53-bca1-d65fb0e53f86",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2561341-913b-4961-aea2-5a7d07b078a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098f896b-0aec-4906-96bb-af6879444383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6ce4e4-6778-4158-84c5-0d4897d4ff86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f37f04-7478-4d05-92d8-68a4253d5a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058db3a8-8bff-41aa-895f-cad5c9c69176",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819d1c38-a285-42f8-a347-11df01aa484a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62273714-02b9-4495-892e-6ab680d64efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a61582-74f8-4fb9-aa99-4f655fab852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122e0c99-1d42-4e10-90d1-d06c94e45b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b92d8c6-ee01-4429-9292-2596336ed9e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4719e0-6f0b-41b9-b0c4-11568969e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bbb9cd-3f70-4727-9727-08ae3e72a62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6f8664-2ab7-4835-a9fa-23a85ea61ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d81566-d18f-48d6-9729-39a42631c901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ef5a97-e787-40bc-a6af-3b7125cf07fc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5331223-0e8f-4d38-8167-cebc78a170b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ac36a3-651a-47e7-863a-53bc81082684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3491c9c8-663c-4483-94b4-3122d71b7574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "638505fe-a50c-4a81-974f-cdc89b1dc7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe88e64-b294-4514-bf4e-9881634c06d5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b1ce01-be59-4b49-9121-81f5602ff1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02ad7db-16cc-4202-b759-93e25444228d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f137eca1-5f0b-44d2-a389-50dda16b9862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3b61e4-ef00-47c0-8115-f2716ca8649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178c5e06-ea34-423f-9214-ab5ceff602ae",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117132fc-1b13-484c-a681-60dd27252bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330da3fb-9337-44b0-b904-3b4f5f9b5460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e65d53-2fcb-4116-a25e-4dc77dd94bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75781a32-4d09-44d8-b277-815baec48dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cb2fb1-e8c3-446f-b47e-f9717b1417dd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee48f43-4e82-461e-9a47-9bfe3f28bf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b80740-72e5-4ca8-8387-03065d44fccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f7e080-b300-46c5-80d9-12fb12ded566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62abafd2-17da-49fa-b32c-24baf163bcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea6c003-d974-4d21-82d8-f8dac70367e2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b437c4-425b-4071-8fcd-0096e8266287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d909aebc-8798-4379-b6ed-7d329d2df3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742b3585-c790-474d-97c7-0c92ac11cee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b882cbd-c4a1-45d5-aec2-f7292ac5da30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3874314-cf2b-4927-a81f-c241f28eb2ac",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc71e22-5731-4b49-a10a-a3896e877047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f028a8a-fe3e-41cd-8e76-c7051c2ebb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477bb9cc-92d6-4806-8215-29ed36692ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9d5c4c-11e5-4910-ab3a-21aa1f7055e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9f0a45-18ba-4912-9153-457f5cae902c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7fb0f2-3e4c-4e1f-ba2c-574e2e25ffca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbae120-54ad-4a38-bdab-dcd73333d4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ff73ff-7337-4f1a-9b03-89770f8a0ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f701df5-a6d9-4129-853b-868a7adf50a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "927e0ff6-8ff9-48cb-b71b-062613b94076",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c82dcf2-4bf0-4a56-a528-6186514f8651",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2f54d7-543f-4adc-a5a6-1d4f6ea0e463",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0a9d2b-c54d-4b51-beaf-f709ae3787cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886a655d-0ce7-472f-b26b-73918a4d114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28227da6-8a00-454f-871c-97fdb0448391"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e13f96a-dcde-4d83-93e5-2b77c060b633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cca1db5-306d-443d-958c-0558d7743f7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f39d94d2-6212-4642-ac03-ea0502f6cbd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe30ffe9-27aa-4595-a26e-8946237c4a38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eabdbee8-c22f-409b-a4a6-494f3668ecfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05808539-6b68-4919-8acc-45daf3bf9068"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef9256b9-d24c-4ba7-a9b5-83f1d44ea25b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24cacf26-c995-4a5d-85bd-42348c39a4a4"
            }
          }
        ]
      },
      {
        "id": "e1dfb8a1-53b3-4588-b630-e5fcf154d5aa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "14a41ee5-04ec-4270-9ba6-aab0a1c47c2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "510f2707-9f5c-4912-b4a9-aa9fe447fdab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6bf954e6-fe03-4412-8cf6-40b740f4839c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688f0a65-ab6a-481d-a9c2-66cd6d272d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d17e69-f223-4c17-812f-d233ed7137f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b968fb7-17ef-439d-b596-1ab1f6111b18",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69828963-f8ec-4da1-92cd-e8e7524c8780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05facf5-d8d0-44f7-9a9a-eb87f444c8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8f82f2-c99f-4de8-96b8-fe5b29fbc6ea",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d698f1-0202-4924-8a82-a0afc4a94211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d97874b-6ab3-4b1b-a5bf-30ddfe1f2d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d772e7d-5bce-4847-b94b-502e59a0248f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1f39a0-83bd-4507-afd8-19fe9a4f6969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e87cee-104b-4edf-b5b9-310fa05aaa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25468ce4-d97a-4912-b4d0-0b71519c9d85",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c968c247-fe0b-4ced-aac9-bca89cc1bc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54e8538-6165-477d-9124-e1ed58434d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ffc30a-c7ac-43f6-b089-4fdf07ff48a7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42576bf-a8f5-4b1e-9a3b-e9b4a7388f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15032d1f-9a88-450c-af99-359169680c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49360289-1672-4beb-930e-663384ad33c2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003b8356-71ef-4884-b0cf-51e4c15ef9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dc023f-0b49-4abe-a847-6618ca362c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf218772-83e2-47b7-b095-f765dbd0e904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722537af-5a3d-4b6b-881a-bd5299fa1e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e51858-4d75-4f21-aeaa-e6d65b75a946",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7955313-35c3-4893-b936-21a8ea4993b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41da869e-d447-4cbf-9335-060c60b7b379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0049b66-08fc-420d-948a-dd4c323314d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654b8bbb-6c90-4e49-81de-85225e2ddd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b853e4d7-28df-4215-b2b7-f477e36306dc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d16fe4-761a-4b8b-be4f-4b0a068566f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03bb51d8-b5ed-48fc-ba50-684083f2e82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e0e22e-cfbe-4531-8307-9b62f94c27d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5eb3980-229d-41fb-88a7-76513c3f5909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130a86b0-1599-4b8b-abfb-76aebcb6b450",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c191979-6f39-4dda-be3b-65c0fd373abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf96eef0-528d-4cf9-bf4b-691cf05b5e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e05cd7-cab6-43d7-b4f4-b047b428153d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351644fc-13b5-4d89-8ef0-fea2f18f5617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f11eff7-0e3e-4824-b4f1-3eb431fd8b84",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c9a0d-f1a6-45c9-af9a-0dcfc6f4be05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fb1475-296d-4d6d-ac5f-637df8b49737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fc994c-bc65-4415-ab09-722bf19bc662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c593fd6-6cd1-4e67-8e82-70708335c04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3391869a-dad8-44a8-b658-3c82adcd34ce",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11089d9-8e9e-4acd-8f92-3b87dbd394a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02843741-a2fd-47e1-96fa-5ee3559b8f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a39b5-3d3d-4c8f-8132-85bbca29a139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0db10c6-4da2-4560-929c-74f2a399dc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696b7fa7-0874-4925-a57a-b180fd9c1e95",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0274e167-3de2-4ba6-956e-ef3fb651cc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b86107-3ae2-4410-a550-77d1539a2760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71c2a00-4e51-47d8-a8ab-c0a2ebd8fc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fe7999-365b-4ad3-8777-91ef15307f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78bbfb7-566c-45e3-b60b-7f68cacdd92a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f0e293-dc00-4eb5-a62c-670b4fcddcba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed90d2d-de69-45e9-9c20-5a387b4eb9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ab0b80-e485-46e3-aa89-4f304063d0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11349419-ff2c-440e-9b95-3eed9cae8bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5710334-25fc-430c-b6d7-147083300761",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cceaaeb-64d8-4e41-8f90-493676619148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d3fddd-b759-4c20-b550-9f7b3fb59a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a044d78-ed0e-4177-bd2a-ba11bbe4776d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaab2690-1f83-4c01-82ca-6b82490c0768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f20830-5d21-4ec2-b153-75fc664cec72",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b09b51-625d-4122-9f04-f364d3a7771c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a3c4ba-d32c-49a3-8d84-812bb782be51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5654a8-6e95-435f-86eb-64d2047cb5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3057b09-cfc6-4b9c-8bf3-5c935b36f865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4180b3a0-8247-4fcd-9eea-908ac0514387",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab88b8f1-cb55-44e9-9555-c5a7b8ce7680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f98133-e9d1-4d8a-8177-5ce38570fca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c57790f-c5e7-4847-b3ab-8267bfa4a4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2047232-d3ce-4ef9-af3d-707e7793207c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b94a77-217c-4d7d-b4af-12be11a17ce2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfec7c67-5b5d-4348-a7fc-f58babace9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ca8de5-d505-47dd-857c-a6deb664bba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d60ca8a-f1ae-4de9-bd87-12546ec959da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0018b2d1-e1a3-435f-a076-1a385cfa6864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0507dcf3-14dd-4c58-9cd0-704375786da3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e747984-5491-4351-bb3b-594b78a9138f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad135f1c-ce60-469e-a8df-324dae43cbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "badb1608-ed1b-4e94-9b89-9afdb1f0d5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37c7ae0-f3ad-43b1-b940-eed11f61247b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbedabd9-af09-4e49-8ae3-b3b6d2f1450f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f32b60-6805-43a3-92dd-bb0b4f914ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b332777e-025c-4916-af5b-d458c3ce84d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79657990-3c6f-484c-b3bd-d1e303dc5fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26415366-5cb2-4961-a530-262865765316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e224e49f-fc27-41b6-a017-3765ffb6572a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1125360-d8b1-4c14-b364-06c5e4704863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ce91dd-7b03-42a0-a4eb-53560321bee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf30ab7-8fed-446f-9137-f3667c030c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a52407-9990-47a2-85d7-31c609696fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7875ada-0ed2-42ee-bdb2-e1c8e2c57684",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887353eb-82f6-4343-bac4-728fbc0eca01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adce3f17-099c-4bd1-a55e-3ef485fbe174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc1cb0d-14b6-4a21-af81-8fc341ade82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ded627-6988-440b-8ae7-cab0e765825e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5003bf6b-a783-4c32-bc04-b963591be809",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f69eb27-a1a4-47e3-bce5-977db30484c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850cf579-a53a-47d7-8a4a-bf3d21bebd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4352f65a-c4ca-4b69-89a6-68911dec282e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef35f37-067b-47f5-8015-6ef6d6591ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8495b725-6fa4-4488-8db6-36835d36ad07",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249bf535-4b76-4465-8c0d-f189a2aa6d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4413e90a-2aa1-4d91-a0f4-4af1c9a7e2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c044f9-fac1-4211-a9de-810e73a8ab0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622982ef-3661-4466-a080-487a6b09c131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e265b2e-b595-4f02-a0b3-b4bb8de00a74",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f5a1a0-9ea5-400d-86d7-6b25d5b938e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a61e0b-92bf-4f82-a9a7-f76e3e9192cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e310b291-6639-4abb-b9cd-898821d2a7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acef8678-e227-4229-a97c-ea5fa389190d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe33a04-bb2c-4b79-a699-16558e7c8928",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62fe6e8-1ccb-4861-a825-67e00df8ec58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b800aee-621c-41f8-ba31-fffcdc3fd0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446cc559-f893-42c0-ad6f-5f201fbc7cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bb6c7d-75c2-4e08-bdd9-34b0063df33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62021938-7639-4773-9446-8f1cfd7a0f09",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc764f1-876b-44e8-a7e9-1791f5e47949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e03f113-866e-4a31-a40f-daa385a915fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada22814-0126-44b5-be5d-85cb3dc5bf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9beb57d3-056a-4dc9-9c93-6bc98998290c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d806a422-1310-459c-8c50-5dedb0b620fb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceec6ddc-8f97-4822-b9c4-d4d0e7f51a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42720d0b-2e1d-4f83-9e61-cf23463fef26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33ba62d-15c6-4bc6-8737-703507f28550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f73392d-33b4-4226-92b6-60fe161c5e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31c09e7-d2ee-423c-a891-15d8229540a4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fa610d-9181-468d-bb59-a37921f9e262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e041c516-9be3-4264-a50a-942895c276a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260c50d1-a517-461d-9e6e-5ba982d96dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802b1308-7e68-46ec-a687-5f0d1546cbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af86bfe7-877f-4ee3-80ee-6cbfa03381a6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb9d84e-eafd-4085-9fe3-b74daf41217c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f0cf58-54fe-41f7-bcfa-eb36620aa98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e780d68-fa07-42c2-bae4-f850bebd44e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6dc17e-473b-466b-914a-30251fd68977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874786a4-e911-4ad3-92dc-4598e80a2d28",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06de1ea3-c8d1-4816-ae6f-fa4b22eb8663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ed58abf-b113-4896-9e18-f2f0a0659fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ac73b4-fe71-42f5-b3d2-1a7d3a6cde98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74255b9e-6269-403a-acf1-b4df130cbedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993aeb30-776b-4c5e-8ea1-0f6212a6b60d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44759d22-fbe6-455a-9815-ab4f5484c899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "938b1527-a1d8-46b2-90a1-27a9919cfe48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae242d10-e651-4107-aa60-a4b5aa5ce3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df619a5-2113-450b-9a01-5f642cefc1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e858b72f-0b4e-4ba8-a082-d198652a7e91",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3046274d-32e7-4463-ac87-91e11f35d552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f9aabc-0220-4aee-ae22-844f060ea4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1292f260-230e-469a-851f-194a6e43628d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1220134e-e864-4d44-ad5d-94333120f53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f529c90-cf8e-47f0-bd80-285a6eb4804f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237fecbd-52bb-4213-b3d2-00fda9118a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf17fc0b-3197-4875-b027-22fa282a6839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c704a6-8b9f-4fbe-8078-cb80f00c7531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc82bcb0-62b7-4c8a-ab35-610f2da55e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d3cea9-6b33-44d2-84a7-da307005784e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eff21eb-65cd-4b13-b9a9-a1a6a075441d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c009c82b-2699-477a-9a7e-07c269c48027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c893c-4485-4d12-b29a-08b39e9f6076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02efad93-ac68-4466-85a9-49043a299d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769a5945-5699-4a52-81e2-9b54e63939a2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a4001c-adb3-4bae-9214-af767f4b5de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71503273-3124-4b82-8da9-1b4e06f8b313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d97890-4895-4e33-9567-8111a4040bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564417ee-4297-47bc-8f15-973502124848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85da61c-034c-4d61-acd3-10b0e89bf995",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8a10a6-fbdc-4dbe-9145-f808b9a98c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10eb0787-d218-4323-88a9-709d110a1f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37521801-4a08-43d4-9a7a-20ba683f8322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd43f660-78e7-4723-b049-924da0d4c547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886dca7c-75eb-4cf6-9bb0-eb70f0aeafdc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cba879-ee41-4077-a5d2-df5e53e3b6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d938737-269e-44df-a451-5eeff3785fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec728b1e-89fb-40ac-85f5-e5a44b833571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b486f1-a5e3-482c-b4d5-42082ff7b818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e985047e-fb6a-463c-a361-23c5d04a4330",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b5e3e9-f91b-4acd-998b-551195d3f7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcda61e1-9614-4f6d-ac74-9ddccc5b8c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a05aaa-e0f9-4812-9d5e-465862b5fe06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50102376-5520-4bfd-954b-383fd42c680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1a2f71-99f3-4fe6-a5ae-c4f5e9322f9f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6a40f6-8d70-41fa-b9d8-7fe7f13bd8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432533dd-994b-4785-87c8-45d3de639e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805d33b0-eedb-4019-b9f4-55e97a8b1a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e4517a-4477-491b-a269-87b97d5ff317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc60766-0b64-4f26-9f9e-57182c21fd24",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef286c9-ff7b-4407-9c57-27f967b02c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edc194c-d790-45aa-85f0-07d6a4a6c65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1079858-f6f1-4acc-9c42-1b12ed781ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a7fc15-43a0-41e2-bab4-520f5097f50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d34f23-8b1e-4fc0-965b-5feee39f3998",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1928122b-035d-42ce-9126-4ca6afc0628a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a526d11a-fc26-4af0-a344-3291be5dd399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69de16f8-15c4-4717-b666-aae720ace9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3a5e70-115c-47f1-ae59-edfeae504316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe3e9be-7618-475a-94aa-88926e4cfe57",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986d9925-7643-4176-af6a-5bd207f6f39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4369409-7830-4bd0-a592-ec326e013030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea19d4e1-16ad-45d6-806c-f58fca6eb857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1686ef42-7e4b-4280-9e62-05f0a4b00970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f931ec-c248-44f9-985b-e945ab1bff1e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce08c45-5f5a-41cd-b8f2-7d372fcdc36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725ceeca-ad7d-4ca1-92b2-042fffd9e3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ac9f3a-2252-4e04-992d-ce88e4049609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a3f83c-75b3-44d5-8a50-e671c36f375f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840b1fd6-c89b-408f-965a-e80cd8634887",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c6e9e4-4dce-4d09-8e9d-d4787195189d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73d0473-ca53-49fe-8a9d-61a588f10a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b78b1c0-7305-4374-8d76-29a4f94af124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134a8ba0-b207-4e88-9192-5fbe8f2df031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15e78ec-cea2-4ecc-b0e3-5285d6eaba51",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1285d0b0-d322-4048-aa7c-cc6841d65471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d848a5c4-8763-443e-a97b-8b5184c7a3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3ee55b-3708-48ee-9e77-efe8bdb35d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61cdeb3-b23c-414a-8fe9-bcd7edbd9316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c100a2-fe10-44a7-8767-e5006f5f990d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7765f9f0-7b31-4032-b15b-909581266fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d608e123-d42b-4539-9923-0898aefb6636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d43ad59-7688-4dee-bcd5-a5f531c99363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a8ee31-4f16-4a22-9c05-44897aa14fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9178bf5-bf4c-4480-bd86-06980010592c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa692a5-b95f-42f3-b8ec-07dc688c7ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a36155-cdf5-4298-ad87-9ff2466503e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb75dfb-1c8c-4b99-abf1-d7d752c52698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c81586-d71d-4bd4-ae0c-a55b3c4fa2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d392f184-7881-4584-a91b-2dea2f287f26",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1b04fe-c82d-4641-95f5-a95c27d5ad13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637d9808-c6f0-4e1c-9281-5c2a26288014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e7701f-a84f-4dae-801b-afbe27cc7319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c91efef-c7ff-45b1-a1e2-6361360827b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367718c-d8b0-43de-a2d8-f7d98672bd72",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b57e27-845e-43ba-bd2f-3fe0a696dc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1f97c6-b2a4-49b2-b08c-d7a1411777d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975101b9-ae96-4081-8b01-dfec7aa129ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f133940-17fe-4b4e-90ac-22ffc9a39773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb25cb3e-0d93-493e-a7de-6ad437c1d4e3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0397c4e6-a92f-4a1c-a4fa-3f591d8d25b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb8b38a-becc-4054-8078-dc6dd0b5a6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0e77c1-2b9f-494a-99d2-d8d936502272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2a217d-5614-45e5-b747-967a3ece8a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e5dc8e-044e-45de-9caf-dc96365c3c65",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971e3ca1-2a1a-4d96-a0df-b8d4fedb97d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62340c59-9b5c-481b-a171-9384f9e5d26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c988f9-6e11-4ea1-bc02-e0a9610d58a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f6badd-899f-4544-a073-e44d428a67a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472a0ff7-5d3f-4a11-8af6-b2ecf1ce47eb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33562860-f0af-4685-b527-b85494b07b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c661442-204e-4688-84b3-f017a409a1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddec352-0ee0-40a7-afab-bead42e79e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadac13d-9452-44df-8b73-5fd0f97277ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd72442-4100-4bf8-b98f-72cdf9e2bb57",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6871dc2e-4412-4b3b-b516-41462df40e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24239772-6e17-46ce-806a-86dec86b8df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c774492-d080-44eb-9c2c-a2ae77c58644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61bc804-0734-4546-979f-ca949cead657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8f347b-1a83-4e8e-a3b0-b711f1f19b1a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3628c0-06e4-466b-9454-33c90d6ec23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35798c21-7c46-4b98-b351-657cbffae99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369fb789-aa1b-4347-9fe2-c47e3e442c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4325599-bbfc-471a-abfe-3c28fb995c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1dcefe-40b9-4f91-bf76-638e4c94ddf3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfacf1c-093c-4054-b655-be142cbea615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf72f0d-a5d4-47b1-a2bd-f09e796ffc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885db0e1-1daf-4a04-a7e8-bd4db0de1644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb280cb2-42f4-45d2-8d62-d9de62c15f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72180922-a3d9-4138-a643-ef46da9c7291",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d46cfa-26ce-4db4-bc61-f6fbacb33ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4323aa26-07c9-4ded-8236-36ce9f291539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379a02ad-45be-44ae-b2fc-36d5591e43ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d2dec3-e8d8-4181-9987-abe60733782f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dc5d58-d603-4cc6-8ab9-ec17eab34e7d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02405d65-99ff-4746-bd3d-c10412891adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b491a88-c8ae-4042-a46a-cdeb268b7ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae8e690-5a7b-4caa-b3ee-303084f4a69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378c53da-f7c8-4637-8dd8-f5b8e339fec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de385cb2-183b-4f8e-af23-5500e4db2c59",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2407d00b-71ce-4fd0-8a09-93c5123c9853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5b3af5-9e06-4864-a956-7b4ad740861f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7477c263-e6a0-4341-9576-f02836bd1ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5c6dd1-08be-479b-a498-ff1cae749761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a3d50a-6a72-4903-b902-85773cb31130",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f913524-de53-4c37-ab38-81634faccace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735d30b3-a43b-45a3-ba58-2d8c3bf78d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d227ee-7bdc-4767-9a45-44349b171b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9224d3-5080-4713-a5d1-e47dde974bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d39beaa-8e1e-4642-8057-e1dfc70d9f37",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833225fe-b954-4b13-9dc9-9e2fa94a2a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3325a77d-b4aa-45d4-8c7e-66c2039b9362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bef69bf-7ff6-42fa-a641-eb16c74d1fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb856a91-902e-450f-aede-ae7755a21398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e1cedd-11e4-4f39-ae07-687a75b47776",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa47aefe-cf5b-45a6-9eb5-45b73dd22b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47b870e-4d71-4ae5-a95e-87d4c68adef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5302ad3-ea62-479f-a1b8-54b1cf74b402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd3dfe0-abd7-4f4e-9faa-77024f4e9681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870c3c1f-baf0-486b-8edd-53bccbb687fa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6637fcb9-8895-45d8-b5d3-f9cd4b3c1ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2e002a-116e-4791-a068-740d72f41755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818b1243-b9f0-4288-87d5-159d57c3db94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5971ac4-e9b5-4f11-ac04-18601cf06763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a43350-6284-4f13-8ad9-c1bd17d3dd55",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c9c000-0391-42fe-8f37-980c2c5fe1fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb2ed71-2e4a-4d89-b3c7-379ff5b79d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec7fd9d-08d6-4fee-94ac-db268e4ce88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc87ca73-4171-4e3a-8785-96a85d114b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed726d3-3825-4c8a-91bb-5eb8e6b875bf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103612ac-f752-4dc6-b399-7c580f17d118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7183062e-9978-4a20-86bb-893d2e1299b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e03213e-f968-48ec-84e6-dfee150205c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d92a7c2-f4a6-4af7-885e-82fd7371944d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b26b71-0a5f-446b-9fda-e39dc3e36c46",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d76d17-9abd-4fb9-87bd-30fd1b963e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9894ff9d-5750-4b46-b0aa-ac676145c5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ebe8c4-dd31-494e-b367-2be6ebfb9581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91750bc-648e-4edf-a58d-3c1cf109115b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3c6368-6c22-4452-beca-9cb0b3e7c3aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a861cd-1ade-4df5-81a8-b8bd17b455d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9495c2c1-8db4-4dfa-9d1f-2d2b7840491b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aa770f-7ca3-4ee0-b879-845050f68f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23255f68-7d13-43d7-984e-a34e1221cd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe3336f-ceed-496b-98e4-702e8f95c032",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd3a9f1-ada2-4d14-8e42-84125bcc5052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b553fd-c57e-4f9e-9824-d8ae40335a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b258fcb5-87c7-40d3-8813-796be6a3ad9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a764de-31fd-4da3-a660-1a1e497f588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8c3b1c-e397-49e2-aa83-6dd8c5ec0a2e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dabdfb-e79f-45e1-9583-3014ad7c8bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91119182-2b48-4e8d-9386-512862ae8d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20dcd08-b7c3-4e73-b0c4-5993fab2780e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56585d26-cc89-46ad-9110-3eb84a2c75f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974ca8e7-63d5-4efe-83b3-37a31d2124cb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68afd40d-1716-4dff-b991-2f7195796e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "465ad961-3849-44aa-b633-b4e16a8043d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a5e9d9-574b-444d-b05a-b894c9815dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba9cd0d-dc37-4d50-9489-81b47891af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b89e07-3984-4ee8-91e1-7b88bee9fa5e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1c3cad-31bb-4a6e-9117-06a97e70a83d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cddbe6f4-b129-49b4-8c40-0b61852de139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805db034-acb2-4394-909e-7f4078c009fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1094e9-c13d-4a1f-ba73-7ee9b83e1475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6070f01b-88cd-4452-bc92-a92a8b6227c7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9c23ae-cd61-460c-85a9-2157355fd0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2af7d38-2fa0-41f2-817b-3541e61a1587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598a4e26-196e-4e85-9085-8038b98556ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef933ec-c3ad-4af6-9169-5a7b647b2046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f46b4fb-8ccf-4b68-a560-5a871aa2a120",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82773445-f535-447c-86e3-9cfa64e89dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24f679f-e062-458b-be57-b836be69d981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ade38c3-d0e1-478f-91bd-56ea6f6e62bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fa9570-8bb9-4461-bc22-a9a8b045c382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a202d879-69de-4726-9a1c-fc11c54d5c35",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2faaa61-b3f5-479e-9527-494f356153ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e96c0cc-98f8-46de-bcf4-95c9270c7cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376c1fb7-0547-42aa-a512-60ea306cc349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0409e8-fd55-47c2-bfbf-4e05ae4eaea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d244351c-3835-47e8-93fd-50a0a2dc0382",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6075a803-8dab-47ac-9f10-f7af90dcc53f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbea14dc-a63e-4483-bfad-6575d0c8d114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dd1217-3b14-4de6-b21d-10407f5435b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f35b4a4-06f4-4eb0-9105-74ce7205893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9d2eba-d454-46f7-b748-71c66a8c0157",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32622b96-cf10-4eb9-8c96-4cee665634b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f35c7220-0b66-4459-9cba-0b7a30473d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3519203-b266-4a6b-a1a8-c17247814f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eeacc8d-b8c5-498e-b7e6-fa88e9d7d426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43705f3-a349-4aee-80e1-08c08f88d695",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62656e6-f48e-4458-8f44-f1445475188d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c9a752-e897-4bc6-8b39-b9a69c6710e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d649765e-f249-416c-a786-82e66ab0e79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5655ac7e-8342-4cfc-8dc8-6bd0574d0625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedee13f-4724-4967-a81a-b7bec6028623",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b23d073-d625-4d0d-87c2-716950639908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c85673-1688-443e-a9ac-19d29eff5c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72b8704-1e9b-4c7a-abce-9bf79066bbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54286234-1dd0-4086-b661-bbb4bac2d2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d1c281-7709-4e0f-96fd-42913a74367f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219229bb-b13e-4bd7-84b4-df04bfcb1468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96beab9a-5b6c-44d0-ab9a-adc5f1837b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9099eb5-87b8-44ff-a455-e75cd6120087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b691ccd-27d2-4b3e-a1de-f848f975cb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb4a8ca-64cd-48fb-8b03-0fd39f2a4530",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fe3c37-dda3-457d-bf66-c2d833b3a762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bcbba3c-025c-4605-80cb-3a8fb5bd2030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754e8456-b744-4c2f-a98d-a3b0c06a3953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e535d28-58ea-414a-a53a-455aca9ba048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18934fc-f341-48b4-a85a-ebc844d1617d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29815f20-6ed6-4858-b168-5b3694bab533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "421412f0-28a4-4e76-8518-1e5296a91553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e7d2a6-06d4-41d4-850f-d436f84948a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6c3ca2-2081-477f-832f-5df8b78b993f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458aeae6-e72e-4b56-ab56-04069f5d38c9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599801f2-46e7-41d1-9dab-64c9c474d8e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21aac06-ff53-4a4a-86b1-c9eb17862ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1af12aa-1971-49d4-895d-7b2ef502744f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb51fe37-3ef2-4fe4-8618-b9eb85bdc470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5606bcd1-689d-4a94-8a63-c15f0c98bb07",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676486bb-f0f2-49df-b9e5-9c6cf83245ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d89c76c-9905-4206-b4cb-d5b036ec6de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8732f356-b321-4d32-8142-3c27fdf8667c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80664db-3234-49e5-9eeb-9b31bc29e766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d8c612-d2c0-4e30-90da-5bf1b15873ac",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beec4bce-a692-4e09-95df-efa53d75f503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ac72c2-bd22-499c-9d1e-3ea200a2aa66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e2cb1a-7a24-4bea-9ffc-c37a0380abbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee27bfb-827f-42d8-98c8-2df18c1087bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2698742-f269-4d42-9ce2-4b44ec238b61",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463fddf6-86e5-48e6-84f5-d405a752a297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3268ee64-149a-4eca-ac99-eb2775d38dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8991c22-8519-4d5c-a0f9-c40c54dbaee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4314ce85-5d54-4f1e-a429-5050c60fa1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23f2fc4-dc77-4c13-b0ba-a45de4d56835",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8d2821-35d6-48ac-a777-88036105ba7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e05351-158c-4d2c-a869-e21773e213d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2c5768-0f4a-42dc-866e-d5620ccae707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327af65b-8546-4424-9ef8-844ec1817fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c76df8-4aab-4eb3-854a-20fc395eed55",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3e0870-54df-4ab2-8425-b42ea413aa7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7c8b61-13b4-49cb-a301-6e121a2faa13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58020998-7e8b-42e4-b275-c2e0bf78ca61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f4ef61-91a9-4762-92f9-b7c07260d349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0bd986-79c5-4e94-a4a9-57e6b6034772",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a0a9ca-3bd0-4d3e-843e-92025dcbb328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1d0afe-ebc1-454a-8a72-3d933fcf4538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92b1e17-e1a8-4b7c-8fda-fb689f37bfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0314bf04-75a4-4ce2-930e-95270091b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e18bae8-2403-4eb5-bab4-59cd4f282fad",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0174fe62-7a4c-47ba-a1fa-de98518e76c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298957bc-933b-4c39-9990-75f3e1085d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329b9fab-aba6-4664-91e7-5ef47b7d1826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918f1864-2216-4663-8c44-c053a5b8cfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b88361c-04b5-4516-849d-930f72568c87",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7164aea3-484e-476f-8731-86dbd7c7a18c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca0c6a1-c690-4978-8c5b-a8adb31015e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706ddd79-07a1-493c-bc2e-43ef2e2ca43f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1042d6c-b1c3-4ffe-a3db-8e1009caf3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643ac70a-2877-4333-91a7-575fd824dbb4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf0df8f-1ee1-44e8-a692-95c1f2d56868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17eb7fa-b0b1-47b6-9329-f2ccd6976434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1b8703-fb07-46f7-ad20-fd524a154ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad1c958-7bd2-4ba7-942d-fb1b624c340f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f7f140-04a3-41e4-a30a-fcb7cd1cedd9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c2077a-113e-4bb3-8be2-4fe91b83c573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a688e1e-bd9f-4440-bf01-5ac942bc125e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209916e8-69ab-4338-a586-63bbd0dc6403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e5a7bb-2efc-4878-a3ae-c8b3151bd357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8778815f-8d4b-4842-9bd5-bc160e0d15ad",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a71426-9f22-4efc-906d-ff1abc3a84d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c568d6d-0119-46b3-95c7-5bf40c44537a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d13688-4bab-41d3-bf86-b4fc02d98a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02166c03-0438-41a4-b6b2-a1d50ebae367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1697d3af-4bdd-49ef-b1ac-3f7478ef363c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833918bb-0cf2-4905-bfd5-b4fb8fc569ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27aee16-e103-4b7c-8999-3bd52d1b7b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9781f9ca-75b5-4ee2-828f-fdc7e564c37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94c1dca-c391-4eee-bee0-418080664a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a2dfc4-2c26-493b-92ed-63c9c42834c0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2d083f-c9c9-4478-a027-b9772e0e4956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de2db5a-899b-4213-8031-b9fea219f146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae164fa1-7497-47a9-92fc-dcace2e7d796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ed42f8-e768-4d21-aede-ee90f3e37ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc5efad-9469-48c7-b5f0-ce9c84b53608",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b2e13c-b2f6-4e9f-a7f7-3aee2e0a42ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf979e6b-abdc-46b8-8d95-0b76de08e460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0e3356-c8cb-4971-a788-edcbd9fda23b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07461095-443a-4c08-a7d1-65faf50ee4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac75b31-8f48-4c50-99d8-73ad4f937e49",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9255871-c7bd-4cb8-8b9c-d24db44a6655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8227190-3157-422c-a93b-32131ed07b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33ad7d7-7f20-4d61-b7bd-0455e1121ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7540f904-d4bc-4b7a-a9c9-39fe08e07cbb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c62a275-8cb1-4556-b733-5c6765702581",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "572f199a-7695-4971-b4bb-97954fa4ac46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46a9283b-6613-4c7a-8054-0e2031beeecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4849f178-71c4-4b86-870c-5811737f9997"
                    }
                  }
                ]
              },
              {
                "id": "70fbcfd2-aa7e-46b8-8e69-23feaef98dee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a73c32b9-44a5-454a-ab85-73b3c8278e72",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ebd753-1306-40b1-a3dc-b7128906e321",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bcb570a1-7fa5-4f17-802b-e1f7ef3b3143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc46b2a8-23bd-4eb2-863d-4a913e7ff783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dc13e7d-ca05-432f-b80c-3f80cb86d83b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a5813be-df02-46cc-bdc8-d5598fb9bb8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b9d853-fa6e-4a65-8ed0-30bf59dfd1a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f4f9e06-f98f-4296-8a0f-11d0950db958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96bd7bd8-4942-4552-9dee-ea3c14208202"
                    }
                  }
                ]
              },
              {
                "id": "dd235e87-c551-487b-ab0b-c6ba204fd682",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f7f098ef-d51e-4045-b09f-a0cf7452274c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348344f1-537b-4e7b-8d8c-979e5510ae36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f70796c1-e378-4e2c-afb6-7eb0e104cdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86563a16-ebb9-4069-9c09-c8324be87077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b360db8-6cf8-40bf-8778-bb85053c2ae0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "59c0fed6-ab97-424e-bb19-f9e6bac3d16f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d7e8906-c0d2-4408-b137-a0d597e7f07b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e119501-a026-478b-8a5a-f48588e8e1cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "12d0b66e-1baf-4fd5-8c9e-01b5804eef0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75c7498b-9613-4ce8-9ff4-ea9747ea265d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "248b7bed-f7ce-4daa-9783-71114ef3f172"
                    }
                  }
                ]
              },
              {
                "id": "99664996-d3ce-4ce3-adeb-91bc0a947309",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e085537-d8e7-4799-beef-6b70a6572c24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e98221ff-12f3-454f-b6d4-fc1f72de0133"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fcf27a2-2e4b-46f3-85a2-a5baf8644ca3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfb85eec-dfd9-4c21-b3d6-2e9a147af3ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50e34939-8c87-4200-bf3b-c1f2e94fd2f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "726fa285-1d06-4d62-aa40-cc28e63521a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee9795ed-8831-42fd-aa26-08380f046406",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec727695-4942-4945-8bf2-27a290d18b66"
            }
          }
        ]
      },
      {
        "id": "c9546e83-f44c-4a66-8fda-9f6e62bb916c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d6919d93-88c6-4bcb-86fe-496bdef0ffb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e339c48-e143-47a2-8893-a6807a1b474c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b036c98-2795-46f1-a524-b05a613aca3b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ea2e87-99c9-49f5-bdd2-76cd4619f86c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3f5cdb6a-e665-4402-8b6d-485e853de24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6752dd9c-f14e-45ca-b04d-634c14ce6c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77bd105d-6cbd-4fc8-a4cd-4271f674c0df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15927054-67ac-4a9d-afd6-e1905c25588f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c122b1a1-202a-45c1-886b-c1d194f11a3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a925309-fe57-4180-a3c5-645316e25f21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33b25129-8dd3-4934-ae87-b0b6fe958d8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "887aea87-f592-4bec-96c1-49608adecf9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "29d56d7c-1506-4f1a-922d-c4290312c672"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23cf22a4-f1e3-4e47-844a-e5a2db0003ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edceeb89-a100-463b-ac1b-c75d83e2ae44"
            }
          }
        ]
      },
      {
        "id": "3ce5d811-63b2-4d6e-930b-31331b808dea",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "29cf4152-47d9-4732-a47a-9ea8b2d1d027",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bddca0ec-f262-4425-a04f-d65b85dd470f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7290940c-2bbf-4ca6-a4b7-f44a5a7279ed",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1009105-746a-44a0-be19-5bb7475ff6bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4847e6b6-9915-4e6d-93fb-b7d2caa0cd8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102059a5-62ff-4154-970c-2ff3cf63fc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f6adc69-a570-4bf5-a9c1-5d284cd6d0a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87f9da49-5be8-4aaf-87d4-8d974190a1b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9686e39-936d-4d43-ba9c-e4a0b37dc8d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c038159-5db4-48d5-a36a-a01cbe293911",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed8f1b02-7455-4a80-905b-d3604418926a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73cbcfbe-d8b0-4929-9462-bd3f77f7d7c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "520514f1-a000-4af5-9b2e-05f92301b620"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a35c249b-14e9-4114-b5f5-654c8cffefa5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "276c852b-1353-48dc-8167-4487b3237522"
            }
          }
        ]
      },
      {
        "id": "3da88040-b32b-4090-8e53-b321e0e7e378",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3d33a563-1ce4-4072-9918-cccfb419e4fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "996c9ff9-0e79-4a96-90c7-7d2738a345c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3181927-30e2-498b-b828-8f746c008347",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120e1a5f-13a0-4ba6-b29f-b9772143ca2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1646420b-f75e-4913-99ff-25b69a94f379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da519ab2-32ae-473a-8b1e-7164e2d2e27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8109a35a-3b7e-433a-acc5-9d93e7b47773"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3539969f-4a94-4218-902a-2c6b9ff01ac1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c3c395-9891-4c30-8cef-5544dd10d62d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cc4c026-b1a2-48b8-b65c-7b7c4cc72d1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1531139d-4d6a-4f19-b527-16ead703d2b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f3a2f69-ba4b-4451-a4a3-424c9a0905d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "821b9183-3748-481d-99cf-4c9362e3ea93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0f3acc4-74a9-4c3d-a75d-c78ea035b597",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "164b64be-5626-4218-ae85-f4a5c02d5f29"
            }
          }
        ]
      },
      {
        "id": "8cca311b-3933-47a4-a5a1-e66ae6c55f4f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "839ebdf6-79bc-4bb5-87f9-fe4096818793",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97ecab1e-071d-4d46-8bde-fa0480a9d56f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dfdfc66c-3174-417d-8d1b-a99e7d9c868b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e0a25ee-5761-40b9-b72e-4d0d71c17910",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fc4efd9-f7f1-4223-9647-fe92e8c6613a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 314.1126760563381,
      "responseMin": 15,
      "responseMax": 6837,
      "responseSd": 870.7678665666018,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695429117702,
      "completed": 1695429222077
    },
    "executions": [
      {
        "id": "e7f55c85-fcd1-482a-a1d3-a2a9e879b27b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f4f4dca0-842a-49ae-aa45-48e86651c111",
          "httpRequestId": "fdb2535c-dd6f-4709-9614-e94a5acd4753"
        },
        "item": {
          "id": "e7f55c85-fcd1-482a-a1d3-a2a9e879b27b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "92201d4e-0165-4adc-986d-2447365e3a1f",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "9ce3f321-3b93-40f1-a83e-2d7b66685807",
        "cursor": {
          "ref": "d6e6306c-e67d-4b68-8c37-8bfdf70a1ecb",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "be674da5-8ecb-4456-8caf-e1e592b60576"
        },
        "item": {
          "id": "9ce3f321-3b93-40f1-a83e-2d7b66685807",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4c8ce863-6655-46b0-ab77-851bbf8f5418",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "df4c0efe-6e3b-4064-a26d-a360eb038218",
        "cursor": {
          "ref": "fd1af24e-ff1d-48eb-8407-f43245b370df",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4d5f49a6-150e-47a4-a74d-88e3779c9a21"
        },
        "item": {
          "id": "df4c0efe-6e3b-4064-a26d-a360eb038218",
          "name": "did_json"
        },
        "response": {
          "id": "3151920d-e5c9-4132-944b-62e62ff4416c",
          "status": "OK",
          "code": 200,
          "responseTime": 1299,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ba44c6-9197-4125-9547-fbb1b213b63a",
        "cursor": {
          "ref": "d5b380bf-01d8-4d2e-a229-09dd9f6b266e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "31270e55-01fd-4786-b31c-1d303f7838c8"
        },
        "item": {
          "id": "35ba44c6-9197-4125-9547-fbb1b213b63a",
          "name": "did:invalid"
        },
        "response": {
          "id": "957b5ab0-9eb0-4cb8-991e-386ce722d50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ba44c6-9197-4125-9547-fbb1b213b63a",
        "cursor": {
          "ref": "d5b380bf-01d8-4d2e-a229-09dd9f6b266e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "31270e55-01fd-4786-b31c-1d303f7838c8"
        },
        "item": {
          "id": "35ba44c6-9197-4125-9547-fbb1b213b63a",
          "name": "did:invalid"
        },
        "response": {
          "id": "957b5ab0-9eb0-4cb8-991e-386ce722d50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a332d3aa-20c0-4103-b364-0ade24273848",
        "cursor": {
          "ref": "b2989d05-5cdf-413e-a706-39bb2012c752",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1d9e70a6-24ec-4165-a20a-96b2c07cfdfe"
        },
        "item": {
          "id": "a332d3aa-20c0-4103-b364-0ade24273848",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a215439c-afdf-4cd4-846c-555783c41914",
          "status": "Not Found",
          "code": 404,
          "responseTime": 542,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2f3013-8f31-4829-8a2b-9fc5c2787d62",
        "cursor": {
          "ref": "79f9eefd-d30e-4115-9011-20704cf5df21",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f55229a1-9207-4e7d-9869-867b9015c0bb"
        },
        "item": {
          "id": "ba2f3013-8f31-4829-8a2b-9fc5c2787d62",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f4d813a5-4605-43a5-8909-406d3673f03a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 262,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983084e5-860e-4bcb-be7f-99e268968518",
        "cursor": {
          "ref": "0e9c3d48-00b6-42f9-b9a3-e14492a69ed7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f062bea7-f46c-4573-8f93-c7afb0cef2c3"
        },
        "item": {
          "id": "983084e5-860e-4bcb-be7f-99e268968518",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ad301683-0cfa-43f1-9f81-ab2e68e5a502",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e53ed2-d18c-438b-bf1f-daa3d5628bfc",
        "cursor": {
          "ref": "6b02cba1-1750-47fd-96fc-b45f98d5a3d5",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fe437fc0-f26d-492b-9c6e-d201e66ead68"
        },
        "item": {
          "id": "73e53ed2-d18c-438b-bf1f-daa3d5628bfc",
          "name": "identifiers"
        },
        "response": {
          "id": "02fc2f5e-7968-4351-9889-b296045ab3d9",
          "status": "OK",
          "code": 200,
          "responseTime": 1265,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8d2ec1-6788-4cf8-adf3-23f390127988",
        "cursor": {
          "ref": "c898b294-37ab-4aff-9d1d-455701fbaf21",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b243fd08-7289-4f23-b9f4-5ffd372516ad"
        },
        "item": {
          "id": "0a8d2ec1-6788-4cf8-adf3-23f390127988",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3826b95c-b693-42ac-9c58-300df80a9f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37e3962-9541-411a-808c-15670eabadf5",
        "cursor": {
          "ref": "cad026ac-9909-4c62-a5bc-62a89429bb6c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "77150b33-d810-490f-b45a-1b7f0ae4091f"
        },
        "item": {
          "id": "b37e3962-9541-411a-808c-15670eabadf5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "11e84d87-84f6-4e72-9639-960ff684b842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab93e00-a455-466a-9c54-a9be1d05d6ac",
        "cursor": {
          "ref": "88fc6206-5047-411d-88ab-ab75303989e8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cbd77dd3-2696-4d96-b8dd-8225213597e6"
        },
        "item": {
          "id": "4ab93e00-a455-466a-9c54-a9be1d05d6ac",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7f767902-2cc8-4ea5-83ae-0ebf8f1c0069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a91106-db88-4518-ac61-e97c2decd7de",
        "cursor": {
          "ref": "e5474ca8-c393-4d15-bb35-1375b6bfd65e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b1d1191c-9dca-415b-b383-c09b94e45501"
        },
        "item": {
          "id": "69a91106-db88-4518-ac61-e97c2decd7de",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "29a9d0b0-134e-480f-a532-bd5808bdb319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03170894-f178-4a29-9f55-f450736d7ac1",
        "cursor": {
          "ref": "1ecfde4b-ebd8-4863-b00b-d6e8121dfc3d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3e60edbe-4981-4796-ae88-e4c4fbea2e4e"
        },
        "item": {
          "id": "03170894-f178-4a29-9f55-f450736d7ac1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "15d09a5e-8605-413d-a824-a309242a503e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f870222-429d-4c1c-a1c5-c230868405ac",
        "cursor": {
          "ref": "de5d6d9b-8d77-4cfb-b344-d0cb011ce688",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5dda0fd8-d018-43f0-a5d5-9f1d03fcb784"
        },
        "item": {
          "id": "0f870222-429d-4c1c-a1c5-c230868405ac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "78b7a84c-ce41-4765-ac1c-8c56671aa078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b46e7e-51e8-430c-83cc-75c3eb3c7338",
        "cursor": {
          "ref": "3cfbc590-fe29-41b0-843b-2646f80bb1e7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7bf66338-87c6-4c6f-88cf-34e354cb4d37"
        },
        "item": {
          "id": "62b46e7e-51e8-430c-83cc-75c3eb3c7338",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e52b609f-1e0e-4103-a79f-b488a31605e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ae74bc-a6f6-41c3-9f6d-75c75c33c91b",
        "cursor": {
          "ref": "343c6b66-bc65-47da-9610-e81299ccc935",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "452f5f75-7dc2-4041-a256-7b8c922be1ea"
        },
        "item": {
          "id": "89ae74bc-a6f6-41c3-9f6d-75c75c33c91b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3d6440d7-0f6b-4b81-a540-562082470848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df485d6-74fb-487a-8b1d-3cb269b23b8f",
        "cursor": {
          "ref": "c6e45017-1b9a-4029-a7ac-b8a253def33f",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "92b135f5-c4a1-4e36-ac98-bbc17f582134"
        },
        "item": {
          "id": "8df485d6-74fb-487a-8b1d-3cb269b23b8f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a91e8009-bef1-46ab-96d1-dc8b2b3a352b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a6de3f-b032-4ee9-a20b-327eb19dfcf7",
        "cursor": {
          "ref": "623af2a6-d0fd-4b17-a7e9-c7c2b5263bc2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c41229dd-3fc8-49a8-9cfd-5ce26561fd51"
        },
        "item": {
          "id": "f3a6de3f-b032-4ee9-a20b-327eb19dfcf7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f4ba7f7b-0cf0-47f6-b9da-b7d9eb5d8394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec4d9a8-b95a-40d7-b069-ee718815ecc0",
        "cursor": {
          "ref": "63422ca3-274a-4b20-8b45-7b889b966781",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d97d07b0-fc3a-432c-b436-4d3a42d3d967"
        },
        "item": {
          "id": "5ec4d9a8-b95a-40d7-b069-ee718815ecc0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "675b7f93-539e-47a8-ad49-f3f9b46ff412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdaac59-c57b-47a2-a6eb-7ff07f37745c",
        "cursor": {
          "ref": "c358325b-45e8-455a-9b06-781b3814f9c4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "44b44ae3-58fb-43c5-8468-3860ce46b357"
        },
        "item": {
          "id": "1bdaac59-c57b-47a2-a6eb-7ff07f37745c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6788f867-a41d-40ff-9960-e0eb723864b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc31dcd-db7a-4d3c-9c4d-2c50f14685a5",
        "cursor": {
          "ref": "4069191e-3e2b-4fcf-b3fd-7aca8e37f109",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "05859a3e-b26e-4eab-99bf-64db2780736f"
        },
        "item": {
          "id": "6dc31dcd-db7a-4d3c-9c4d-2c50f14685a5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f0f766ca-f84a-4339-8ed0-22047749f32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932a8096-c13e-40bb-b741-db3b3cd0758d",
        "cursor": {
          "ref": "ebccc4a1-aa44-4d0f-b012-ddeeb4fb193d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "563cf329-a670-46d2-a071-cad182005058"
        },
        "item": {
          "id": "932a8096-c13e-40bb-b741-db3b3cd0758d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e84224d0-151d-4b36-98d0-c5fe75245d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75fe4f9-8a72-4e0f-8a4e-b6a277a309fb",
        "cursor": {
          "ref": "6741e2a3-80a8-447b-b66a-edb904a4ff72",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dd5f3399-7b9c-4dfe-8569-53e2a10ca701"
        },
        "item": {
          "id": "f75fe4f9-8a72-4e0f-8a4e-b6a277a309fb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5775c4df-f5c0-4c73-a39c-666bd825bf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97136d93-f38c-4a27-a7f8-75bf6aae001c",
        "cursor": {
          "ref": "345e9534-50b5-4594-bffc-d4b05613597b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d374a3f4-0bd6-4397-8164-609dae9f5085"
        },
        "item": {
          "id": "97136d93-f38c-4a27-a7f8-75bf6aae001c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "080fccfa-4ec1-479d-a2d2-37f8dac66aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ca6e0a-45e4-424b-a36e-3e1b727b2919",
        "cursor": {
          "ref": "05f73030-203f-4483-b465-596c531e5e5b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5b785579-6c97-4784-96df-4a81dde23ec0"
        },
        "item": {
          "id": "48ca6e0a-45e4-424b-a36e-3e1b727b2919",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9075f7b1-bbab-4c25-b47e-0e69e756be2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b6139b-ba9e-41a0-bd27-2991bf68303f",
        "cursor": {
          "ref": "28a862a1-3533-4e32-81ee-d5abe8bd0c9b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6c6c3185-41d4-4ad1-993c-c50f5815151a"
        },
        "item": {
          "id": "f7b6139b-ba9e-41a0-bd27-2991bf68303f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "78031f64-56c2-4f6c-bc64-0fba45b017c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a723ec-ab3f-44a9-9636-5d907da11c48",
        "cursor": {
          "ref": "5b08bf71-06b4-4411-a315-0486a5750e1d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c89b36aa-1232-4f0b-a524-d3fb7f6ea7c6"
        },
        "item": {
          "id": "73a723ec-ab3f-44a9-9636-5d907da11c48",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e3b6f0c7-2cf5-453b-8725-0303342e7ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f036c05f-a88f-4cb1-9172-9cb4cb29dc78",
        "cursor": {
          "ref": "90902488-7f5a-416c-b65d-054ec08fca78",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "87746ce1-3ef1-48a5-b65e-fb365c70dc3f"
        },
        "item": {
          "id": "f036c05f-a88f-4cb1-9172-9cb4cb29dc78",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9024e5bd-db4b-47db-8ddd-df4564eefd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8553ccb2-7d23-4cfc-9521-02262ec8fd77",
        "cursor": {
          "ref": "248dd9c5-d05a-4c9b-9bde-9d8428f3f216",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e1425e53-2e6e-4486-b594-dc8693a202d2"
        },
        "item": {
          "id": "8553ccb2-7d23-4cfc-9521-02262ec8fd77",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3b7766d3-7a2c-406e-abd4-743759f590f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdac2c4a-764c-4f8e-9d60-37e262929acc",
        "cursor": {
          "ref": "80883758-45af-4fdd-a07e-a216ea40e2c4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2b4b9764-9487-4abf-a6cf-aa64cb217d06"
        },
        "item": {
          "id": "cdac2c4a-764c-4f8e-9d60-37e262929acc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7ffda3b9-c6a6-4433-8091-1d5346f760b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9003a68d-689f-4ca7-a2fd-f63a1652db6b",
        "cursor": {
          "ref": "fcca4b38-05b2-4d9a-ad5c-7db35cbeb5b0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5471784d-76f9-492c-a488-5d91bf877a74"
        },
        "item": {
          "id": "9003a68d-689f-4ca7-a2fd-f63a1652db6b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06e3324e-1c70-44ae-9f89-d9103b3684c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0e5895-e05b-4675-9f13-a2ba10f227b4",
        "cursor": {
          "ref": "a70354bc-2a18-4742-895d-44b3fb592359",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f26edc7f-0c7c-4070-9ee2-b19006226ee9"
        },
        "item": {
          "id": "3d0e5895-e05b-4675-9f13-a2ba10f227b4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d7a74a5e-4c0e-42eb-a781-eb32e48bcc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f46e60b-9e76-4501-ba6b-d54e3f686af7",
        "cursor": {
          "ref": "a22096b5-48f9-4c0b-b2ce-191be30e7b61",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "041061b4-f63e-4318-8c3c-29d91cded8f5"
        },
        "item": {
          "id": "4f46e60b-9e76-4501-ba6b-d54e3f686af7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eb4bdbeb-ac53-44f5-b2df-c8099bc1e630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afc31dc-cf91-46a8-9556-539854c0a92b",
        "cursor": {
          "ref": "6bcc648a-256a-40fd-9894-53f8944b0ace",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "df7c96cb-ab48-4876-9c3f-417ebdda6026"
        },
        "item": {
          "id": "2afc31dc-cf91-46a8-9556-539854c0a92b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b5d34905-8080-4dd0-8dd5-6995fcdd8413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95298de5-bdfb-4ec3-a516-c6ede0875993",
        "cursor": {
          "ref": "1c4cb773-3a31-4b84-b211-35e98575f2eb",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e843c3ff-a361-4ef4-a823-485e82343193"
        },
        "item": {
          "id": "95298de5-bdfb-4ec3-a516-c6ede0875993",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0a8c8b7d-ed21-4e6a-986a-bb611c1d74a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5b8a6b-864a-4910-9602-bbd501939e13",
        "cursor": {
          "ref": "89e5ad59-c1bd-44dd-9a70-ac51992ce11e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "98ae4116-c514-417b-b411-f18f9e9bedd5"
        },
        "item": {
          "id": "fa5b8a6b-864a-4910-9602-bbd501939e13",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d5878809-e8ab-4241-9f6c-3a4139c6f6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc07070-e6b3-438d-94db-17392421f4fd",
        "cursor": {
          "ref": "1a65d5dc-93ea-4945-8558-576744be3f6d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "33e2ff45-0725-43f0-bab0-77554a52597b"
        },
        "item": {
          "id": "dfc07070-e6b3-438d-94db-17392421f4fd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "91522e58-eab1-4188-8343-08f96545a402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d45b3ac-3172-4416-90b2-6f5e92e50b81",
        "cursor": {
          "ref": "e01dea95-56c7-45b2-9cea-b287316e681b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c33f7209-2e05-498f-ab39-cdca5e55f5b7"
        },
        "item": {
          "id": "9d45b3ac-3172-4416-90b2-6f5e92e50b81",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9e16d51b-852a-49ae-9d1b-caa6901d16a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b685e-b1c2-4078-ad9a-bf79d411b773",
        "cursor": {
          "ref": "9d5fbcde-6329-40f3-aef2-e809465e09f4",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6b009b11-58b5-483e-b434-121cf1eec5e2"
        },
        "item": {
          "id": "c59b685e-b1c2-4078-ad9a-bf79d411b773",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ca577906-0c8b-43c9-9b49-8ab5e5b2468a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c956b569-b22e-46fa-b662-0f202bc4fcb3",
        "cursor": {
          "ref": "205c99ff-1051-4987-9592-8dbccc32f464",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e5b9f133-e16d-43cd-910e-7f2cf0c03ac6"
        },
        "item": {
          "id": "c956b569-b22e-46fa-b662-0f202bc4fcb3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4049eac-4553-4d0f-a5da-e7fc69e93813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6424b2a-99d3-44c0-80a6-8ac4de515d89",
        "cursor": {
          "ref": "4d6f8652-c62b-4827-8c5b-1df9134c02f5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "74a3933d-0fd9-4080-a6eb-566b26a1eb1a"
        },
        "item": {
          "id": "e6424b2a-99d3-44c0-80a6-8ac4de515d89",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1eea4ce7-835d-467e-85c0-ef27085d5c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbecf7a-6049-4ad2-a96d-01f80508f713",
        "cursor": {
          "ref": "590cb9d8-2092-4753-b8ec-87cfd3b31777",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2b0ff97c-5c15-4311-bb1d-3eec6fded5d2"
        },
        "item": {
          "id": "efbecf7a-6049-4ad2-a96d-01f80508f713",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "54e327fd-5e14-4178-bee1-dae65bbe63ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cff85d-b8bb-4004-b2e0-f849b4a2ade6",
        "cursor": {
          "ref": "a2102bca-f008-4a3d-ad18-41b74284a147",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "189c4e67-016b-4155-a66b-eaad0675b822"
        },
        "item": {
          "id": "43cff85d-b8bb-4004-b2e0-f849b4a2ade6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fffe0531-fa54-4b95-91a8-15feca2512eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06438cb-50a2-400d-86a0-2d4628c7b2a9",
        "cursor": {
          "ref": "cb01f470-96f7-419d-a74e-9bf0355772b0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d44b3771-5dd7-4c36-9890-4d6f074e3fdc"
        },
        "item": {
          "id": "a06438cb-50a2-400d-86a0-2d4628c7b2a9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "34f8a43e-446b-4e2d-aebc-28884394c4b4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 599,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a6f096-b4c1-4be7-ba7f-70977a769aca",
        "cursor": {
          "ref": "8eb62a63-3968-4120-8f95-f2744e036660",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "773716a5-cb35-4476-a211-205a0c147c9c"
        },
        "item": {
          "id": "a1a6f096-b4c1-4be7-ba7f-70977a769aca",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4ce97572-a488-44df-8585-95a924fc9a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297a59a9-68b7-45ba-9c37-c2f887594dfa",
        "cursor": {
          "ref": "77807f34-4064-4d63-b4e1-67c2b7f1cc90",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0e834ab7-c71e-40cd-a5f2-d7b8a1ce3b67"
        },
        "item": {
          "id": "297a59a9-68b7-45ba-9c37-c2f887594dfa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c1d1cab8-8052-42ba-be40-f547208434e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3787373a-891f-4b85-a23b-e00584559f24",
        "cursor": {
          "ref": "ebfc9167-8c11-4860-a16c-0db998b9377c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4953c427-1b92-46f6-94a4-4abb9a157c8e"
        },
        "item": {
          "id": "3787373a-891f-4b85-a23b-e00584559f24",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1a771269-480d-44d7-92f4-7e4c7c88524a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba20381-61b6-4b58-93c2-385abdc12a6c",
        "cursor": {
          "ref": "e8212722-9882-4914-97e6-b1d8ba7aee62",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1b5d85ff-5d3e-4d53-803b-6ccd44ec6ec5"
        },
        "item": {
          "id": "eba20381-61b6-4b58-93c2-385abdc12a6c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "944f1cbd-0699-4195-b40a-a308ea9ee7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fff8c8-e1f6-443c-9575-851e53b66f52",
        "cursor": {
          "ref": "52951cbe-8ec7-4114-b3b9-3ed7fe744198",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1b01fb30-2135-4bfa-9ed7-e3af94ea1f53"
        },
        "item": {
          "id": "41fff8c8-e1f6-443c-9575-851e53b66f52",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d192a31d-8f31-4f5e-b2eb-4e1bffa8e889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92391a37-e660-4674-a0dd-3b90f3583edd",
        "cursor": {
          "ref": "dcdbac7a-ed68-4ea4-b9de-aeb08ecddd77",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "93ede5ae-d44d-4aac-8a0a-ef592829c6a7"
        },
        "item": {
          "id": "92391a37-e660-4674-a0dd-3b90f3583edd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0df96e72-24ff-42ac-a898-b8fe86360726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ead794-8ddd-494a-aa0d-bbd330b587d3",
        "cursor": {
          "ref": "aea9b6f6-910c-4a56-9038-1c1860f0dab5",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b235d1cc-388a-4515-9d4a-2c7644496699"
        },
        "item": {
          "id": "d8ead794-8ddd-494a-aa0d-bbd330b587d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1bd9ac83-d1c3-425d-80d2-646b84e77a2c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 576,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6316bb-28b8-4a5f-a421-4b1cc59237bc",
        "cursor": {
          "ref": "9a6070d8-9a4d-4644-a236-888715f44f25",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "36508b6d-5a94-4cb3-bf11-4d93f77b7e87"
        },
        "item": {
          "id": "5c6316bb-28b8-4a5f-a421-4b1cc59237bc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d45c49e4-df48-4a79-a766-3eaa3fef2fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75119dc-ced7-4a2c-ab4e-f663c0f8140f",
        "cursor": {
          "ref": "a9e70cc7-6c26-4a1d-bf86-e29a5f3b06ed",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "85f57157-da22-474c-a984-c67d084e6c23"
        },
        "item": {
          "id": "c75119dc-ced7-4a2c-ab4e-f663c0f8140f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7ce11ce5-3d9f-48a5-864a-7d8fb1aed066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f9cf97-fc6f-429d-8d3c-ef2deac847f6",
        "cursor": {
          "ref": "2791add3-d455-423a-b619-8ba1b5177200",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b91a3d4c-c121-4031-86ea-49c3deb45433"
        },
        "item": {
          "id": "b0f9cf97-fc6f-429d-8d3c-ef2deac847f6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bebc502f-416a-4922-ad9a-165540b3db25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c49ba24-dbdf-4e50-a14d-48e8eedc9d18",
        "cursor": {
          "ref": "096acf4e-604c-4c6e-b891-8f59cfd5bbd6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d747f2ad-18ed-4d7f-815b-6547a627ad74"
        },
        "item": {
          "id": "8c49ba24-dbdf-4e50-a14d-48e8eedc9d18",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "37106d1a-0117-4a9c-9d76-501e176e403f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce77b268-f07f-49d8-93bd-9028c7a81771",
        "cursor": {
          "ref": "1b4c8125-4d38-4ae3-8d6b-f8f11646109b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec227c2f-ab6d-45ba-b661-691e8a21def3"
        },
        "item": {
          "id": "ce77b268-f07f-49d8-93bd-9028c7a81771",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e552bd8a-08db-4681-9650-78c0e5f05c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd5c109-5d5e-4106-bef9-59a33eeb3785",
        "cursor": {
          "ref": "a03b02bd-aec8-4b39-a75f-0fef6c26ae48",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a57351d9-1208-47dc-bcd5-ef8fa441f517"
        },
        "item": {
          "id": "cbd5c109-5d5e-4106-bef9-59a33eeb3785",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6def2dce-98f9-479d-88c9-143e698d54ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed83259-7d0c-4fd1-a82a-1de3c093d6fe",
        "cursor": {
          "ref": "d92b418f-cba7-40d3-b0c9-a2ba6745560c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "71832cab-f6ca-439b-ae86-888489cf3f6b"
        },
        "item": {
          "id": "fed83259-7d0c-4fd1-a82a-1de3c093d6fe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0ef175e5-82c3-4dae-8259-3cae5c9af454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1ea0c9-e9df-4019-a684-f25e09c47185",
        "cursor": {
          "ref": "cbf13915-cb76-4774-aeed-f8b9eefc3f71",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "100e87cc-bd6f-40ff-a8e7-85e7533834cd"
        },
        "item": {
          "id": "ec1ea0c9-e9df-4019-a684-f25e09c47185",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1879c9da-20be-40cd-96af-61148b31460b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c381f4-06e4-43bc-be26-429f242ef1c9",
        "cursor": {
          "ref": "8db51b8c-27a4-4c91-82f8-97f88acf090c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "894bc995-fbfe-463d-9a45-fc9f80ebd312"
        },
        "item": {
          "id": "93c381f4-06e4-43bc-be26-429f242ef1c9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9ad60540-8e0d-47cf-a594-b04a8b9e5c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065559bc-ebef-47f6-92f9-c98f032eb2ce",
        "cursor": {
          "ref": "b800d535-764c-47ba-a4ba-bc48de558b41",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5feb3bed-ed67-4cdf-9866-6c55e628f16d"
        },
        "item": {
          "id": "065559bc-ebef-47f6-92f9-c98f032eb2ce",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9e6798b0-3fbb-4373-b04b-bb5b584f3e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45de2af-247d-4247-a8e3-108c4b8569c7",
        "cursor": {
          "ref": "75504c92-0006-44e3-9c97-a59dac24515f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b1b7fc0d-d7da-4d9f-b0dc-90fac56b85b3"
        },
        "item": {
          "id": "d45de2af-247d-4247-a8e3-108c4b8569c7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dc9338ad-5269-4ac5-88e3-d47ca173c74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1eefd1-0212-4baf-be62-eb7347e1187e",
        "cursor": {
          "ref": "3aeb197d-7879-4a6c-84f7-4577fd75b469",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e32d87cd-c998-4208-956b-d4878308dc7a"
        },
        "item": {
          "id": "7b1eefd1-0212-4baf-be62-eb7347e1187e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a2018ac2-eb28-440b-9b62-d9be1b3dd850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb8f2cc-6db0-4155-84fb-4f56324158e4",
        "cursor": {
          "ref": "59b50d94-d5c4-4646-87b7-e4e815627f1e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fa35d35a-43b9-49c7-b8af-978b655fa86a"
        },
        "item": {
          "id": "aeb8f2cc-6db0-4155-84fb-4f56324158e4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bb387cd3-31fe-4e98-b06b-cfee00931269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c6e415-8d23-466a-900c-67f85a9e3427",
        "cursor": {
          "ref": "09af4da4-ea0e-417b-a099-7fb049527260",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "84a73366-ee4a-4070-a1ba-7cb90d86aba3"
        },
        "item": {
          "id": "f2c6e415-8d23-466a-900c-67f85a9e3427",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "afbd9418-fd6b-4f4d-9588-8bdad093cb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67155ab-656a-4e2b-9fec-d1d723bfb449",
        "cursor": {
          "ref": "5275151b-59ab-4f62-9940-b117af689074",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "92ab18e9-7faf-41e1-9fff-871779945a43"
        },
        "item": {
          "id": "e67155ab-656a-4e2b-9fec-d1d723bfb449",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "eaa8eddc-7cfb-480c-a50a-e31a7c1f33a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ff0e03-f5b4-4811-8f74-03247d6be6d9",
        "cursor": {
          "ref": "e5589d64-e6c4-4e73-a73a-37b32b3ce0fb",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "32ccbd59-c0df-4781-88e9-ba6fc8477fe8"
        },
        "item": {
          "id": "a2ff0e03-f5b4-4811-8f74-03247d6be6d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "81a661e5-dff1-4bcb-8b78-52f2af61ef62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4d8194-cac8-4fe4-a102-5bc5b7c1918a",
        "cursor": {
          "ref": "544145f6-22cb-4525-9d01-8c63bcfaec67",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "96057555-1ba4-4fcd-ade0-79f06b78b703"
        },
        "item": {
          "id": "8d4d8194-cac8-4fe4-a102-5bc5b7c1918a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d6da3b5f-593b-4cd6-94a8-c401b3778579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c8e307-7745-4494-95af-20daec98ecbd",
        "cursor": {
          "ref": "8db1c724-b93e-4ce8-a663-acff11c528fa",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4fac4bb2-49d0-485e-9846-6b774c910927"
        },
        "item": {
          "id": "c6c8e307-7745-4494-95af-20daec98ecbd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4b11c496-c1ff-4b5a-a1c8-547166044af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a7f90e-9c29-4171-98d8-cb8d97846df0",
        "cursor": {
          "ref": "49a483f1-f2f3-425d-9490-611fbfebd28c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "79f7a169-ce0a-44d2-a6e5-97160c90fd7a"
        },
        "item": {
          "id": "01a7f90e-9c29-4171-98d8-cb8d97846df0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "08244f5d-1080-4775-a03e-2e31c55f622d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dd813a-8cf1-49bd-bf0f-ce80ad7d316f",
        "cursor": {
          "ref": "a05d88d6-171d-43f8-8933-ec918d8dd2cf",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "583eaa4a-f76d-4481-8fdf-d4422f3c77fb"
        },
        "item": {
          "id": "59dd813a-8cf1-49bd-bf0f-ce80ad7d316f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "568bd147-27fc-477a-b858-0ccc058c2aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a1236-a73e-4b72-8aed-fd8a593fb7d8",
        "cursor": {
          "ref": "04690c9e-14fd-48e7-89bf-028a2611f883",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0464803d-75a9-4956-9f9a-3bf7dec2023e"
        },
        "item": {
          "id": "ea0a1236-a73e-4b72-8aed-fd8a593fb7d8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0023b8b1-83b6-4ef6-a7b2-a514a055b5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bbdd74-2693-41ce-bb5a-dcc28fc44a2d",
        "cursor": {
          "ref": "209fd8fd-f4cf-41c4-85d8-249affd5aa5b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7a60b8c2-d790-4c30-b9b7-11ce88e63739"
        },
        "item": {
          "id": "98bbdd74-2693-41ce-bb5a-dcc28fc44a2d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f6a6fdb6-908b-46f6-b0b6-2be0cd60ba02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e36f98-1419-41b7-a77d-327d79afe532",
        "cursor": {
          "ref": "e00991aa-b339-4a8f-9c60-979a820de062",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "07a12074-a79f-4abb-ae06-a12e9e1b1a2d"
        },
        "item": {
          "id": "b9e36f98-1419-41b7-a77d-327d79afe532",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "47a2718e-2432-4316-99f3-e6f7bd69fcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ecc0a1-07a5-45de-b129-252672f2ec68",
        "cursor": {
          "ref": "4c671dde-5f95-4b11-9362-d80c1b89545d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "10ba8c41-a506-4ee0-8e25-055cca0f5fe2"
        },
        "item": {
          "id": "e5ecc0a1-07a5-45de-b129-252672f2ec68",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ec950dcc-4da0-484a-a526-26a4c3d7172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82415cc-abd5-4e51-88c2-08430a4886fc",
        "cursor": {
          "ref": "1d6fb360-0e22-49dd-9263-c841438ca5d3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d900fef5-93a6-4a43-8669-dc4a60c4b1e4"
        },
        "item": {
          "id": "a82415cc-abd5-4e51-88c2-08430a4886fc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d9717fa5-7ad9-424a-91b5-1dbe01220138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad429434-406c-42a6-b0f9-f41124f862f1",
        "cursor": {
          "ref": "d947c76e-4d6c-4e3d-844c-0e5e1694242f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c328c430-2d16-470c-a896-b4a6edfb6f59"
        },
        "item": {
          "id": "ad429434-406c-42a6-b0f9-f41124f862f1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1a23c348-1988-4516-8afc-807ca84e03d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19e928c-64eb-4a05-8c28-dd038ac9f5c3",
        "cursor": {
          "ref": "d772807b-a1ee-485d-a2ad-c5e93b339d30",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d0c2bff7-bf80-4581-b2b8-5c1fd2659c33"
        },
        "item": {
          "id": "c19e928c-64eb-4a05-8c28-dd038ac9f5c3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6cee3de6-0e92-42d1-ba11-42d97016b84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ecbf0e-c34c-4eb1-ae56-48a99c1411ac",
        "cursor": {
          "ref": "b775c5d9-f2d6-4353-b4e8-928a6b59bd20",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e3419d0b-2ed4-421d-b763-e20e9042e5e1"
        },
        "item": {
          "id": "70ecbf0e-c34c-4eb1-ae56-48a99c1411ac",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5316940e-56e8-4780-9bdf-d77e7dae05a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5010bf5-639d-4caf-a1fd-a849d6308a38",
        "cursor": {
          "ref": "62c8d839-b015-4c06-b413-7d35b45c4894",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3c5b53b7-5660-4bb3-90f5-c27956672f67"
        },
        "item": {
          "id": "f5010bf5-639d-4caf-a1fd-a849d6308a38",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5908fed9-1e55-4ad2-9ce0-fcb9e14b1359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1435ca-cdb9-46f9-9deb-7ac5eb59b358",
        "cursor": {
          "ref": "ffa00bba-a61b-4eb6-bfff-bc3dac7953fc",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "996c39d4-2d54-48b9-b7ff-534ea020625c"
        },
        "item": {
          "id": "8d1435ca-cdb9-46f9-9deb-7ac5eb59b358",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6693f30b-55a1-4fa9-9485-f1a529c3bd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418fc1b1-44c2-43c3-beee-8cb130b1da3f",
        "cursor": {
          "ref": "4e6bf191-2974-4e72-9cf1-1798b166fc2b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1f9aa3f2-6083-4923-8843-4d89130c6ad4"
        },
        "item": {
          "id": "418fc1b1-44c2-43c3-beee-8cb130b1da3f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cbfc30f2-e605-4cc6-a9eb-3002b8230386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0feb460-ae6a-468e-b9dd-9db39076efee",
        "cursor": {
          "ref": "3e0f6807-4530-4353-816b-e95dc5714ee4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d8ce2ce9-d80c-40eb-8e29-30a614473eed"
        },
        "item": {
          "id": "d0feb460-ae6a-468e-b9dd-9db39076efee",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ba1ae132-fbf2-40d5-8649-1c26de850a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acf75c2-a32f-4e76-821e-6486e75920e6",
        "cursor": {
          "ref": "3dff160f-a4ad-4dbc-9393-9eca6660875c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "db85beed-8c94-482f-a7d8-fda535f15c27"
        },
        "item": {
          "id": "1acf75c2-a32f-4e76-821e-6486e75920e6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "02ed3997-238f-468f-b611-f7e3ad2f277f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea41e7c6-13c4-4f4e-8f0e-3cf28cfdb4fb",
        "cursor": {
          "ref": "957f4f50-1a29-4b0a-a833-1dbd724fc277",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9b1bc003-93f2-46eb-bd28-edae58a6bcf7"
        },
        "item": {
          "id": "ea41e7c6-13c4-4f4e-8f0e-3cf28cfdb4fb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "adbb7ac5-9d50-43ce-8d22-81ecf2a388b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d7b406-0c73-431c-b6fe-92523527c5ad",
        "cursor": {
          "ref": "53242456-7665-42f4-8b39-2825f54c9e2e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3dbb5faf-6c20-4bb3-9cc4-88667ac58ac2"
        },
        "item": {
          "id": "e1d7b406-0c73-431c-b6fe-92523527c5ad",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "24dc9e76-19d3-43fb-8575-6b1bbb5a7795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90f47b6-7a43-4321-b167-c179188b14c5",
        "cursor": {
          "ref": "c2e8ea02-4671-41d7-a6b9-47c77841f367",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ba6b10b8-e334-4b49-911e-98aab8733866"
        },
        "item": {
          "id": "a90f47b6-7a43-4321-b167-c179188b14c5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ac4128f5-f560-4fb8-8546-d6d02fa053e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17c6456-bd73-45bd-a005-c7b27433bc93",
        "cursor": {
          "ref": "aa3f1f8d-3b31-4563-b661-9ca23971bdb4",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "48986646-85b7-4895-a95c-7a7c1e73a14f"
        },
        "item": {
          "id": "f17c6456-bd73-45bd-a005-c7b27433bc93",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b73464c5-3ecf-4d8e-b1d6-28a5a8e830ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17095079-d871-4da9-a4df-d0eb1fc40492",
        "cursor": {
          "ref": "6e9688ed-85da-4710-8f18-cf523e7764e7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "53dd3706-feb5-42cd-9fd5-7c43ee02264b"
        },
        "item": {
          "id": "17095079-d871-4da9-a4df-d0eb1fc40492",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a7c80163-4439-4dee-8419-df4238108d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716e7cda-5188-4ae2-87a7-a7c62f90eb2e",
        "cursor": {
          "ref": "e94065a0-6ed0-492c-b23e-2c3ee4ef49bb",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dd69fdc6-d812-4761-8cb8-a5ef22a55d2c"
        },
        "item": {
          "id": "716e7cda-5188-4ae2-87a7-a7c62f90eb2e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f92d8657-2c6b-40c6-9e6a-4e99c558da6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53f8436-8d01-4044-90f5-ea04b44e7918",
        "cursor": {
          "ref": "8dfe26b2-249c-4f0a-bd30-aac355be2c78",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c9e1cee5-739c-40c1-baf3-a6a8b76e951d"
        },
        "item": {
          "id": "d53f8436-8d01-4044-90f5-ea04b44e7918",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "54381dfe-2a83-479d-b876-d40d2f9641e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365945fc-31ed-4328-8b81-e6aa43f02cd9",
        "cursor": {
          "ref": "224980c4-260a-467a-a24c-8ec23859b0ff",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b4960dc8-d077-4c35-a694-14875e9b739f"
        },
        "item": {
          "id": "365945fc-31ed-4328-8b81-e6aa43f02cd9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "51cec5ed-041e-47d3-bb3f-d4bf6b505f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8ec492-97a5-4455-9e3b-eed7c20ecb58",
        "cursor": {
          "ref": "8fac2173-0a1d-4d20-b87d-e2bfbafb6d8f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23e31a2f-d1cd-48b1-a7ac-b1ebce5c1123"
        },
        "item": {
          "id": "dd8ec492-97a5-4455-9e3b-eed7c20ecb58",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "02f660e5-177c-40fd-88ee-89f8f3359b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb1a89c-69ef-4626-a6de-1abe11ec8616",
        "cursor": {
          "ref": "73f512ef-5403-4fc9-a6b4-9615fac9386d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2642baa5-b587-47ab-921f-58843407cf0a"
        },
        "item": {
          "id": "adb1a89c-69ef-4626-a6de-1abe11ec8616",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "018b10c7-dbc0-424d-87a5-4cc87ce16baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973620d9-e266-4c29-9428-4a9dd7d48b58",
        "cursor": {
          "ref": "8bb96f13-658e-4794-bcc5-a47a2b08e9e9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1e4a658b-51b4-4f68-b45b-feaa6073dd12"
        },
        "item": {
          "id": "973620d9-e266-4c29-9428-4a9dd7d48b58",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dd8e97f6-9189-4c02-9bc9-f2566bf9cb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cade9e5-ec63-46d2-8d71-b4b1c78e8e63",
        "cursor": {
          "ref": "38e4b7bb-9cd5-4e4f-8a44-00e7509b8e6f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e9eec673-fea9-4664-81fe-62fd29aeeaff"
        },
        "item": {
          "id": "6cade9e5-ec63-46d2-8d71-b4b1c78e8e63",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f4d0861b-8141-4e39-9f33-62dfa0453d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ffd87f-d1d4-4a95-ad5f-013a0b766ba2",
        "cursor": {
          "ref": "ae0698f3-a786-48ec-8a7f-faeee8e9b054",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "74827bb3-e89b-4946-a454-7e61be403e19"
        },
        "item": {
          "id": "c6ffd87f-d1d4-4a95-ad5f-013a0b766ba2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "12ec1f6c-0aec-49ec-8ea5-62425f981f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d469b8b5-4ac1-44a4-90cb-9e6426317efd",
        "cursor": {
          "ref": "b303d75a-e402-4f72-a8fd-8145ede70323",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ea531586-94cc-47a7-90c5-2b8c99ce5fbb"
        },
        "item": {
          "id": "d469b8b5-4ac1-44a4-90cb-9e6426317efd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fefebad5-f865-421e-b277-13c7c341050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ad042a-d355-47c6-82cc-4d21b3075a37",
        "cursor": {
          "ref": "6b2cc2b4-f955-4f44-97b2-c794bf58a21b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "61a7a574-51de-489b-9c62-bb6899084984"
        },
        "item": {
          "id": "b7ad042a-d355-47c6-82cc-4d21b3075a37",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5860c936-f13b-4553-a370-9813e425a260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a461cb95-2dcd-497b-9bdf-7cdf377be4d0",
        "cursor": {
          "ref": "373530a1-710e-4ef2-9133-23538d9d8dbb",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1ee7c589-af14-41f3-bd55-bf59e197fbea"
        },
        "item": {
          "id": "a461cb95-2dcd-497b-9bdf-7cdf377be4d0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d4d83a20-8704-4507-b905-bcfb18079d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0abdaa-d9fc-4e41-b51f-d43152994d2e",
        "cursor": {
          "ref": "09f09fef-1db4-4002-acd9-7cadccfa4957",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "19ef4ce5-ca22-4e7f-acc5-25180b4daee8"
        },
        "item": {
          "id": "6c0abdaa-d9fc-4e41-b51f-d43152994d2e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0ad6cae1-cc16-470f-8ea8-e81db77e5db1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61acee33-c533-4841-95ef-261d6a11efe0",
        "cursor": {
          "ref": "6c11c39f-1a43-49cf-8daa-4d81a1f5a157",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "663a6996-1d6c-4e36-a8cb-4e8b42f06228"
        },
        "item": {
          "id": "61acee33-c533-4841-95ef-261d6a11efe0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3bd6e3c1-b3a3-449b-b080-baf26b1f0845",
          "status": "Created",
          "code": 201,
          "responseTime": 6837,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3d2bac-f24f-4048-9e06-e751e0bca5aa",
        "cursor": {
          "ref": "fa1f6e4b-a283-4c22-ad2d-2ad30dcedc17",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "27d4ae1c-7065-40fd-9090-f63258fec3f4"
        },
        "item": {
          "id": "ac3d2bac-f24f-4048-9e06-e751e0bca5aa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9a735360-7066-4787-bf97-3f007acaca94",
          "status": "Created",
          "code": 201,
          "responseTime": 6269,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b26a067-0361-4b5a-98af-8c5c9567e5c1",
        "cursor": {
          "ref": "4d8c6bdb-3367-45fb-a49b-06f70b2df920",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "340aadad-3655-4089-9f67-42b057c740b6"
        },
        "item": {
          "id": "1b26a067-0361-4b5a-98af-8c5c9567e5c1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "81396380-794f-4a80-a785-4978686769b5",
          "status": "Created",
          "code": 201,
          "responseTime": 6820,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f4aa4e-c66e-4bba-b682-53e656fc5509",
        "cursor": {
          "ref": "8d295726-2c20-4b52-a7e3-3488907e571a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ce1ffa3a-1316-444c-a966-18451b98aad3"
        },
        "item": {
          "id": "53f4aa4e-c66e-4bba-b682-53e656fc5509",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f6d4b9a1-f6d5-4280-88ca-d200dc10dcef",
          "status": "Created",
          "code": 201,
          "responseTime": 6651,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "927b1054-9435-4c62-9bad-ec320f835750",
        "cursor": {
          "ref": "33c9bf44-e2db-456c-a89b-52d5217ae403",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "028eaa87-29ab-4e21-8fb0-008ec7af6d4c"
        },
        "item": {
          "id": "927b1054-9435-4c62-9bad-ec320f835750",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f26ef6ed-781e-4df2-ba65-675dc771b263",
          "status": "Created",
          "code": 201,
          "responseTime": 6759,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4018a376-ef00-4349-ad14-7d41eb7ef2ef",
        "cursor": {
          "ref": "4daeeed1-8e5c-450a-830d-f6e1e828c8e3",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e4586b0f-f7e5-4435-bd8d-05a5a145d7fd"
        },
        "item": {
          "id": "4018a376-ef00-4349-ad14-7d41eb7ef2ef",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "28936f2f-d08e-4dd7-a344-1e0b6d4e8149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f1c9ff28-9741-4160-9014-42522286e8c7",
        "cursor": {
          "ref": "739b535d-0d58-4680-a500-4b4400fe7889",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3266798a-4deb-4434-80e6-2b4b61021b42"
        },
        "item": {
          "id": "f1c9ff28-9741-4160-9014-42522286e8c7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ebf5a009-bade-4164-af40-2b9e8ff0e9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090529b8-351b-40e9-8e01-875133e7467d",
        "cursor": {
          "ref": "b72239ae-7f13-4b82-93b7-70a38fa55887",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c1a150bf-b5ad-421a-b4ca-7f5c2725e1a2"
        },
        "item": {
          "id": "090529b8-351b-40e9-8e01-875133e7467d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f7cc3e40-8e1d-4c35-ab29-a0ad89fa64aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fccb75-2dc7-4f22-bda1-7cf84a32b4b6",
        "cursor": {
          "ref": "8a258c4a-cfe2-4550-82ba-12cb1f797c39",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e32c5b9f-afbe-4c93-8fad-103719f7a817"
        },
        "item": {
          "id": "a7fccb75-2dc7-4f22-bda1-7cf84a32b4b6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6fb60f1-b979-4bfc-8c98-b4d8939cb47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a664d159-9b29-47f0-a623-75cdb5c92630",
        "cursor": {
          "ref": "14e9286a-6613-4086-b320-507087a1c75a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d2fe97d0-7711-4669-9f39-8633c9e4c42c"
        },
        "item": {
          "id": "a664d159-9b29-47f0-a623-75cdb5c92630",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8abccbf7-33d0-40a7-9647-671123b4e5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05defceb-a4c8-4053-86eb-cad26a14b753",
        "cursor": {
          "ref": "d8e67241-c95d-411a-a0cf-a6e1fb3acd22",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "07f68627-f8b0-4335-97e4-7b3b4faeccfe"
        },
        "item": {
          "id": "05defceb-a4c8-4053-86eb-cad26a14b753",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "83c0260f-d9a3-4354-bec1-59c34dfbe158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4174e0-b325-490b-8b70-0963ab8e448f",
        "cursor": {
          "ref": "758b3cbb-89e8-4025-b5c0-e8324953cc33",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1d413088-2e84-4026-8050-9244d2bcfc4f"
        },
        "item": {
          "id": "0e4174e0-b325-490b-8b70-0963ab8e448f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4507b4c7-046f-4039-b779-b1c24e89f9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad93b529-014e-4e04-bf23-c3f891ed9ac8",
        "cursor": {
          "ref": "e0bd2c46-e883-4c2c-ae4c-428d160b17f0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4b5f7961-b76b-4ce0-9805-d36c2a9566f3"
        },
        "item": {
          "id": "ad93b529-014e-4e04-bf23-c3f891ed9ac8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6aede160-b3d1-4329-b8e9-5b9ff8ec2d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aa2162-8b43-4389-9082-7a857378c0c4",
        "cursor": {
          "ref": "922f5ecc-8cea-4873-916b-ca6a06b67074",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "db8e88b0-dc75-4de1-90e6-7c9c29759669"
        },
        "item": {
          "id": "41aa2162-8b43-4389-9082-7a857378c0c4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ea09fd60-3f0f-45f9-83e2-87ba5337fee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfefc2ed-75f5-40ca-8ce2-67175fc93662",
        "cursor": {
          "ref": "efb4679e-7385-4389-85d7-488a4df08111",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7cd9c5fb-0eed-4b7a-8fa5-d5eeb112dfd6"
        },
        "item": {
          "id": "dfefc2ed-75f5-40ca-8ce2-67175fc93662",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3818e221-e243-47b2-915d-455c9001f36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d999d59c-e4c4-4e16-91a2-e8a27ad78c6a",
        "cursor": {
          "ref": "2f88ed6e-539b-4f4f-b8e6-d99e14a8cdd3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6fd35099-d20e-4a72-b5db-416e549e05d4"
        },
        "item": {
          "id": "d999d59c-e4c4-4e16-91a2-e8a27ad78c6a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2423f550-21e2-4f83-9358-f1ca2fa1b016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1937d97-adfe-49bb-9d50-66371e9e1f0c",
        "cursor": {
          "ref": "88823fde-4231-40da-8797-059f42db3668",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fdc1ae56-9e4b-48ab-a0de-eec44aee415f"
        },
        "item": {
          "id": "d1937d97-adfe-49bb-9d50-66371e9e1f0c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5d848112-b088-49e0-848e-33443efcab4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70e4bec-3fdb-437b-980a-3857d9ed7cd7",
        "cursor": {
          "ref": "2d7ea7c7-acb3-4fb8-beb2-ac5cf5cbf733",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "62252254-c518-4300-bc94-7234dbbfa3a1"
        },
        "item": {
          "id": "f70e4bec-3fdb-437b-980a-3857d9ed7cd7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "39648907-6259-464e-9f09-b1389d547f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321e3a42-4004-4e82-a843-c72a2795a165",
        "cursor": {
          "ref": "15098be6-e61b-4625-80e0-0f09595c09a8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7ef8e7a0-af59-44c4-9b30-ac088160a79d"
        },
        "item": {
          "id": "321e3a42-4004-4e82-a843-c72a2795a165",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fe377653-0c21-4241-95e0-9a0df5ac810d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabb779b-6659-461b-958a-d981be72432c",
        "cursor": {
          "ref": "406a2b67-6dd3-41a4-bf43-e1d5d3229726",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "42d08c6a-2b62-49b4-b9c9-83c48842f8b4"
        },
        "item": {
          "id": "cabb779b-6659-461b-958a-d981be72432c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f09fefa8-2179-4018-89bf-79867961a989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091485b7-04b1-4425-bfda-d89768635474",
        "cursor": {
          "ref": "9a2fad58-a92c-4790-98ad-efa710959496",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "34589071-28ef-479d-84a8-4117bb05ac9e"
        },
        "item": {
          "id": "091485b7-04b1-4425-bfda-d89768635474",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5e1b5896-b0c5-49d5-ad85-0560d5ed4d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154c5de0-80ed-4040-82ce-454d6607109c",
        "cursor": {
          "ref": "84a79331-c74b-40d6-ba66-59e1f4c15c7d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ecae4622-14dd-44a8-8455-4e63ed6a98fe"
        },
        "item": {
          "id": "154c5de0-80ed-4040-82ce-454d6607109c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6d5f9023-dfd1-48f7-aa12-6a8e46733e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4d8b0e-c3a4-413e-9889-1e3ba677f3ee",
        "cursor": {
          "ref": "f7e716a6-7ed0-44a0-afd7-414c5edb7c78",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "590e4df3-d57b-496a-a30d-e566c8aaad69"
        },
        "item": {
          "id": "de4d8b0e-c3a4-413e-9889-1e3ba677f3ee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a7ee91db-cb7e-4cdc-8df5-b03f9712e703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7951bc25-3cfa-463b-9349-6a4a9334a685",
        "cursor": {
          "ref": "f3400827-8f62-47ed-937d-67479e96a459",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c2aa246e-c448-499f-b8e2-09677c64735a"
        },
        "item": {
          "id": "7951bc25-3cfa-463b-9349-6a4a9334a685",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9afa77ae-30c2-46de-a624-960490f7410d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0778b36a-41f7-4a80-b31c-d13f6ea20f8c",
        "cursor": {
          "ref": "fcf6c11e-dd17-4408-94da-4986c51cfb82",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b286bcb6-a6ff-4d75-8ef4-392cb3ce31fd"
        },
        "item": {
          "id": "0778b36a-41f7-4a80-b31c-d13f6ea20f8c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2f74216a-54c1-4a1a-9d1b-12a2941b86a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccfb090-55f8-4415-8158-73b37453b43a",
        "cursor": {
          "ref": "13fef734-b95b-4567-9504-6492ed32a7a7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0d749bfe-ab93-4214-b03a-a5bdab75f56f"
        },
        "item": {
          "id": "3ccfb090-55f8-4415-8158-73b37453b43a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fdf70ac1-148b-4e00-b722-5d37c04bda55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651cbb9d-2ea1-4643-85ed-3f12a02283c1",
        "cursor": {
          "ref": "844e5852-c74a-499a-b018-46cf238a0e34",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "042b6baf-c86d-409b-83f6-875d0ea029ef"
        },
        "item": {
          "id": "651cbb9d-2ea1-4643-85ed-3f12a02283c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0005676f-77a5-4b33-86e6-caa0e2be8a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a241f97b-4b0e-4e68-a229-e1d201d9025c",
        "cursor": {
          "ref": "1d550b8d-3864-4fc6-93df-0ac42726dd97",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "57278c72-e7b7-4db8-8414-b2b05117a8d3"
        },
        "item": {
          "id": "a241f97b-4b0e-4e68-a229-e1d201d9025c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ac9b7a3a-5e47-4f7c-af3a-a46a876e4f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817e1fc1-9873-44f9-96ac-9c5c402e3776",
        "cursor": {
          "ref": "0b711de2-9f29-451c-b0bb-bd4172aac675",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c56c9fac-a889-46e0-87e2-4de585682b0b"
        },
        "item": {
          "id": "817e1fc1-9873-44f9-96ac-9c5c402e3776",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0fc1f786-3877-4e2e-8c5d-650d9e4813ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839e570f-1cb7-489c-83f0-fed23e83f29b",
        "cursor": {
          "ref": "d7d01a70-3319-4eb0-b770-63f9eca97e8f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "84fb42bd-0abb-48e0-855e-e5937d5b04af"
        },
        "item": {
          "id": "839e570f-1cb7-489c-83f0-fed23e83f29b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c23a3090-f9ba-453f-9c1d-fae10ca15d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b185e2d1-283b-4453-a179-31971bf69da4",
        "cursor": {
          "ref": "9a382ddc-8afd-4bfd-91d1-27d9da1d323b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c7ab8c9f-6c1f-4ef5-ab34-1fdbf993d653"
        },
        "item": {
          "id": "b185e2d1-283b-4453-a179-31971bf69da4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b81e17f4-5618-41c4-955b-10b00f5d447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47173ff-025f-4f03-a76e-83943bf487eb",
        "cursor": {
          "ref": "42590685-6571-4c4e-9940-4963f531bb50",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fcd74dfc-76b0-4e69-a90d-5db402fad7b3"
        },
        "item": {
          "id": "e47173ff-025f-4f03-a76e-83943bf487eb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2f1cc350-7da5-4206-ad54-0f333304e26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b04f35-e372-4032-a7ef-0e6235c8e390",
        "cursor": {
          "ref": "a62eaae3-0867-431f-b57b-5a950b8e4864",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5186528f-9e04-43ee-8c39-87d995b3314c"
        },
        "item": {
          "id": "c2b04f35-e372-4032-a7ef-0e6235c8e390",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "93a2d169-2be0-434e-9ca3-7085479e8fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1744066-6962-4548-b6e6-299fba4f6d4f",
        "cursor": {
          "ref": "d0387b63-58fd-42d3-aa32-a77cca6395fa",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "187dbfe0-95f3-4840-a8f1-146f7d5ecd6b"
        },
        "item": {
          "id": "d1744066-6962-4548-b6e6-299fba4f6d4f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3b2318fd-94e6-4938-adee-daedaf2a97b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff60a18-6538-456a-aee9-076f7115ce59",
        "cursor": {
          "ref": "84b1f260-23f9-448d-af58-90273ea28e75",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f8bdc0f2-abf0-49a1-9382-40f7e7be81f3"
        },
        "item": {
          "id": "9ff60a18-6538-456a-aee9-076f7115ce59",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "af03970d-4ce5-47e1-9c8f-82750d3d3694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55d9544-445c-4994-b44b-ba091918514d",
        "cursor": {
          "ref": "96240139-c2c3-4e51-837a-5740c1dc5cdb",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b550a3eb-67ba-4214-8c41-45de5f64922f"
        },
        "item": {
          "id": "c55d9544-445c-4994-b44b-ba091918514d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab0e83a0-f7b7-4481-8622-477e29b43cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ba2c98-0647-4a65-baae-a5e0ec82a595",
        "cursor": {
          "ref": "a8bd870d-b91d-4b3c-adef-bbfcb5563387",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e4b0c926-dbff-4f16-8480-4bd3cba3d451"
        },
        "item": {
          "id": "12ba2c98-0647-4a65-baae-a5e0ec82a595",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b9bdde02-b38a-44bb-bda6-6a3d8f3f0ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57456396-4eec-402c-8194-b8865fadbba1",
        "cursor": {
          "ref": "7221489f-2437-4efa-ab03-bcf452d3a9ea",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1ed8cbd4-7033-48ee-890c-00480287d351"
        },
        "item": {
          "id": "57456396-4eec-402c-8194-b8865fadbba1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "106d8ced-b1ff-4cff-854b-f42819dbe73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d355f0f6-34eb-46e2-8f0f-5e09e351d82a",
        "cursor": {
          "ref": "141bb7ca-e040-4764-a14e-9bdcdf81a58d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b76eb44a-2618-446e-9656-b429fbe1b9a5"
        },
        "item": {
          "id": "d355f0f6-34eb-46e2-8f0f-5e09e351d82a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b6b72f16-a5de-4c82-a403-2a06ad798864",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd25a3a-e893-470e-8582-2835c0d31928",
        "cursor": {
          "ref": "9f08e877-8340-4d7b-bcd5-b8cfbec8108e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a370aa8d-d2a1-4e82-8594-3f51fb1ffd38"
        },
        "item": {
          "id": "1bd25a3a-e893-470e-8582-2835c0d31928",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "34b4bf2d-1202-4fa7-8808-02ba45b35251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902ef2cb-876a-4a09-a405-7410fa52abc7",
        "cursor": {
          "ref": "60405544-fa36-48ff-8d89-525613c88400",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "04283d29-fe13-4c8e-8860-f7509cf46640"
        },
        "item": {
          "id": "902ef2cb-876a-4a09-a405-7410fa52abc7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d72fabeb-ab1c-4afa-996d-edd67377af52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f88253-daca-4b32-bb7b-a217d02b1107",
        "cursor": {
          "ref": "fffd851d-7c00-4948-9128-ded5c55e07ac",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "422b6586-9072-481e-abb9-64939456d32f"
        },
        "item": {
          "id": "41f88253-daca-4b32-bb7b-a217d02b1107",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c30ca586-bc43-42c0-a06f-7af52bc03886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4b137d-f1a4-4f0b-b32d-29026e4f9b5c",
        "cursor": {
          "ref": "1604df5b-2030-46d3-8bf2-794dd500a8d5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3bd477d2-47ae-4403-8665-6c384447b7ee"
        },
        "item": {
          "id": "ed4b137d-f1a4-4f0b-b32d-29026e4f9b5c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2461b01-7560-4fe3-a823-77f2cb22dc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95769a78-fb27-4a47-80ea-7fb1b833a25c",
        "cursor": {
          "ref": "7b745b21-5297-4bb3-bad2-b60d7937fe72",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "198567c9-8b51-40e2-9643-0bc7346dd091"
        },
        "item": {
          "id": "95769a78-fb27-4a47-80ea-7fb1b833a25c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0a9476b7-4d09-4d16-a983-ed234b40eefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cf8390-7f93-4ae1-ba02-97624baad2a5",
        "cursor": {
          "ref": "63fe96af-4936-4dd7-a56d-14950644d9ea",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0d70bceb-cc23-441b-9487-d067ade3ad09"
        },
        "item": {
          "id": "05cf8390-7f93-4ae1-ba02-97624baad2a5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d73a8d55-80d6-4976-83da-f12112fedc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbc502e-ab20-4185-b45e-8fa3bca1c083",
        "cursor": {
          "ref": "bcdc9282-20eb-475b-8756-92bdc3109c09",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "85eb0656-238d-4868-b4a7-ca3efa3e7678"
        },
        "item": {
          "id": "4cbc502e-ab20-4185-b45e-8fa3bca1c083",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "14a7e009-291b-4848-8c38-5c5384429fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eca8ab9-fe6f-4bc5-88be-f45cfa6fe956",
        "cursor": {
          "ref": "25fc7a70-147a-4513-92e9-1aebda58fedd",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "43eaac93-c547-4765-b462-c89b884b2eec"
        },
        "item": {
          "id": "0eca8ab9-fe6f-4bc5-88be-f45cfa6fe956",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3a01efab-5002-4b54-a85e-9350d60ba900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cc305e-6ea8-4100-be85-b8b4d9ac425a",
        "cursor": {
          "ref": "24cf591c-9a53-4cf3-b165-f032b060f823",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "86728731-38ea-443b-8e35-5e7cf8926682"
        },
        "item": {
          "id": "c3cc305e-6ea8-4100-be85-b8b4d9ac425a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1e80b16c-40ac-4895-93cd-e26a93d9b99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7245ab-4017-4b8b-99de-4af8ac51a07e",
        "cursor": {
          "ref": "a7c34817-2892-4db8-883a-364e1752ac99",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1acff2b1-b2f3-4722-987d-7789af9b27ec"
        },
        "item": {
          "id": "ec7245ab-4017-4b8b-99de-4af8ac51a07e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "da4902c3-4e3e-4d42-932a-a09dd8ab633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb2742e-b42f-42e4-b017-c4694e04c585",
        "cursor": {
          "ref": "bee67163-ea50-4cd3-9bbd-b562bed59d8d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6c05e03a-79f4-4c10-9d9f-ea88712f82f0"
        },
        "item": {
          "id": "0cb2742e-b42f-42e4-b017-c4694e04c585",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2c8c7285-63ee-4736-b588-0cdde0ce4f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d35771c-1eb0-4f2c-b5b6-592d943e36a8",
        "cursor": {
          "ref": "e96fb5c9-2e08-45b0-b307-987eb04b07ca",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "45d73682-d8ec-484d-b2bd-c9a78c21dd78"
        },
        "item": {
          "id": "5d35771c-1eb0-4f2c-b5b6-592d943e36a8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "06bfdd12-169d-4ce2-8679-ee0b9750cf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c4c67-8f86-4e9c-a4a8-10d88464a902",
        "cursor": {
          "ref": "ad222dcb-6904-4662-9267-68f518eec6e0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cbd8cb52-0bb0-4464-8b6f-55a8794f100f"
        },
        "item": {
          "id": "f61c4c67-8f86-4e9c-a4a8-10d88464a902",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4fe966d0-ce00-4518-b5ad-78ef51dc3431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d738a2-0190-468f-8f69-c231cc44ae6c",
        "cursor": {
          "ref": "d817a974-739e-4286-b9cb-58b57bbbf108",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "855ccfd0-35e8-4fdf-970d-5d643bb9e7ea"
        },
        "item": {
          "id": "f7d738a2-0190-468f-8f69-c231cc44ae6c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8c360fbe-9e1e-4392-893b-608298c029f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dd57dc-eeaf-4c08-9c89-4aac4b5476a1",
        "cursor": {
          "ref": "19e5ac75-44ad-4585-b8f9-df2fac5b38a4",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8f1aeefc-8e2d-498c-b4da-23e039022cb4"
        },
        "item": {
          "id": "a4dd57dc-eeaf-4c08-9c89-4aac4b5476a1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "082ecb8f-2b13-4542-8512-e07df7186168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47136f19-233b-4272-9255-af55914900db",
        "cursor": {
          "ref": "63698499-e11a-439a-9fad-ee22a5a50d8c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "adc5a25a-edbd-4347-a5cd-e854647a34c3"
        },
        "item": {
          "id": "47136f19-233b-4272-9255-af55914900db",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b6558f8e-476f-4167-b9f0-a6b4032d603d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13d889a-4a7e-4f9f-b827-9b28b65a0c7e",
        "cursor": {
          "ref": "ed35510c-61fe-4a42-ac03-52fee7f90cea",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c510d339-2b62-48bf-9593-d12dddeb5d43"
        },
        "item": {
          "id": "e13d889a-4a7e-4f9f-b827-9b28b65a0c7e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "459dca86-145d-43db-95cf-743e7373941e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314a15c7-1b41-40e9-af67-dee5d85e543c",
        "cursor": {
          "ref": "6d4163ca-ecb3-4747-8e73-9c611fd4fb1f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7f02483b-d590-421d-99ab-c2c54ec92d73"
        },
        "item": {
          "id": "314a15c7-1b41-40e9-af67-dee5d85e543c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e0fbc453-15e8-4af2-90ac-e8d0f5704b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690e23fd-194f-4f27-8425-1553e4c29a61",
        "cursor": {
          "ref": "024666cf-ff86-4a22-be94-e0762f4ce0ab",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9cfc3aca-5c7b-4870-ab52-97e70b968565"
        },
        "item": {
          "id": "690e23fd-194f-4f27-8425-1553e4c29a61",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2c1ede7c-f329-4d6b-b24d-1bb271384a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff8bbfb-792b-4495-a73c-133e0e81d286",
        "cursor": {
          "ref": "b6bd5e3a-bd18-4c32-8ebe-15f4835ca015",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9433d791-96d9-44ab-a573-da3ab7e2d947"
        },
        "item": {
          "id": "aff8bbfb-792b-4495-a73c-133e0e81d286",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ad65d7e-59b3-46eb-8bba-cb7e495d9587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ab3484-427e-435b-afe0-4ba7e7b10451",
        "cursor": {
          "ref": "fa37f55d-7fee-451e-9919-3fdf7fadfb98",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b59c64e6-0b3c-4c1c-93cf-a32e10adb110"
        },
        "item": {
          "id": "68ab3484-427e-435b-afe0-4ba7e7b10451",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e4879432-14d3-4989-a5b4-6b56813db028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547fa94d-d288-48b8-880e-1b694bf43160",
        "cursor": {
          "ref": "d4feeb99-fba4-4a93-ac92-289b9bd873ef",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d4e522c5-0513-44b1-aa5d-e7f7ba1a4098"
        },
        "item": {
          "id": "547fa94d-d288-48b8-880e-1b694bf43160",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "498a8744-8e9e-4443-943e-6c131d9fde1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f93a05-75fd-4b6f-9715-81d627254245",
        "cursor": {
          "ref": "384ef96a-fe67-4223-bc50-7a124e373d68",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3f238f94-1e94-4127-9057-ddcc80f07b78"
        },
        "item": {
          "id": "31f93a05-75fd-4b6f-9715-81d627254245",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ef0a3047-601e-4e5b-bde7-c83e20ce24bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e63923e-bb43-4844-8e8f-c1c6f3525213",
        "cursor": {
          "ref": "a126f685-c496-4958-a26a-85d3cc4df4f5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4494fa71-6c47-47da-8c5b-f8b3fee797d5"
        },
        "item": {
          "id": "7e63923e-bb43-4844-8e8f-c1c6f3525213",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2cece9ff-dc21-4257-9ca3-5fc6e281db55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90945ce-c6ea-4277-a89c-0fbc1a3c6a58",
        "cursor": {
          "ref": "d208dc95-924a-437b-85c4-da462ae2fb13",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "95c7ba7c-d5d4-49a8-8630-fe9effea129d"
        },
        "item": {
          "id": "f90945ce-c6ea-4277-a89c-0fbc1a3c6a58",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b11a6050-074e-41c4-b459-92db3177d9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1f612e-496f-4957-a644-94f08ee3dab4",
        "cursor": {
          "ref": "81507e89-252b-4112-bb47-42ae48772362",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b81613c4-1220-4093-a817-342560bb7fcf"
        },
        "item": {
          "id": "9a1f612e-496f-4957-a644-94f08ee3dab4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d0c5e2f3-da55-479c-9ef0-2856efe95b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9e279c-c480-4528-a19d-67066911c5c4",
        "cursor": {
          "ref": "38f122b3-1c3a-4075-8533-90f473fecfee",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "67e3a733-1c20-49df-afd4-95e291c15901"
        },
        "item": {
          "id": "eb9e279c-c480-4528-a19d-67066911c5c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9f2334db-4112-4d81-8d39-1b404b71cab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349a98de-8bb0-4b53-bca1-d65fb0e53f86",
        "cursor": {
          "ref": "325a1f03-5671-4bee-849d-a9d824c3b9f4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "20e797a2-69e6-467f-bd9a-950827c1d28c"
        },
        "item": {
          "id": "349a98de-8bb0-4b53-bca1-d65fb0e53f86",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2ea67593-d1b6-48cc-8d48-1dfde2dc79c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058db3a8-8bff-41aa-895f-cad5c9c69176",
        "cursor": {
          "ref": "b25ce062-c643-4194-9f35-3ab0df68bd0c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "236e33c4-9fc2-425b-8b8b-0e2e49b06809"
        },
        "item": {
          "id": "058db3a8-8bff-41aa-895f-cad5c9c69176",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1495c4ee-cb9f-4107-920b-e5013281f41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b92d8c6-ee01-4429-9292-2596336ed9e0",
        "cursor": {
          "ref": "9e77ed83-d236-4c93-b0fe-1d6b3082ab06",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4f0f5a65-f5ec-468a-850d-c6ae978ec9d0"
        },
        "item": {
          "id": "6b92d8c6-ee01-4429-9292-2596336ed9e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b4bc216c-a251-4b9e-9e3f-2f75ea6ba005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ef5a97-e787-40bc-a6af-3b7125cf07fc",
        "cursor": {
          "ref": "6fa7cce8-5e96-484c-ad74-6b9bc06938aa",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2016777f-7287-4fe5-8915-2c7c0c609667"
        },
        "item": {
          "id": "23ef5a97-e787-40bc-a6af-3b7125cf07fc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f9c7ab07-8e99-438a-91e1-01fa1f2123d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe88e64-b294-4514-bf4e-9881634c06d5",
        "cursor": {
          "ref": "a9b648d2-3624-467c-8d82-5fb72bb06670",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "08283584-04a8-4f90-ba34-f071c2aac394"
        },
        "item": {
          "id": "ffe88e64-b294-4514-bf4e-9881634c06d5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4b625146-9de0-4b71-95cd-f88515e68f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178c5e06-ea34-423f-9214-ab5ceff602ae",
        "cursor": {
          "ref": "a0623954-2868-4453-8ce4-f1825496e330",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cace1f95-4c60-4e96-affc-acee2c46a3fb"
        },
        "item": {
          "id": "178c5e06-ea34-423f-9214-ab5ceff602ae",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6a973ea3-13b4-43ee-8302-add5ca20549d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cb2fb1-e8c3-446f-b47e-f9717b1417dd",
        "cursor": {
          "ref": "359000d9-5444-4c02-b303-2dc8822a27d2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "abf003d4-b9ce-4dda-b859-59b25c152e22"
        },
        "item": {
          "id": "c4cb2fb1-e8c3-446f-b47e-f9717b1417dd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d0fc0017-c8ef-4b27-8e51-b708a80b8dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea6c003-d974-4d21-82d8-f8dac70367e2",
        "cursor": {
          "ref": "d74e503e-3d16-478e-86ce-5ba1bbf2bb09",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "551e493e-b0b5-44f3-a7f4-334077724325"
        },
        "item": {
          "id": "cea6c003-d974-4d21-82d8-f8dac70367e2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9ee86afc-44a8-493a-8c0b-c99fd97333b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3874314-cf2b-4927-a81f-c241f28eb2ac",
        "cursor": {
          "ref": "66f06051-bfa6-46af-a766-491a9c5f4553",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2074ac12-22c6-460a-9ac4-161dc7ab4944"
        },
        "item": {
          "id": "d3874314-cf2b-4927-a81f-c241f28eb2ac",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0e8e6b6e-e0dc-4c96-a3ea-0224b89b05c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9f0a45-18ba-4912-9153-457f5cae902c",
        "cursor": {
          "ref": "5ee8ac19-2553-4deb-bbca-7e4554344f43",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4e6471af-d635-43f1-9eea-51fb041ecc40"
        },
        "item": {
          "id": "db9f0a45-18ba-4912-9153-457f5cae902c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "01078662-2b50-4234-8fcc-73ad8faa2a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c82dcf2-4bf0-4a56-a528-6186514f8651",
        "cursor": {
          "ref": "5dfb58f8-961f-4ea4-b6df-b7de880d815e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3e6f329e-5cec-446c-9135-e263cb79cb29"
        },
        "item": {
          "id": "2c82dcf2-4bf0-4a56-a528-6186514f8651",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "91b21029-0eee-445a-8e2b-c8a0f82d55f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf954e6-fe03-4412-8cf6-40b740f4839c",
        "cursor": {
          "ref": "86d57873-1ac9-40b5-906c-a3657f749e46",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2ffd8049-5d8e-4462-a848-d8a0a523c4dc"
        },
        "item": {
          "id": "6bf954e6-fe03-4412-8cf6-40b740f4839c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "987383f5-8468-4dc2-b26d-6ccc7169b3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b968fb7-17ef-439d-b596-1ab1f6111b18",
        "cursor": {
          "ref": "39f6f98b-0616-4480-9d10-f6d5120e85ae",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d1ed7b15-d557-48a2-92ff-42010f3c39c8"
        },
        "item": {
          "id": "5b968fb7-17ef-439d-b596-1ab1f6111b18",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3777bbc2-c232-431a-92c6-1c0c9999bb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8f82f2-c99f-4de8-96b8-fe5b29fbc6ea",
        "cursor": {
          "ref": "44608361-340c-4b6a-a570-2d5479eee2b6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "95c90346-5ecd-4ee9-9f9b-15da54c57899"
        },
        "item": {
          "id": "6a8f82f2-c99f-4de8-96b8-fe5b29fbc6ea",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3f3a7385-9ebb-492e-bd68-4c4dad830788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d772e7d-5bce-4847-b94b-502e59a0248f",
        "cursor": {
          "ref": "d9405b81-5622-4a00-b1d8-43a83f4ede16",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "412822f2-d5ee-486d-8c53-91dfe946d2a7"
        },
        "item": {
          "id": "2d772e7d-5bce-4847-b94b-502e59a0248f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "54b914ad-16b9-410c-8ea8-14c510faba23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25468ce4-d97a-4912-b4d0-0b71519c9d85",
        "cursor": {
          "ref": "67af643d-a805-463d-b422-5cc47da9ea1d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e38d622b-13b9-4edd-a29a-00d14e2f2b94"
        },
        "item": {
          "id": "25468ce4-d97a-4912-b4d0-0b71519c9d85",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "57d47c2b-6640-4aea-bca5-a13433e855ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ffc30a-c7ac-43f6-b089-4fdf07ff48a7",
        "cursor": {
          "ref": "c5cce5de-80c2-46a1-bfe9-6902e2190dcc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "24653c02-2104-4670-96e1-a216605a1fed"
        },
        "item": {
          "id": "56ffc30a-c7ac-43f6-b089-4fdf07ff48a7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d04e9982-5caf-4f44-a3ca-25b01a068ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49360289-1672-4beb-930e-663384ad33c2",
        "cursor": {
          "ref": "b98018d9-aa2b-4552-a7d5-6040dd1d6347",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1d99f4d4-0669-4147-b453-a08837141b2a"
        },
        "item": {
          "id": "49360289-1672-4beb-930e-663384ad33c2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "30dddbd5-909b-44bb-a93c-c75d0116abbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e51858-4d75-4f21-aeaa-e6d65b75a946",
        "cursor": {
          "ref": "c31d26e5-02ea-4fef-999c-fd91467de913",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "42074d82-143f-4b75-b5e7-5b2dbc856bc2"
        },
        "item": {
          "id": "f7e51858-4d75-4f21-aeaa-e6d65b75a946",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "07edd6b7-7ba1-4c13-a1b6-2b09a6cffdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b853e4d7-28df-4215-b2b7-f477e36306dc",
        "cursor": {
          "ref": "212393b2-fe1e-4ac2-94b0-960cc4456367",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64fe3dc7-8ce5-42de-b5a3-1386321f6880"
        },
        "item": {
          "id": "b853e4d7-28df-4215-b2b7-f477e36306dc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "155d737c-928e-48a6-8325-ab1afc9c0fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130a86b0-1599-4b8b-abfb-76aebcb6b450",
        "cursor": {
          "ref": "eae85bcc-ee32-4310-b1e9-399e74d596cd",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dbebe1c1-65b5-49a0-8fc3-f28bd9bc8758"
        },
        "item": {
          "id": "130a86b0-1599-4b8b-abfb-76aebcb6b450",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e1a200e1-9af6-4d1f-a47c-ead20b0d7fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f11eff7-0e3e-4824-b4f1-3eb431fd8b84",
        "cursor": {
          "ref": "9a7ce69f-c6e4-4c88-a25b-e7c01661590c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d74e4362-0846-4ffb-bb22-42a0b8e4c431"
        },
        "item": {
          "id": "2f11eff7-0e3e-4824-b4f1-3eb431fd8b84",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dd4ee423-c9c2-445a-9941-55517d195e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3391869a-dad8-44a8-b658-3c82adcd34ce",
        "cursor": {
          "ref": "fbef338a-197a-4b66-8e27-2eadf61b4cca",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0a2ca35f-3b52-4dbc-b257-d230b1a6cb49"
        },
        "item": {
          "id": "3391869a-dad8-44a8-b658-3c82adcd34ce",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d2947bb3-8123-4df7-86bb-d699435007c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696b7fa7-0874-4925-a57a-b180fd9c1e95",
        "cursor": {
          "ref": "1770e08f-eedd-43e6-9a47-1ab3b133930c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f859a876-426f-4e2b-a536-93cc70cda046"
        },
        "item": {
          "id": "696b7fa7-0874-4925-a57a-b180fd9c1e95",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4d443c55-3706-40fc-82c0-a1f05772065b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78bbfb7-566c-45e3-b60b-7f68cacdd92a",
        "cursor": {
          "ref": "f6f79c33-c71c-4f18-b977-a41404d025b3",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "116ea00d-ebec-4442-9e5f-d94aed0da96f"
        },
        "item": {
          "id": "b78bbfb7-566c-45e3-b60b-7f68cacdd92a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3f6c24fc-4741-4f33-9057-6b8c7f199967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5710334-25fc-430c-b6d7-147083300761",
        "cursor": {
          "ref": "501eba28-4185-419a-ae89-9e81ac17bb29",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6a1e9d51-28d5-4c83-9763-53787e0d9c82"
        },
        "item": {
          "id": "b5710334-25fc-430c-b6d7-147083300761",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4c28cdc4-e243-455c-9a5b-58bf2b1ba76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f20830-5d21-4ec2-b153-75fc664cec72",
        "cursor": {
          "ref": "0f1c5908-95d9-4289-858b-77d8a5933997",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3335ca73-0d89-4efa-91da-737c2ee4e70e"
        },
        "item": {
          "id": "34f20830-5d21-4ec2-b153-75fc664cec72",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b77669b8-342d-45ae-b922-dd2294d585a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4180b3a0-8247-4fcd-9eea-908ac0514387",
        "cursor": {
          "ref": "88f50477-d397-429a-9838-b00cd2098c6c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e6950031-4174-4e2c-9f05-e6f624f20183"
        },
        "item": {
          "id": "4180b3a0-8247-4fcd-9eea-908ac0514387",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "61c7ad49-bc52-4c44-9df3-bc8cdae08357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b94a77-217c-4d7d-b4af-12be11a17ce2",
        "cursor": {
          "ref": "73042c91-cafb-4805-80a7-f9ca9ed5586f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "23b74be8-e699-4620-a3c0-898d09c87189"
        },
        "item": {
          "id": "d1b94a77-217c-4d7d-b4af-12be11a17ce2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "74abfd9c-359d-406f-a2b0-b4dd34ccb264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0507dcf3-14dd-4c58-9cd0-704375786da3",
        "cursor": {
          "ref": "611515f0-6e4e-43e3-b85a-34cd370b6400",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "014903a1-ba66-4eaf-a451-3ed30ba1790b"
        },
        "item": {
          "id": "0507dcf3-14dd-4c58-9cd0-704375786da3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "45f0c5a2-a82a-4609-9969-7e0e664cd1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbedabd9-af09-4e49-8ae3-b3b6d2f1450f",
        "cursor": {
          "ref": "0561d2ca-2a5c-4d38-868d-19ee83b9c21a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "479a6ce1-fdc1-4b2d-9c34-fc446611ca27"
        },
        "item": {
          "id": "cbedabd9-af09-4e49-8ae3-b3b6d2f1450f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4176a085-5473-4173-bc7f-59b5e819fea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e224e49f-fc27-41b6-a017-3765ffb6572a",
        "cursor": {
          "ref": "ac508f9d-4710-474d-aa43-f7ca17f70174",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "91249618-fcfb-4754-ba93-f9654d1e11cb"
        },
        "item": {
          "id": "e224e49f-fc27-41b6-a017-3765ffb6572a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "64470046-f1a3-45c3-9132-1eeebe78bd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7875ada-0ed2-42ee-bdb2-e1c8e2c57684",
        "cursor": {
          "ref": "3ca6d869-1e60-4a15-8007-ac63874548ad",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7142e868-0ab1-42eb-ba1c-f1adce1a0326"
        },
        "item": {
          "id": "e7875ada-0ed2-42ee-bdb2-e1c8e2c57684",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fa512388-fa2c-4e6f-ad31-5b81cbafb246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5003bf6b-a783-4c32-bc04-b963591be809",
        "cursor": {
          "ref": "2ef0ec06-e389-415e-95ec-214df2123a44",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3e1cb1a3-0097-4e96-9461-07fd618daf12"
        },
        "item": {
          "id": "5003bf6b-a783-4c32-bc04-b963591be809",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "714912e4-d250-4b79-bd86-8207dcaaec4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8495b725-6fa4-4488-8db6-36835d36ad07",
        "cursor": {
          "ref": "6314e6f6-cb72-4b32-8fb5-f1b5a1aa5da1",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "aee8efa7-2d11-44f5-9e4c-27920790ec6d"
        },
        "item": {
          "id": "8495b725-6fa4-4488-8db6-36835d36ad07",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1a6e20da-32af-49a7-b532-86741d882af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e265b2e-b595-4f02-a0b3-b4bb8de00a74",
        "cursor": {
          "ref": "48c46113-3968-408c-bbb3-ef67183a720c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3542fdfc-5917-4a13-9614-8d4e5d7aad3e"
        },
        "item": {
          "id": "4e265b2e-b595-4f02-a0b3-b4bb8de00a74",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1df639a9-b9a4-404d-86d9-e609f9a09a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe33a04-bb2c-4b79-a699-16558e7c8928",
        "cursor": {
          "ref": "cead1843-a4c3-41a7-9ffc-4d1eade39422",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "827fcbbc-eaa2-4b48-8dbe-d4f9b0e51f50"
        },
        "item": {
          "id": "8fe33a04-bb2c-4b79-a699-16558e7c8928",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c8396903-b64a-4664-9c4e-e1e34fd01edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62021938-7639-4773-9446-8f1cfd7a0f09",
        "cursor": {
          "ref": "6fdd8061-050d-4bcd-af6e-7b7d2126e2f4",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4358e262-9ed6-4a92-a641-448b9d7823a7"
        },
        "item": {
          "id": "62021938-7639-4773-9446-8f1cfd7a0f09",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5df7169a-1198-4171-87de-90562d16979a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d806a422-1310-459c-8c50-5dedb0b620fb",
        "cursor": {
          "ref": "f3faa31b-eb1f-4d04-a069-3a36a3f1c82b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "abeade75-c477-4221-a0bd-fb268a9012a1"
        },
        "item": {
          "id": "d806a422-1310-459c-8c50-5dedb0b620fb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c8e06dfb-618c-4b72-a89a-8a4430197465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31c09e7-d2ee-423c-a891-15d8229540a4",
        "cursor": {
          "ref": "57adc083-dda5-4c82-9223-1c1e29cd97d1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9f021d5b-8184-4631-941c-816991d2ad1e"
        },
        "item": {
          "id": "e31c09e7-d2ee-423c-a891-15d8229540a4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ec43a096-f904-4d0e-ba5a-d968e45fe06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af86bfe7-877f-4ee3-80ee-6cbfa03381a6",
        "cursor": {
          "ref": "a0010dbf-22e9-4113-8d56-2e8a63f06665",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "45a218fa-fabe-4a46-a726-dde955358768"
        },
        "item": {
          "id": "af86bfe7-877f-4ee3-80ee-6cbfa03381a6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d98137a5-7569-43d3-ab3d-ea13a0d4b99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874786a4-e911-4ad3-92dc-4598e80a2d28",
        "cursor": {
          "ref": "f608b040-1daf-4b11-b81b-6650ebdc69d5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0dccf395-148b-4f67-be9f-ea920c83c464"
        },
        "item": {
          "id": "874786a4-e911-4ad3-92dc-4598e80a2d28",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6c58749e-77d3-4f1c-8155-fc6955a22b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993aeb30-776b-4c5e-8ea1-0f6212a6b60d",
        "cursor": {
          "ref": "37253039-01e0-4d9f-a25b-14d01bd663f0",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6a6d75c8-33a7-4330-9360-ddd42a63c71e"
        },
        "item": {
          "id": "993aeb30-776b-4c5e-8ea1-0f6212a6b60d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "85d478a0-49da-471c-a88f-bf63809fe071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e858b72f-0b4e-4ba8-a082-d198652a7e91",
        "cursor": {
          "ref": "49b3b14e-8dff-4bee-820b-5fa1d3b5e33d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "11b208b2-61fa-4234-9bc4-47dd4bd9d38a"
        },
        "item": {
          "id": "e858b72f-0b4e-4ba8-a082-d198652a7e91",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3d12abba-8f71-449d-abac-74a93896d3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f529c90-cf8e-47f0-bd80-285a6eb4804f",
        "cursor": {
          "ref": "4a3148c3-2631-4dc2-8ebf-5ef52b5d0f36",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e9f17e55-cd64-4b3a-b0af-af434467f397"
        },
        "item": {
          "id": "8f529c90-cf8e-47f0-bd80-285a6eb4804f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5a5e1702-d635-4eaa-a9ee-fc6d1f345293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d3cea9-6b33-44d2-84a7-da307005784e",
        "cursor": {
          "ref": "38df9ad2-e548-4104-94a9-15bec3de30f7",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "82992214-bfa4-422f-98fb-b3c6186ee46f"
        },
        "item": {
          "id": "d7d3cea9-6b33-44d2-84a7-da307005784e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f53ce897-a6e6-426a-827a-c3d855c8a09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769a5945-5699-4a52-81e2-9b54e63939a2",
        "cursor": {
          "ref": "cfd57fa9-11d4-4f6d-890d-5b0b89f4c5aa",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d7c188c8-4fc2-4282-807e-1345a82e4354"
        },
        "item": {
          "id": "769a5945-5699-4a52-81e2-9b54e63939a2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "41196a5c-ad5f-4d1a-b71a-477c3aa02761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85da61c-034c-4d61-acd3-10b0e89bf995",
        "cursor": {
          "ref": "7e4471ad-de9c-4a28-8d84-a08094f70380",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "75a021ac-f5c8-4120-a414-8ffd8b926ae8"
        },
        "item": {
          "id": "b85da61c-034c-4d61-acd3-10b0e89bf995",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a9600a1b-9bd1-4a44-9715-0f63f1f2c4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886dca7c-75eb-4cf6-9bb0-eb70f0aeafdc",
        "cursor": {
          "ref": "cc6bcb54-7d54-40f9-aa9c-104469298afc",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c712b4e8-16e1-4387-9919-d3887058f4c1"
        },
        "item": {
          "id": "886dca7c-75eb-4cf6-9bb0-eb70f0aeafdc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4962aa36-1340-4ea6-a61a-bd7c7c44f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e985047e-fb6a-463c-a361-23c5d04a4330",
        "cursor": {
          "ref": "b8e5e8af-341d-469d-b5bf-c3f78acb83d4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a61a642a-3261-4c8e-ade9-8d9d02fd98a1"
        },
        "item": {
          "id": "e985047e-fb6a-463c-a361-23c5d04a4330",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e3642511-3a98-4bda-b349-5f24fb5ec9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1a2f71-99f3-4fe6-a5ae-c4f5e9322f9f",
        "cursor": {
          "ref": "908faf18-2ee8-4a67-ac49-e5384d30579b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5d258dc6-e077-4183-b1d8-1a803513b3b6"
        },
        "item": {
          "id": "6f1a2f71-99f3-4fe6-a5ae-c4f5e9322f9f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a7ddc720-598a-430f-82a7-918d99698848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc60766-0b64-4f26-9f9e-57182c21fd24",
        "cursor": {
          "ref": "69591a71-6148-4161-a729-3f55198a674a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6af9d349-f679-4256-95dc-118532ddc921"
        },
        "item": {
          "id": "bbc60766-0b64-4f26-9f9e-57182c21fd24",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e43b8235-517a-4bd3-8f15-8cc16b587492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d34f23-8b1e-4fc0-965b-5feee39f3998",
        "cursor": {
          "ref": "92bdb192-a85e-4fae-9163-7cb3c63b5e82",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dd49870d-ea72-4a92-9a89-dc2d39f1991f"
        },
        "item": {
          "id": "32d34f23-8b1e-4fc0-965b-5feee39f3998",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "406df398-fbeb-4a51-9955-346d1faea3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe3e9be-7618-475a-94aa-88926e4cfe57",
        "cursor": {
          "ref": "bd926920-d772-4bb9-bd10-df049cd99f3a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cf9ead84-e521-4cd7-bb93-046994ef133b"
        },
        "item": {
          "id": "cfe3e9be-7618-475a-94aa-88926e4cfe57",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9a877aeb-2a56-449c-a0f6-07cca38c4e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f931ec-c248-44f9-985b-e945ab1bff1e",
        "cursor": {
          "ref": "5ab9fef9-74ac-4933-ae84-e548557bef80",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "64a78211-2b9a-4e0d-a98f-457bf4dab762"
        },
        "item": {
          "id": "21f931ec-c248-44f9-985b-e945ab1bff1e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5f071a93-a514-4fdc-91f0-232e5337f525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840b1fd6-c89b-408f-965a-e80cd8634887",
        "cursor": {
          "ref": "1f9a3ff8-d26f-4ac2-b82e-311264c7d4a4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5a91e1c1-1b71-4874-bb66-1922de5dfec6"
        },
        "item": {
          "id": "840b1fd6-c89b-408f-965a-e80cd8634887",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2849e5ef-16e8-417c-ae6c-3ad88b4fc854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15e78ec-cea2-4ecc-b0e3-5285d6eaba51",
        "cursor": {
          "ref": "06bae21e-2aa1-4c58-a4dd-28028ea14cd8",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7ba3bd1c-f866-456c-a826-80fb4e70a4b4"
        },
        "item": {
          "id": "a15e78ec-cea2-4ecc-b0e3-5285d6eaba51",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4494c648-af69-4509-abad-e0d1f555ab9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c100a2-fe10-44a7-8767-e5006f5f990d",
        "cursor": {
          "ref": "164d89d5-0355-4517-9811-8ece31da8f00",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fb884820-f98b-4290-89b8-3a9c4f4e2092"
        },
        "item": {
          "id": "96c100a2-fe10-44a7-8767-e5006f5f990d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "60260b7f-f8ca-4e92-b14f-a2ab537a4274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9178bf5-bf4c-4480-bd86-06980010592c",
        "cursor": {
          "ref": "4e954629-4222-40a2-8087-c372dfbe3f64",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "015976a5-abb8-4ec9-97dc-4dfa343e2a06"
        },
        "item": {
          "id": "b9178bf5-bf4c-4480-bd86-06980010592c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b5c57ac7-a771-4c37-afdf-4cc4b1a6a448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d392f184-7881-4584-a91b-2dea2f287f26",
        "cursor": {
          "ref": "495593b1-c092-4fda-9f85-76b8b07a46d5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2daf1331-4fbb-453c-99db-583a5c58f735"
        },
        "item": {
          "id": "d392f184-7881-4584-a91b-2dea2f287f26",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "87d41b85-3527-423a-8f36-1c21e1f3e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367718c-d8b0-43de-a2d8-f7d98672bd72",
        "cursor": {
          "ref": "2ffe6d3d-4df2-477f-a13e-5f5c0e076c12",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e1ffd907-7a52-486a-aefb-c46612176053"
        },
        "item": {
          "id": "e367718c-d8b0-43de-a2d8-f7d98672bd72",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6758d8aa-dc28-48f2-931c-341cf0117f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb25cb3e-0d93-493e-a7de-6ad437c1d4e3",
        "cursor": {
          "ref": "8619f227-6d2c-4e82-9a45-aaea859bf7ef",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "99aaabb4-439a-4cc7-ba9f-2aa0c2aac5f3"
        },
        "item": {
          "id": "cb25cb3e-0d93-493e-a7de-6ad437c1d4e3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d8d30446-d703-43f8-aa57-50fbda2a3be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e5dc8e-044e-45de-9caf-dc96365c3c65",
        "cursor": {
          "ref": "ae2fe118-8296-4b7b-a62c-5c6243f21964",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "db489f71-6467-423c-84b5-74e62d702296"
        },
        "item": {
          "id": "f5e5dc8e-044e-45de-9caf-dc96365c3c65",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6f442949-c7cf-4188-9a61-a5b7e6a74356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472a0ff7-5d3f-4a11-8af6-b2ecf1ce47eb",
        "cursor": {
          "ref": "19dbb5c4-ddd3-4099-bc3d-41833f66bfa2",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "34ae55d1-6270-492d-a5bb-3d72ce23f904"
        },
        "item": {
          "id": "472a0ff7-5d3f-4a11-8af6-b2ecf1ce47eb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ffca026a-5217-4df9-ba07-b449afe3d3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd72442-4100-4bf8-b98f-72cdf9e2bb57",
        "cursor": {
          "ref": "dba3ea72-9de8-460a-af9c-0d490b8b3968",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6570fd83-0823-46f0-87dc-aade5fd92e3c"
        },
        "item": {
          "id": "bcd72442-4100-4bf8-b98f-72cdf9e2bb57",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4a1186d-4ef0-494b-bdb0-36044e9b07c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8f347b-1a83-4e8e-a3b0-b711f1f19b1a",
        "cursor": {
          "ref": "0d9171a2-369c-4e84-893f-e878d1b3d8a4",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2f24e531-6efb-4bb4-ab9b-27dacfd407d4"
        },
        "item": {
          "id": "ad8f347b-1a83-4e8e-a3b0-b711f1f19b1a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "314f1a4f-c5ac-4e78-965f-13abe567bef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1dcefe-40b9-4f91-bf76-638e4c94ddf3",
        "cursor": {
          "ref": "868da452-3b39-44c6-924a-ed2f025c9845",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b77f2afd-5fec-447f-991b-be8d91cfdba3"
        },
        "item": {
          "id": "9d1dcefe-40b9-4f91-bf76-638e4c94ddf3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e748ccb5-6710-404e-bd1a-f15753303522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72180922-a3d9-4138-a643-ef46da9c7291",
        "cursor": {
          "ref": "a1c9a5af-1ee0-4495-9253-85377b13a684",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "68135f26-67e4-4fb3-a1a9-267f829ead62"
        },
        "item": {
          "id": "72180922-a3d9-4138-a643-ef46da9c7291",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "294a4f2d-b882-4cb8-9dc6-3da77da00e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dc5d58-d603-4cc6-8ab9-ec17eab34e7d",
        "cursor": {
          "ref": "8acb8dff-8305-439b-9e4a-6a2d3b38e2c6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cc2ac197-8287-489b-beba-14f49b332825"
        },
        "item": {
          "id": "38dc5d58-d603-4cc6-8ab9-ec17eab34e7d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "311c0a5c-5c0e-4031-93b8-33ef17c8f419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de385cb2-183b-4f8e-af23-5500e4db2c59",
        "cursor": {
          "ref": "f91b1fd6-6440-4181-b166-33efb61025d8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "86bb1ebe-c11e-4c2e-8066-752c74dc2d7e"
        },
        "item": {
          "id": "de385cb2-183b-4f8e-af23-5500e4db2c59",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d3720475-ac21-49dc-bfa9-66a3acf1cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a3d50a-6a72-4903-b902-85773cb31130",
        "cursor": {
          "ref": "d689acca-27d7-4e15-b4be-775c4aff1ff2",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e25101eb-9682-45e9-a87d-fce45be124ff"
        },
        "item": {
          "id": "91a3d50a-6a72-4903-b902-85773cb31130",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9526e094-2e98-4564-9f30-dcab000628b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d39beaa-8e1e-4642-8057-e1dfc70d9f37",
        "cursor": {
          "ref": "85507460-8e24-49d7-834e-14ae2f649e7d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bfd18f5d-4d7e-4dda-8122-f593cb65b716"
        },
        "item": {
          "id": "8d39beaa-8e1e-4642-8057-e1dfc70d9f37",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "11f9ebd0-da32-4723-b82d-c4e532854ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e1cedd-11e4-4f39-ae07-687a75b47776",
        "cursor": {
          "ref": "6575326a-832f-4768-a4ae-3863557ff703",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "155d9eb3-69de-40c7-8933-9253608bdf4e"
        },
        "item": {
          "id": "79e1cedd-11e4-4f39-ae07-687a75b47776",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ce19b77e-faf6-447a-b2bf-cf6dfe99f79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870c3c1f-baf0-486b-8edd-53bccbb687fa",
        "cursor": {
          "ref": "450088fe-e97b-475f-aff3-ac2930ec784d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d8e5dd0f-1aa4-49ee-99ad-8035450321c5"
        },
        "item": {
          "id": "870c3c1f-baf0-486b-8edd-53bccbb687fa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "db3cd38e-c093-4287-8ea5-4821b7730283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a43350-6284-4f13-8ad9-c1bd17d3dd55",
        "cursor": {
          "ref": "75ed39fb-ba48-42e7-b4d6-f61bf291b388",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20c563b3-7fc2-475f-8736-c263a152eef6"
        },
        "item": {
          "id": "a0a43350-6284-4f13-8ad9-c1bd17d3dd55",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a7b3db03-5a3e-4c0f-9a9e-e44eb75740d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed726d3-3825-4c8a-91bb-5eb8e6b875bf",
        "cursor": {
          "ref": "768fe00f-0d73-40d7-8b99-8b9950c864bb",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ba45594d-4ced-4a45-93e0-385e1a8e7993"
        },
        "item": {
          "id": "6ed726d3-3825-4c8a-91bb-5eb8e6b875bf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "62476883-74f5-4408-9fdf-342f70479c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b26b71-0a5f-446b-9fda-e39dc3e36c46",
        "cursor": {
          "ref": "cf488c4c-444f-4e66-98e1-1554d21b3223",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e3c7ca2b-d519-4ebe-af1a-d6a0b72ae9a2"
        },
        "item": {
          "id": "51b26b71-0a5f-446b-9fda-e39dc3e36c46",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "02dc7ed3-e7b7-4872-a0f0-da4143c45aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3c6368-6c22-4452-beca-9cb0b3e7c3aa",
        "cursor": {
          "ref": "be9708a6-afdf-4a66-a944-b2a4ade0dd57",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4944c2b9-f6f5-4899-b501-583823c5d55c"
        },
        "item": {
          "id": "da3c6368-6c22-4452-beca-9cb0b3e7c3aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a113a0a2-30d5-4330-8b5f-5371aeebda3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe3336f-ceed-496b-98e4-702e8f95c032",
        "cursor": {
          "ref": "b84dba84-8c55-41ef-aa00-916d0a33ad92",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "88921cf9-67a1-4f9d-9f69-daa37529cda1"
        },
        "item": {
          "id": "dbe3336f-ceed-496b-98e4-702e8f95c032",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4b254cfb-a21e-4d83-9b89-186a30598504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8c3b1c-e397-49e2-aa83-6dd8c5ec0a2e",
        "cursor": {
          "ref": "81ec3950-e2bf-4e2e-ba25-7df92c1cf8ed",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bdadd224-be1f-4fd5-b856-a8935fa602d0"
        },
        "item": {
          "id": "4c8c3b1c-e397-49e2-aa83-6dd8c5ec0a2e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5b891187-6f6a-46d2-94cc-0eec6423f298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974ca8e7-63d5-4efe-83b3-37a31d2124cb",
        "cursor": {
          "ref": "40e49dd4-1a87-4c61-ac7d-56a1aa94ad6f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "86da6db7-1721-47aa-89f1-62d5102663df"
        },
        "item": {
          "id": "974ca8e7-63d5-4efe-83b3-37a31d2124cb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5ab0dd0a-7e3b-4899-8d0b-db89c6ceefa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b89e07-3984-4ee8-91e1-7b88bee9fa5e",
        "cursor": {
          "ref": "5cfea050-6501-473b-8284-1f1d00993cb4",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dd498c9b-8480-4e7e-ad06-87f78b4a136d"
        },
        "item": {
          "id": "c2b89e07-3984-4ee8-91e1-7b88bee9fa5e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d0cd7064-1e06-451b-a1ad-6dbde2ecf472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6070f01b-88cd-4452-bc92-a92a8b6227c7",
        "cursor": {
          "ref": "139daf2e-93b3-4e1c-a8d4-ee94fa3e53b9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "185e7d28-a07c-4aae-b50a-e5e15917d583"
        },
        "item": {
          "id": "6070f01b-88cd-4452-bc92-a92a8b6227c7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "99d3d34d-446c-4ac9-ad95-b84c6a59ce28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f46b4fb-8ccf-4b68-a560-5a871aa2a120",
        "cursor": {
          "ref": "7f9b322a-3ecd-40ab-ab84-e4c5738e4232",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4cd3387b-8996-49c3-afd7-f429bd976aee"
        },
        "item": {
          "id": "0f46b4fb-8ccf-4b68-a560-5a871aa2a120",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dbd3a3d7-f306-4988-a85b-523f58489ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a202d879-69de-4726-9a1c-fc11c54d5c35",
        "cursor": {
          "ref": "425252f6-ce0b-412a-84df-ee004692a47d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "edc51732-a4ab-4236-98f3-a66d381d6c84"
        },
        "item": {
          "id": "a202d879-69de-4726-9a1c-fc11c54d5c35",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "121acff2-3296-41f7-9427-7f64f44cb5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d244351c-3835-47e8-93fd-50a0a2dc0382",
        "cursor": {
          "ref": "61832794-21f2-447d-9b8b-5be639c44056",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "63f82801-dee6-438a-bdb7-e007843c3f70"
        },
        "item": {
          "id": "d244351c-3835-47e8-93fd-50a0a2dc0382",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9b42aa83-7105-493d-96c4-c52071fabd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9d2eba-d454-46f7-b748-71c66a8c0157",
        "cursor": {
          "ref": "00cf0028-2c8a-4541-97de-8f65f0c073e2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "17ac481f-c785-4242-a6b3-3460aeb28d1d"
        },
        "item": {
          "id": "8c9d2eba-d454-46f7-b748-71c66a8c0157",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4cd94f95-a96b-44c6-8765-ffc390f9e52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43705f3-a349-4aee-80e1-08c08f88d695",
        "cursor": {
          "ref": "e253a37b-636a-4e3d-9cce-3415e370ce25",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a9796dab-0680-4e3a-9e4b-6c13cb1b8fa9"
        },
        "item": {
          "id": "d43705f3-a349-4aee-80e1-08c08f88d695",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1ba2f638-2895-458b-bce8-0f0862f87d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedee13f-4724-4967-a81a-b7bec6028623",
        "cursor": {
          "ref": "e747b1f2-d01e-45b6-8fd2-6bd47c78f528",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4da084cb-5087-467c-82a8-1a854a703479"
        },
        "item": {
          "id": "eedee13f-4724-4967-a81a-b7bec6028623",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d51269ea-3fe1-47a8-89f6-64a07d6f786d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d1c281-7709-4e0f-96fd-42913a74367f",
        "cursor": {
          "ref": "47a3491e-8ffd-4e2b-9eab-4c04255bb7da",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d7d1ed06-6d35-4cfa-9819-ff6db505124d"
        },
        "item": {
          "id": "10d1c281-7709-4e0f-96fd-42913a74367f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9492cdea-240c-4b30-b1c3-6a24a93c8565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb4a8ca-64cd-48fb-8b03-0fd39f2a4530",
        "cursor": {
          "ref": "590d2bba-3803-4bb4-bd66-177fed387481",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "87d3a81b-b99d-454e-9139-1e0a2f3847eb"
        },
        "item": {
          "id": "8bb4a8ca-64cd-48fb-8b03-0fd39f2a4530",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1b43d55b-79d2-4620-97b0-32d0bc389ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18934fc-f341-48b4-a85a-ebc844d1617d",
        "cursor": {
          "ref": "05606b12-a705-476f-aacb-b655566e2d37",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2e86be39-1499-4a83-bb44-18a3ef573f77"
        },
        "item": {
          "id": "e18934fc-f341-48b4-a85a-ebc844d1617d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e22d877f-973f-44cf-b5b5-508ff6943feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458aeae6-e72e-4b56-ab56-04069f5d38c9",
        "cursor": {
          "ref": "67f611f5-c422-4024-92b5-14e8ba8695f5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7a91fa1c-0531-4764-a715-15adb93adb5f"
        },
        "item": {
          "id": "458aeae6-e72e-4b56-ab56-04069f5d38c9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "91866297-4891-4353-8769-f0ba0128a19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5606bcd1-689d-4a94-8a63-c15f0c98bb07",
        "cursor": {
          "ref": "ae1c33b5-ba34-4f77-a595-3ebcab4d18e9",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6d7b6dc2-4e21-45bf-93d9-b7251bb0501d"
        },
        "item": {
          "id": "5606bcd1-689d-4a94-8a63-c15f0c98bb07",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f24512c0-2723-4126-ab91-cd0f8fd972b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d8c612-d2c0-4e30-90da-5bf1b15873ac",
        "cursor": {
          "ref": "b52a74ab-08f5-4524-a569-68769d10af3f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "74122b08-a431-4b92-b4e5-91bc10e2d86a"
        },
        "item": {
          "id": "e5d8c612-d2c0-4e30-90da-5bf1b15873ac",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4072dc34-230c-4d10-bda1-5fc09bf2cb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2698742-f269-4d42-9ce2-4b44ec238b61",
        "cursor": {
          "ref": "ca0c4416-11a0-4eb2-bfc9-ffae74fd2e00",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fd9dbd27-5ed8-459f-a730-5fc46c5beaa0"
        },
        "item": {
          "id": "c2698742-f269-4d42-9ce2-4b44ec238b61",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "67d06073-e56a-4b1b-9945-4a7111cec74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23f2fc4-dc77-4c13-b0ba-a45de4d56835",
        "cursor": {
          "ref": "75f030df-b297-4127-9baf-2a8490b19bc5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a0469c2d-27b0-49a7-aa2f-5746adfc75c6"
        },
        "item": {
          "id": "f23f2fc4-dc77-4c13-b0ba-a45de4d56835",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "104ea59f-e085-4994-9913-e928493fc10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c76df8-4aab-4eb3-854a-20fc395eed55",
        "cursor": {
          "ref": "cfe984d6-dc22-4c29-853c-63beb8ecc7c8",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b2d2e6b8-00a2-48ca-8c39-eccf4352078c"
        },
        "item": {
          "id": "d4c76df8-4aab-4eb3-854a-20fc395eed55",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bfbdfebf-eb7d-4f13-9002-5e0b1da6f319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0bd986-79c5-4e94-a4a9-57e6b6034772",
        "cursor": {
          "ref": "d40b2e33-31bf-4d50-ac02-48ef0e087020",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3b6eaede-a838-49d8-a4e8-2c6a2ae25f0b"
        },
        "item": {
          "id": "bb0bd986-79c5-4e94-a4a9-57e6b6034772",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "365caaf0-756b-49b1-9fe0-61eb7237276e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e18bae8-2403-4eb5-bab4-59cd4f282fad",
        "cursor": {
          "ref": "ba762f71-fbd8-4987-9cc1-0eab52879e2e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dd4dfba8-2f69-40c6-abb2-6227317e2e40"
        },
        "item": {
          "id": "5e18bae8-2403-4eb5-bab4-59cd4f282fad",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c04d4399-b607-4da3-b1eb-09ba942f0111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b88361c-04b5-4516-849d-930f72568c87",
        "cursor": {
          "ref": "8e154bdf-c650-4732-b95d-088bbfd1af99",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "67152f53-2193-403e-bcb9-9efee139acc2"
        },
        "item": {
          "id": "8b88361c-04b5-4516-849d-930f72568c87",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d6d7c1ec-7134-41ec-8784-53956d5dcba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643ac70a-2877-4333-91a7-575fd824dbb4",
        "cursor": {
          "ref": "1b9e558b-3b6f-4b89-bc88-c0d689eaac54",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fc1352d5-45fd-468c-9e24-2bfab8608d97"
        },
        "item": {
          "id": "643ac70a-2877-4333-91a7-575fd824dbb4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "62d08ad8-e289-40ea-8872-0dd36c359e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f7f140-04a3-41e4-a30a-fcb7cd1cedd9",
        "cursor": {
          "ref": "0c870cd6-bde1-4755-8b95-76d5b68a15ab",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0fe81738-8a65-4b30-9df9-7a316c6edc8e"
        },
        "item": {
          "id": "60f7f140-04a3-41e4-a30a-fcb7cd1cedd9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1a40a9f4-054c-435c-85bc-88fc55a2c949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8778815f-8d4b-4842-9bd5-bc160e0d15ad",
        "cursor": {
          "ref": "cc11f758-be3d-4506-ab14-2a9fcc215699",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3305286f-cb65-4986-81a3-84fe86ac3866"
        },
        "item": {
          "id": "8778815f-8d4b-4842-9bd5-bc160e0d15ad",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a085980c-a5af-4b73-af5d-c16dac134542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1697d3af-4bdd-49ef-b1ac-3f7478ef363c",
        "cursor": {
          "ref": "d34c55ba-2fae-4ada-af7e-1fb0ab54e5c4",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4addb657-eed4-4bd7-a8b5-a11080a0402c"
        },
        "item": {
          "id": "1697d3af-4bdd-49ef-b1ac-3f7478ef363c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3122a9dd-fd51-4a1a-9d3f-e33fcc63cf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a2dfc4-2c26-493b-92ed-63c9c42834c0",
        "cursor": {
          "ref": "dc7a93d5-076f-4369-bdeb-c84a7a4423b4",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e13bd651-a813-4056-9413-e53fdffb904c"
        },
        "item": {
          "id": "b5a2dfc4-2c26-493b-92ed-63c9c42834c0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b47f8458-7105-45d5-b1ef-0672699af29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc5efad-9469-48c7-b5f0-ce9c84b53608",
        "cursor": {
          "ref": "51402ae6-04fd-4970-81ee-8c0d9bfe2921",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "89dba2cd-09b0-4e7f-920a-20c803cf758d"
        },
        "item": {
          "id": "9bc5efad-9469-48c7-b5f0-ce9c84b53608",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ade82c7c-96e6-42ec-955f-4c6135fd4679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac75b31-8f48-4c50-99d8-73ad4f937e49",
        "cursor": {
          "ref": "e5b11226-29d5-421f-9400-feae7404c24c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "843d997e-bf1d-4aab-8298-66c7be9dea97"
        },
        "item": {
          "id": "fac75b31-8f48-4c50-99d8-73ad4f937e49",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b8645951-996c-440e-8d9a-1a45ca5b7895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73c32b9-44a5-454a-ab85-73b3c8278e72",
        "cursor": {
          "ref": "483ed81e-a892-4d3b-af64-67025a339df4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "87774dbf-5360-47c5-b8a0-148557f9a48a"
        },
        "item": {
          "id": "a73c32b9-44a5-454a-ab85-73b3c8278e72",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6676612b-6c27-4672-9f1b-b6376d909972",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f098ef-d51e-4045-b09f-a0cf7452274c",
        "cursor": {
          "ref": "994a3897-f78d-4d6b-83dd-211926cf1e61",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "75ab61ca-62d6-4697-8dc4-2d309725a2ef"
        },
        "item": {
          "id": "f7f098ef-d51e-4045-b09f-a0cf7452274c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cb7e7a9e-8dd5-405f-bb9b-7b51ab60fa70",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e8906-c0d2-4408-b137-a0d597e7f07b",
        "cursor": {
          "ref": "051a14df-f6a4-49d5-a8ec-62503e969de2",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "03414329-112c-4423-a20e-495321262f7e"
        },
        "item": {
          "id": "1d7e8906-c0d2-4408-b137-a0d597e7f07b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "61b54b25-15be-40dc-acca-5717acc40a00",
          "status": "OK",
          "code": 200,
          "responseTime": 1572,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99664996-d3ce-4ce3-adeb-91bc0a947309",
        "cursor": {
          "ref": "e60da003-e4fc-4587-ba33-7b4b435915e0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dcf6dc0a-05cd-422f-86ea-21c4ae23c3c3"
        },
        "item": {
          "id": "99664996-d3ce-4ce3-adeb-91bc0a947309",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "00ac6306-249b-4440-b182-c95d3062f85c",
          "status": "OK",
          "code": 200,
          "responseTime": 1326,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b036c98-2795-46f1-a524-b05a613aca3b",
        "cursor": {
          "ref": "eb416948-f43d-497f-b4c2-e1ab2bc41df9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cb98c507-ad6b-4ce3-9ef2-507cbac14a73"
        },
        "item": {
          "id": "1b036c98-2795-46f1-a524-b05a613aca3b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e329594-742f-426d-b7e7-d9db8386a8de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b036c98-2795-46f1-a524-b05a613aca3b",
        "cursor": {
          "ref": "eb416948-f43d-497f-b4c2-e1ab2bc41df9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cb98c507-ad6b-4ce3-9ef2-507cbac14a73"
        },
        "item": {
          "id": "1b036c98-2795-46f1-a524-b05a613aca3b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e329594-742f-426d-b7e7-d9db8386a8de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7290940c-2bbf-4ca6-a4b7-f44a5a7279ed",
        "cursor": {
          "ref": "43e54a7a-0fec-4700-9673-65d87142e74b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6c9ba4bb-3a37-4cf7-b6e0-2b9f57785e59"
        },
        "item": {
          "id": "7290940c-2bbf-4ca6-a4b7-f44a5a7279ed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8354f7f7-2c37-4ce7-a496-1fb99f1b0a0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3181927-30e2-498b-b828-8f746c008347",
        "cursor": {
          "ref": "8fb56445-50ee-4d27-a398-18b60b9f690e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "094879e1-965d-4191-84d7-347e80f31712"
        },
        "item": {
          "id": "b3181927-30e2-498b-b828-8f746c008347",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "df34988f-ab66-435f-8ffc-0ebe618f07ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}