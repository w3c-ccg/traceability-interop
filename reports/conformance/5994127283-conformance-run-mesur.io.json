{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d6d65cb6-703c-420a-9953-49027ebd1c20",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5a6e4516-9e37-4de5-82b8-61ca6608ce9a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f15e094-07c0-46c4-9b3a-6d1fbec079f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f201dcc7-6b7f-4c75-9545-8420c738af8c"
                }
              }
            ]
          },
          {
            "id": "fd8e26d4-c870-4125-9a68-90671b8b0b7c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f08f9235-4226-468d-b0a6-44a465516ce4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "03fab134-8864-4161-9b70-acacdee4a0fa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9431d95b-2850-4234-8101-4f24e6c30b23",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "45098268-ceef-44d5-88c1-efea89eefe03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59cc3ea5-d455-4348-adfb-9012f3efc0f9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96796abc-4e37-4a4a-a2cb-af84709ad8c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2710e58-5b09-499e-b5c5-ca34fb8504d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffa591d9-4972-4f99-873b-39ade16bf752",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72b10d23-56f2-4226-b497-7627ed1bdc22"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ecbc36a-4878-481b-8f1d-2b709853bc6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8639ace-e7f5-4bc2-b380-ce91de958e89"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd4fe06f-cc66-490f-9f81-5daa87f73437",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b4f5c98f-bbfa-4956-af19-5dcbc1a1611e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7314e380-b2d9-4600-bd51-6a7d4579c98f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "724668e8-f730-48e8-b0c9-2e673a0d95d5"
            }
          }
        ]
      },
      {
        "id": "0b819b2f-2028-4a7f-8f05-2679f7d7ac01",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "239786c9-cf1c-41ae-a00e-3e199620910c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cea5aa6-6504-49b9-94ea-e8c8f92b3bb0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eea9bee2-c97f-4efd-8fad-c0d176f7f61b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c3cc4e-3745-49f6-97cf-ca7a1064ce79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b02489f-e7c5-4718-98f0-1fbafa21c890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daf98c8-a76b-4ae5-8aa1-c7e63361ece8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a1b8ee-e1fc-4573-b840-60aa27e61dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b9eb03c-5642-4cd9-8ccf-bc4537c2d16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1767fd20-8da5-4908-a400-81e6b46c6391",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9c5603-4f06-4f9b-b3fc-4a0a80d0d3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c16d2fa-7f68-498e-a352-bfc58e029ff6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a09bcb9-4ad3-41aa-8bfd-8a0c4a079279",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "262a6c68-f08d-40dd-8525-73f2f287f190",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9684a3-df2d-423a-bd55-ae5097eadda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d12e5a92-457c-495f-b08d-7b35cc3107f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8cf886-a3af-43b0-916f-e030cdceb7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e957ad50-6da1-4776-aa97-f93754665f8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "338a9cf7-f847-42ca-8233-39832141a78f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "13ed70d9-39f6-4d17-817a-88c14a11b63c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dd1befd-84be-43d3-95ec-ff8bf77fbc29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1b1b8456-113e-460c-a7b1-e827e10c7eab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8414cb9c-02dc-4ff7-b1fa-de9e71e56e4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "16ca9b4b-acb6-47f8-8f8d-9e28ce21ef8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b34a9f6-ed57-43dd-8a48-18ede14fcc9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6eac6fd8-6613-4c8f-9c1c-f40c31637c1f"
            }
          }
        ]
      },
      {
        "id": "52ac5735-d2fc-4c4d-9328-f00f1fb98e08",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e2859eaf-92e5-495d-801d-35543c30b2f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baeb84c3-bbd4-4e8e-8588-767377ef48b1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "057e3260-5477-414b-adf3-760f204e9b60",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fa5553-0690-46a6-bf9b-67e78612cb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bb68fa-85f4-4677-b498-d1214dbda087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3434a533-68a1-43e6-a4bb-a2ceff8a7096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4748914a-374e-43eb-9f12-9ad8127016a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95372ab0-5c31-4264-996a-ed4b160575e3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6edeb8-8be2-40e9-888b-5ca3de703cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f6addc-9ab9-4d12-a508-41d3650722df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0b3375-2e93-44d2-bd49-702438fcb601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c302d331-85a6-4ca1-b27c-579a97049ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca87c4b7-d35b-4a8e-9e09-961a18b9cd0b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c4d633-0a2f-4d14-8a24-5873d8102b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586e1f05-a7a6-4c51-9841-b00f4aa011e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05335333-8b47-4d7d-bfc3-05c8a4d8f90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c70a79d-5523-48f0-83bc-8ded49e5ae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bcae74-6f03-44df-9ae4-b90c9f9db5b6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c492284-83ff-4c3a-9ded-8bcee15f42a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f6fb78-9d7c-4d8b-913b-e546300a2841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17a5237-692d-40ef-bb60-e23fa48b2a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6c6bc20-fbde-4cb9-a963-e9bba1fba13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743c1e86-d26f-472a-91b9-40b90d4422d5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcdefa3-87b3-42d2-8566-d15346e8b978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd689f7-47ab-40f7-9005-77e7fecc7afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada26223-72fe-43cd-90f5-9e13553ff8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4faa4d1-8001-44a8-909b-8a6217bc113f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d9f805-29cf-44ac-8f17-eb9240fd084c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1463dcab-eea3-4185-b2c8-1b72a07896fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6957b8c7-aac4-43aa-b401-c6fbd3d44d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846dbeeb-325e-48a2-8d2f-07f17bf1a0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5450bbc-9c47-47cd-8656-f348274e20e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b20ce5c-94dc-4c84-9ba9-2f50bbec2d8b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22714f3-475c-4e13-8e5b-60b5c5b4f680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b24a368-08b7-4809-b3a5-b260288256e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f11058-c390-4677-93fa-9e5169059ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fc73f12-43c1-4978-bc9e-55e26b56140e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6838cc-60c0-4f01-b109-2a84097a3149",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab3941a-ceab-4e16-bb90-71ef85f839d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f0e1a8-fec0-406b-8d89-723ba583e7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20b9be8-a35b-4f8e-acc8-053c8adc966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4c6364f-8f49-4588-b915-b9f400e9abaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f7c2a9-04d6-4b27-bb2d-ea75db7a32a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca27aa7-ba59-4d91-8641-2509ce39730e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a702ad0d-a93c-4884-9a23-26c95ca98cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed94cdc3-dc59-4718-9805-44e2632b6edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "420ba0e0-21b2-4a3f-ba5b-b7b73bcb6318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bd03f8-07f6-4083-8e97-deac4cac263d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7b540a-c421-4f36-8f0b-831ed7606744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0214b38d-f2fe-4876-8822-899d36f8b18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d89d7c0-fc8c-4c5e-8b86-ef7f57aa896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5362af55-f8dd-444e-b6e3-28387c649a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42b44db-6fca-4800-ae1d-355097965fbe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9543b571-f09b-467a-a4a7-3edf577b22f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba7f53a-b4b9-4fd0-a51b-c9e2ee896b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6873868-8480-4a9e-996e-eda000c9cc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0914d2c8-1261-42fb-9d83-91a051279d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b3e84a-cfa6-401b-9e82-8489d965aa3f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea90671-ac1f-499f-a030-fbf9f0a22e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7ff7ec-c983-4066-b2fa-b7810e673527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce2dbec-fac1-4b28-9a5d-1fc6974af821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61225e99-768e-497f-8b0d-8eab62fd0c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7a1cbb-3b14-477b-926c-3aa4193aae19",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caca149c-212b-4ce8-a281-ff716c733b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9aa4436-bee1-4b69-9ed0-319ba65d8dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5f8f60-344f-4e50-a661-1c44ed983f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df5af0b1-7c8c-481f-a08f-01b43ca995ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574e1a42-fdd6-4f03-a89c-9e85b33af088",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d985c6-7b25-4594-844c-2e913210a668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a296fb-e574-43e5-ba26-3a192092da0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1c1cbd-994f-4c21-9d68-90bbc46993bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a45588e-3e07-4091-adc5-dee32f2fa73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe3e4db-5b70-4a16-ad88-e133fe537c89",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f485955-ccdd-4eff-b2b4-feca0226f898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e11dbb5-cfd9-4954-9af0-69c80443efd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa21420-f34e-462c-a96c-2139eef85b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ce20448-1e5a-4d3a-9ac8-53c4886801da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bab711-6568-4854-9aff-023c3a2c716c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106df650-875f-4bce-8687-50792fb2aec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c263b426-ccfb-4045-a4d4-6f1bdb8d55fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cf4aa0-f9fd-43dc-82f4-24af8d10ff8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a470a620-1a5b-4afd-87b0-68776fd42a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e4b94c-d5cc-4ccf-b996-c1a471d28f33",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cebda7-c8c5-4f54-b4bd-cc69a2241ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5293c573-315c-4f92-bda4-c1a470dab3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f6bd32-b54f-4590-b41f-84cf47918d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "156a2fde-c6eb-4fde-9766-7466452a4751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ef2ca2-83c2-4094-b6df-3108cdd5c305",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb036b7-e77f-440d-87bd-d25a87d3e24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486ac064-4f03-40d6-8963-5754cb0751eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e428e530-f29e-4d5d-a0f8-60d758764930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "083b34b5-c664-4119-ba00-f3f9330d89e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf21832e-8440-41ee-b082-0a5fdac42fd2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64adc8e-dd1d-45fa-babf-eb8f81af525a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b77916-3889-4c3c-9bec-09d79136e542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eb1599-60ef-414e-81d4-985466d17435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75952c97-d504-4a31-938f-ad8d20c025ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adb8c07-a041-408b-abd4-0c4ed3e98ea1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f52a61-2602-42f9-8995-30d4885fd192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ad1cf0-698e-4a62-a40e-f1a9247ed139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb34df3-94d4-46a2-8045-ecfc71ca09c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14da0512-ac3b-453f-b9ed-96640ecd8c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7eb4ca-eec0-47c9-9c03-94b6bc816b63",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21be61dd-f260-4965-8a63-bbebfc62f32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8864861-f8bc-4a8e-8b78-e641a3967be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be774c94-31dd-48e5-a301-cf815aa60aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fda8cb-7a24-4329-87c3-7f5213b2e42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6f1383-5220-41e4-a927-fab97b958a7f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a0da8c-710f-439f-8b1d-9f4ec947bd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127e376e-4d40-4e70-a052-f5ade633cc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba4c84b-96ff-4009-817d-c7d8ed421b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca26c285-5efd-4edd-98a0-ab24207e05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da16c29-74cd-4820-add1-dde5320dbca9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee78c52-5f88-4ca6-a37d-729b772b98c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3c96ff-8ad2-4dc6-a3f1-86771cf9d5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38e0ad3-ede0-4947-97dd-58abe726a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf287cb-4198-4616-8d0c-0861a0533dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ca87b9-bd04-4f5d-a062-c18adf7de625",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5c08ea-1b31-42c9-8d81-014245bcde5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24b8fa0-abba-44c7-a570-b77043a6c6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec4861-1b88-4447-a767-bb44d768f266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "79cd281a-c8f0-4b43-9715-a6be39ecca61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d405fd41-7153-411e-ae86-c28aa1f5451c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176236fb-886f-45a2-9595-a7de64104dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57241f04-d685-4e31-80e7-d21831f7a808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df4a8e1-b398-47bb-b807-3bfd310dc0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f1d27b-1add-4e35-8fd0-ade4d055dacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850e97cd-66df-449b-a99f-a31262df32d4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9b2e8d-8a8a-40ea-9070-6d2901c1e252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563015fe-3e5d-44d6-822e-fd13257975ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d21144-bb91-4d11-be26-a5fe87c75a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e3b685-f2b6-4970-9f8c-942b626dcc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d51818-13d2-4235-bd0a-73cfe0c31fe5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525a59ea-62e8-48cf-bbb6-296b30264b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f88c20f-fcc0-4fe1-9a2c-b5d3a96d03a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d479e4e3-b522-483f-bb21-fff19024f717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c70894-acc6-46ff-acfb-f3c26f500ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82539899-5290-4104-84bd-f736627a86cc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb97e95-18bc-42cd-b227-6cf00e9f8df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b273935-7c2c-464d-9088-325e7ac557d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb28c8a3-1f66-4da6-afc1-2f8e6511589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "980e6ad1-bd5e-4572-a607-d01becfdcfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e4d172-a0b7-4b9b-803f-4f5ee5f59bce",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a5ffa3-a944-4edc-906d-f3ef1fb69e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7385204-a7c1-4b10-8109-71cd0835fea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fbdb1a-2b17-4ba2-9da0-fb487f175243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "575e6f45-8cdd-48a8-9c5b-b40efb24ee7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6133cce3-4bc8-4f47-8b51-91e36acfe3f3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed2549-d65e-4fb7-9590-1a52fd4e1d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad19419d-05d9-46ad-8165-2025d7a3f68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28da65c4-dbb0-4484-ab42-276353ac8727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "906c9663-ef82-4b10-a37f-e76bdaa6b00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93501b8a-9903-4f62-96eb-19bf8c8235bc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad80c2d-0ebe-4499-80a3-66055196639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d865bdeb-81a9-44af-8207-565348ca94bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f62b3a-0260-4ad6-af92-0afdb9be26d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7235485-bb74-4bbd-80da-5267b2fdcfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40375de4-e44a-4846-b935-1a29e0e69908",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9589036a-e8bb-49e9-880a-641aa2ca7f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4877b8bd-aa3c-4bca-8137-4b814cd8097a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bb3c82-a4d8-4c95-8423-14417767097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9229b272-e32e-4dde-beac-8768cf7d7117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7c8b4e-608c-4691-b986-f12ca762dff1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642737fd-dbe9-443f-b7be-94bc5e3c9b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2381c1-55ec-4e1f-aa62-f1ed1dc94b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfabac3-d521-4249-b843-1027d821602b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da033bad-4ec4-4e67-a79e-472326b770c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56aa530a-4dc1-425e-a087-e71ff0d9165b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb151ca-5d8a-4ad5-8aee-8c0804855fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ee66b5-27c4-491b-9f5b-d49842aa0072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd142a6c-5f3f-4940-b7b1-940e03208377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76dad853-34c5-4c1d-8406-81f7c1364fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da70e89-c919-4c6d-a10d-254d329072c0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbd2fb2-5403-44a7-8566-bb31bcd9eebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb786656-8505-4044-acd4-e9ea200f0b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a3aacc-549b-4578-a1e3-49178ecdf2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ff96cd46-0b7f-4b5b-9c7b-b9ee3484ac8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b33a44e-97a4-4114-91ab-f5cd69fd7c2e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4827156f-ba72-45e8-859a-03bd5824dcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ccb62b2-8f13-4b6a-9bdb-d696ff944339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679c0b90-f916-40e7-8736-00ba0cecf72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db35650a-db7d-422c-b9bc-68939b0dace1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5db3585-8b8b-487e-833d-add97f506cef",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9562d95-735a-4a72-80d4-241e788043c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96185a48-bf82-4321-b943-b27556098861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad45f67-0890-4005-a0d4-8d1d072ee63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c463cd4f-bfb4-4605-a5c6-150b0d81540e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50dd407-fcd9-4b2a-8df1-2a9f94d01d5a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae6c3f6-5b15-4b29-aa68-85c03f935d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e478602-9b77-470e-887b-689754a8fc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5155bbf-4388-4664-b66e-a339f6ce9f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4e67bf-b20c-48db-878e-c10a5bfc3757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b46b681-9960-4f44-b067-e23ea8858566",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9b5cf5-8d71-481c-a09b-5d9a106b6ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7747b09-ecb5-4aaa-a5ec-edfa4e337ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60da2bea-584a-4716-9c03-4cc76e72721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed91c67-c6d5-41ea-91d8-a010f2d59bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a7ca52-9cf7-42e5-8b86-b5b0b12321e9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f48cd1f-1ec5-4ce9-b1cd-a00ceeab3c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf85b7f-d476-4656-ace2-091c8c71b762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178e2b3d-3e4a-4898-ba7a-84f95d6a534c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9df471fe-a936-4a10-8131-4ae161fedc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24b50fc-d17e-42aa-ac23-df36e68edd6d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db7791c-e689-4403-96f2-e2855cd40f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc1c14d-ada7-4a5d-b430-9b22d54041b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5e5b30-266b-4fbc-ac3c-bccd59d9e070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4911e1-453b-4ad7-8900-df1c66dfe71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fa0156-2a5f-4fc1-a677-5b94cf8581cf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c2c233-dc24-42fe-a974-18ef90834096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e0360d-79cf-4c23-9dc9-a95aaa0affbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af73bbf8-58b9-4b45-b163-26d8548c119b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "46708bf2-a990-44c6-bcc9-c2b454a1c411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa8826e-87d9-46e5-afdc-9d161a9c8e06",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7709b96-b6e6-4d1f-ac15-365f9981c6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fcbfc1-ab99-4499-a4e6-bab4c9378ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8fc75a-0ba0-4171-a8b2-812503c56717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "284f37a3-64fc-4682-a7ee-8751b519e0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6842e824-9ae3-49c1-85ee-1df9169228d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff9b039-83eb-4bbc-9909-fa0a15ef8497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096dacc1-857a-4f11-90fa-7e072d76ef90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabf950d-c298-4b3a-b0c5-5eef6eadb1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "42489e45-8977-4583-8722-500f8076f95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd5634a-246f-4fa8-9e71-c2cc42551dc4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301638c6-febf-490d-b22a-27796b4279a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac2aa0a-bf28-4b41-b985-69d2a87d5af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a89a55-c428-45cb-a861-73c8441c35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ce03aa-85ba-4170-b4d4-123eb690cff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d4c9d8-3438-4297-bdfe-22be28e06621",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa84abe1-156e-4bd6-9c82-ff463cc96dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ce48f2-3ada-4ab5-ab7b-47443fe299f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6044feb6-4448-408d-8204-458297975290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7865b7d0-3bfd-44e6-8f8f-3575deeaf07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74d9378-2878-4fd8-bbd5-01cba8335852",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7465a5d7-df9a-4d66-b967-79c5cd62e9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf9d06a-7185-416c-845d-d6601cb5fc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3537d656-f94c-4127-a863-e3ff793221d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e07bb77-d2f4-4497-ac25-5e4badbad470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190f75b5-2c45-4d9e-95be-8b3c02da4f13",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449e9f34-62ba-4ebe-815d-ad46d76fcaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a1765d-ae91-4266-8ab4-6d60b5aad458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcad53b2-5e09-41d7-8384-51d9992f80b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda92587-a23c-47b1-bdb7-a7e359b0f2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f297a54e-6a5a-476c-99c0-e6eb7b3cb559",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec7b47c-0435-49a1-9367-a91602098905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac87536-c538-41b2-aede-9500272b80da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b042b569-2014-4e13-9367-5b3b4af7e736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a34830-1d40-4674-b159-4f964d4e03ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a19e4b-7791-44e8-90f5-64d22f35779e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8de1ab-ab92-4a00-be33-9a15a5daaa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611edce2-f851-4f19-9f0e-91bb3d257a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0262e811-3e9d-42d2-92fd-14dadcd50785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c278411b-61d7-4bc9-b290-3737f7553d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7310008a-adeb-48cb-ba52-883195a13e72",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086c15ea-89be-40d0-9d16-6e9dd5eaab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b534dfb-01a2-4f6a-9c30-738cbf942ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667489ef-3b69-4ffb-b7ea-26e9f82d040b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29f7d0d-df7d-4069-a37a-2ea202bab003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78104827-be66-45a2-8db6-2dca6630688e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283b65fe-9058-4f4e-a621-ea3c8eedb9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64e6c1f-ded0-41e9-aad8-547767989a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e2156c-9f4e-4981-8d0f-024a29ceb9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c882b82-6033-489a-8273-2596570a3bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e841583e-926e-4b1f-9164-6d8b1878cf55",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c246392a-067b-48dd-b970-e662efdff42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39aa9b1c-acb0-4c5f-9f89-2afa503bff4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8324d32f-e87a-4cec-a4c9-f670943c5e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22bebd52-51f7-48f2-a82f-9bce7d4a5580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d99d15-dfe9-419e-b9ce-856db877f793",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb313cd-a27b-48a8-9720-af783bdf7d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e5d04a-4668-414a-91d5-5621e8a61e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d236f10-53fd-41aa-bbef-81e0a5153d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10f7c6d-86b2-40ff-b925-029e93b153c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f8f7e7-d737-4986-8da5-e45c28d86649",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd67d27-68d9-4fe7-8ac3-1e061c27e169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1562423-cdfa-4167-903d-b3f12187e2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c925496-26d3-44bf-96d8-0f9d6fc6ef70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e93cc3-f831-4f61-b33e-47e3ff1b302c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7acc11f-2a77-4cdc-9855-c517e2e6d7b8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0c27fb-a935-4804-8627-67d959d27c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bb0f52-7f55-447e-ba87-c7138c9077d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cf6ecf-a82b-4344-b0cb-61e582808752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "227f85b1-6abd-44c7-856f-5954a21f923b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8845701-f7cc-4682-89a5-4e40de66c1cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c178ba8-b6a0-493a-9ebf-179458c6171a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334e985c-51ff-4bdf-b69b-6c742a97b11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00606cc4-6946-4b87-b039-f3f0e025d7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9588fedc-f880-4b86-9350-f63f7ee1556c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7f5f72-dc58-47d5-9a6f-afbbf478af28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b53782-f7bd-4a4e-8677-bb69f71833f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3b33df-6d10-4044-95ad-98ee080e5eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bfb884-6ada-4fef-810e-50e0af124c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e03ca8a-55ba-4134-99c5-653ca3ef9de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71cd058-7aaa-4402-840b-9561a405edba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45e3149-33e4-47cf-ab4a-10777596f564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97566ba-14c7-44cd-a33d-aa27be874dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8524fe5-7cf1-48f0-8a95-c21fabe82852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b81172-1a8b-4a87-8312-d256f2f8ca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152942dc-0307-498e-84d1-41b3207eade3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2b6109-e15f-4cb3-88e0-ee581d0253ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a5365a-cbcd-41ee-a78f-2074159729b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dc5be6-e61a-46ab-855a-3de2cd02c3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e101b635-2b0a-40aa-a319-0af4e51f6db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79e3ab5-ce2c-4db1-9034-d601903555c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4a547c-691d-413a-bdc8-6ba0d7b9d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f0f907-6c79-4c74-869a-590ed759830b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803dffb8-8a64-4a2e-96ec-efa672885fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fcfc4a-72f6-42e9-9da8-40c5d30f83f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bb547b-51f2-4a6a-8fdd-3ad2d53541e9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce17a400-eeda-4965-a4fc-0dfd188e9fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a39f40-56e5-4b4e-887b-1877801bcbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270bc11e-d285-46e0-a13a-b1aa002f96af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7a24e6-cc1b-4aec-82ff-4302482e2ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64137d66-bcb5-46af-9247-9e1d9be1d4c2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4cd8bf-5a3e-4bf9-bfd1-912b03cdd404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ff43a4-a871-4303-a6d9-241f6f9ad39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db7dea8-8398-43fe-9875-e73cafa9e93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebee63c1-ec5f-40c7-8db1-650984267ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953117dc-afa2-4760-850e-f7df29622991",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88122297-eadc-485a-a068-8cd25e78cb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0b49bf-54e2-431c-9c2b-ce4bc0af9892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6ab4a7-31db-4f3a-b759-9f5110087354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86fdea90-385e-4143-a51e-7f53a50363e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0262a412-2ff4-4bf6-9ceb-c9f6e0543ae7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb5a582-20ca-4ae2-bb61-8342c0b5367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7de452-ea88-4abe-b173-53cf28765685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45d766e-e4cb-4bb5-8484-ab5fd8f53e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0b7b32-467e-4307-bc90-c78b630f99c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36582f97-7c04-4836-bb2a-863f5d6c02fa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea019365-00ee-4176-a332-e7c4c1a1951d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e479ff1-9be0-45c1-8b24-415082460a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3774db16-2b7e-4319-a077-0dd210885896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e59398-abef-41d8-9d9c-db5fd5564928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8eed32b-1401-4bf2-af36-fbe1bc2da3ac",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ec00f9-b37e-4234-8391-d793e2c481f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca945d3-59d6-49f1-9a83-78eea1d9f93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6d3720-2bb7-4451-93de-13d0b3577c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "632d31b9-dc81-4b33-b6e8-1c26d6f93311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fa9782-7748-4001-a978-a1c99782696e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133767a7-ce2a-40e5-ae6c-a8559c844d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d542a5-088e-4b25-8b92-f412b6e43637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23071b60-3300-43c6-9fb3-6e40201b711e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a719319-3649-4a46-b28e-b59a10360728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9965dc0-a0d4-4a3f-8e4a-d190ac577417",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2164ea47-8ee9-446d-9c25-99a2ef71b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92861870-c747-43c4-b7fe-6f1db6d9199b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8158ca0-1f00-49d1-b7ea-55f2cbb0a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0f56bf-0c67-43bb-8c33-9bbbcaf90cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1638cb18-befd-4498-b8f3-416c17405192",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2dbeff-9192-4895-a886-17b870f952c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a029fa64-afce-46f2-aa8f-0af50c15dcae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e7e980-602a-4364-954e-7fa3abf629f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb030a6-7d8f-40eb-8d68-6ef73c6ee5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471513cf-7c5c-4e82-afc7-2f5f14757c17",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a902018d-019e-4a2c-86f6-db79dd931839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e055d80f-1466-4c2f-8bd5-a52dd14c9dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7355bc-ca85-4b9e-a02a-4459f3d7b7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe43b06-d441-4ab4-bcc5-772fd18359ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761079e5-9e5a-4511-9cf0-3602501c89d1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf0ab80-8192-40fc-af6f-ae76fdc647c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abb3a06-2fba-4fc5-aa21-16231707bb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ef22ec-766e-4138-9383-48d248fb01a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e7054e-800a-4d28-a6ec-fde2c0a430be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7117bfb2-bae1-4604-93f6-4188ac058a84",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9e9a24-78c8-4d0e-97c1-206a55e19f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccbc9c8-dfd5-4800-bcd6-121b1623c717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b84f3d8-cbf9-4dc5-b4a6-4faa668d7de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1879c2-c68f-4472-a759-b95c567639f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89f2257-97c3-4615-8eea-397d7d096290",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6215ec69-17b1-45a4-8e75-7b712d82e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d50361-47bc-496f-a460-75cd0bb37536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d248a68-aeb5-48cd-9da5-838433b0a18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b53e8be3-7309-4a15-9343-f2489de21da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cf019d-2132-434e-b305-b0d79f9ab0dc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebae7a2-33e5-47f7-aa98-6b67ed124b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f14e2c-e444-48a3-b29e-a244c42531f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ab6109-8903-4160-99eb-90ef05405050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e747716-f238-479f-826e-15ffa02aced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2f56d2-dd7f-467c-a2e5-1a5fc379c166",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12fc18b-6f0b-4aa7-8394-4003fba034e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c237fe-c9d3-4e4d-bc08-62a81fddc39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be58876f-6d9d-492a-880e-70aec52c5f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3093d3-0c8b-496f-88bd-c32bae8a3d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acacf045-60de-4ccf-a236-55339e167bd7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79565bd8-41d8-40e8-9663-b2014565691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b61a7e5-33ca-4c01-9767-85830308131e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a499119-8d19-43b7-8b03-2faee09a171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba50e93d-bdea-44e9-aeec-b3310e01c2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905d65e2-42af-4b7a-8eb7-8fd7135a77b1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17389ab7-6168-455c-bf9c-6fff31acea9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0b955e-0ad2-4e43-b7f4-da6845960a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d355406e-15a2-47a4-933c-a309177a0ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69af3749-b102-4917-bc5a-b437b4855f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fb4862-8214-4d32-ab01-5e4130b3eb40",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57294284-7ef7-47e3-9234-4d2420b69140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe1f3c8-e98b-40a1-9f86-732a7030ffba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d6e212-6bce-4e41-8c0d-45fa4f6db372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab68e5e6-c68f-47ea-94ae-d3522888092d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a1e32c-02c3-435e-bb3a-df89cde0dbce",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a1614b-bc66-4da3-88e1-38c7b18157fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be09e35-492c-4198-b237-557e05eed0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4259a2-fa7b-4b8f-b116-b54bc1fc4db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8630ad-95d6-4010-9d83-bcdcc0b9597e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32238945-d152-4f12-ba81-32bec9da9aaa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409238d8-58f4-4909-813c-0ec13bf76a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4475ebe-633d-4be4-b762-01c6e096e8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ddf7c0-71db-498b-950f-5f83def7c22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e391a654-a511-4a7c-baaf-2deee98e2e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2071f2da-e3b9-4062-b851-1d0cc39d4a1e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195081e2-246d-426a-afbf-d663234f5861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134dfa76-037b-4d53-a742-36bb086f1682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5473c6cc-70d3-4ed9-b8b1-f08b4e00cb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e23b520b-f006-4688-bb4b-9dab92b50f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1756a1d1-3e73-4ccb-a0ca-db24b50a8c0a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6f4dac-8840-40ce-8639-62455ebcfa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d92508-42d8-4107-8e34-2121aa0a3f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc19edd5-cb59-4d06-a723-1936c63222d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55434952-2943-4cb4-9049-da89639e51ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786fc25d-ead8-430e-adc9-29c5110de610",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fb90a4-a11a-4925-ab69-e62614d17059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3edd89e-4df1-44c7-83b2-7872ea24f149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dbc9ff-9cb9-4471-b748-9e4eb08d0f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d70c4e3-a8ff-422d-9d42-9d4853ac6788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f3fc78-58f4-4056-8742-ee40dadce68a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3a4d52-3bf5-4101-9953-cca33533ed1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675b2406-dd97-46a6-bc99-28030107a801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f16a129-b846-4272-be7d-e0e2989f849a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77d1f252-ad94-4270-a0f4-b59a0b1e734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a9a2fd-c9d0-4f89-b931-93b1375913ca",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5494d3d0-bac7-4a93-b99c-0270de846760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418d3ddb-d134-4689-b134-9a7e5379aa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b7426f-0684-4c58-88a2-71e13cee0222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "440a4dd1-0cfc-4025-bbbe-f02096443bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d15b82a-52bc-40b4-9d2b-ee3841dd623f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bab69ec-9474-4a91-aa11-b17d3cb875ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41754bb4-5c6c-4900-b9f1-efb0f7483566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf54edc7-8207-48b7-b70c-f0a28fadba45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfd22ba-8094-4c04-a867-3db03c831b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25373ca-8020-43e4-b6e8-6e8631132b51",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2192482-4d74-47e9-9dd8-7cecbbe1067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc826589-5ddc-45aa-9e00-8ed5dee7bcfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a25df3-2755-4397-84ba-05b5641f5c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "991469ec-535e-4a97-8e2a-91272b498f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4952cff0-0e66-4de8-bc55-2bb06e1eb71d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f900741c-bb79-4c80-9f56-493e0626a044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4d74ea-d74c-4713-85b6-1f417dfbe2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181c83a7-a470-4bb8-8314-3691c1ddb175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f17528a2-d7e0-4f86-a262-cf57315c97d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219ee28a-0625-4ac8-ac90-21c6bc922326",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfc0c8b-2175-4bb4-aafb-7950ed21ccfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a7fda7-9275-4ac8-8fc6-44d9894f143c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce98e868-9b98-4558-b926-fbeccd0da64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31bbbaa1-b597-443e-b855-174c9921b9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a252f420-1c70-4c74-83b6-907bea95fed1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea68064-ab96-4430-9e8c-861e53c91b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246328b7-8e30-49ab-a158-c428c0534ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf5a00-71f2-48af-ac04-695671a7c1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cff8ff8e-5593-4c26-995f-bf5f80f1315a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92726e09-d0a7-4bde-87d4-418b1a55f28d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0000e143-95f5-43b7-bbbf-a875c4f386b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "671526a6-61da-43d2-8406-a29f527c4ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0923ccd6-ffae-472f-810d-a56f6d2027d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eb6255-b167-4d30-b2a5-4cb8418e0e0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3717d3aa-9b1b-42b6-b109-3c63518cec11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bb6a3e2-e74e-4958-8f8c-10c1630d3bee",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7628f486-c01c-42fe-a66c-11af112f5b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97c3f473-8f4a-4bb3-8200-d58392f1c01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db2d6bb-dcb2-46a0-912f-ee9f9ed82acd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d72a1c63-22e5-457c-9b25-4878918d3350"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c86692c9-da1e-4c44-b85a-28aff6758417",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fe3e31a-84c9-40e8-8ac9-00b42c057a38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "840e9b39-6a52-4f4b-ac79-96038903e385",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dacbee43-dbb6-455b-8ddb-3654fb1dfd53"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "816ff777-f815-473c-83b3-ffc863ea535b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ddc19ad-f2db-4226-a2e2-af794c5922ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c09dba8f-0693-48a4-8208-fc10019c8dd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c2740b6-6b5f-482e-8546-dac03815584a"
                }
              }
            ]
          },
          {
            "id": "08bdb6fa-9479-41aa-9fa3-e499e0f8e48a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d63e6681-6bc8-457b-81d5-c21735d91ade",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba186334-5688-4bff-a5ea-fa1de81640c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d51e543-467d-4e6b-8cbb-b0c76534d53a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd42e03e-5c11-4b01-a4a9-28401eb40a90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee3cdebb-5d64-4085-9a71-4401d7824d11"
                    }
                  }
                ]
              },
              {
                "id": "3095807f-fc3a-445c-a198-f30aaea2941b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d047d48-1912-422e-b3df-158f0e46a70e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f27408c-7d14-41db-abec-ec2e24e57b3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed156578-5178-4b23-80a4-213b9aed0b54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9dc80730-3431-4f2a-b8fa-250f0adfdeb2"
                    }
                  }
                ]
              },
              {
                "id": "a0237d3a-76d6-47f4-af89-5cd11f6010d4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1f2d450-9741-476a-8f20-7a769c8d3067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c1783e5-77be-4858-9639-ade38068bee9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2eb38cd8-b483-45ae-8117-a73fcad519aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a0a1dd3-0c1d-49e6-b333-fa715d6712b1"
                    }
                  }
                ]
              },
              {
                "id": "06a5ed54-fdcc-473d-9f05-bd1842056ceb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89e18bf4-295e-4ef4-9d64-e3a1b9496e43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e455e306-53b4-4f57-b4af-284ee1c52021"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be096441-d4b1-4b01-a188-50624d4ef2eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3c2bb561-5a17-4bf5-be5a-cdf1314f83d9"
                    }
                  }
                ]
              },
              {
                "id": "83f06a6e-5e20-4742-a6cf-940eb74b3ab6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a8e1155-2cf0-4df6-976a-6e0ad17d391f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "379b87ee-2484-4050-a9a1-29ad25393054"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f537273e-8877-45bb-9937-d78541a95f52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5354e13e-2ea6-463d-9061-54920cea2696"
                    }
                  }
                ]
              },
              {
                "id": "c91e4240-2d53-4aa5-a496-c06581101652",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8cf220a-ba06-4e0f-9f37-ec4e397541bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f56002b9-15cb-45e9-b77c-e2a48f8184ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ee99c4d-90bf-41e1-a0ed-dc80f4012746",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d86ca35-34ab-4054-ada1-aba49cc8e696"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8b925b2-b7db-4dc1-8294-d82c6b7ac5cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46f58886-f4bc-4085-95cc-851d2183bd62"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e2ee918-958a-41eb-9713-9d292fc169e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8991a840-fa54-407a-887c-6b9783d7c2c2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bdc0093-0556-4a83-84f1-a8a9344aadf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "977dad4d-5620-4b8c-9937-50afb601f404"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df264cbe-d2cf-45bd-8066-b295626a1911",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "008b71d2-e084-4ab7-8b9b-a6ea0b2c7367"
            }
          }
        ]
      },
      {
        "id": "a2b13612-2f0d-4357-a5a2-aafdd569c936",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "034e89e9-c653-4019-a259-ef0de5875dba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d1ab816-c794-4bb4-8d25-80669cbcd696",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f0e23a5-252d-447b-ab18-75df0c766b85",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2846db-2ad7-487c-a843-9ca141e6383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c93e434-029b-483a-a3af-f2fc93eec985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d70b34-9708-4ca0-9251-6ec2a864b476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "23528b2d-eceb-499b-a0aa-24d3dfabe49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ec1af5-a164-429a-b44e-3f4fc771fd8e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b9ff7e-7d10-44e6-9515-1d75287bd1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107c3b8c-ae75-4b8d-b022-b9457967b12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed1511d-e1c5-45c9-9ee8-8afeb47b79a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bc0f60-d567-421e-89ad-daa7dcff4952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65e2aca-e69e-4e0f-9f0d-aa632a436c45",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dc1ca3-00d3-4112-a642-40a8ab1f7178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15604d5-579a-465c-a41b-2aa1e6f717d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7076d5f7-72e9-4e6a-be20-cbb725d279bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e08c1079-d765-424e-96dc-4cf602983e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c860a6c-238d-4783-8ecb-efa338d5fbb3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9729d69e-5654-4af1-9804-f77a94c0faac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118defe4-bd00-4644-aa79-11e98f3b9604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96dfe02-7ed0-4a37-9433-b832cff18733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2be584f-4d0b-4273-a73d-23f47d76e246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f3e3c9-2866-47ab-8ab0-180ff646fa48",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0eeb8e-bc31-4c64-aa0d-96b515c96480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c154346a-c6ad-47a2-a4a0-0e2af915155c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b558f27-2efa-4eb5-bb9a-b8256e814567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6725f195-0d3a-4091-a240-16d29b7a2ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27f241c-39f1-4676-8d2f-ef0541966c42",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be14809-24ad-45ea-ba77-c7b1de2a0c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98104ff9-dbfe-40c2-b31c-905e70475655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f720929b-9f92-45dd-9e66-9b4fb5ca100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24702963-c4ff-425c-a463-d31c66e29d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ad3403-f57a-40be-b4b4-16f0fd841f39",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0593972a-5566-40dd-ab1c-e6552ff030c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f8480e-c740-4ef0-9f29-270a65c320f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2313f26-11a5-4129-bc9b-55772fce95bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "03dd60b8-378b-4793-82dd-42ebed5299b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9498743-7d2a-4457-968b-6bc7953cc9ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a0bffc-10c9-47df-942c-030909dd9775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210feaf9-5b7b-42f9-b61a-cfe32e4e559d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180e8951-5f52-4827-bab5-5ff6df247258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09e060a7-470a-4205-97a7-2e95ca7e0c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0dd0eb-9e08-4d24-bfe9-50fc0d67d99b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deda8d02-b311-422b-b5eb-6119c9136496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c45b9ff-4a72-42f9-b78a-14c721ac1b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40b5425-e8f8-4993-be33-5c04c716691c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce048af9-a7e1-4949-b224-8c61e09909df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2a5176-f6ac-49bc-8dc7-4e2e69ae4101",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e88d670-4549-49a3-b158-7a108c93c5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cf2925-c33e-4a44-a840-a2ecf5cc3c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28b7af6-0f96-4c58-ac11-aa35055fbd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c8a49a-ef1c-4082-835f-19965092ea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5cd1a8-ba2a-4a58-afd1-93bd81eace51",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e7126b-06a2-4ca8-a490-3917021b091d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7046d0-7474-4fde-9a57-6a4fe8b645c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6acb3cb-7c9d-443b-a580-885a8b02646e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "747871d2-3045-42e1-888c-38d3a077d123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ace941-13da-4168-9d40-04506688a79b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ca5af1-c408-4a0c-9645-9378782ddab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fae2c5a-f73b-4e22-bd36-ea26bbcec6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f2daf3-cdc7-4b57-b458-70c306804b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4ebff6-811e-45df-ae21-c8661d0e1f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b914bda-7a1e-4aee-b3f7-63bfcbc53738",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec5e7f4-286d-4b67-96a0-3a1471ee8821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02eefc0b-e2dc-4e0f-885e-b4045549afe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cf3dd5-d14c-43f6-b4c3-c8a3411140b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc483682-dc32-4481-bd09-a060fc4ad093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc8d5ca-8243-4caa-8b37-136080f1bc3f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ee16b8-881e-4ef5-9e91-4be27b8cff2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f5818d-1dca-409f-92cf-25968a5094b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ab0c0f-8678-46f5-8367-61358efc6810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b2f7ec-8665-48b9-a47b-081d5d1f7b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91415659-050e-4e1a-b6e4-69c929fb75db",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c69903-4fb7-4d24-bd44-c7592e290ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60483b87-0f93-49b8-a707-26a1f1de36f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f8dd29-027b-4bbb-a536-29662611cc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8656641-dffd-46c0-915a-09e86b380ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082166bb-b43c-4ccc-afd8-74303884870f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c99321-421f-4377-b7c0-d0b0de8faa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2deb9d2b-f409-4bb2-add3-8f9d51a33752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f24b2b-e6af-4b1e-a20f-0d0b0eb938df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d7d30e-3549-4ac4-8d8b-b10ffc5cda86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801864ad-1015-412f-80ce-88f5c6600e5e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af813608-b7ef-48ae-87bf-af6c67f99d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba6aa04-2d89-4e3a-9040-33c7fc45ee94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473a0dc6-d691-4e79-8c88-981a6b937896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fe635b-2e8a-4c0c-9e68-4ae9b7ab9e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6f74f1-0c53-4af1-a22f-e47bf38dbfd2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2be351-197c-459e-9f30-d5ddeadb5452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf25b00-008a-4383-9794-fc0ef0b8657b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27bf737-4528-4257-a560-755cfd8729e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07cbdc5b-310c-41d4-8e47-84621118afab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b22ba7-911e-4a1f-9923-cfca07615731",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2de2e70-6352-4c2e-b36a-9f7ea67c5c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75be9fac-e1a9-46d2-8e31-4ac5e3188005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423f285c-044b-4601-a1a3-82b177c299d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "826a6c49-c498-42dd-9db0-946c3d4baf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f54990-a3e3-4ac9-b611-dc93b1018f55",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da69a520-cee3-48a3-a09a-9498a05a8d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eed36a5-074e-4b3d-866d-19edabd3bdcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c2aca6-5f55-40aa-a87f-1617cbd8e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e446b349-8f72-41cd-bf70-1e9032c35e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf0b9a6-67ef-41ce-aa1d-f68a8ba19c31",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dba5fa-830e-4ac6-b50c-13c846bf1ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e24a81-0ebc-4f8d-bc40-2b29aefd3973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5413c2fb-70e7-4895-a40c-71b4624504e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbbcb8d-c163-4f7b-98bf-683aca5d1416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34cdcae-3283-4c16-b011-22c2bf69616a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b88f3e7-2147-4e0d-ac85-ce7896ccf288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d914e762-673d-408d-be11-6e9903c0a6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d973391-b597-4ae7-9e1e-49ccf3d2563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f100b5d-0488-44ab-a6fc-d14bba9e6ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910fdd1b-37c4-4199-b7d0-ffc2102bb49d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3451418d-db48-4144-b1a4-624909b8d666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc7798b-de8c-412b-b09d-be6ad39c341f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a28a582-0de1-4f8a-9584-7e55b7eec03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89fe3fc2-b0d5-45b8-b5de-ac573f4d1c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49176d8b-94f9-47b4-b774-171811cab6ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fd4162-1339-47d2-a9eb-4644155b2aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1d2402-8d07-4663-b0a0-d61f532c0827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ec7fb1-3257-43b5-b3ab-d478f022285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95875167-9f50-4450-97af-86f8119cb6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20edb479-6e5f-46b9-b278-c3ce3b02fc1c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee11f50-62fe-42d2-a12f-5d42f4bf3485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0853e9fd-ce01-41fe-a851-dcb751f607a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4784861c-c4d7-4e24-a689-8aac1917c6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ee48b6-a844-40c1-a1b7-cb0ab105b181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39572273-c24b-41e2-88ed-06593803e28b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709f4eb4-3def-4206-b0ae-b8575eae1f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccbe255-6738-4fc3-8694-2a0512d9c69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6fadbf-6060-412d-9e11-d9b174e4afbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "603ad60b-be14-4f59-913a-abd6121cda41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f89ebee-01b8-43a5-970a-e0eced89dbb7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a843465-9271-4a2a-bd67-6caa9d75bb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae48fe0-a4a6-4f59-ba5a-c1338c052b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb60d81-25ff-43d8-a16e-84784a9be5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5622138e-9adc-4160-bb46-8f86453c919e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef72e59d-0cd4-47a2-bae2-e42be0113266",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8239fa7-80ff-4ae7-86be-bb187e5f2522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13545f4-1d06-4a60-96a5-a50254cd777f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22664477-9249-4cee-8a6a-072032080603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f1585d-9fa6-4ef7-a38a-2e80f02e284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454fc1eb-4386-4940-a070-ae180f4d1e89",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f53bde-8710-4b0a-bc7b-7847faee5270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f172aef-b72f-46bf-8f75-08f8d93ac062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7496866a-58ad-4749-b558-961e26b92dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba065b0c-c391-4ab4-bab1-7399721364e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6800810d-769e-4a03-9ce1-b05b7559b391",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5736704b-3a9b-44c8-8205-50dfc87b7d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8680bfe-3135-4013-9e64-ba6bdfc54d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b030889c-1316-450a-89cc-c85748abf859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84f3db00-4af9-41c2-a69a-0d817a25564c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8a5b53-8e9e-4911-a980-16f474effe86",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f795457b-d6ad-4d2c-a190-68e0531e1a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb80264-95dd-4f52-9f2c-15b8e4fde2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acdf7ab-c3d6-4458-ae91-6ba33aa47fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39684bae-3450-453f-88f4-756001bef870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9bf3c5-7071-46a4-85d5-7f9fe2b2f9e5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395d784a-66b8-4384-b5dd-6b52e2b42ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fa9f1c-f498-4b46-9146-2a8225ccb91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd44e85-1cfa-42a6-a9e6-e86f83dcee33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "784e1395-7e5a-49d0-9a2c-aa0e064d99ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e1017b5-d6ee-44ed-889e-64b7c811c6fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da99f332-87b2-487d-a8c7-d467e851efe0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d36ea3-2479-4fa3-b41a-d3485c4b1eb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "54bae175-783d-4810-af1e-1d803e0c2b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b4d3a8-4137-45b9-8d27-9329b6ccb542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ed98866-b050-41fa-a7ba-a167a6b7bdef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18574a04-a72a-4547-a05b-901725b2ab81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de2b5b7c-6ac7-4492-a03f-20ec60cd50f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e11816b-37fc-425c-8560-6a8bdaf6823a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27f80f50-76b4-434f-a972-6def5df3aa96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5af04305-3f06-4174-8b46-d4fce045e65d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac19df10-d9e9-471f-82a7-4ca2a3882af8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4851d3f-fc82-4b54-bf01-5c8844d939c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b5e9746-f4e1-46f4-a01b-5ff11703c2f5"
            }
          }
        ]
      },
      {
        "id": "57039fc4-f229-4da6-9b1d-1d96ea980d95",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "109a2b18-0d72-4657-950d-cfe7ca92bd6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83ecca52-b72c-45f0-a7a6-c75f6966b913",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47b419e5-310d-483d-aaba-d48c5a5d4e64",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e2415a-e69c-463d-a2b7-8b3630a092a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bc759d-5356-4514-9ac8-27494b21c9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc687c14-3522-439a-8477-8390165c74c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a78924-6cd2-4eb2-94de-f631852546ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0977876f-23fb-4a11-9032-012dcee0301a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b9e5a7-5567-4765-97f1-75559b8f7278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4caa2c3d-2a07-4826-a6c7-dd6114f221ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e96c29-ae63-49a5-985f-8de1e656cc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4473ef74-6190-48bc-b4e5-68b1a61f1aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c55b443-bc23-45af-86f9-99762568140f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc822600-5292-4fe9-b825-a6d47daeb92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f8bb7b-83c3-4930-a315-a1362ab0a0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fa191a-363d-45d4-be5d-cca867874d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad6cc4c-d246-4464-a19b-a5d80942c05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457678c4-16ac-4c53-a53e-f5a50b2c7790",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df459d09-0659-4f61-bc99-ece80f63849c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40a486f-5d85-4665-81f6-b64154c198f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956ce4af-132d-4103-91df-6386582f9367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6c2c1f-d9e1-4b5f-bda4-067dc9388244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bb49ef-0dec-45e3-9391-d130aca5823c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23065027-8ebb-4933-b76a-5dd2c233c385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c275c89-5e85-4462-b749-3b4feeff0ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b94c092-8654-4471-bf50-0d931a5939ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "595e15f4-6132-4897-b30d-fc5f103d4554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d62204d-efb2-4950-a4a0-0e105a3c5350",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5e5e6d-1ad1-4385-8257-37364a1129f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ccbc19-bce9-4434-b498-4cd73375065d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74c973c-01e9-4212-9efe-359e7fdeb2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbb7aab-a36e-458e-835e-0ab25c21ee9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91d560b-9128-4dbc-9daf-6389d4b16763",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65d90be-dbc7-472d-9aec-9e3d6e1638f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae897dda-6427-4c94-9024-6a21e3165eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceae2cb-e573-4660-ac59-92b2960f85ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebec9ab0-e9ab-4f34-afa8-bd7fafe62a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c4bdad-c39c-48fd-a10f-b98124b6f245",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f438af-2fd8-4418-899f-06b3e3e4e017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e71ee86-5b4a-4bda-8c19-58439b69add2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7446a75-5f91-4b3d-9d31-e77184a0500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6122bbe-7c73-43cd-9430-2d7bba354644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914b1710-9d1d-4249-a42b-3acbe73b22ec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2406e16-d268-457e-9fcf-f16b496c5fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d243873c-bc64-4d34-a226-84184e17e379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29ea63d-f9dd-4812-a182-b134acd0bcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3defc2b4-9282-4edf-a11d-a36d78ab1388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369f7172-0a0e-42f0-947d-9de8474ce1ef",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d0fb34-29d5-464f-adf4-3766cb4553be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b90174-2608-42fa-97aa-96f808473e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc974e3-045a-4a42-87dc-16ae3164986d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af049d74-94a5-4972-8b30-1c46c3c1b19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0ec1b8-f735-4ae7-84b2-fb1cfe14ecff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddc4b55-2f7a-4aba-800f-9794bda6dc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86c7b98-e00a-4a3c-9032-aa5978f706ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91665ee-584d-407f-9bd9-9c6ec425938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aa066d1c-82c3-4071-87bb-05d3e460725f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59014818-ea68-47bd-bead-155794e4eb68",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11713ce5-e86a-4889-bdd2-156552758f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5ffd57-bdbd-493b-a481-783de000347a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a39951-d3f3-41c3-aab5-e86aa839b8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c426b2bb-2fe0-4ff9-be8c-1234e752adbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4465e39c-47ec-45a2-9b3e-191f99a94980",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5455b26-3d29-4167-82c8-892f63b2ffda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685a1165-88fe-4dce-8031-f7424a74ea18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d7e582-f595-4407-a41a-4cd96df7636e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b9124d-bec6-4ca3-b861-bd1058c41270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111ce4a9-9c07-440f-95fc-13971c50d92f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e424932-c1e0-492b-9702-e714a6b1919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58143e2a-d09d-49bf-9266-02c8dc6a5b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6095f809-6359-4855-a533-85c7950d2109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7431581-b89b-4309-a6fd-8c178fb2b887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598e3d1d-407b-4646-989c-c86af66940a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4831050d-ebf3-4089-bdc7-cca7184fbca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ac5ae1-a367-4d7f-8c84-96b36472b750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477cb8aa-5442-4d82-8262-6b2d66d2f641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "17851b4d-3eb7-4ca7-908f-5f8545bb9661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95635277-6efe-4257-9ca9-45ba15ab9913",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a885e2-9682-4554-a89b-96d59ecd4713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661b76a3-8428-497b-984b-6799be78d000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537a05e2-4b88-4e99-b266-71da87c0357f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a62c7bef-b74b-4c01-adf4-b6254b622fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71662e1a-3001-4685-a63d-d3834a77aa51",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07e6c15-fe2b-4c70-9848-968631a83c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2e6866-20d8-4e21-bfd1-8fc89a8e30b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4d8ce8-b5e5-45e7-a75b-2767a6dbf7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b40c5f2-55a5-4b72-b009-94495a648507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6ca3ba-04aa-44ec-8f03-50f8595281b2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffabe94-9201-48c4-8c98-7f9fcd55a74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bbcd05-8431-4236-9143-f50b0559bfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ced9b0-6265-4f60-b644-011a81888ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7750b2-55ff-470c-84d1-fd7c350fc1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d0fa29-d956-408c-a076-ad3742da9cd3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a006463-796b-402c-aeee-9322b4456d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070d7216-e851-40c5-936d-dfd7339f1dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cce9f2-d59b-4c40-a7a5-68314e6daeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5c53c2-008c-430d-b01c-e62a5affcdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92bd263-e1a0-4d2e-b6c0-7be01e7ff701",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38116b0-94ce-486d-bce1-f1259ea4e83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0e3686-44a9-48f2-9a1e-823da5638a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d355f427-f5fa-4d2f-9e47-b971588c06bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b765b5-49d9-4002-91e9-bc93f12dd44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994c43b1-02c0-4abf-a249-5a77519021c2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfce3adb-7785-4df0-a17a-60312787576d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b866150-6720-41cb-87fb-98984350b5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d819e8-9a42-4846-b05f-00f006b30a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90024e99-534d-47b7-a0b7-743a6cb66e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348d2357-c204-4b13-a448-0ab14fa740b1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9236d1e8-4b0c-41e0-9374-d833518cfb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a630d6a-3e5d-4837-86ea-e7af401f57bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7270c4e7-69e1-46ce-afd6-ce6b1fc55318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "347d8a34-59fd-43ea-847c-a9c17091e4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c133ba-f334-452e-a1d9-8997f2874653",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793c3ac7-9cc4-4a12-9b2b-a62af25931a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5097402d-c62f-48f5-9d03-3e6c849e7323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabdfcd2-656f-443c-a05c-5734e0cb6208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b28acdf-af1a-4f65-ab69-b632d73a4684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faca2d7-c824-4396-8957-ca5bdd36b660",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f45609-3c68-4212-b3c5-4d4219240339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3647adab-cfef-4d23-ad3c-e4cca502b191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612dac42-cd0f-4a30-b15f-47085959c1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c3546a-51ab-425b-a2e5-50271a70b844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eca9588-7744-4d1f-b617-97796e49619d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc9fde2-c959-47b9-b02e-a10cfbd45f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d91c45-b6ea-46a8-91b4-ee3e4c40a9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1636c1a-c85e-4348-954a-e7da411334a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc0740f-9bf0-49fa-bc21-21ff1df0388c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69857562-818c-4086-9cf7-53e62651c902",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6710a95-c768-43c7-883e-66dbc57216ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dbcc22-88c2-4567-a94b-d8dfe532e50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843ba12f-c918-4bc6-a2ea-e73260864bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b44ef4-c2a6-484c-a654-1893f773e2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9072a830-0c67-4a23-9211-8b44ba95224a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294a8b29-c504-4fa3-8804-2ca02a6f6d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbd394f-8d69-4d83-b472-6604e6cc30b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c57bc8-3b68-4879-adff-676a52fb34fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52040248-6040-4604-843f-3ef25361d750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c3f02d-e6c1-41a1-8ef6-61d4f0c29536",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764741b6-dd57-481a-9bda-48ab98f52367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef027eb4-4b73-42a7-9454-d74af3a4e860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36f2ae9-8e7b-4ccc-9e5b-b01735d31a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "864720ab-29f1-48e5-a5ca-79b6f7a90852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68498537-b841-4f61-b6e3-a29e07f1606f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850312a3-b55c-46e2-b564-d67b6adbe070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e8c27b-2832-48fe-a562-97808247521a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8779a773-1b93-4193-9029-e7e37f50bf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a10063f-9952-4d33-8593-25b55c597ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0198bb82-ff30-4444-9212-1a8ac43c8c9f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31c8ace-e14c-4b5c-838e-11aa076c4b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a0cb24-7e56-435e-bf1e-523e2df2a290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0f94cc-3e06-4d7f-b78a-d2f45c895111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59495ed-4293-42af-8d7b-c1769aaa8f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b78a2d-9abb-4807-94c0-304ced10f278",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bfaaa4-00c2-4a4f-8efc-2bc0e5954111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34023dca-6f5e-417d-9dcb-6d6e5ccf52d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42aa2df-327f-4682-b1eb-7d853b7bbca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e60ca04-4531-40bf-9275-055f2d7bafb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1277d48d-161a-4b40-af60-1f5345f5e14e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2429f6-e79e-4cd7-8609-a31f5829d785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4776abba-1ba2-4ebf-914d-6a970c4aed99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420f2467-a1d4-4ddd-b0ba-5f039b1a2c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded4a02f-cc36-4ee8-928c-e834d2b7b455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c538f5f-94f9-4b7e-a04f-ae052d843bfb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab4a038-fb5e-4b3b-ae8b-5db99534d1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77ddf0f-2819-4e15-ad92-cee78a8522e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7e74ba-ea27-4fb1-a059-ac3a210e6645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f49d101-7963-4185-997e-25f1fcfb3de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143c6fa1-357a-4449-8e6d-ac471fe45932",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32a498d-43e3-460c-9687-87dc71b9336b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5b5e98-c4e0-458a-ba14-22f18e6eed67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5edfd6-6658-4c26-8907-c7e07cc38c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ac0986-5590-49eb-832d-d5656a44ec77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d64b170-1911-418d-b1c2-aa8e7cc7eaf7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bade225f-e4c7-41c9-a780-0f15b2d6ee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effd9a04-7924-4f7a-af70-e2b2d675b176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae5ff1c-d736-4dc8-b298-4e201003320b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "626ebfec-6d26-49d4-8171-88e7a9d550c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca9ce42-4575-409b-89a4-88680ae3248f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe94439-1f3a-4c6e-bef8-b1c3311209ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7acc05-dbc9-462b-86a2-f074bdb7da19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388d28d8-97b3-4a59-aec1-18f2b07c28c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "546d09e4-0da9-45a8-9de5-b1d61236bdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c12ed1-4740-499f-8391-6ce2b5b235dd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe0968d-2ed5-4f4b-bd58-c5429a384461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ceca21-2c54-4e0d-82ee-e38f83e48699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ef813a-ce65-43b1-84d5-016dc52247c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a55eef27-1b41-419f-aadf-2ea1e7cee149"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac93cb4a-728d-47b9-9b24-268f6e441362",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b029377-e3e8-411d-a17e-b9cdcb18a4ec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a316a768-a17c-4d7e-8e1d-c30830b1876d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0bb9e2-be33-4cbd-b99d-953f4ec69cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317dac6b-e0cc-4060-911e-f10f746c8af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ce49470-3ffe-4f60-97b2-488d54d8e325"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58932b68-ad2a-4d82-890a-552a1d8fb4a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa960f2e-6b2b-44f9-b89b-8e32d638e787"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7db5cfa-8316-4b24-92c1-cb0d2c549eea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e46faebb-7516-4145-a684-955621aff769"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "338e9855-213c-4de1-be7b-de395db7ff1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "af943687-6a87-4a4e-ad68-bc3177f4dfe3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34e145dc-56b4-4d54-9c0c-e65944bf2e95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da382077-b0bd-4e84-923f-0ea00df1acc2"
            }
          }
        ]
      },
      {
        "id": "70d4f642-89a9-41cf-8c93-32970aecce7f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e797d736-e2f6-408b-801f-cb07f85fe190",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc59a5b2-2918-4155-979f-0a86b2bf6cf6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e21dc40-88c7-4706-b916-f18aea6ba03a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa52133-8a02-4a0b-8261-71e2306edf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ce9f81-4469-4be0-811d-8643196dc6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ecd70a-a6b2-4485-9778-3ca0e9ed6a83",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4651d973-293e-4193-b17f-b3bf1195dd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376f3ffb-3fe5-4254-b957-9497fc6ed4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083fe0d8-0b94-4d64-8122-e02e279c3153",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a1cbe1-8aa9-4dcf-857a-8f8cea59ebb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a49c488-6b63-4705-a219-68385a0d58b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77065a54-a754-46d7-965e-18f7442e3fe6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a321e744-7fd1-406f-a097-8b5679e45f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfb2909-feac-4e86-89a3-aee74ac683e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435059ac-41be-428c-93fc-8ad66874a5b9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569593b7-467c-4eb2-958e-1ff664796745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730afa4f-b622-4b1e-a853-b25bc21e898e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e878fbb5-0592-44ad-8aee-4a37603a2f21",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10382917-ecd9-40f2-b60a-cdd7517d69e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408e6542-9307-4ed1-9a0b-aa7680fe1d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4141dd6-4f3e-4a4d-94aa-240d1ff0d0c5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d1da07-11e9-4264-85ee-bd0eaf4eb1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd3b5be-815c-454b-b8e7-6742de5e28ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aedd873-6e71-4817-aeef-f92f3f948a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0127dc-d5c8-4e73-8cdf-05e80f8935bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff92ace1-a926-4dfd-b59b-878e97e28e1b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a014abde-3b37-4b4e-9bdb-86fad7ab39cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96c5816-bfe9-4c6b-9549-a7ebddb02dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c592c238-5365-4bad-9c77-3a2b75b83892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfaed57-cd00-4f84-800e-fefccae52ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7acc2c6-5b1a-422e-9b8f-b8fb1338c3f6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04ef0f0-0cb6-4f10-9240-9b044d82676f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc142776-35ce-4b6f-8b96-d711b0bec590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636d0de2-4cf2-4040-92ca-fc11bb72eac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66841ef5-a4f4-4ba7-a477-4dfbced44b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246b1f82-c528-4ced-8f53-95915bc76f88",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2bf258-86f1-41bc-a1b2-11ad017823f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bcd610d-8662-4c15-bda4-ed73fa7d112b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a7a586-1fa1-4ca7-9498-baff9f4a3a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e9c2f3-90c7-4ecd-9fd1-c3d6ab419cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb59c27-ec61-4529-a521-e3407a49e37c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf485ba-8a8b-4cd9-905b-80adc44e1a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3f17d0-7bd1-4d2d-8a31-aa597c487b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f19642-a240-43db-853b-09276e4967c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4549635-69e5-41f9-831c-e4019bf4f6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fc3c37-0654-4343-81bf-73e6248856de",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40917449-0230-48ef-94f3-00a44b8e9c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1daaf0-0327-45ac-a591-ac478a1ed5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2d8a44-87ad-429f-9ead-9419aadf9ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab97b81d-cbbc-4db0-a92e-bc2ba905309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4d7e25-0509-4191-8445-bd754eceb1bc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1439fd4-9c6e-41c3-bc72-b8eb6c859cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1772fc15-fa9f-4750-bc27-ccce1525645f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8b0229-81ff-46cf-9a67-51c3d05ad486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ce7e95-968d-4688-a415-c68088c30e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f57895-2594-40ef-bc82-0dae3f9d8e91",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8e0dfb-4496-4e16-b393-f98a5748f88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6e5fb6-408c-4f0c-9a49-ff024d33aa8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db933348-6b12-4e3b-8377-e0c735860b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bef1848-8004-4371-9033-1838720b2fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8cdfbc-de0c-466a-8bbf-f0962c7bce04",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cdf7c1-7c72-43f2-b993-97cde4c9e0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9417106-f737-4389-9770-12240911cc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01bf130-cd76-43c2-97de-c932a7edd584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b9c69c-a56f-49d7-a6a6-17f61556cc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808b46b2-b339-421f-8604-c1bcf1a29e85",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eeab01-fad7-49e8-8b19-8edea03ba84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1832f1ba-ea1f-4e4e-8c20-565144be3c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ee651a-06ee-45fa-8d79-ff570a0594cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8455a517-e74f-4720-840a-b6cf894d49cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4cee7e-6bb1-4f50-956b-6d0e337b52d4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b0f60c-a335-4c6f-9f15-a51ad11581e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e1c318-df1b-4e3a-bdab-f7af1ef8c800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f221103c-acca-4be3-b8d3-68914af35fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e7c6f4-6d66-4a5e-b0c0-413ff503eeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7472a59f-ea7c-4b72-b380-39e626ecdb29",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db423a77-d2e8-43e6-a17a-6dd58cf1ed6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9a0414-7918-47c3-8ce5-ba60a4ca17bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22861b6f-4e19-4e3e-a077-873e856cb657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8185f2-742c-42e8-97e2-93b1cf7d3d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f56dbc-18b5-47fb-93aa-40f7eb3d7377",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bde4db-0844-44b1-80ad-4aff1ad3bfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c60f3a-0669-4c64-a50d-13717e14a296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f26124-15ca-41d7-958b-64412d2824ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44939b2-584d-4ec7-b6a7-44db7163113a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad09d4d-eb53-4707-bc59-204ca87619cc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd198ee6-1ae8-4d0f-beb6-34ca0c7649c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381be28a-1e2e-4a05-b4ab-27552fb1e312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2dbce3-11f5-4a11-b41b-342b6a5a1016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08387bd0-795a-474b-a353-a6a726c5201c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa50f47d-639a-4c4f-a87c-f8e82630e6eb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e51ac1-c3b9-472f-8e52-9744c488c294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcee447-23b0-4fa3-b4f5-062d4640046d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a9ac6d-6d9c-4b4d-aacf-055c9aa9877b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49775637-a101-4a39-94cb-4e488eb64f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9d0ec2-c0fa-4bf0-a5cf-339ef08abc41",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b43e64-835b-4995-a1f3-b3536fe7ce92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91980b07-a150-4c9a-b9ca-6876cde855e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054b83d6-6bc4-46d2-85ea-5296a26b550e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced1d66a-219c-4253-a49e-40892314a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff62946-ab7f-4444-8e88-147f3da67944",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2d17d5-03ec-4d5b-9de3-f6a4ccc7d9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4e1b78-7928-4c6a-bd30-4e3228db88a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efed2e51-48a1-43bc-aba4-cebf798d747d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0173b2f4-37b7-44f3-8532-69a2c1a2d7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176dc6ce-2ce5-407f-b175-37812d7735d3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d11672-8b52-43db-8494-6edb772a1539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5970dcca-0d4f-4a2a-a8b2-d13d604ea7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccb96c6-c2a3-4c95-a089-1fe096e75be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375dd3f5-8472-4261-bc8d-bfd52296bdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0a184a-0e65-4b1c-a264-929566426e4f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc99cd8c-2d0d-4b6d-b009-c2b2f0c40c5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7ecd0a-6606-433d-a225-a7170c03a646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3caacca4-5af4-4a77-bae8-ce20ce85c718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655731b1-9269-4311-b8e3-b6a91f3c89be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0902479-7341-4f2b-8836-9eaf325c6c8f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f77031-6b35-4cb1-bfa9-342377dd7614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feae0908-d238-44d5-a0c9-3027b428947f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9991dfc-6cff-4bb2-bd1c-bcb7993fecbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5c3aaf-1846-4c0b-9a9e-9e624bf4229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40126e67-3c2c-4875-a0b6-3e586f3a0ec8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd283b6-9927-488a-aff8-214106786445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96f3d842-6924-4211-b5cb-2b9db00a7f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dab0000-b4b3-4894-9d83-601aa1a9a034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52906a95-9c11-4533-9d9f-0054cf1e93c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a47135-03b5-4486-a282-bcd4eac2a2d9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207ab946-496e-4a23-b47d-cea57860bae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7acdfa-6ea8-41b3-bc6f-d0b3a6398d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5de3e4-a404-47b9-920f-7955b65a4b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21dbeb54-be0e-47e5-8bdf-3313b2ad7283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c0c7af-eac0-4c53-8fa0-b9b1e4105f4e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08f8495-9a0e-4dbb-a710-e484e58ba14b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc9a717-8fad-4cef-88bf-8ebb79b2ad3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d995007b-ede2-44cf-9ac2-319e46b61c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c436690-fee3-4583-9061-6694aef14fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f49689-9545-494a-a02c-730b267abe09",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5e23e8-995f-481b-b75e-af1075aa52ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd948f7-7189-440d-8672-fcd753172c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390d3a29-4e41-48be-abec-95c19279c763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c29303b-a92a-4685-abd2-b1dbfb294eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c7b4e2-f503-4fdc-b4ba-b652d518a3fd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ec4e1e-bbac-4494-95b8-7f7b022d17c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878c4bf0-993a-4d31-86f2-e9679470eccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5205c052-d2f8-4401-b45b-ccc752b02973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3408d3-ad9b-410c-a3cb-f68b9938aec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca23c2b2-2bf8-401c-af09-0cb19237d7fa",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fb15a2-71f9-4cab-9f3b-d27bee287c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8281bc5-402f-4d48-952f-e9b30c4153bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ea4754-77c0-4df1-ae38-a919a13c3155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517382e7-1ed2-4325-9e1f-235ce368e886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04a44cb-5ddc-465a-a879-3425c9a1fdf3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32409561-e5d0-4d80-a642-f4e32bd08c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3756da60-1d86-43e8-9a57-36656fcfd81d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42d8662-bc35-4e50-99b5-1f35aee90b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af8c00c-a455-4a22-bc96-f2fc58fdc308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f7936e-4ef2-40d0-b182-abe25a796929",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75594bd0-ba8c-4a6e-8bd1-3c374644186e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687e72ed-28a6-4895-976c-de343a0491b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071f3e61-5d30-4c63-ba46-d8be181713b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636438bf-ad60-4c18-897e-8ecccc063aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6ebc5d-a34d-4c22-97fc-352d20915f5d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35a234f-1dd6-436f-9aaa-afbbbdbb6fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4744a9b9-4fea-4fa7-96d8-e75ef1049b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a30cce-629c-404f-a360-c807c55a11ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bf09de-4a07-4271-95e7-7230f64c67ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb32c2f-6ca3-496b-8313-b2a415da26e5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654992d3-5c96-4795-b28e-0581797d8c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fc72fd-f930-440f-ae3a-34fd81cdd500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68599b4f-a671-4d76-b532-e0ee5db727d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837002a9-c509-4b8d-a0bc-029610cdd3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fcf8d3-2325-40a3-ad95-a7fd612fd48f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109db67a-562e-4ed4-b260-77c9c4b715f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caace591-ad80-489c-ab83-d86fc90e89e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38830c5b-6117-4b85-b12e-f25ebb68780c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff28aa7-4e5b-4d6b-9ae0-288661c4b6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed64afe2-c149-4235-945d-1524d857f59c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9ddc86-ca05-430f-9f2c-e8ab638dfaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0f2dbc-4a43-4336-83d5-bd8e7c52daf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fe3498-10f7-474c-b040-08c27b226b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc294395-515e-4a8f-8576-eee496ba3d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d0166c-d1ee-449a-8817-9886959f611a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95ec665-1e51-450b-94d9-c77ddc1ebf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa9a1bb-c3da-44c6-af04-99a7746cdffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8809a578-f755-4eb3-9b6e-9b868446a911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1f7c6c-9eef-4f74-a368-915597e8b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c1f0e3-601e-4f9a-b025-cb92c309c52f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37ad049-cfc8-47d7-a122-900fe05a872a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee0d350-768d-43d5-a80d-1e493ecbb9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "259253b1-8bd3-4bfa-b158-c29abb3df14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d784e05e-d930-42fc-9dae-7688a58947db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b4f2c2-ac93-479a-9266-e059e884b456",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b096c5eb-9cea-4494-804f-24504ef1d5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e458d4-5953-43c2-b330-66c61d25f711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b4c6ab-4796-4b1e-bfa1-45510613bf28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e44c76-63f3-47d3-be90-1e1fe5be6f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310bffb4-7f24-4341-8e5d-10bdedafc115",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d08017-a806-4f4d-b23a-84b625c953b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072f895b-37be-4a09-9c27-c6fbab4a7a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35eb7f4-0fd4-4e9e-9e70-4b9a56fc173b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69da5a3-ef5f-4ac0-a2cd-382e3ab796ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb692f2c-f05c-4cf4-8a79-43b8ccb8962c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b391026f-ae68-4884-9b2a-dec0b8c257c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab30305-f5d2-4c83-8b6f-a6834f32e4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea98749-3c93-4b39-9d35-ae842ca4b743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40905aa8-645a-4a5f-8ff7-4cdb5261ab11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22b3d87-f7aa-4138-a33c-dd78b2c219e4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881238ad-7d20-402b-be5f-6405106b6bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e098bd7a-2375-44a6-aa7d-c572b17ea481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558b86e9-d35b-4bee-917e-4ed8bced45ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5bb515-1297-4b2c-9deb-f91735ac3a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33e8d6e-1021-45b9-bcb1-17e574ddd05e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a70575-0493-4ad5-9912-cab01cbc837e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b757b4-472f-4631-afc1-87c56174eb69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55d4f30-d4d0-4dc0-861c-eebb97703db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b381d3-b0b6-4b6a-abbc-da634fc8ac89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0e176f-e9fb-4bc8-94c2-c9d1e22ed08b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba003958-3da3-4451-8849-0cf9e0e03d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64afebf3-94a1-4e4a-a7e2-2c96a2759bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded1718c-2073-48c1-9cec-b64730b8a1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c560c0-aacd-4826-b128-7d60554b7836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31215ff2-6427-41cd-a52e-4f5b14cae376",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd57df9-537f-41df-825f-e113b219b1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72359938-504a-408b-b743-a4fe67d5ff68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf169373-6ddd-4f25-9c6f-efeae56ae482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feeae536-c10a-4592-abb9-e8a368912013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa240659-b4eb-44c0-9270-dca3cb339e82",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46123ff2-85f0-4a32-aa86-f511138c85fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559e42af-3010-4df2-ba6d-f3f195172775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c38d2d5-901e-460f-b6da-d94439762bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58508189-53d5-4f5a-a0dc-88c68b34c203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f9de2d-0772-4241-8c44-f5730626e6a0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a52f3d-4687-4f4f-bbe1-c8261b93f258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6550bc7-18c7-4693-b5de-a340432792da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92143a0b-1fa1-4db5-af33-e7bbe9d23d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64689632-7f05-4bb5-9b48-c7aa6a1fdb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5c1698-d34e-4e1b-a33c-68eac5628238",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dfc436-fd7c-458b-a807-ec45a90320fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f7804c-167b-4070-a443-bc96723ac6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54914169-4258-4f7b-be77-ed3d61ed370b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d894d6-e891-4e20-9f0e-8a703321536a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed67332b-71a5-42f1-b882-0dd80ffecaba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acd51b4-b926-44c9-8885-749bcd383f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54702e6-68c8-4a68-8db8-1ad9d92690bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f86258-bdc2-4647-97ba-392bfff75719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0693358-d668-4e6c-92f3-676317fde707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f083bebc-d8be-4e43-a4c6-26758486ea51",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae850c19-b3bb-493d-a81d-51606ac9cc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0f4fa5-917f-4b22-9107-139d0ce5c891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32db0496-2005-48e4-a090-9ffaee6c6f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1fbaeb-5449-486e-9224-75a440687ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9a2aab-af38-40f6-8d29-e2d718079434",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3301d378-6a6e-469c-8aac-f1556d54aff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf99d73-f61b-4c88-a7aa-36c824f194a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1d0c12-2c47-4ff7-ba6c-d9e053c2c7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8e2089-4b1c-4e24-b700-a4cbb55f8466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b534b4-cfed-4b81-aabc-688a31bc8ae3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e320c6-a838-492c-b4e9-0fd42ed2d660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346084e3-254a-4d69-ba27-7ee1a341c1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1002c5d-f8df-490c-945d-61964e99f2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70747c7f-5d76-45cb-8e2b-e87b6ab025d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5417fccf-7ca9-42c3-bef1-dd7af6a79a37",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b326f94-ae6a-4280-9017-4566bfbfc04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555c8fc6-b631-4f72-80f6-d2d2ca9dbe43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e649e7c0-ef92-4ab3-8e62-3c744fd77aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3eb21a-a6b2-4e4b-999f-177b3c9d73c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4878b168-8a75-48e4-a6da-2a237aceadde",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598881fa-837b-42f0-a13d-9a26b2558f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f781f3-9183-4671-9e21-d9bad07d3da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7380af8-26ff-4e4a-b11d-abc309617d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dea39e-e24b-4314-aafe-d8c361d01892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17e36f1-9855-46ad-a2e6-102b2baf7a6c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc05349-3d0a-4532-b4a4-65e7b3e112e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a903ea-d294-442d-b3a5-12fafc87d04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceee8c3b-cbc9-435d-be82-f3f1101334a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ee0642-20bf-4516-bd22-5f6b1d5385d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892f0419-3d01-43f5-a4a4-3e5ec565e3be",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba6a733-671a-493e-87f0-1929a9fa4a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3006f71-1baf-4f5e-9d44-d2392986125c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeab6e5-b847-4457-9c09-ee6867c4a745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e307d194-ac9b-45fe-ba54-182335ca3d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bf64a5-15ea-4872-8af8-c15e0236d1d0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10621ae3-081b-4396-b6cd-72a0ad438613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739f66a0-92a1-4244-b70c-f42a41822d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e97c6a-d0d6-4aa2-bbfb-1edeb7b22920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce74eea-496c-44f8-a957-5cbc51439cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95508dc0-f9fa-40a0-ab46-e59e56b58577",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39020758-fd56-455c-90fa-7582584e3ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da41631-623d-493d-97f3-fa54e751a0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a21de27-b8a5-438c-a053-8d1692b26118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebe1d8c-b613-4425-9e8c-0cdf7ec04b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1884233e-f87a-480b-b15b-3112032e40d4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac63c71-20a7-4a52-81b3-05b8eebfc45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9494370e-4611-4b52-9c6b-9f37da38fefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797dc034-eac9-4f23-bfa7-475f4d70adf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00c68df-54ce-434c-a715-9b6822681f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b9d999-998c-4473-ac63-67f6fc67c33c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4893c6-70bc-4949-a93f-d8d017c63f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079d41d0-0b92-4c76-8b9b-98fadd335dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2368bedf-43a4-4644-b570-907edc9ffdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ceb00a3-0be8-4a6e-851d-72684ca70feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308dbbbd-1aad-4610-b223-09cbc617cca4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bfe5e5-365f-4b4a-a3ed-8762b664ffe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951a85f1-46e9-41cb-8d81-36c9544d35c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c311e922-d8f7-460f-bf38-adf2d3e9757b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4702d316-0b89-4de1-a1ee-43c2d42749ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e58006-d549-4bf4-b014-8c485ddf3572",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5234843-b6f4-4bcc-aeef-7af0f384d698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5661bbf1-30a7-48f9-baf9-c254837b0325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965abb45-8273-4519-9a73-5c302146982b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3079ad7-a860-41f2-884a-f101d46b6b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5408c64-bfe9-4ef6-9fd3-9118787ff88d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de359a9f-59d8-4511-be8a-e1c2f085cd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb78ec8-ea41-427b-939b-aab9e0c366fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663b9270-294f-4314-8f3a-9b6a5816fb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9989d97-3ff8-41a7-abd3-379b27a6b69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf0c674-cf38-4a89-9476-83d8f70ab19d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1168eb1e-afa8-438d-bda5-8044e9bf1181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3691060f-ac26-4b28-942b-cdaa661eac34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26650a49-1667-41aa-a3f0-628542b06402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e206b5c-53a7-406a-ac79-0b4d9d37f41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37c0090-726d-4a32-8261-68238647c264",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb2cde1-0d46-4886-8823-6d34d69e322a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99469108-9c2c-4e92-a56a-1ab7b3d6dadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3a43e3-3036-485b-aa85-aab046be51cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcaf42c-d586-469f-bb27-12672b1fc21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4974aed-52c9-4351-b5b6-212518f35aa9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be08fb01-a3b2-454f-89f7-5fa7b614594d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29d26626-bb94-4783-9281-8e29fa01c8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b80a4ed-3879-47e7-bfca-f442a02ca137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6fac00-63a8-493d-9641-5b347acacd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658c1a21-bde9-42a1-803f-65fc88c5ac5f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdb598f-9d17-4dd6-93cf-02b656c42e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe48255-fb62-43eb-a4e2-51625165d983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0bcca4-76e7-47c5-b854-c39f3f8fb1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae92a86b-1535-4ec3-8642-442f9e81d33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f261c8d0-5331-4cbc-9d66-0befb1dbe404",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cb4877-8c97-43bb-9a02-fdcb54238b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30199abb-2aa6-4acc-9074-bf62ccb9ce13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a8a4d2-82b5-45ea-ac15-f9e49bd46714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854fc5b0-3ff0-46fa-affe-f0fbfd88d09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e58222-1366-4c3c-8db5-343a6e401d3f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86451124-2179-4c30-9518-e5d36f277d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02997c48-2ca0-4e2b-b954-d92d4a8798eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907c22aa-1e82-43e7-b38a-825ec4b6a8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96bf47a-0692-4ad7-9de0-5aaae0a1af24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d625fd7-26f6-473d-ba79-5320a5ab995d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075b3462-7164-4efd-b9f3-8a92f08c0cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0496027-748e-4534-8acd-bbbcf16b9ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27b2487-a285-4363-a601-9e93fbc6917a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb10faf-3d00-4c5e-8341-97f50b783272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6b5914-cfd7-43a5-a111-4ee6d8f85845",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19e41c4-961d-45d1-aabe-5cae275eded3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "575f3d15-244d-474c-bbbf-8eee66a3864c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81065b77-e4c2-4cea-a538-95ce0744e9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753ef561-e804-4e56-8ecf-ae23d6c58af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28be3e60-c3f3-4ac6-a58a-7ca98539c0af",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd7ef2c-5c86-4da9-bb2f-557dadd3d3a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d45fda53-3915-4a00-a61e-e684205aa8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fe1bac-595f-42fb-90ff-261f90304220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b0a2db-0b13-4cda-987f-af90de3f9513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5e4a25-074c-4af2-a2f4-c31cb8b52bbf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac63b2c9-f92e-4fe4-a12b-6c71f2140223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8653cb-5e0a-41f8-82be-57c825935dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49032e7-1173-45ef-9a7c-3fac979a751f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8507118-e929-49d8-94c6-027f2de436b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a644a75f-911e-4fc3-bbd2-51ff7138d066",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f5f2ae-9df4-475f-be82-67696549dfa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8252520d-034e-4349-822d-db6039389f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5978741c-718c-44a0-b559-a20fb5f76c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e676ef-e5bd-4e28-94e7-fdd290a941c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c4d1df-d21f-4b5e-822a-c2fdac82fc71",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201f6e47-a54b-4914-93bd-b898ec765aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc948bc7-2a70-402a-be99-68e297c70ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a890fc8-9df0-42ce-8564-8f44f6cc8c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568a7774-7556-46b6-a8c8-c2e8ebad946d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fab7268-cf96-49fa-b1e8-46690b0f0b1b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df5e2d5-6785-4390-8537-04ede271deae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715d3c2a-aed7-4a38-ab0f-68d88718e6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da56367c-cff3-4c9b-8e75-574a57e6a056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2fdff8-bc5d-4428-a336-dd25a2899ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15dfb2d-f35a-4155-8f4d-207601693db5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa105ee7-4361-4e98-bdbe-d4c43f174eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3490191d-db95-4918-a923-cd3f6b4d1d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0932cfe0-9088-4921-bf77-93ce6539849f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83d3bbc-c585-4b36-a12c-ebbb43a80633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09e8a38-5620-41e4-b088-d4011b003412",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebcbc89-a698-4558-9f3c-6aab246c51cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac20f619-15f2-49e3-93bd-4b09b3734dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e339b3-83e4-4f48-9784-7645246280bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb806bd7-12da-48ca-a2db-c4b2ffb805ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69cb7ce-2dcf-4d46-92ad-270e52c89f07",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bafb79-64e4-407f-a693-ae53b98eaac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331705b9-3957-4fd9-ab36-1aeb1eceefea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aebbd4-a238-44a8-92a7-a737508cec8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984e80fb-8d18-43c0-9be7-6c5984f981c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c3ef20-de76-4e12-9384-177a5c089792",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da901fab-7dee-4ff6-b9ad-6db14c24cb72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19929d40-cbad-485b-a49a-782f9cc5e67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c16ce5-7fb8-4a67-9d12-47b678b84ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a52015-bc75-472e-ab40-364271380e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0460f590-d651-4390-9737-4c703ca98c15",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed5b495-3b40-4dc7-b68b-488b11ee59d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ccf0d4-56ad-40dc-8cfa-b43ed9eeda64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ab6ff7-2636-44bd-a605-af54b6bf6a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2921cdd8-5e21-4e91-a18f-315eab012501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cc59ed-f2ba-4d64-a37a-ce54c86bfd60",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae2c29e-7a04-4f57-825f-30ef31c1c1b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84f0431b-aec5-4522-ac50-b5b1cd36342b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67ff23a-f1b3-449f-8e80-53b4cdb5a429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffcb3c4-f18b-43b2-8414-cda00498193e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb920af-4187-4285-9701-7464d6488056",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efcee03-4308-4096-a75e-809fca88af32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "001ecc03-5c5a-4bf8-a92b-2889d824de8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2784b89-ceb5-4c66-a04f-fa6d881bab6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827ab1f1-d421-4c03-8d9b-6a95d706a137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04a639f-e7f1-44f2-9871-48f96f837a6e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e2253f-bb59-46e9-ac20-dfd3c1c521c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e37871-1c33-4ad1-8be8-c4a279eb1f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a4065c-7988-45da-8249-847f39b3eafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e473728-e797-426b-8855-ba348d419f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df46dac-d7c6-4109-914b-4ebd9c6623ef",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21195193-e9d6-4943-bc48-19aa3a4bda3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5320bda5-1c05-466f-925a-bbdd01267498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15831b53-a10d-4d5b-8024-42563d6ed187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8f0365-dda9-494c-b1ed-183716a17490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18deb7a-5651-4172-8971-f04861aa620d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e3e484-b972-4de7-8143-9b0fa1255901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0ea3d4-f945-43f8-bd79-041b298ad3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a91f9a6-1ae1-402c-ae53-8c3ac56e3383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e90f6f-e35e-49a4-996e-27cc39e81b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220a0456-f9e6-427f-b15c-e0a8a8bcc837",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328e41ed-6938-4a67-8697-fb06c640ea2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76c8e94-2b98-4698-85b8-4bb00432b366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef227404-b26a-411f-8ab2-0c7a471c47e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d476cfcc-4582-471b-9f35-6bc3a53d04c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b0cdc7-f885-41fb-92be-fd92ea612501",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21dd565-cd40-476b-a24c-a7f3f657bc19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1cb365e-e965-44c7-a0da-588c5ec69b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7da9c43-6683-4b38-bf68-77d7717e74b1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153050b9-5512-489e-b03b-17f0fcf41899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0d285b-f9e5-4b55-8fdc-2e153bcde3a8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40317a7b-5155-4c34-87a6-09e652742b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09165bde-c7c6-4926-a256-666d0b7d2c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa364cc-8786-4740-9c2a-d1f52cfdae72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c4920a-951b-4786-ad0e-dfed8e6623da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5394f7a2-3540-4cd3-86bc-5036dfb75d35",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cbe41b-4eda-428f-917d-baeaeb438ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec2b3709-7cc8-4263-9ee4-c35f0105a285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70c7aec-3cd3-4be3-b264-36ab387a5517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c41c1cc-a8fc-4074-8d95-b173ce0b817e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3684deef-9148-40be-bc37-865cecc49a99",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087502df-ee19-4f11-ae6c-9fdf193211b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ef7fe4-f3cb-4d08-b0f5-6fbe44afd9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f9ddb7-55c9-4866-8899-43b266989478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136bdbe3-9103-4d9d-8d36-f749bb94b3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aa9f25-d436-43d6-bd36-4df19abd298d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a02fa17-a842-4812-a237-82994aff2031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef33692f-e2c1-444a-8eab-bbb70f412b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d03de47-0d3a-4ba4-9f84-26c93a3300c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf820e9-c2de-4b22-b5f4-07375890724e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aea2bd-4928-4703-8279-34819c9648c0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9579cd81-1296-4777-9a47-bcbc525c8d7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e63dd2-4ecf-407f-ad3c-c258b5c1a37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768232ca-f2a2-49d2-9f8f-824df45dd32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a84386-de4e-46ae-9dde-5d64f5f8d0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851362bc-6692-4d67-ac71-db738cf52da3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea6affe-6243-4bc3-8e98-0cdbd3786ed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b20ea5f1-d4c9-4e3f-b5da-8d1092c60d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a08ebd0-6fc0-4229-b2a0-6f644eedbf80",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2aa740-419a-47c6-9d41-2add1e79e529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8284dc-bc3f-4a7e-b751-c1c2fd30bb35",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a170889-b854-4026-9a98-0af29aa16447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda272f2-d667-408c-a56b-ad4166faa20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c19b0b-fa5b-470b-be8f-c906116bb05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7acde6-b5d1-48ec-9fd6-7db6d4655e50"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59108273-6ff0-4b10-b4ce-8a6ba1bdf12f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72163bfe-0d77-4e2d-a71e-43d98aced6b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cedc0eb-dce3-46fc-876a-911a17446d77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a247fb6-5f3f-4cba-8add-4a49fc2fd5c1"
                    }
                  }
                ]
              },
              {
                "id": "d8f17659-32df-414f-a877-0c2fdb8f9e04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b72c226-3392-4443-bcf0-2d2b150ece9d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595217c1-3ad1-4ed1-a411-1e966e9d58ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "922743e7-724c-468b-80da-f426ab68fae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d8fbda-31f9-4cab-bf6c-333128c281ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8c62433-af8a-497b-b1e5-a313e76fcb6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7aef866-b01d-461c-89bc-8935763b829d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d75f0a43-fa1e-4013-ab49-083d38fc308e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fc085a8-5a24-4ba2-8393-cb8ce90b1246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0141fe7d-36df-47f5-94d5-68a585f8c804"
                    }
                  }
                ]
              },
              {
                "id": "d4fee2fa-cc00-489e-b113-f8baf3c234c6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b2d08ed3-35b9-4f3a-9084-77dc47c1b2d4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b9bd13-1f5c-4063-9dc2-9c68259e5245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c5472fb3-75c7-4b3f-9adf-93369affd25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc5eee9-0c99-4f04-8881-f53150a238ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a80e02b-d96e-4e0f-826a-cf712c770cd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ea0ec30-c56a-4688-8993-4a56d953bae2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70a7bcc1-4916-43ee-89e5-346837b957d6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1038575d-4c4e-4ef7-9f4a-d852294e2002",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7864c916-0d90-4a1f-a2c0-8c3ba3ff22b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a44e39f-601a-4b52-9c5a-2cbf689b0cd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40276c06-44f7-49aa-80ef-cdaae9123df7"
                    }
                  }
                ]
              },
              {
                "id": "6b1eeacb-e30a-4dd6-bb1a-837b340d30ea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "385bf03b-a037-4585-8741-79959c6aa934",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "397a3b5f-d1ba-48a3-a4a5-e1f0b0c82ae8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2539fb27-e169-47be-8c4a-eba174473933",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f5f5c9a-23be-4e81-8454-3446bc23130e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18253478-0fa1-48f2-9f06-ea43ad05cce8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "321e696c-040c-4534-98ee-3b0abbe9713a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ba2f936-42fc-4f65-aa07-a54930d73e44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0f72311-8ee6-471b-a83d-b8ae228fe97a"
            }
          }
        ]
      },
      {
        "id": "40d5ec1a-20cc-450a-8b54-a1816057e67b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b60fb40e-b940-4260-aa82-a5c780f4d396",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78935643-9215-4f39-8c00-69e4992b81b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d83f50d-12cf-4589-a2ff-37daaf751231",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf5ef8f-04f1-49d2-97b2-a5d0a394f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "202e94c3-5118-4eda-8396-cb173da6ce74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2273072f-b1d7-4e76-b77a-94a365e19418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d4ca8d7-093e-4209-b78c-7143b73140e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29d5ad8b-c826-4881-8d11-ae4f31cb5410",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fc4530c-e1c6-4d69-a38c-c2598fda6ab7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d4be2bb-31ac-4bfc-989f-a4dcc3d6f119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20d5abc2-ec81-4197-8c08-fecbbb85ab4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "589dc060-11bb-4e0d-af81-212d489dc769",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "545a16f3-971d-41ce-9227-ef56a4e76556"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "403acfe0-15cb-4ee5-8f1c-20f6413c789d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46167a48-2d9f-4808-9470-ead7eba78f85"
            }
          }
        ]
      },
      {
        "id": "e7222619-e161-44ae-92e5-1ddd63fe3af1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c3a52f2a-8b35-418c-86ec-c774d00cf14e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80d7eba7-8e03-4771-95a1-a32bf7f3ef04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3b5c153-711e-4296-a931-ad35c4a64761",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47b49c2-6c92-40f8-8b9b-4f5bf6e475f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28424893-8a6b-4a15-b876-97852d3b2d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d726b0af-5df6-4c78-85b5-17e8a5a46dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32ec3715-a7c8-4929-a43e-2e2e4c5b739a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb9d0844-c57c-4ed6-82ec-6f8beec69ea9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d89b6a4-14cf-4c19-959e-56b44bc4049b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da6a4425-172b-4fda-9c70-1398b99834dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a745841-2da5-44de-933d-45e02f9f0f62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "638e32dc-d068-445f-8a1a-3a7061f4e98f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87331b97-310a-4c90-af9d-afb21c75f4ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a24a8599-d711-48da-be80-b892ea52bb94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50dfdcd3-f8cf-4b9d-8156-16d2ca6389f5"
            }
          }
        ]
      },
      {
        "id": "b94704a5-287c-4faf-a07c-c125eb388565",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7d5f866b-2684-4faf-ad79-b25e609da2e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e49bf211-be1c-46b9-b583-c4a768e81c23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d15f1f2c-3c62-4e3f-b618-86baaaa16b29",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2f4574-e746-486c-98b4-5427e00f14b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d33badd-2ecd-45e1-b50c-2f027364ed79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c75e0c-a66e-4bb7-99d5-64268cb16655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7cd2f65-2b37-47c2-95ac-d61942962dd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af9326a8-81ce-4dcd-af6c-948d915da03a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e20a86c-9b99-4791-ad69-5e9e16a8658a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2968c952-9dca-4b5a-be6e-3c20ef33f6fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f34ba10e-a7ba-460e-8bd8-86ffb8e1156f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e1bd737-9595-4512-9a62-ee19ed6c5d13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "032c83a4-8945-4284-bd27-fca216130428"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3ec09b7-f1e3-4968-b584-db9693fa6c94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "942ff9a2-a41b-4c71-bfba-2134de94ffbe"
            }
          }
        ]
      },
      {
        "id": "a82aa03f-13c5-437e-8184-797f4740c343",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de758c15-0405-4bd6-909f-81dd150f1523",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfc1d908-4248-4589-afdc-20acf89017be",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0edd4cdf-ff56-4c75-948b-b7dedd9ab6d3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff2ec539-0de7-44ed-b349-65186214ebf2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "361647e5-121f-4d40-b526-3222f7d28065",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.376760563380282,
      "responseMin": 3,
      "responseMax": 242,
      "responseSd": 18.513288586709333,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693182782893,
      "completed": 1693182796348
    },
    "executions": [
      {
        "id": "5a6e4516-9e37-4de5-82b8-61ca6608ce9a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a1d6d628-1539-4da5-9270-3b5badd83fc8",
          "httpRequestId": "30ce313a-939f-487d-aa3c-f4921b94fa74"
        },
        "item": {
          "id": "5a6e4516-9e37-4de5-82b8-61ca6608ce9a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "869f1058-bf81-4390-9766-2d963b32ebd2",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "fd8e26d4-c870-4125-9a68-90671b8b0b7c",
        "cursor": {
          "ref": "ce350f69-a186-41fb-b5a1-4f9c6ecb70fd",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "830c2902-a590-43a3-a9b2-c86564e5f974"
        },
        "item": {
          "id": "fd8e26d4-c870-4125-9a68-90671b8b0b7c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f87a4bb7-c9f1-4b9d-9bc0-3c1a482fac4c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "59cc3ea5-d455-4348-adfb-9012f3efc0f9",
        "cursor": {
          "ref": "30167f27-6c58-4398-a78b-33646b831382",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2f0b4c50-55f4-4860-a2b6-b1c5e654115a"
        },
        "item": {
          "id": "59cc3ea5-d455-4348-adfb-9012f3efc0f9",
          "name": "did_json"
        },
        "response": {
          "id": "a564817e-a51e-4408-a385-78b122fb60c2",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea9bee2-c97f-4efd-8fad-c0d176f7f61b",
        "cursor": {
          "ref": "59b11045-1c2a-45af-8b30-6b7fb08d7816",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3da2f28-078d-4656-9c6e-eac12510e5c3"
        },
        "item": {
          "id": "eea9bee2-c97f-4efd-8fad-c0d176f7f61b",
          "name": "did:invalid"
        },
        "response": {
          "id": "e57679a1-a24d-45f4-999e-c593d40f87d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea9bee2-c97f-4efd-8fad-c0d176f7f61b",
        "cursor": {
          "ref": "59b11045-1c2a-45af-8b30-6b7fb08d7816",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3da2f28-078d-4656-9c6e-eac12510e5c3"
        },
        "item": {
          "id": "eea9bee2-c97f-4efd-8fad-c0d176f7f61b",
          "name": "did:invalid"
        },
        "response": {
          "id": "e57679a1-a24d-45f4-999e-c593d40f87d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daf98c8-a76b-4ae5-8aa1-c7e63361ece8",
        "cursor": {
          "ref": "30be9ed9-0591-4c15-8299-b672f83d70c8",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "16639f06-476b-492c-8261-07afb0480c9d"
        },
        "item": {
          "id": "0daf98c8-a76b-4ae5-8aa1-c7e63361ece8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c71dc7a7-2135-48b4-9cac-44de74acbbdc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1767fd20-8da5-4908-a400-81e6b46c6391",
        "cursor": {
          "ref": "d6174438-b38d-4e96-896b-f6407097d4fd",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "98bc686b-681f-4607-b4eb-dd717cbe6dc9"
        },
        "item": {
          "id": "1767fd20-8da5-4908-a400-81e6b46c6391",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fb8b9be3-ffa9-41a9-ab35-25b3af42b292",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262a6c68-f08d-40dd-8525-73f2f287f190",
        "cursor": {
          "ref": "aa0729e4-dee8-46bf-941e-7df5ed483846",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7a831e9c-7680-4f19-89ec-e4a1f667197f"
        },
        "item": {
          "id": "262a6c68-f08d-40dd-8525-73f2f287f190",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d37b9b8b-53de-468d-a735-488e0b3be2bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ed70d9-39f6-4d17-817a-88c14a11b63c",
        "cursor": {
          "ref": "2cbe8ebb-d045-40eb-900a-5003c028e597",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "71ab77e9-1efd-4fb7-a818-a179b752549b"
        },
        "item": {
          "id": "13ed70d9-39f6-4d17-817a-88c14a11b63c",
          "name": "identifiers"
        },
        "response": {
          "id": "9a0a6207-0a8c-43e4-84e7-293860a6c251",
          "status": "OK",
          "code": 200,
          "responseTime": 159,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057e3260-5477-414b-adf3-760f204e9b60",
        "cursor": {
          "ref": "f37d7e61-5e38-4216-ad7a-77e31d6137a8",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3f6a5fab-74ef-4576-8b43-c484049da230"
        },
        "item": {
          "id": "057e3260-5477-414b-adf3-760f204e9b60",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "00b935ee-f6c5-444d-ac91-3b049cfc5134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95372ab0-5c31-4264-996a-ed4b160575e3",
        "cursor": {
          "ref": "669e64d4-78f0-4767-b1d2-cee8e97b6369",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "47c3c670-188e-4552-9847-1d1bb8a42d35"
        },
        "item": {
          "id": "95372ab0-5c31-4264-996a-ed4b160575e3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9ff64610-a781-42c0-99f3-f467805f7989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca87c4b7-d35b-4a8e-9e09-961a18b9cd0b",
        "cursor": {
          "ref": "180b7deb-8df3-4e6c-bac4-65aa59e2dd05",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "80d67296-ce01-4c1d-9758-074d9f684c22"
        },
        "item": {
          "id": "ca87c4b7-d35b-4a8e-9e09-961a18b9cd0b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c75466e8-2595-4aa7-b396-4dbd5a9a9df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bcae74-6f03-44df-9ae4-b90c9f9db5b6",
        "cursor": {
          "ref": "fbf50162-5bce-4b56-add3-37c7c05c6c49",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "588966f7-1aec-4ed9-9b8b-9a91578a0535"
        },
        "item": {
          "id": "a7bcae74-6f03-44df-9ae4-b90c9f9db5b6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "99cf6781-25f3-4958-bd9d-2b0d94fda3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743c1e86-d26f-472a-91b9-40b90d4422d5",
        "cursor": {
          "ref": "a540550d-5982-4658-a964-0af86fe6dd88",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "95540ee6-5819-4b41-8111-89efc067c26c"
        },
        "item": {
          "id": "743c1e86-d26f-472a-91b9-40b90d4422d5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7335b9d0-8b11-4ca9-b1e2-ec3b5689ceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d9f805-29cf-44ac-8f17-eb9240fd084c",
        "cursor": {
          "ref": "fd2e0efb-ad0d-4a56-95bd-d4ec7d8f4b80",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d3f146ad-3efe-4c89-8daa-6b2ab24fb368"
        },
        "item": {
          "id": "84d9f805-29cf-44ac-8f17-eb9240fd084c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3fa852f1-a16f-488d-a845-d6c56fecfab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b20ce5c-94dc-4c84-9ba9-2f50bbec2d8b",
        "cursor": {
          "ref": "1bbcdb34-fd90-4291-a2ec-281891784a06",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "18d8475b-841f-4b34-9c61-71b6a675d83f"
        },
        "item": {
          "id": "9b20ce5c-94dc-4c84-9ba9-2f50bbec2d8b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cd66b74a-b060-4a9d-ab70-808f7fa541a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6838cc-60c0-4f01-b109-2a84097a3149",
        "cursor": {
          "ref": "766f28f8-d07a-4919-9d33-c03227e4c72e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0368f492-7737-484f-ad9e-5b64e8ce91b3"
        },
        "item": {
          "id": "ea6838cc-60c0-4f01-b109-2a84097a3149",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5cd0a4d8-b089-4f33-98ad-90e3e5c7fb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f7c2a9-04d6-4b27-bb2d-ea75db7a32a9",
        "cursor": {
          "ref": "82f1e158-5a12-452c-9017-1290ca72dfe1",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e904a34e-9c48-4787-bc29-f15794a82221"
        },
        "item": {
          "id": "f4f7c2a9-04d6-4b27-bb2d-ea75db7a32a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f7af9091-3439-4883-a50f-704ab16c45fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bd03f8-07f6-4083-8e97-deac4cac263d",
        "cursor": {
          "ref": "8b056fd3-2818-4968-bd5b-e4fd0db45a48",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5ba33594-6a4b-4f24-bb11-06dff9f27eb6"
        },
        "item": {
          "id": "e7bd03f8-07f6-4083-8e97-deac4cac263d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3148c1b7-0e00-46e1-b2fe-cfb38e97f8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42b44db-6fca-4800-ae1d-355097965fbe",
        "cursor": {
          "ref": "435db56b-5b24-436a-85fd-8215e0e08b9d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "11d70128-163e-469c-9150-eed0c4c64829"
        },
        "item": {
          "id": "d42b44db-6fca-4800-ae1d-355097965fbe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1d19a2bb-5b3c-4f33-a4c2-bf202bbe4234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b3e84a-cfa6-401b-9e82-8489d965aa3f",
        "cursor": {
          "ref": "b372ab7a-296a-4a56-86c0-8e2ba400613d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "22cb11f6-0497-4f5d-ba45-16b3d2319fb0"
        },
        "item": {
          "id": "69b3e84a-cfa6-401b-9e82-8489d965aa3f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1589eb09-fa02-4007-8adb-550fb4d5b2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7a1cbb-3b14-477b-926c-3aa4193aae19",
        "cursor": {
          "ref": "8a19fbf6-c720-4ded-962f-ba6ed11162e3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d670a491-ee18-49f8-bb46-e70acc73073b"
        },
        "item": {
          "id": "eb7a1cbb-3b14-477b-926c-3aa4193aae19",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "de67a83f-4dfe-4998-b1b1-8998036fd075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574e1a42-fdd6-4f03-a89c-9e85b33af088",
        "cursor": {
          "ref": "5a3969d6-752a-4d8e-a3da-8adc7e7560d6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a2fbbefb-53ef-4447-b7d0-3fa2cdbc0f29"
        },
        "item": {
          "id": "574e1a42-fdd6-4f03-a89c-9e85b33af088",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5929501b-9b4d-4a7f-b85b-6cd9125ff512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe3e4db-5b70-4a16-ad88-e133fe537c89",
        "cursor": {
          "ref": "91fda57a-a1cf-45a0-9dc4-2c282879230d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f9179de5-5633-44c0-b17c-0e954fe214cb"
        },
        "item": {
          "id": "dbe3e4db-5b70-4a16-ad88-e133fe537c89",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "49626b3b-f02e-49eb-8414-e7297044157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bab711-6568-4854-9aff-023c3a2c716c",
        "cursor": {
          "ref": "d1ea156e-e280-4993-aa80-627efc4b39c2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "685ea2cb-a032-40dd-8bf7-6706271f7553"
        },
        "item": {
          "id": "62bab711-6568-4854-9aff-023c3a2c716c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b759bc1a-6e0b-43e8-bd19-b5d85476e37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e4b94c-d5cc-4ccf-b996-c1a471d28f33",
        "cursor": {
          "ref": "cc01e1ed-9cf3-4c97-a8e2-6a914c01f4be",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "91746bc1-453f-4800-9ee4-9206dcac12f2"
        },
        "item": {
          "id": "04e4b94c-d5cc-4ccf-b996-c1a471d28f33",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c5c65de1-38c9-4e8c-8996-c6ad6d1060bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ef2ca2-83c2-4094-b6df-3108cdd5c305",
        "cursor": {
          "ref": "4f0902c5-3d6b-4a5b-be75-b507f02db7f6",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2cb05b1f-0d17-4b98-870f-d5d669f77f99"
        },
        "item": {
          "id": "f0ef2ca2-83c2-4094-b6df-3108cdd5c305",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a94e0cd6-b8d4-4a5d-937e-3d5da37a3893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf21832e-8440-41ee-b082-0a5fdac42fd2",
        "cursor": {
          "ref": "556ea90d-4e70-4d31-9680-137991ae24f9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9b47e214-68b3-4191-a6c8-862b01bbcbc1"
        },
        "item": {
          "id": "cf21832e-8440-41ee-b082-0a5fdac42fd2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f05e2ad3-7aba-4de4-908d-3b3ef1d280ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adb8c07-a041-408b-abd4-0c4ed3e98ea1",
        "cursor": {
          "ref": "228eb76e-c275-4bee-b93d-94fc3062483d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d5c65804-e1e7-4ec7-8dac-1779c6fddc0a"
        },
        "item": {
          "id": "9adb8c07-a041-408b-abd4-0c4ed3e98ea1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4b9b299d-1ecf-4590-a7d8-259123c33f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7eb4ca-eec0-47c9-9c03-94b6bc816b63",
        "cursor": {
          "ref": "aa4918cb-a126-4073-a60d-1bc439417760",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a00af278-8a56-427e-ad9e-85efb613dd41"
        },
        "item": {
          "id": "7a7eb4ca-eec0-47c9-9c03-94b6bc816b63",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2f8c6638-a595-485e-a574-f3777582b5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6f1383-5220-41e4-a927-fab97b958a7f",
        "cursor": {
          "ref": "3ef7793e-df2c-4fb8-8a35-0d5f4d8cc730",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5e1aecc5-e4ff-47a3-94d7-2749399a5702"
        },
        "item": {
          "id": "0e6f1383-5220-41e4-a927-fab97b958a7f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a9d71518-a747-436a-9c0c-f200ca7cc3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da16c29-74cd-4820-add1-dde5320dbca9",
        "cursor": {
          "ref": "4adcd14f-4622-4782-9edd-858107acf91a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d173d4a3-591a-4efe-8e8b-f14ca2bf4e7a"
        },
        "item": {
          "id": "5da16c29-74cd-4820-add1-dde5320dbca9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4ee63a5d-a964-44a4-9f74-eead4d0c3e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ca87b9-bd04-4f5d-a062-c18adf7de625",
        "cursor": {
          "ref": "939a1340-45ca-49ef-b304-9986f6311f96",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c480b500-41a0-4087-ba1b-ad0aaf27dca7"
        },
        "item": {
          "id": "c2ca87b9-bd04-4f5d-a062-c18adf7de625",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "533f917c-ff43-477c-aeb8-400b947bfad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d405fd41-7153-411e-ae86-c28aa1f5451c",
        "cursor": {
          "ref": "bda194b7-3d41-4193-88c7-53abe7fcd624",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eecf528e-1927-413e-91c1-71cced52e116"
        },
        "item": {
          "id": "d405fd41-7153-411e-ae86-c28aa1f5451c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dbde6cfd-9e43-403d-898c-d12bc02acde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850e97cd-66df-449b-a99f-a31262df32d4",
        "cursor": {
          "ref": "f03d04dd-15fb-4fc4-9fe2-8008e745e165",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b90104ca-8528-43e7-9f25-a647c7a81c4f"
        },
        "item": {
          "id": "850e97cd-66df-449b-a99f-a31262df32d4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "06f44e44-0c2d-4801-a45c-53c0706fa6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d51818-13d2-4235-bd0a-73cfe0c31fe5",
        "cursor": {
          "ref": "7b2fa3ad-7a73-4562-86c0-fc22b66b4d26",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0ddec5ed-b627-46d6-b9d5-c48a3c0daff4"
        },
        "item": {
          "id": "64d51818-13d2-4235-bd0a-73cfe0c31fe5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "713ec22a-4c1a-46ee-9123-ffad77fb1239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82539899-5290-4104-84bd-f736627a86cc",
        "cursor": {
          "ref": "a689a045-c299-4d8b-a6d7-e767e977f01c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f3980c40-2bbd-4b5d-b8a4-1b75156d3eca"
        },
        "item": {
          "id": "82539899-5290-4104-84bd-f736627a86cc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8f456cd6-4a05-49eb-ab6f-6aff71bae321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e4d172-a0b7-4b9b-803f-4f5ee5f59bce",
        "cursor": {
          "ref": "b48c37ea-c1b5-4c10-ad19-26de7fc40e9d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1f60ad5d-bbba-4527-b196-357e006bf9ee"
        },
        "item": {
          "id": "75e4d172-a0b7-4b9b-803f-4f5ee5f59bce",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f47ae4b0-831d-466f-b9ac-25bcb6351460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6133cce3-4bc8-4f47-8b51-91e36acfe3f3",
        "cursor": {
          "ref": "97fe86dc-a547-435d-a00d-4280e8621e68",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "65362e47-b6e7-4b7b-91db-bb2c6cc35188"
        },
        "item": {
          "id": "6133cce3-4bc8-4f47-8b51-91e36acfe3f3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bac56b06-28d5-4955-961a-4906d1b97159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93501b8a-9903-4f62-96eb-19bf8c8235bc",
        "cursor": {
          "ref": "13299deb-3e20-41a6-8f37-fba62d08e656",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "321c4d09-f01c-462c-bb0b-3af09f16633f"
        },
        "item": {
          "id": "93501b8a-9903-4f62-96eb-19bf8c8235bc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "45c1661a-4abe-4283-ac7e-0865a0108283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40375de4-e44a-4846-b935-1a29e0e69908",
        "cursor": {
          "ref": "7cb2fbc2-1a9f-4aec-8389-39439abc0560",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9f2edee1-360e-439d-ac73-8c7894749b9c"
        },
        "item": {
          "id": "40375de4-e44a-4846-b935-1a29e0e69908",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "71251887-f5af-4691-a850-d7c81ff8bc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7c8b4e-608c-4691-b986-f12ca762dff1",
        "cursor": {
          "ref": "bbcf879b-4980-4719-85b5-d1890b13b0a8",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e601e57a-2017-4112-8ac7-0ef655fce606"
        },
        "item": {
          "id": "da7c8b4e-608c-4691-b986-f12ca762dff1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5f361c9b-f166-439b-a78c-2cf07409ea8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56aa530a-4dc1-425e-a087-e71ff0d9165b",
        "cursor": {
          "ref": "33c708b4-1f27-4dfd-b662-6a1c3efb58fa",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "482b1b3e-e049-4873-9878-c77d8121e4a8"
        },
        "item": {
          "id": "56aa530a-4dc1-425e-a087-e71ff0d9165b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a4e841ee-2960-4049-a51d-f00d35df063b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da70e89-c919-4c6d-a10d-254d329072c0",
        "cursor": {
          "ref": "64e18fde-233c-4994-9866-c7afd74e92f3",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f0dd2f3a-80dd-4c7d-9bc0-ac42a6939893"
        },
        "item": {
          "id": "1da70e89-c919-4c6d-a10d-254d329072c0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d4889762-b981-4232-98f8-2f83702835b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b33a44e-97a4-4114-91ab-f5cd69fd7c2e",
        "cursor": {
          "ref": "aefd5ef3-8caa-4546-8212-7932ed1bf8d7",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "66d54c2f-b31b-4fef-8860-e791920528da"
        },
        "item": {
          "id": "2b33a44e-97a4-4114-91ab-f5cd69fd7c2e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "30d2d90f-d77f-4f88-adb1-08d52a628485",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5db3585-8b8b-487e-833d-add97f506cef",
        "cursor": {
          "ref": "22ee1234-3e42-4528-8167-f4de95086155",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "96b0f5be-2aa8-4001-b4c4-4dfb223be296"
        },
        "item": {
          "id": "c5db3585-8b8b-487e-833d-add97f506cef",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dc167b17-274c-4d09-bcd7-89468f094023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50dd407-fcd9-4b2a-8df1-2a9f94d01d5a",
        "cursor": {
          "ref": "8a10e344-9fb1-4723-b52b-b6fde9184a26",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2d35dd59-067c-4622-b478-7e553d201e94"
        },
        "item": {
          "id": "c50dd407-fcd9-4b2a-8df1-2a9f94d01d5a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1a7e0d73-5a6f-4c26-9ff7-e9cd72596030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b46b681-9960-4f44-b067-e23ea8858566",
        "cursor": {
          "ref": "3f0cdcb3-28e1-4aa8-823e-7f9b8723d97a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "545329ac-fa22-4a78-b62c-f5e247116808"
        },
        "item": {
          "id": "5b46b681-9960-4f44-b067-e23ea8858566",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b0921852-0a35-4706-a0f5-e0ddc7efc7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a7ca52-9cf7-42e5-8b86-b5b0b12321e9",
        "cursor": {
          "ref": "81dd834b-bcae-492e-9430-8ce2c7a6545d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d007e80e-e4b0-448e-a773-45a74d612304"
        },
        "item": {
          "id": "c0a7ca52-9cf7-42e5-8b86-b5b0b12321e9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fe4754d1-5be9-4fa0-83a4-80be521ec1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24b50fc-d17e-42aa-ac23-df36e68edd6d",
        "cursor": {
          "ref": "187c3f2d-e1be-4235-ac65-465b151e6a1f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bd1581e0-6af3-4e3f-ad91-e58ba5419291"
        },
        "item": {
          "id": "c24b50fc-d17e-42aa-ac23-df36e68edd6d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ec8585f0-e715-46b1-8df7-c59f5a7d7e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fa0156-2a5f-4fc1-a677-5b94cf8581cf",
        "cursor": {
          "ref": "bfbc1f3b-8771-4621-b411-169bfe3c29e1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3c489346-4068-4d23-a438-b0ef57e66bf6"
        },
        "item": {
          "id": "55fa0156-2a5f-4fc1-a677-5b94cf8581cf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "47aa4f1a-9b8f-417c-b919-14fa9fb4377d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa8826e-87d9-46e5-afdc-9d161a9c8e06",
        "cursor": {
          "ref": "14847430-5aea-4d61-ba43-9d619272798a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3e85b9c8-c7cd-4b04-963d-8a8815a50c12"
        },
        "item": {
          "id": "2fa8826e-87d9-46e5-afdc-9d161a9c8e06",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "22b5c078-e5f2-4c26-9545-400b528ae323",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6842e824-9ae3-49c1-85ee-1df9169228d7",
        "cursor": {
          "ref": "d8bf02a7-bf3a-4605-98f0-1834dda0bef2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c939d59b-e0a6-4496-b855-83f370689029"
        },
        "item": {
          "id": "6842e824-9ae3-49c1-85ee-1df9169228d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "be3589bd-bab8-4614-b5bf-95a99910605b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd5634a-246f-4fa8-9e71-c2cc42551dc4",
        "cursor": {
          "ref": "a4394df2-a9ad-40c1-b520-f8cc22e4d2ce",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "34406b3e-43c2-42c0-89eb-c522999e4c29"
        },
        "item": {
          "id": "6cd5634a-246f-4fa8-9e71-c2cc42551dc4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2f5e0e0a-0249-4783-853a-8cbaf189bcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d4c9d8-3438-4297-bdfe-22be28e06621",
        "cursor": {
          "ref": "8418b547-7039-416c-aa6a-725e03a903f9",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fe90b2db-14dc-4401-8ae1-87ad3403da3f"
        },
        "item": {
          "id": "47d4c9d8-3438-4297-bdfe-22be28e06621",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5c8ff474-ca5f-4df0-ae0d-51441938790a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74d9378-2878-4fd8-bbd5-01cba8335852",
        "cursor": {
          "ref": "6d1fcea1-e055-4758-8981-660facfc1285",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9b649e23-6c25-4ee0-894b-c93ffb6ae580"
        },
        "item": {
          "id": "b74d9378-2878-4fd8-bbd5-01cba8335852",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6642590d-3ff1-4f16-ad73-f46c58c37409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190f75b5-2c45-4d9e-95be-8b3c02da4f13",
        "cursor": {
          "ref": "c177deae-064d-4ab8-a3d3-ab46116544b1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "578ba5ee-ad9e-4b54-86ed-7e75f07ffb8b"
        },
        "item": {
          "id": "190f75b5-2c45-4d9e-95be-8b3c02da4f13",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3f0e6244-6484-41d2-82be-c1163b089192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f297a54e-6a5a-476c-99c0-e6eb7b3cb559",
        "cursor": {
          "ref": "3c3b9957-4f52-4576-8212-ff63601d6f07",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9caa7607-f45d-459c-82d0-e09bc74c8e5d"
        },
        "item": {
          "id": "f297a54e-6a5a-476c-99c0-e6eb7b3cb559",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "106869e3-2e00-42da-858d-0bd9a0f6e061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a19e4b-7791-44e8-90f5-64d22f35779e",
        "cursor": {
          "ref": "1e6fd82f-595e-44be-92c1-60681230a296",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5bfaa7c4-20cf-4251-9154-ee15eb438935"
        },
        "item": {
          "id": "d6a19e4b-7791-44e8-90f5-64d22f35779e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "894f0768-813f-4696-b21b-8194ba4fc99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7310008a-adeb-48cb-ba52-883195a13e72",
        "cursor": {
          "ref": "3b5c115b-d557-4ff1-a3bb-038cc4af2195",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "017ace86-f280-47c9-9dc3-a5d72c0dec9f"
        },
        "item": {
          "id": "7310008a-adeb-48cb-ba52-883195a13e72",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "12034ddc-6255-4c98-b97d-0b69b7b58452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78104827-be66-45a2-8db6-2dca6630688e",
        "cursor": {
          "ref": "ff91b14b-8328-48bb-99ea-557346b8d86e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e6d1a5d5-c469-4c20-9858-74e8848d4988"
        },
        "item": {
          "id": "78104827-be66-45a2-8db6-2dca6630688e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "816a0b47-8738-4218-be6e-58e046694924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e841583e-926e-4b1f-9164-6d8b1878cf55",
        "cursor": {
          "ref": "1a13f567-5249-4d9f-8053-a37ed0c318c2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d5552b70-4e93-4778-b9c8-bd3c40105014"
        },
        "item": {
          "id": "e841583e-926e-4b1f-9164-6d8b1878cf55",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d6e8a781-e6cf-4293-bc4a-eabb6d601aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d99d15-dfe9-419e-b9ce-856db877f793",
        "cursor": {
          "ref": "f9ab461b-ef2a-48a1-8034-1ce8e4032a28",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5c37b598-0e46-4e43-b5f6-db16bcd324d6"
        },
        "item": {
          "id": "a0d99d15-dfe9-419e-b9ce-856db877f793",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3600dac7-88fc-4c8a-a14b-f6826ea4cc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f8f7e7-d737-4986-8da5-e45c28d86649",
        "cursor": {
          "ref": "2c211b2b-6676-433c-bcbf-4c4371642d30",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c51313a1-554b-4f0b-8cd8-33213bffdfbc"
        },
        "item": {
          "id": "42f8f7e7-d737-4986-8da5-e45c28d86649",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e2547d2f-dfe0-4584-9483-528c66d9667e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7acc11f-2a77-4cdc-9855-c517e2e6d7b8",
        "cursor": {
          "ref": "578381d3-6cf4-49d7-afe4-bf8d262a01e5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ee699324-d231-4857-9f6d-280eb3540c6e"
        },
        "item": {
          "id": "e7acc11f-2a77-4cdc-9855-c517e2e6d7b8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "171e4f38-259d-43f3-a6ea-ed71b06516d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8845701-f7cc-4682-89a5-4e40de66c1cd",
        "cursor": {
          "ref": "9dca606a-12e5-477a-9335-428da45c2ad4",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "883d294f-6782-44f9-a20d-0c6f3d5380ed"
        },
        "item": {
          "id": "a8845701-f7cc-4682-89a5-4e40de66c1cd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8aef5c0a-d70e-42ec-bd71-d3f00ed89f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7f5f72-dc58-47d5-9a6f-afbbf478af28",
        "cursor": {
          "ref": "28b7242c-5933-465b-ba4f-fd06c148c2f5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b8d3e68c-1545-4b9b-a511-a8e9abb3d371"
        },
        "item": {
          "id": "2b7f5f72-dc58-47d5-9a6f-afbbf478af28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "758cf5fe-c83a-45cd-8ab5-6f9c98116bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71cd058-7aaa-4402-840b-9561a405edba",
        "cursor": {
          "ref": "5676cc02-c386-445c-8428-29fd0243b502",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9041712c-7746-44bd-b208-45ed5a6837e4"
        },
        "item": {
          "id": "e71cd058-7aaa-4402-840b-9561a405edba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4b22a291-bfad-426e-89f0-7cb1a496a0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152942dc-0307-498e-84d1-41b3207eade3",
        "cursor": {
          "ref": "5a9c9b0e-f5c9-42a9-a1c2-f35ad2d674b2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4ed80761-315b-46ac-9520-6996109110f0"
        },
        "item": {
          "id": "152942dc-0307-498e-84d1-41b3207eade3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b58ea6ca-702d-430f-8099-dd555a87465f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79e3ab5-ce2c-4db1-9034-d601903555c6",
        "cursor": {
          "ref": "b0d60789-7849-4408-989d-9ea015bcf68f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f5962719-5f60-4f79-8f8b-2080127bcddb"
        },
        "item": {
          "id": "f79e3ab5-ce2c-4db1-9034-d601903555c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ed4085a-60be-4277-b0a7-865942ae90bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bb547b-51f2-4a6a-8fdd-3ad2d53541e9",
        "cursor": {
          "ref": "5d701d85-7557-4438-8d21-7f5beeeae810",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6ae0cdb3-51cc-4e4a-80aa-c54cd2b3585c"
        },
        "item": {
          "id": "a8bb547b-51f2-4a6a-8fdd-3ad2d53541e9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "914bc140-9667-4a09-bb79-230762c11e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64137d66-bcb5-46af-9247-9e1d9be1d4c2",
        "cursor": {
          "ref": "ff683a0b-788d-4882-b733-3cc96d1cbdb7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d9baa713-8014-423d-b9e9-21167365c43a"
        },
        "item": {
          "id": "64137d66-bcb5-46af-9247-9e1d9be1d4c2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a42cda68-f5f0-415f-87c7-bec7e8729336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953117dc-afa2-4760-850e-f7df29622991",
        "cursor": {
          "ref": "e637ca7b-4650-4bf1-9987-4c62ec8cc0b1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "030416b7-3605-49d6-8370-dc30b427bd6c"
        },
        "item": {
          "id": "953117dc-afa2-4760-850e-f7df29622991",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8f4a2223-cbb0-4cd5-9b8f-79ea66321910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0262a412-2ff4-4bf6-9ceb-c9f6e0543ae7",
        "cursor": {
          "ref": "b3fe8767-a990-4374-8873-db99a2b141a0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "711344ed-c45f-4645-8dc9-c7192994d772"
        },
        "item": {
          "id": "0262a412-2ff4-4bf6-9ceb-c9f6e0543ae7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fb7fac25-c8d8-4b9e-b945-fcb419567dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36582f97-7c04-4836-bb2a-863f5d6c02fa",
        "cursor": {
          "ref": "88cab171-71e0-467b-af57-4ee1cb1d3245",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "84cac8b4-4944-40fd-9957-6e5e9c400241"
        },
        "item": {
          "id": "36582f97-7c04-4836-bb2a-863f5d6c02fa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "801d5e88-2f93-4dd2-9849-64f44d41f6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eed32b-1401-4bf2-af36-fbe1bc2da3ac",
        "cursor": {
          "ref": "12ae3653-66a3-4e51-82b7-180eb477ef45",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bbdc53a3-5d24-4a52-b75b-a1ade4d50b3d"
        },
        "item": {
          "id": "f8eed32b-1401-4bf2-af36-fbe1bc2da3ac",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d6829f79-2ecc-46f1-a729-5bffcd12380d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fa9782-7748-4001-a978-a1c99782696e",
        "cursor": {
          "ref": "5fb6e4d0-d99d-44c9-8ea7-52573acc383a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6a05e5dc-1e0c-4cca-8a89-7563dac09a12"
        },
        "item": {
          "id": "c7fa9782-7748-4001-a978-a1c99782696e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "09df598e-f50b-4a30-b985-53a517a25fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9965dc0-a0d4-4a3f-8e4a-d190ac577417",
        "cursor": {
          "ref": "9f92c682-1727-4063-b478-35b4d3df18e2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e891aab4-a234-43a3-a1da-a0a527d9b2da"
        },
        "item": {
          "id": "b9965dc0-a0d4-4a3f-8e4a-d190ac577417",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "238784f8-ac0c-4c94-9769-c114e518b71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1638cb18-befd-4498-b8f3-416c17405192",
        "cursor": {
          "ref": "9f3f6ae5-e914-446a-96b2-202d942a6657",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d12c366c-fd02-4648-8fdc-335cc3b46cc9"
        },
        "item": {
          "id": "1638cb18-befd-4498-b8f3-416c17405192",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "64328daf-b8e5-4845-b407-a7a2aa6130f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471513cf-7c5c-4e82-afc7-2f5f14757c17",
        "cursor": {
          "ref": "14c8cf05-6101-45c4-881f-4777cd11fd15",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d02438ca-dab8-4cef-b0fa-177cf691992a"
        },
        "item": {
          "id": "471513cf-7c5c-4e82-afc7-2f5f14757c17",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "682343a2-f0ed-454b-86fa-4d792f0a0a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761079e5-9e5a-4511-9cf0-3602501c89d1",
        "cursor": {
          "ref": "1c3d8954-0318-46f4-bb00-1fb861d03e71",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "691b1f01-5d79-4f42-98d3-4e0436a1883a"
        },
        "item": {
          "id": "761079e5-9e5a-4511-9cf0-3602501c89d1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e54f4048-20db-4574-940d-bc41ed58d526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7117bfb2-bae1-4604-93f6-4188ac058a84",
        "cursor": {
          "ref": "9a1d6604-2cc2-4b89-acb7-0236e72c4fb4",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "12cb9fb4-525f-4a53-9d38-9149974cb35c"
        },
        "item": {
          "id": "7117bfb2-bae1-4604-93f6-4188ac058a84",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "214f3c77-c205-4627-9dfd-2f6a13208fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89f2257-97c3-4615-8eea-397d7d096290",
        "cursor": {
          "ref": "9839ec33-76eb-406f-aa8c-51ab55b17ed6",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6b3b1d55-a52d-4683-9f4d-ac367e43434f"
        },
        "item": {
          "id": "d89f2257-97c3-4615-8eea-397d7d096290",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7af687ca-dee1-479a-9189-f12dcf53515d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cf019d-2132-434e-b305-b0d79f9ab0dc",
        "cursor": {
          "ref": "b8218bc1-1c38-41bd-86ff-70dcd31db848",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4a587d63-461c-48ed-8a94-a0e12e800a2e"
        },
        "item": {
          "id": "43cf019d-2132-434e-b305-b0d79f9ab0dc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e4232794-19cc-47ad-ba0a-32bf0f3bf750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2f56d2-dd7f-467c-a2e5-1a5fc379c166",
        "cursor": {
          "ref": "97b65170-5d4e-4433-9812-0a8de72930b7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "187c2203-3927-482a-951e-7cffa6860974"
        },
        "item": {
          "id": "6c2f56d2-dd7f-467c-a2e5-1a5fc379c166",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "72b7ce36-a182-495f-8dc8-02be9aba4300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acacf045-60de-4ccf-a236-55339e167bd7",
        "cursor": {
          "ref": "869cfbec-444a-457a-a531-e5dfbee13343",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f8e6bd66-27f6-4dc6-81af-885feeb457a5"
        },
        "item": {
          "id": "acacf045-60de-4ccf-a236-55339e167bd7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "202d1bfd-3ce5-4056-8721-7b96c687abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905d65e2-42af-4b7a-8eb7-8fd7135a77b1",
        "cursor": {
          "ref": "6c2e30dd-c1ef-4c9e-95de-d3affa36893f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2dc50b64-78bd-4f08-b4f7-240f6134dc5d"
        },
        "item": {
          "id": "905d65e2-42af-4b7a-8eb7-8fd7135a77b1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "41476549-217b-47b4-a722-ec443206bbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fb4862-8214-4d32-ab01-5e4130b3eb40",
        "cursor": {
          "ref": "488bc9c6-6066-4639-94eb-75b51da4d27d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "79d5d258-87b4-4e4a-bbb8-5fd3b3fa25b5"
        },
        "item": {
          "id": "57fb4862-8214-4d32-ab01-5e4130b3eb40",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3fa918d2-beda-45a8-91ac-dcea026bf0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a1e32c-02c3-435e-bb3a-df89cde0dbce",
        "cursor": {
          "ref": "00890d5b-106c-4645-8ea9-32dd417e1b54",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c8c30af4-165b-4cdb-aae0-db9d3d7fd7a8"
        },
        "item": {
          "id": "82a1e32c-02c3-435e-bb3a-df89cde0dbce",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7f7e7f06-3390-4851-b697-2932707eea16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32238945-d152-4f12-ba81-32bec9da9aaa",
        "cursor": {
          "ref": "4768f736-5e90-4253-b492-7fb8d016f87e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a90124a2-e20b-472a-94f4-4451b89baef3"
        },
        "item": {
          "id": "32238945-d152-4f12-ba81-32bec9da9aaa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ed7a306d-4844-4bef-b71b-6e93b5f02b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2071f2da-e3b9-4062-b851-1d0cc39d4a1e",
        "cursor": {
          "ref": "2cebd9ac-2b80-4604-800b-a52576a2656d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "021c58cb-bab1-481b-9f97-b045cc951eac"
        },
        "item": {
          "id": "2071f2da-e3b9-4062-b851-1d0cc39d4a1e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b7946a4e-3d24-4a6f-91b6-b73208659582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1756a1d1-3e73-4ccb-a0ca-db24b50a8c0a",
        "cursor": {
          "ref": "c72dbbfb-dfd5-4030-95b1-420a13b393e6",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ce73c787-ce19-4fe6-aa42-c220097ec5bf"
        },
        "item": {
          "id": "1756a1d1-3e73-4ccb-a0ca-db24b50a8c0a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c84580fa-2d31-486f-8733-cb78d6771f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786fc25d-ead8-430e-adc9-29c5110de610",
        "cursor": {
          "ref": "635a28f9-8ff7-434c-91d9-4048d634ef78",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f3067e40-8ce5-4c2b-a1ca-5cd23e7dfb0a"
        },
        "item": {
          "id": "786fc25d-ead8-430e-adc9-29c5110de610",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "02a51b39-8fe0-4383-92a7-bdd2345c0ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f3fc78-58f4-4056-8742-ee40dadce68a",
        "cursor": {
          "ref": "d7dc727b-676e-4e1b-993a-e95885f20cfa",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "14d892c0-d341-4d29-a11a-8cc05cf23857"
        },
        "item": {
          "id": "82f3fc78-58f4-4056-8742-ee40dadce68a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "adfd1aef-69ec-4695-93e1-b8224510a0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a9a2fd-c9d0-4f89-b931-93b1375913ca",
        "cursor": {
          "ref": "c7e297b6-79e9-4412-bfa0-e8ec837be855",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0ead7092-d7b7-4158-aed1-ddf1cc7e1c41"
        },
        "item": {
          "id": "e0a9a2fd-c9d0-4f89-b931-93b1375913ca",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a16bd3a3-86a5-4a3b-bf28-e3a60b302837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d15b82a-52bc-40b4-9d2b-ee3841dd623f",
        "cursor": {
          "ref": "c39f0820-93c0-4e22-b2e8-b90e4e4fca5c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d7abbf25-8172-4b5c-8a68-0951ed3b6416"
        },
        "item": {
          "id": "2d15b82a-52bc-40b4-9d2b-ee3841dd623f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d6db5980-9d5a-4d02-9e3e-d61ac818ead9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25373ca-8020-43e4-b6e8-6e8631132b51",
        "cursor": {
          "ref": "3871633b-5373-4066-9083-5141ef8e0958",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2b569e01-5bb1-4e6c-b753-18ed19cbd717"
        },
        "item": {
          "id": "a25373ca-8020-43e4-b6e8-6e8631132b51",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4d8e3beb-b084-4531-847c-f278a84b8d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4952cff0-0e66-4de8-bc55-2bb06e1eb71d",
        "cursor": {
          "ref": "f4b9ccf8-effe-475d-a3ba-fe45e5f5e3de",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "86fd48a9-4528-4788-af10-aa40d8043b67"
        },
        "item": {
          "id": "4952cff0-0e66-4de8-bc55-2bb06e1eb71d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ca05aa9d-b929-4c97-8111-7f19c64edfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219ee28a-0625-4ac8-ac90-21c6bc922326",
        "cursor": {
          "ref": "860b9b59-9d7c-492d-9034-600bc6d5b720",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c6c4c3aa-c9cf-49ec-b980-83b92178895c"
        },
        "item": {
          "id": "219ee28a-0625-4ac8-ac90-21c6bc922326",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c4c70d01-a28a-4672-90b9-e6843d6b1391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a252f420-1c70-4c74-83b6-907bea95fed1",
        "cursor": {
          "ref": "c082264d-8496-4404-b6f3-b9ff108b9774",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fa95cada-c58d-4ca4-8230-67e7c8737c70"
        },
        "item": {
          "id": "a252f420-1c70-4c74-83b6-907bea95fed1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5b082b39-828f-42e1-ba06-2508e4c42fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92726e09-d0a7-4bde-87d4-418b1a55f28d",
        "cursor": {
          "ref": "c5d73050-68d0-4e3d-b619-6726132fc4cd",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3cfc9e3c-66c3-4933-92cb-badace705711"
        },
        "item": {
          "id": "92726e09-d0a7-4bde-87d4-418b1a55f28d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8b812cdd-9efb-444b-b5bc-c18d13292fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb6a3e2-e74e-4958-8f8c-10c1630d3bee",
        "cursor": {
          "ref": "13762c40-8f3e-4195-9b42-ec0aa3b7b92c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "edb040c4-ca69-46e1-9b00-b7714a8b8595"
        },
        "item": {
          "id": "7bb6a3e2-e74e-4958-8f8c-10c1630d3bee",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a9e1eac-0ce6-4430-9de5-8fd626a07ca4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63e6681-6bc8-457b-81d5-c21735d91ade",
        "cursor": {
          "ref": "eafdb7f9-c4b0-42bd-92c1-042e72470741",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e3bea938-2813-4722-b54e-35946e101697"
        },
        "item": {
          "id": "d63e6681-6bc8-457b-81d5-c21735d91ade",
          "name": "credentials_issue"
        },
        "response": {
          "id": "38b3f0ae-3c6f-4847-96d4-abd77f3c60c4",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3095807f-fc3a-445c-a198-f30aaea2941b",
        "cursor": {
          "ref": "f1fe0459-949b-49f8-ac36-b24b0050fd7f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "72c260ab-8b25-4f59-9b12-d70ae6970cd7"
        },
        "item": {
          "id": "3095807f-fc3a-445c-a198-f30aaea2941b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "18c845c8-9d44-475b-8d3a-9ee2d6963c0d",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0237d3a-76d6-47f4-af89-5cd11f6010d4",
        "cursor": {
          "ref": "e5308baf-bfab-49aa-af73-8af3407faba6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bc375a26-c9d6-4c0d-bc4b-decbb0a70707"
        },
        "item": {
          "id": "a0237d3a-76d6-47f4-af89-5cd11f6010d4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0d56edc1-3853-4637-9781-3dfa5bf81edb",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a5ed54-fdcc-473d-9f05-bd1842056ceb",
        "cursor": {
          "ref": "9b9e50fd-a552-43aa-9bbd-51287e4978ce",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "18e7f461-7a4d-4ef5-8bdc-55b3e3d9ded9"
        },
        "item": {
          "id": "06a5ed54-fdcc-473d-9f05-bd1842056ceb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "17497bd1-e2cd-49c2-b7d0-e4cfdb4b4e2f",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f06a6e-5e20-4742-a6cf-940eb74b3ab6",
        "cursor": {
          "ref": "1ff60ef7-1e00-4249-90be-14920584462f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fd1f3f90-383f-4e04-89db-47747da92d05"
        },
        "item": {
          "id": "83f06a6e-5e20-4742-a6cf-940eb74b3ab6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "55a506eb-ca48-439c-bc27-9e8e8db7303d",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91e4240-2d53-4aa5-a496-c06581101652",
        "cursor": {
          "ref": "80c537e7-8a2a-40e1-9d80-d8262e87c273",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "af563975-e72f-406d-b5fe-302ae7b99c04"
        },
        "item": {
          "id": "c91e4240-2d53-4aa5-a496-c06581101652",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "63b0fdff-706f-402f-b074-acac57e95cdf",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0e23a5-252d-447b-ab18-75df0c766b85",
        "cursor": {
          "ref": "1a02c753-fa4e-48a5-a5f9-003ebeb8dc4e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a566963f-29b3-4a25-875f-2d7f10549286"
        },
        "item": {
          "id": "0f0e23a5-252d-447b-ab18-75df0c766b85",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c126ab2d-8c82-4f40-baf7-49e13f02d266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ec1af5-a164-429a-b44e-3f4fc771fd8e",
        "cursor": {
          "ref": "9c591db6-cf98-4b62-93ec-0c66fb5c8454",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4b6f5d29-5c31-45fd-bf70-f94e44f0ab95"
        },
        "item": {
          "id": "c5ec1af5-a164-429a-b44e-3f4fc771fd8e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9e2c0816-4725-4198-ba19-c2e9162cb842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65e2aca-e69e-4e0f-9f0d-aa632a436c45",
        "cursor": {
          "ref": "51bc6876-19c4-44ed-9c6e-89576595187f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9584db89-8c8b-4ab9-b387-a4c0c0a2101f"
        },
        "item": {
          "id": "b65e2aca-e69e-4e0f-9f0d-aa632a436c45",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c2885cc6-8a16-4c2a-91e8-2df380b2fc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c860a6c-238d-4783-8ecb-efa338d5fbb3",
        "cursor": {
          "ref": "c6b26837-e780-417d-9588-6f71c77a9723",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7e668941-81db-45f6-b448-f28c2e297478"
        },
        "item": {
          "id": "3c860a6c-238d-4783-8ecb-efa338d5fbb3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "de916f08-f95e-4091-9dce-434617f1434b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f3e3c9-2866-47ab-8ab0-180ff646fa48",
        "cursor": {
          "ref": "01221490-f93b-487e-bdc1-c99336738268",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ade8be5-b1d0-4a0e-98be-d19c090e1c72"
        },
        "item": {
          "id": "99f3e3c9-2866-47ab-8ab0-180ff646fa48",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "387521a9-d07a-4fda-8912-744cfb8ffd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27f241c-39f1-4676-8d2f-ef0541966c42",
        "cursor": {
          "ref": "456285d2-7a4e-4c1b-b216-5a1886cf96b5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6e6384dc-0f0c-447d-b688-25431efdb93d"
        },
        "item": {
          "id": "f27f241c-39f1-4676-8d2f-ef0541966c42",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d7b8b82f-0ddd-47d7-83d6-786995011c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ad3403-f57a-40be-b4b4-16f0fd841f39",
        "cursor": {
          "ref": "bf06cfbe-7669-46f8-8258-35f720673cad",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "263380cc-13a7-44ee-afe5-e79754ecbeff"
        },
        "item": {
          "id": "42ad3403-f57a-40be-b4b4-16f0fd841f39",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b7815c15-d9bd-4766-9314-c1d274b818d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9498743-7d2a-4457-968b-6bc7953cc9ad",
        "cursor": {
          "ref": "d447c513-597f-4c3c-8c95-3312d4d2acb2",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d8be4742-1a7f-42b0-86d6-35e72496bf35"
        },
        "item": {
          "id": "e9498743-7d2a-4457-968b-6bc7953cc9ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0453bceb-ffce-4bd5-82dd-b1fbce273e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0dd0eb-9e08-4d24-bfe9-50fc0d67d99b",
        "cursor": {
          "ref": "d6f9a18c-42ba-4654-9c33-2e787866829e",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2a745e39-b224-41a4-9fa9-431fe8bb5651"
        },
        "item": {
          "id": "0e0dd0eb-9e08-4d24-bfe9-50fc0d67d99b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb52de69-2a8b-4f1d-b6e0-d5a713d5a2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2a5176-f6ac-49bc-8dc7-4e2e69ae4101",
        "cursor": {
          "ref": "777f3b8e-0f2c-4fcd-a2b0-3bfd88196998",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6b6ab08a-42fa-4557-b24e-90c69a4a6dfc"
        },
        "item": {
          "id": "9e2a5176-f6ac-49bc-8dc7-4e2e69ae4101",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "57fb340e-6552-4c9e-bbc4-79c042c0cdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5cd1a8-ba2a-4a58-afd1-93bd81eace51",
        "cursor": {
          "ref": "e54a9a6b-6e1c-444c-8d74-744f991dc198",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "79d18dcf-ed6b-495a-8af7-e4b9a460aab8"
        },
        "item": {
          "id": "5e5cd1a8-ba2a-4a58-afd1-93bd81eace51",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9279fa58-21b5-4fc4-977b-de0e0b06513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ace941-13da-4168-9d40-04506688a79b",
        "cursor": {
          "ref": "6665ec2f-6fb5-47d5-b01f-b105a01653ac",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9c29e730-8eff-44dd-9dd0-e864634412f0"
        },
        "item": {
          "id": "d6ace941-13da-4168-9d40-04506688a79b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "570b9424-1605-44d7-b322-eb88ce0e2114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b914bda-7a1e-4aee-b3f7-63bfcbc53738",
        "cursor": {
          "ref": "0f6bc802-b204-45ac-a872-e9a99eafc534",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c295714a-8020-411f-b611-9b7ade061350"
        },
        "item": {
          "id": "0b914bda-7a1e-4aee-b3f7-63bfcbc53738",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4cb19f76-3be8-4c80-a377-be5dbb1e80d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc8d5ca-8243-4caa-8b37-136080f1bc3f",
        "cursor": {
          "ref": "6cd1e022-2c5f-42f5-ad43-0d6b42aebe83",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "70374af7-636e-4f96-a767-2ed2eee818c9"
        },
        "item": {
          "id": "9bc8d5ca-8243-4caa-8b37-136080f1bc3f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b2a86981-e6b6-4338-9733-94b5ec641f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91415659-050e-4e1a-b6e4-69c929fb75db",
        "cursor": {
          "ref": "0ef7f8a9-1cfb-4576-abb6-ca78d538c520",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "37934bfe-5e88-4557-9801-4e722e91b3f0"
        },
        "item": {
          "id": "91415659-050e-4e1a-b6e4-69c929fb75db",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bf228eeb-2c64-441a-bdf3-af1a7866d63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082166bb-b43c-4ccc-afd8-74303884870f",
        "cursor": {
          "ref": "cf43304b-4dec-49be-898d-076bf3e78fb8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e6bad7bb-0ff7-48d5-bc05-9933beae4669"
        },
        "item": {
          "id": "082166bb-b43c-4ccc-afd8-74303884870f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "33e52a12-7d37-4f45-a877-06f929aac5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801864ad-1015-412f-80ce-88f5c6600e5e",
        "cursor": {
          "ref": "d7f11539-f9be-4008-b381-0612477f30ff",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cdceb3c8-cd76-47b5-8fc9-1b3d8031bc86"
        },
        "item": {
          "id": "801864ad-1015-412f-80ce-88f5c6600e5e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dca85e25-b7ed-4575-a94e-6184e5bf6f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6f74f1-0c53-4af1-a22f-e47bf38dbfd2",
        "cursor": {
          "ref": "30759fe2-8975-4e76-9fe4-34055e555034",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "23f28d09-f85f-4c08-b5eb-b173bdf698fa"
        },
        "item": {
          "id": "8b6f74f1-0c53-4af1-a22f-e47bf38dbfd2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f7c59ec6-3273-4bab-ba11-f4a78bb1997a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b22ba7-911e-4a1f-9923-cfca07615731",
        "cursor": {
          "ref": "18d8820a-df8a-43c1-aa4f-2d62fd45c548",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "446a765a-9989-4fd5-8f95-1ff11c896365"
        },
        "item": {
          "id": "95b22ba7-911e-4a1f-9923-cfca07615731",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e050cfa4-a884-4d8a-b776-86afeafd3f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f54990-a3e3-4ac9-b611-dc93b1018f55",
        "cursor": {
          "ref": "aac3dd9c-f547-4567-a582-2d22cd3ae571",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5da40263-c4bb-48b8-9e20-c0037d5f76f7"
        },
        "item": {
          "id": "62f54990-a3e3-4ac9-b611-dc93b1018f55",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "368673e3-020f-4e5a-87e3-958b7261afbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf0b9a6-67ef-41ce-aa1d-f68a8ba19c31",
        "cursor": {
          "ref": "fbd892c5-fe27-40fc-b156-4502e5a1c9ca",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bb04c854-63d4-41e5-9077-400f46c9aa1b"
        },
        "item": {
          "id": "4bf0b9a6-67ef-41ce-aa1d-f68a8ba19c31",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "caa8d39f-3f63-40b0-bb0e-36f70a22dd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34cdcae-3283-4c16-b011-22c2bf69616a",
        "cursor": {
          "ref": "7ebe295d-4a45-4b1d-b00a-2c8890fc1b74",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "160c528c-e4b8-4c6c-90a4-4858a90610c2"
        },
        "item": {
          "id": "b34cdcae-3283-4c16-b011-22c2bf69616a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "91487c9f-e5aa-4fb7-bf2f-c8dcd9435390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910fdd1b-37c4-4199-b7d0-ffc2102bb49d",
        "cursor": {
          "ref": "c0020746-7b10-4e35-bce9-89cff0217131",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2b649ecf-8090-459f-a6e8-f5f9421d5143"
        },
        "item": {
          "id": "910fdd1b-37c4-4199-b7d0-ffc2102bb49d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "07af209b-43b7-4b65-b8e8-bae44690a883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49176d8b-94f9-47b4-b774-171811cab6ee",
        "cursor": {
          "ref": "7e3c96c7-8ed3-4e1d-bf39-e46e2136ceed",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "18a2a3ca-0251-4436-ae3c-d250518648a7"
        },
        "item": {
          "id": "49176d8b-94f9-47b4-b774-171811cab6ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9f0d5a92-2b84-497e-86e5-75e69bef7203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20edb479-6e5f-46b9-b278-c3ce3b02fc1c",
        "cursor": {
          "ref": "7be6df08-c5cf-4cba-9414-2f19ca14ccbe",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "96b0f3e2-d61b-48c7-a3eb-11cd406dd997"
        },
        "item": {
          "id": "20edb479-6e5f-46b9-b278-c3ce3b02fc1c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8fb78e9e-e1f0-45d8-910d-dc519c59a250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39572273-c24b-41e2-88ed-06593803e28b",
        "cursor": {
          "ref": "b0f03a13-e083-43aa-8b23-8de11184d474",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "99be5ae6-0875-4fbe-8109-b8b55c143f37"
        },
        "item": {
          "id": "39572273-c24b-41e2-88ed-06593803e28b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b1fee437-f20c-4c0d-9d76-7ace3cd3c064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f89ebee-01b8-43a5-970a-e0eced89dbb7",
        "cursor": {
          "ref": "f4e50e41-d51b-49c5-a694-a9df2399eee2",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "df459466-2ca4-468c-b5e5-77ea44d87879"
        },
        "item": {
          "id": "3f89ebee-01b8-43a5-970a-e0eced89dbb7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7564f661-8418-413a-8d9a-0621165c4e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef72e59d-0cd4-47a2-bae2-e42be0113266",
        "cursor": {
          "ref": "5e28c623-2820-4327-82c8-0ed1a4979a58",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6ce5e537-4fc7-4bed-9f7e-27981230604d"
        },
        "item": {
          "id": "ef72e59d-0cd4-47a2-bae2-e42be0113266",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11a85ce6-387f-4858-8a11-94f9e5740b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454fc1eb-4386-4940-a070-ae180f4d1e89",
        "cursor": {
          "ref": "e98e13ba-9315-4509-ab4e-5099218f1b5a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3a92e8d5-50c9-4983-b8de-13832392b92b"
        },
        "item": {
          "id": "454fc1eb-4386-4940-a070-ae180f4d1e89",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1f2054c1-090e-4811-b2a9-bf8e7f5a6cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6800810d-769e-4a03-9ce1-b05b7559b391",
        "cursor": {
          "ref": "03dbd6f4-6ba2-4d54-9ce5-c90bb1f25501",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "36b601e2-bf9a-4fc0-a5c9-50659d897b9c"
        },
        "item": {
          "id": "6800810d-769e-4a03-9ce1-b05b7559b391",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "74926e0a-e8d0-4ba5-8898-20db47c05d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8a5b53-8e9e-4911-a980-16f474effe86",
        "cursor": {
          "ref": "b86c668f-685d-4590-89ef-e4856f15de3e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "756ad816-8159-4e4a-9764-1c188bdcf960"
        },
        "item": {
          "id": "2e8a5b53-8e9e-4911-a980-16f474effe86",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c93bb798-8f5b-4684-a6be-7d0e3146fe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9bf3c5-7071-46a4-85d5-7f9fe2b2f9e5",
        "cursor": {
          "ref": "5a478736-b122-487a-85d6-8290d0839e91",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d7eccd88-59d1-4458-8722-08fdd6d5023a"
        },
        "item": {
          "id": "7b9bf3c5-7071-46a4-85d5-7f9fe2b2f9e5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a6d7722d-de5a-4de0-8d28-954cb43c619d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da99f332-87b2-487d-a8c7-d467e851efe0",
        "cursor": {
          "ref": "469bf4cf-20b7-43aa-8d5f-08486c17b550",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "be475bb8-ac3e-459e-93b6-6e9d90067094"
        },
        "item": {
          "id": "da99f332-87b2-487d-a8c7-d467e851efe0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "57a0cb3d-32a8-4f8a-b91e-757d042b604a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b419e5-310d-483d-aaba-d48c5a5d4e64",
        "cursor": {
          "ref": "fd5ab8cb-1dee-42dd-9742-090906632ab5",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0ca1cc10-b699-4fd5-9229-b1d3cb2b67f8"
        },
        "item": {
          "id": "47b419e5-310d-483d-aaba-d48c5a5d4e64",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "07cc094f-a16c-4af7-8e8c-785153a5d67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0977876f-23fb-4a11-9032-012dcee0301a",
        "cursor": {
          "ref": "f3b9459f-4fd6-4c5c-91d6-8eb1a72d1df3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b5e1d7e8-b2fd-4197-b1a0-5eacee14f96c"
        },
        "item": {
          "id": "0977876f-23fb-4a11-9032-012dcee0301a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d85df778-8352-4260-8205-06c17093b165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c55b443-bc23-45af-86f9-99762568140f",
        "cursor": {
          "ref": "d24014f9-aa00-4175-a6ba-ce78d6b16894",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9d869ae3-7afa-42d6-90a4-f11ee0a77105"
        },
        "item": {
          "id": "8c55b443-bc23-45af-86f9-99762568140f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e703f0da-22b1-423d-9252-e64ccb2d3524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457678c4-16ac-4c53-a53e-f5a50b2c7790",
        "cursor": {
          "ref": "0d28256d-a907-4f4a-899c-e6ea1a314153",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "731a1113-ea82-422f-9979-4c845a4c31d9"
        },
        "item": {
          "id": "457678c4-16ac-4c53-a53e-f5a50b2c7790",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d866a1ea-afe3-4644-9a9d-9cec462c1b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bb49ef-0dec-45e3-9391-d130aca5823c",
        "cursor": {
          "ref": "c17f3d23-eea5-44f6-89de-9fa373b66f1e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b202299c-e7eb-4733-8493-51e994b81850"
        },
        "item": {
          "id": "f4bb49ef-0dec-45e3-9391-d130aca5823c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ef73e5f9-a593-4594-a03d-304877f438aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d62204d-efb2-4950-a4a0-0e105a3c5350",
        "cursor": {
          "ref": "c51d4d15-6805-410c-835f-6f35a1ccab23",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a38cb097-98b7-4015-a5d7-740a79e3b6ed"
        },
        "item": {
          "id": "6d62204d-efb2-4950-a4a0-0e105a3c5350",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae66bc8e-4c7d-43ed-b5c0-a2783695313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91d560b-9128-4dbc-9daf-6389d4b16763",
        "cursor": {
          "ref": "a5ce85d9-ad65-4408-9a65-5f2a353ccba8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8baaf8c9-c2f2-4d0a-95a7-c5b34bcd897c"
        },
        "item": {
          "id": "a91d560b-9128-4dbc-9daf-6389d4b16763",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4064e94f-4e55-48da-bb34-42777c6a041a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c4bdad-c39c-48fd-a10f-b98124b6f245",
        "cursor": {
          "ref": "33e29361-da93-4f6b-a9a3-0b685f1aea81",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7fb32971-5873-49b9-9c08-454f4fe8bd0f"
        },
        "item": {
          "id": "12c4bdad-c39c-48fd-a10f-b98124b6f245",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4b04c435-27c9-4c98-8322-85208665e530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914b1710-9d1d-4249-a42b-3acbe73b22ec",
        "cursor": {
          "ref": "c4813045-c2db-4f36-8120-be00d8fd5565",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6aa4194c-4f80-4087-8d07-12ba64402137"
        },
        "item": {
          "id": "914b1710-9d1d-4249-a42b-3acbe73b22ec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "acdf36d8-422a-47a5-93e1-fd6e3a6aa0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f7172-0a0e-42f0-947d-9de8474ce1ef",
        "cursor": {
          "ref": "962102cb-2884-4fe1-b616-48602c993802",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "356ce917-6969-49f5-8eff-cf91e442bab4"
        },
        "item": {
          "id": "369f7172-0a0e-42f0-947d-9de8474ce1ef",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a8d4a177-0add-48e2-9c5a-fb35bafeefbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0ec1b8-f735-4ae7-84b2-fb1cfe14ecff",
        "cursor": {
          "ref": "e362753c-6481-46e6-9fdc-ee127c85ae53",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ae02b11b-7d33-49c1-825c-d9bf04cf5886"
        },
        "item": {
          "id": "ff0ec1b8-f735-4ae7-84b2-fb1cfe14ecff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "19914bde-1359-4566-850a-70a2b17ba138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59014818-ea68-47bd-bead-155794e4eb68",
        "cursor": {
          "ref": "e36a9f9a-88c3-45e1-b3e9-1d8418e411a6",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "30057afb-aa40-42b7-b1d8-f690cfb5296c"
        },
        "item": {
          "id": "59014818-ea68-47bd-bead-155794e4eb68",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3e3adec6-af94-4737-ab33-763eac489cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4465e39c-47ec-45a2-9b3e-191f99a94980",
        "cursor": {
          "ref": "0ad95a85-8d20-42d0-b993-cf2c901e3133",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "74878cde-40ff-4471-ab8b-9376394db086"
        },
        "item": {
          "id": "4465e39c-47ec-45a2-9b3e-191f99a94980",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "da5c0427-9081-4dc0-9c2b-46b466161d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111ce4a9-9c07-440f-95fc-13971c50d92f",
        "cursor": {
          "ref": "d7343b02-8e64-4f50-afc4-cbf95b45e66d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "82811f7e-0672-46c4-ae02-a5205087c7b8"
        },
        "item": {
          "id": "111ce4a9-9c07-440f-95fc-13971c50d92f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4d3f4e9a-6b3d-49cf-9839-ec08ac2ae63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598e3d1d-407b-4646-989c-c86af66940a3",
        "cursor": {
          "ref": "1ebb90be-da4f-4ae7-94e3-19fcc528b053",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d7314014-34a4-4c10-937f-592623868699"
        },
        "item": {
          "id": "598e3d1d-407b-4646-989c-c86af66940a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "215c3b71-7b88-41e3-8c3a-a261188a9b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95635277-6efe-4257-9ca9-45ba15ab9913",
        "cursor": {
          "ref": "89585d25-a43d-4a73-b75d-c5a07850693a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7d9f254b-c3e0-4e78-90f8-f45e35537aa1"
        },
        "item": {
          "id": "95635277-6efe-4257-9ca9-45ba15ab9913",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a20057a9-edbc-49d7-9905-8b0701d816c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71662e1a-3001-4685-a63d-d3834a77aa51",
        "cursor": {
          "ref": "9ed5a757-842b-41f6-b23a-466c5c11f319",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3de63d3c-88cd-4ccc-934c-0db76f36e6a8"
        },
        "item": {
          "id": "71662e1a-3001-4685-a63d-d3834a77aa51",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1cb71ae0-14e9-4b5a-a81f-dfe8a87a08e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6ca3ba-04aa-44ec-8f03-50f8595281b2",
        "cursor": {
          "ref": "51924c1a-0172-4067-839b-02fdc481d7ff",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "766d747a-1fc3-4a19-a94c-ac0bcc593492"
        },
        "item": {
          "id": "df6ca3ba-04aa-44ec-8f03-50f8595281b2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "635d52b1-0262-4d3d-bde7-0b80e8502a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d0fa29-d956-408c-a076-ad3742da9cd3",
        "cursor": {
          "ref": "84c3b3f8-0dcc-4422-bcaa-7ada0044e2ab",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e04f131-278c-4979-b876-22c706526365"
        },
        "item": {
          "id": "34d0fa29-d956-408c-a076-ad3742da9cd3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "76a66b45-2da7-43dd-a868-e22ad7921ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92bd263-e1a0-4d2e-b6c0-7be01e7ff701",
        "cursor": {
          "ref": "756f968d-d88f-459f-ae3c-a6a180482feb",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "21af9055-d538-489e-98ce-d5d0044fa1a9"
        },
        "item": {
          "id": "b92bd263-e1a0-4d2e-b6c0-7be01e7ff701",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3f2f88db-49fc-44df-86f0-590a5cda506e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994c43b1-02c0-4abf-a249-5a77519021c2",
        "cursor": {
          "ref": "650d0efe-244a-4fb5-b47f-2a81488d33d3",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7ec69faa-2e06-409b-bb3d-1f7c98a2562f"
        },
        "item": {
          "id": "994c43b1-02c0-4abf-a249-5a77519021c2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba96752d-5c81-4e41-a613-ab90ef2923da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348d2357-c204-4b13-a448-0ab14fa740b1",
        "cursor": {
          "ref": "634824b6-8f8a-44ac-9704-30d0e9acc56e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5ffb2f1f-1e8f-4a1d-8529-65e9a1057bd2"
        },
        "item": {
          "id": "348d2357-c204-4b13-a448-0ab14fa740b1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0e6737a9-be8a-4750-9317-49e0bb2ca7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c133ba-f334-452e-a1d9-8997f2874653",
        "cursor": {
          "ref": "f83a2ade-a295-4ca3-98b1-ce19fb95ed63",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "08775c3c-65f8-4fd8-a9bc-00627cde5424"
        },
        "item": {
          "id": "32c133ba-f334-452e-a1d9-8997f2874653",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cf97d069-dfe0-4e0d-9d0c-c10dae64bb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faca2d7-c824-4396-8957-ca5bdd36b660",
        "cursor": {
          "ref": "9414142d-8fda-4a1e-b64f-a42955106c98",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9c3613ba-1d18-4e8e-a835-2020b72337a4"
        },
        "item": {
          "id": "9faca2d7-c824-4396-8957-ca5bdd36b660",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "62d53750-7dc0-4697-86de-31640ad13bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eca9588-7744-4d1f-b617-97796e49619d",
        "cursor": {
          "ref": "bca49526-19da-41b4-b7e2-5ce8807a8ed4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3012be2a-2b90-4b3d-9c25-d7b8b3653cae"
        },
        "item": {
          "id": "7eca9588-7744-4d1f-b617-97796e49619d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "68829449-e6d8-4e21-8af9-c6190f217672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69857562-818c-4086-9cf7-53e62651c902",
        "cursor": {
          "ref": "8ea7efdd-81d1-4224-b8c9-5908199255a5",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "095bf8e6-150e-4765-8101-787cec05a61e"
        },
        "item": {
          "id": "69857562-818c-4086-9cf7-53e62651c902",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dfd32bd5-b767-4b53-b8db-7cd88933eb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9072a830-0c67-4a23-9211-8b44ba95224a",
        "cursor": {
          "ref": "027cf6c5-e2f6-43fb-9ca6-00c9773daf01",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6b7a6924-4450-4797-ac3a-b1af1a15b1f8"
        },
        "item": {
          "id": "9072a830-0c67-4a23-9211-8b44ba95224a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6c4bd798-b0e5-4478-8bd0-fa59351b980f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c3f02d-e6c1-41a1-8ef6-61d4f0c29536",
        "cursor": {
          "ref": "a614ecbb-9070-4dcc-9db8-3ec432ecfb1f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "170ae8c3-b8ab-4e1a-ac5c-f27670e005b6"
        },
        "item": {
          "id": "b7c3f02d-e6c1-41a1-8ef6-61d4f0c29536",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "16a485a0-e8c3-4478-ab2f-c632126bf19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68498537-b841-4f61-b6e3-a29e07f1606f",
        "cursor": {
          "ref": "ce594304-0d82-4275-be15-17bf2f5b20dd",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "92b6d9d2-3f7c-449b-baf8-f77664d2adee"
        },
        "item": {
          "id": "68498537-b841-4f61-b6e3-a29e07f1606f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f3ab4a1e-df60-414f-93af-3f437f7498fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0198bb82-ff30-4444-9212-1a8ac43c8c9f",
        "cursor": {
          "ref": "43f83aad-67e2-4d91-b4ab-3c0ed27f3841",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e1e72d24-b5ae-4202-b3ea-8ccc11a4cada"
        },
        "item": {
          "id": "0198bb82-ff30-4444-9212-1a8ac43c8c9f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aed0781b-5b29-4850-a2f0-ab3d06034b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b78a2d-9abb-4807-94c0-304ced10f278",
        "cursor": {
          "ref": "f44e8da1-f7cf-43ec-881e-8d1ff13fbc0d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5c492bd6-32f8-44db-9251-5a19337055b8"
        },
        "item": {
          "id": "66b78a2d-9abb-4807-94c0-304ced10f278",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fd5edd54-e44c-4805-929f-f2966ccb4e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1277d48d-161a-4b40-af60-1f5345f5e14e",
        "cursor": {
          "ref": "3ee1d8e0-106f-422c-8a95-0b24af7e62cc",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b9498090-3820-447d-a932-712cdc070bdd"
        },
        "item": {
          "id": "1277d48d-161a-4b40-af60-1f5345f5e14e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4b289a50-8584-47a3-acb4-e68e0cb68ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c538f5f-94f9-4b7e-a04f-ae052d843bfb",
        "cursor": {
          "ref": "75c28188-2094-41f1-ac8f-02fc1aff33c6",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "38096801-eb12-4995-a57b-c8054ccaf5c7"
        },
        "item": {
          "id": "7c538f5f-94f9-4b7e-a04f-ae052d843bfb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c2306045-20b4-4e65-8d1e-e9b9cd674094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143c6fa1-357a-4449-8e6d-ac471fe45932",
        "cursor": {
          "ref": "c6479682-2afd-4685-9ec5-98d2eeee9e30",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6ee8d9e0-dc3e-44a8-9a04-26b26df0626c"
        },
        "item": {
          "id": "143c6fa1-357a-4449-8e6d-ac471fe45932",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e7c6da92-ff2f-470e-926b-5cde8892dc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d64b170-1911-418d-b1c2-aa8e7cc7eaf7",
        "cursor": {
          "ref": "9559ef96-34c3-4d1c-a7aa-b71fe61495d2",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a9a6a9b9-4faf-451d-97a2-7af010260844"
        },
        "item": {
          "id": "6d64b170-1911-418d-b1c2-aa8e7cc7eaf7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f09b30d3-7a51-4db6-b5b8-4f26492d1fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca9ce42-4575-409b-89a4-88680ae3248f",
        "cursor": {
          "ref": "d098ad2e-aa6a-4a43-872a-34bccd7eb193",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "47fd0f60-a96f-4cda-9f59-a176c0c6fef6"
        },
        "item": {
          "id": "eca9ce42-4575-409b-89a4-88680ae3248f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f2b25dea-5deb-416a-86da-cb31336a851c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c12ed1-4740-499f-8391-6ce2b5b235dd",
        "cursor": {
          "ref": "55eb7d9e-9ca5-4e75-a1ce-9f3b45494cf1",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dfbb27ed-84d7-4d9d-806a-5fafb27555b1"
        },
        "item": {
          "id": "77c12ed1-4740-499f-8391-6ce2b5b235dd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eecf4b93-a512-4ab4-ac0d-40fc85430be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b029377-e3e8-411d-a17e-b9cdcb18a4ec",
        "cursor": {
          "ref": "82fc5861-88c5-402d-a3a2-2f44abfb3731",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "16dc89bc-4812-4bef-a263-32c9d4b1d92d"
        },
        "item": {
          "id": "2b029377-e3e8-411d-a17e-b9cdcb18a4ec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bd112628-17c6-46c4-9ac9-a72cfc9cd68c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e21dc40-88c7-4706-b916-f18aea6ba03a",
        "cursor": {
          "ref": "76b25370-afd7-4bb3-a81a-9395cb7ba747",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ea96fbfd-3d06-4304-9f39-c51873fc76e8"
        },
        "item": {
          "id": "5e21dc40-88c7-4706-b916-f18aea6ba03a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0abb01e8-c70c-440e-a0a3-8fe90ab793a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ecd70a-a6b2-4485-9778-3ca0e9ed6a83",
        "cursor": {
          "ref": "b16283ab-4bb1-4f17-b096-99fae10348d8",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7c25de8d-a91a-4374-ac11-b8ec84a9a00f"
        },
        "item": {
          "id": "b1ecd70a-a6b2-4485-9778-3ca0e9ed6a83",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "af8bec1e-9c91-4170-bd28-5ba612282b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083fe0d8-0b94-4d64-8122-e02e279c3153",
        "cursor": {
          "ref": "5d08928b-3316-4912-a478-1f7e1cdd7c3e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "99a49e08-6de4-421a-bb89-4783749f28aa"
        },
        "item": {
          "id": "083fe0d8-0b94-4d64-8122-e02e279c3153",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6c4eb248-4e62-48fa-b2f2-3118f584b273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77065a54-a754-46d7-965e-18f7442e3fe6",
        "cursor": {
          "ref": "5770cb05-db5f-4dae-9a6c-8b55c96198eb",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b26b989a-8999-4a77-bef6-1cbe5e101efd"
        },
        "item": {
          "id": "77065a54-a754-46d7-965e-18f7442e3fe6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3e5fd454-24d9-49ea-ad6e-5ece96a7e699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435059ac-41be-428c-93fc-8ad66874a5b9",
        "cursor": {
          "ref": "ee49329d-5b80-43ae-bb38-13e90fedbfec",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9dc352e9-2c57-4669-8ffa-24dcc58995b6"
        },
        "item": {
          "id": "435059ac-41be-428c-93fc-8ad66874a5b9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0380f3a2-0e93-478b-a29c-9ae9d0c77bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e878fbb5-0592-44ad-8aee-4a37603a2f21",
        "cursor": {
          "ref": "eab88bc0-4e96-498e-b36f-3c0d67892eac",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8b9c934d-1332-41ce-a2ca-ac38c4826b80"
        },
        "item": {
          "id": "e878fbb5-0592-44ad-8aee-4a37603a2f21",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "57c87665-3dc1-434d-9910-92f76041d884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4141dd6-4f3e-4a4d-94aa-240d1ff0d0c5",
        "cursor": {
          "ref": "fa578c1e-0d74-4f94-b25b-86891e496eac",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6fbeb22b-868b-43d1-bfb7-5eca81ba4398"
        },
        "item": {
          "id": "e4141dd6-4f3e-4a4d-94aa-240d1ff0d0c5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "26060d33-8a60-49be-b096-2c1383bf1c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff92ace1-a926-4dfd-b59b-878e97e28e1b",
        "cursor": {
          "ref": "0f4539ff-1192-4d12-a2a1-9c75037747c3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0c1a141a-bfbe-4a6a-b188-be15f772e6d3"
        },
        "item": {
          "id": "ff92ace1-a926-4dfd-b59b-878e97e28e1b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6d2452fd-1ebe-42ce-bc15-50d0f632a15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7acc2c6-5b1a-422e-9b8f-b8fb1338c3f6",
        "cursor": {
          "ref": "07ac4f5a-9a15-4be4-b37a-ee07aaa223cb",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c8975172-98a6-4f69-af0a-0c01f33d676e"
        },
        "item": {
          "id": "f7acc2c6-5b1a-422e-9b8f-b8fb1338c3f6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6d27d683-4540-49cf-a9d4-d1627389df80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246b1f82-c528-4ced-8f53-95915bc76f88",
        "cursor": {
          "ref": "51e01ab3-2dd9-48cc-b2d6-68996d5b1408",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "286c91be-e854-4429-9434-92a4856e4b62"
        },
        "item": {
          "id": "246b1f82-c528-4ced-8f53-95915bc76f88",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5e4f5e3b-8e15-4291-a67a-333099fafb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb59c27-ec61-4529-a521-e3407a49e37c",
        "cursor": {
          "ref": "d37bddfe-3fd9-44bc-9f38-5b986e411c87",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7bf62159-d601-49e4-ac30-a417b5e9fa95"
        },
        "item": {
          "id": "deb59c27-ec61-4529-a521-e3407a49e37c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "55b3e75e-873d-4e9c-939a-619d55e99c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fc3c37-0654-4343-81bf-73e6248856de",
        "cursor": {
          "ref": "514fefe0-22ec-4bc2-9a22-6fd7d5e805cf",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c3680ba5-38b7-4bb7-871b-5536a43c9b00"
        },
        "item": {
          "id": "63fc3c37-0654-4343-81bf-73e6248856de",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "18625c4b-9152-4be3-9135-ebae056dc378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4d7e25-0509-4191-8445-bd754eceb1bc",
        "cursor": {
          "ref": "34192d40-2da2-496a-a545-4e7ef46cb2ec",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ca68f98d-178a-45aa-b2f9-19cf9f759735"
        },
        "item": {
          "id": "df4d7e25-0509-4191-8445-bd754eceb1bc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "717885ef-86f7-4555-ad2a-755cff264386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f57895-2594-40ef-bc82-0dae3f9d8e91",
        "cursor": {
          "ref": "1422c5df-f432-474a-9742-5186c9053871",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a03b0783-4a89-4f37-b40e-31ef27514dce"
        },
        "item": {
          "id": "f7f57895-2594-40ef-bc82-0dae3f9d8e91",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "54466605-f111-4739-962e-5ad09b410b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8cdfbc-de0c-466a-8bbf-f0962c7bce04",
        "cursor": {
          "ref": "4209acc2-15cd-4046-97dc-669aee40073c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a28857e5-5d03-4a62-88ef-df193be7a77e"
        },
        "item": {
          "id": "5f8cdfbc-de0c-466a-8bbf-f0962c7bce04",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8f20bff8-fa7e-42c4-bfba-8790fab5115b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808b46b2-b339-421f-8604-c1bcf1a29e85",
        "cursor": {
          "ref": "ca2d5e85-48a5-4630-b883-123b2b0a2a4a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5e350d8e-f821-4385-b99c-b703387520c5"
        },
        "item": {
          "id": "808b46b2-b339-421f-8604-c1bcf1a29e85",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f60a98c0-01cc-4d9d-805e-c0921640afcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4cee7e-6bb1-4f50-956b-6d0e337b52d4",
        "cursor": {
          "ref": "daa2344a-6af7-43de-a098-c3568c231fe5",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9085a16a-82dc-4ddf-b3e5-33037c271e6f"
        },
        "item": {
          "id": "fe4cee7e-6bb1-4f50-956b-6d0e337b52d4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6fb2a392-c6c4-4e9c-9258-60002302e924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7472a59f-ea7c-4b72-b380-39e626ecdb29",
        "cursor": {
          "ref": "0611ea2f-26a0-4671-8f08-1d896f0ffaff",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4b5fb3b7-e50d-4927-874c-262a26de30b9"
        },
        "item": {
          "id": "7472a59f-ea7c-4b72-b380-39e626ecdb29",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6ae9f68b-1372-4c56-803e-46e9d501e1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f56dbc-18b5-47fb-93aa-40f7eb3d7377",
        "cursor": {
          "ref": "e17d36d5-fdae-4ccb-b9f8-0881ee84904c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2cdfae7d-6004-4456-bb36-7eb4bc9758af"
        },
        "item": {
          "id": "78f56dbc-18b5-47fb-93aa-40f7eb3d7377",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d48035e2-250d-4b0a-8d2a-1c4095f956b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad09d4d-eb53-4707-bc59-204ca87619cc",
        "cursor": {
          "ref": "08413a4a-176a-4317-ad5f-500323a42e60",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7cf35f31-f231-44a8-9b45-1ae16eff826a"
        },
        "item": {
          "id": "5ad09d4d-eb53-4707-bc59-204ca87619cc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d89a44ab-32f9-46d5-8ec2-9c41d9e91f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa50f47d-639a-4c4f-a87c-f8e82630e6eb",
        "cursor": {
          "ref": "00d0596a-30d1-4050-923b-8f7fc12d88c1",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "55ca9d0c-5f23-4ce8-9694-65d9ad5f057e"
        },
        "item": {
          "id": "aa50f47d-639a-4c4f-a87c-f8e82630e6eb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5017ce16-69eb-4d0d-bb3e-b35c63cac3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9d0ec2-c0fa-4bf0-a5cf-339ef08abc41",
        "cursor": {
          "ref": "a03708b5-486d-4c6a-9525-fc4a4ec7d3bf",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2e9cd11e-6925-4b41-9968-1232c917ab0c"
        },
        "item": {
          "id": "be9d0ec2-c0fa-4bf0-a5cf-339ef08abc41",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "10011bbc-ced8-42de-b51c-3019c3aa96fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff62946-ab7f-4444-8e88-147f3da67944",
        "cursor": {
          "ref": "6e5cfa0e-ceb0-48a3-b752-809983019d59",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f4b27876-6d50-48d1-9800-d5dc69ad75af"
        },
        "item": {
          "id": "2ff62946-ab7f-4444-8e88-147f3da67944",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "29dabfb5-be56-4ba6-b81c-865aaa779647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176dc6ce-2ce5-407f-b175-37812d7735d3",
        "cursor": {
          "ref": "16698d95-f477-4be9-be88-31125a38ce0e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "74acd26b-1ddb-40c7-82cf-1093d0166a4a"
        },
        "item": {
          "id": "176dc6ce-2ce5-407f-b175-37812d7735d3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d2233565-c40c-41ca-a235-a9c25a8b3dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0a184a-0e65-4b1c-a264-929566426e4f",
        "cursor": {
          "ref": "28a2f801-64a9-4203-be70-4b885d69d4c5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7f5145cb-f310-4436-ba8f-d5a96267aafd"
        },
        "item": {
          "id": "fb0a184a-0e65-4b1c-a264-929566426e4f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a20998ec-d3cb-4b5e-beaf-5b75bb05d37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0902479-7341-4f2b-8836-9eaf325c6c8f",
        "cursor": {
          "ref": "d2273e35-78a6-4200-bbdd-1bb3806aa833",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "98ccba2c-7764-47b4-a21d-34832ad8ef78"
        },
        "item": {
          "id": "a0902479-7341-4f2b-8836-9eaf325c6c8f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "98a254cd-7f5a-4287-b35f-46242c03b17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40126e67-3c2c-4875-a0b6-3e586f3a0ec8",
        "cursor": {
          "ref": "93163681-a1c9-4cec-a4ec-626ea40e7c78",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c0303a3c-5df1-479f-8bb8-b78797d5c967"
        },
        "item": {
          "id": "40126e67-3c2c-4875-a0b6-3e586f3a0ec8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1e7c17a3-a135-4ff0-a4ad-31811ffa1955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a47135-03b5-4486-a282-bcd4eac2a2d9",
        "cursor": {
          "ref": "34ee4f8d-242e-4e00-8522-88bd215388b7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "31cfd792-81c2-4042-8694-736e20b915e6"
        },
        "item": {
          "id": "23a47135-03b5-4486-a282-bcd4eac2a2d9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "daad5eca-1121-4855-93c4-d1c6bf83b573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c0c7af-eac0-4c53-8fa0-b9b1e4105f4e",
        "cursor": {
          "ref": "3af875b1-8e45-42ca-b13b-8bdc9c869035",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "164dbf9a-7d7f-442b-bfd6-fee4cf7bff19"
        },
        "item": {
          "id": "e1c0c7af-eac0-4c53-8fa0-b9b1e4105f4e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "821dec31-015f-45a2-9824-33a50d1ac026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f49689-9545-494a-a02c-730b267abe09",
        "cursor": {
          "ref": "032740c1-88dc-4314-93cf-f001db2959e9",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "96057044-9aad-4865-8aef-4fcf8bbf75bb"
        },
        "item": {
          "id": "98f49689-9545-494a-a02c-730b267abe09",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "871cb4ae-85a1-4a7d-9d06-ae0ea3073d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c7b4e2-f503-4fdc-b4ba-b652d518a3fd",
        "cursor": {
          "ref": "c9f99304-fdd6-414d-915e-517f623c4d7c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2d4f0172-221d-4fee-8430-7d1428b99358"
        },
        "item": {
          "id": "d7c7b4e2-f503-4fdc-b4ba-b652d518a3fd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ce02fb30-b0f3-4b8d-83cd-73ba9ee05ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca23c2b2-2bf8-401c-af09-0cb19237d7fa",
        "cursor": {
          "ref": "b685dde1-a0e5-4dec-81f1-2da996e23284",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "72450973-7b49-45d6-b9ff-b131ffc6158a"
        },
        "item": {
          "id": "ca23c2b2-2bf8-401c-af09-0cb19237d7fa",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2280825d-b54f-4ec8-8e7e-c9008cb4de80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04a44cb-5ddc-465a-a879-3425c9a1fdf3",
        "cursor": {
          "ref": "d7378bdd-55a4-4e93-bb58-3360f5b63783",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8dcdde30-60b6-4fcf-86b2-6320303acdc9"
        },
        "item": {
          "id": "b04a44cb-5ddc-465a-a879-3425c9a1fdf3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9fc07ae4-4870-4ca7-beeb-186164173c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f7936e-4ef2-40d0-b182-abe25a796929",
        "cursor": {
          "ref": "b768083b-fc90-40f3-a949-508626d7941f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "26ee9a79-826d-4def-bd90-8f401bd4b9b8"
        },
        "item": {
          "id": "d0f7936e-4ef2-40d0-b182-abe25a796929",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "819a3fb7-fa6e-4567-a329-53749230c748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6ebc5d-a34d-4c22-97fc-352d20915f5d",
        "cursor": {
          "ref": "67fdd1f7-906f-4961-b687-293f2d3c45ee",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ccb9542a-2062-43ca-a91a-92854e51c8bb"
        },
        "item": {
          "id": "fe6ebc5d-a34d-4c22-97fc-352d20915f5d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "27da1da2-1fd2-4033-a949-3a4751901b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb32c2f-6ca3-496b-8313-b2a415da26e5",
        "cursor": {
          "ref": "36b1435b-47dd-4fab-b851-79cdd539981b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "522d47c6-da3b-4b68-a9a3-82df1ba471bb"
        },
        "item": {
          "id": "4cb32c2f-6ca3-496b-8313-b2a415da26e5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8aed5f85-5841-41e6-9ce5-cd8f4606e6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fcf8d3-2325-40a3-ad95-a7fd612fd48f",
        "cursor": {
          "ref": "2aaee939-fd91-4fd0-a65e-6bbcd82b5433",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4409755d-1161-420b-b4b8-370f14162284"
        },
        "item": {
          "id": "19fcf8d3-2325-40a3-ad95-a7fd612fd48f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d8b0533d-2fa3-4e7b-a1c0-3a248dbbedac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed64afe2-c149-4235-945d-1524d857f59c",
        "cursor": {
          "ref": "1bc04966-7d18-4917-814e-7a43edd43433",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6f28d7e6-8b5b-4f42-bb14-27fa1e4557cf"
        },
        "item": {
          "id": "ed64afe2-c149-4235-945d-1524d857f59c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f3d84e0a-7489-4c6a-afb8-5cb621e77fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d0166c-d1ee-449a-8817-9886959f611a",
        "cursor": {
          "ref": "cd03bdb3-0a6f-4aee-a4af-036203c33e00",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7e925dec-58fe-4eb0-978a-4f7edace3d99"
        },
        "item": {
          "id": "42d0166c-d1ee-449a-8817-9886959f611a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9f15b931-b450-4647-9b56-cf957cd9b80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c1f0e3-601e-4f9a-b025-cb92c309c52f",
        "cursor": {
          "ref": "4f609155-4ea1-412f-bead-48c1bd2ae878",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "51513d2a-9702-412c-82dd-46e643b96bc3"
        },
        "item": {
          "id": "80c1f0e3-601e-4f9a-b025-cb92c309c52f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1152bb06-4038-4ec7-915a-cb25b1f8ba49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b4f2c2-ac93-479a-9266-e059e884b456",
        "cursor": {
          "ref": "37cfb101-78d3-40fa-a2a9-ad0acfee9b4e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ef1be99-e5d1-42ae-ae50-52ae0bc16d2a"
        },
        "item": {
          "id": "67b4f2c2-ac93-479a-9266-e059e884b456",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d3987052-01b3-4214-a514-c4ba03bb47dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310bffb4-7f24-4341-8e5d-10bdedafc115",
        "cursor": {
          "ref": "75aef0a2-c1ad-4b30-9c77-7e5eafd865ba",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "38bc106d-6b6c-4557-88ec-b9297b5a92a2"
        },
        "item": {
          "id": "310bffb4-7f24-4341-8e5d-10bdedafc115",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "20872e76-0bfd-4436-b10f-3f5e780f8f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb692f2c-f05c-4cf4-8a79-43b8ccb8962c",
        "cursor": {
          "ref": "1d968622-0f1a-4dd9-ade6-2e5ec8c0490f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2fde348b-00ce-4cf3-9081-e04f530c19c8"
        },
        "item": {
          "id": "fb692f2c-f05c-4cf4-8a79-43b8ccb8962c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b7b45e49-af88-4c86-8f6c-3a44bcb289f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22b3d87-f7aa-4138-a33c-dd78b2c219e4",
        "cursor": {
          "ref": "9c4da87f-5ac2-40fa-b2bb-76fcd88b5e95",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6d99961d-dc4b-437c-bbec-9048c8e401b5"
        },
        "item": {
          "id": "c22b3d87-f7aa-4138-a33c-dd78b2c219e4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "502eed9f-f3c3-4d46-bfae-2af3a539e4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33e8d6e-1021-45b9-bcb1-17e574ddd05e",
        "cursor": {
          "ref": "df6f1e31-f0a4-43d0-9606-72a0af708df7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "078dfd57-7ffd-412d-89c0-5f069e04f676"
        },
        "item": {
          "id": "a33e8d6e-1021-45b9-bcb1-17e574ddd05e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "df16bdcc-6230-42fb-acaf-62895122b813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0e176f-e9fb-4bc8-94c2-c9d1e22ed08b",
        "cursor": {
          "ref": "f1ad4448-d089-4c7e-ac1a-6e6f4c44a8e9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ff44aadb-e21d-4787-b803-160dc5de7b92"
        },
        "item": {
          "id": "ed0e176f-e9fb-4bc8-94c2-c9d1e22ed08b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bfe1eb36-7b62-429d-b53a-640ad2c3e59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31215ff2-6427-41cd-a52e-4f5b14cae376",
        "cursor": {
          "ref": "361087e1-ded2-4e53-874c-c7994cda5c52",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f705a569-64f8-46a8-9efb-1e50f9fe2cbb"
        },
        "item": {
          "id": "31215ff2-6427-41cd-a52e-4f5b14cae376",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fc3817b8-3838-446f-95d6-70635a39b58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa240659-b4eb-44c0-9270-dca3cb339e82",
        "cursor": {
          "ref": "2e86d163-f3f9-4c31-b5c1-42ecb2a10b04",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1ed02358-d3c2-4de1-a7c3-393d33999562"
        },
        "item": {
          "id": "fa240659-b4eb-44c0-9270-dca3cb339e82",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c3901e0f-7b25-4354-932c-75db8bdde9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f9de2d-0772-4241-8c44-f5730626e6a0",
        "cursor": {
          "ref": "4754c5a5-80ed-43f5-953d-e73c1954eaf4",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "251d2505-927d-41ae-9120-82adc1ef7610"
        },
        "item": {
          "id": "52f9de2d-0772-4241-8c44-f5730626e6a0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "adfabae9-bfd6-4782-8609-e5b659f16a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5c1698-d34e-4e1b-a33c-68eac5628238",
        "cursor": {
          "ref": "4b4c316a-67dc-4e6f-97ab-711994cf94cc",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a8ca390d-32cb-4b48-b466-31e8ac506b90"
        },
        "item": {
          "id": "bb5c1698-d34e-4e1b-a33c-68eac5628238",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "abab205d-cc47-4d54-8264-c43d3b62b057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed67332b-71a5-42f1-b882-0dd80ffecaba",
        "cursor": {
          "ref": "72acf4a2-ae73-4b83-9d59-f7b19c674d12",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "694b9883-8548-4981-b928-5471a016479b"
        },
        "item": {
          "id": "ed67332b-71a5-42f1-b882-0dd80ffecaba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "038985ca-be67-4c78-8bf0-07f79dbb5696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f083bebc-d8be-4e43-a4c6-26758486ea51",
        "cursor": {
          "ref": "6c68e6d6-cdbb-4d64-915f-cf3306ca3542",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "454f4096-ff7c-41e4-9de9-435405838286"
        },
        "item": {
          "id": "f083bebc-d8be-4e43-a4c6-26758486ea51",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8e2bb280-5ece-4b52-aed3-81b5acbbd389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9a2aab-af38-40f6-8d29-e2d718079434",
        "cursor": {
          "ref": "075ba0e2-b04e-4c93-8d29-e28ee1697503",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fbd45dc2-1c39-4e49-8870-76da0bb6818c"
        },
        "item": {
          "id": "6b9a2aab-af38-40f6-8d29-e2d718079434",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a55eb68c-b6ce-4a5a-9d85-929c054f0900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b534b4-cfed-4b81-aabc-688a31bc8ae3",
        "cursor": {
          "ref": "40216458-4bea-4ed5-b97e-85bf0e269146",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a61ce947-8636-4e49-90a3-c0c36a452427"
        },
        "item": {
          "id": "e9b534b4-cfed-4b81-aabc-688a31bc8ae3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1bd04ee5-d34d-4ace-b98d-b063a6e4b517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5417fccf-7ca9-42c3-bef1-dd7af6a79a37",
        "cursor": {
          "ref": "2e6dc520-0502-48e5-bcd0-b5e6524da0a6",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2e5f4b1d-42dd-4233-a983-da368cb4e1a1"
        },
        "item": {
          "id": "5417fccf-7ca9-42c3-bef1-dd7af6a79a37",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c5fab9f0-e1da-46e3-852b-5b6ad4d562f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4878b168-8a75-48e4-a6da-2a237aceadde",
        "cursor": {
          "ref": "109c7234-9901-4930-83b4-24474f529efc",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ff342310-4f1a-41c8-aab4-cc79a3e48961"
        },
        "item": {
          "id": "4878b168-8a75-48e4-a6da-2a237aceadde",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9a70903c-e003-4b76-80ac-73b5d5f2cd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17e36f1-9855-46ad-a2e6-102b2baf7a6c",
        "cursor": {
          "ref": "f2ff17d8-e476-4ee6-b5e6-cf2fd11aaed7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "87942b12-e487-413a-b446-ec1507a0b510"
        },
        "item": {
          "id": "c17e36f1-9855-46ad-a2e6-102b2baf7a6c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b17af9cc-1b04-40cb-83eb-5b83b594b358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892f0419-3d01-43f5-a4a4-3e5ec565e3be",
        "cursor": {
          "ref": "85ef9e7a-3c17-41f3-8103-26d9f346ddf7",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aa54661d-3da4-46fa-b2bc-3e3ea3a4d277"
        },
        "item": {
          "id": "892f0419-3d01-43f5-a4a4-3e5ec565e3be",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "87653971-81a2-4c34-82d3-7d39bf9e8e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bf64a5-15ea-4872-8af8-c15e0236d1d0",
        "cursor": {
          "ref": "bd69db4f-bd30-47b6-a5b8-d91c1e8f8dc4",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6f57030d-b39e-4d95-a723-1f0453a062dd"
        },
        "item": {
          "id": "91bf64a5-15ea-4872-8af8-c15e0236d1d0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dc260e43-e991-4452-8fe6-3ff32997d907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95508dc0-f9fa-40a0-ab46-e59e56b58577",
        "cursor": {
          "ref": "eb9eb90d-ede1-49fb-806e-e53541b016ab",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f46dfc07-2eac-4128-ae35-0d11a4bf24cd"
        },
        "item": {
          "id": "95508dc0-f9fa-40a0-ab46-e59e56b58577",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b19f8ca5-d01c-46ad-9547-c6756b46d4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1884233e-f87a-480b-b15b-3112032e40d4",
        "cursor": {
          "ref": "e18d4b51-48c6-4b1d-a2ac-2bb621facf96",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8fbbed92-affc-4d6e-8e7f-8ed8f71e9bdb"
        },
        "item": {
          "id": "1884233e-f87a-480b-b15b-3112032e40d4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "002753aa-8548-44bd-a42f-2f2ecc2ad26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b9d999-998c-4473-ac63-67f6fc67c33c",
        "cursor": {
          "ref": "25bd17b1-fce4-4d27-867b-ad97e07c9398",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "67b02a1f-ef60-423f-ad21-40ddbc29acf8"
        },
        "item": {
          "id": "b7b9d999-998c-4473-ac63-67f6fc67c33c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "97781efb-4ef8-4128-9d86-4d7d3336cc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308dbbbd-1aad-4610-b223-09cbc617cca4",
        "cursor": {
          "ref": "d73bacef-ccdc-4797-8029-999138db08eb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a99016bb-d926-419a-adef-ad913b862eb4"
        },
        "item": {
          "id": "308dbbbd-1aad-4610-b223-09cbc617cca4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8f50c474-15f1-4b54-9c2a-dad8774a63b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e58006-d549-4bf4-b014-8c485ddf3572",
        "cursor": {
          "ref": "1e325671-cab0-46fd-bc8c-8137998f3a2f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7429aeae-b020-4783-88b2-fb8be0041cf1"
        },
        "item": {
          "id": "b9e58006-d549-4bf4-b014-8c485ddf3572",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0fbf05d6-1113-402a-9a18-f31338a5691a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5408c64-bfe9-4ef6-9fd3-9118787ff88d",
        "cursor": {
          "ref": "52c8d7f0-fa22-4b8b-9bea-e2c717607b99",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4886b364-0c12-4abd-9795-845a1ec08bf1"
        },
        "item": {
          "id": "b5408c64-bfe9-4ef6-9fd3-9118787ff88d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "40f1ee3c-7b7d-4d0f-bbd9-4f48ae37c58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf0c674-cf38-4a89-9476-83d8f70ab19d",
        "cursor": {
          "ref": "9e21e7d3-7900-469b-be1e-9ec7326ee852",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4a47ee90-d464-4e56-ab73-e159be05e0b4"
        },
        "item": {
          "id": "fdf0c674-cf38-4a89-9476-83d8f70ab19d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b2e84eb3-915e-44c8-982b-9e9c5ab4f004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37c0090-726d-4a32-8261-68238647c264",
        "cursor": {
          "ref": "df2e6275-b956-4021-8c01-8ab2a6c6f2dd",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c9fe814c-637e-4fab-a949-2d582e7c6f1a"
        },
        "item": {
          "id": "c37c0090-726d-4a32-8261-68238647c264",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "36fac9bd-9c3a-4731-a045-bb577a71d3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4974aed-52c9-4351-b5b6-212518f35aa9",
        "cursor": {
          "ref": "b776904d-02db-442b-bad8-668127dc2b5d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6d9f6242-7dfb-4879-acde-144f785b60b0"
        },
        "item": {
          "id": "c4974aed-52c9-4351-b5b6-212518f35aa9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ca7586c8-dd72-4f96-b886-3fb9d3791b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658c1a21-bde9-42a1-803f-65fc88c5ac5f",
        "cursor": {
          "ref": "c9ace5c6-5fff-4bfc-9490-9e92d6c9d66c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d20be565-e162-41ad-b9d0-5d2c9194b189"
        },
        "item": {
          "id": "658c1a21-bde9-42a1-803f-65fc88c5ac5f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3bd9bd94-b9ac-432a-b998-6c5831506adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f261c8d0-5331-4cbc-9d66-0befb1dbe404",
        "cursor": {
          "ref": "a10241f4-e919-4317-8787-d2139a3e4956",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "12f4ea14-367a-4954-9e96-36e78a36d532"
        },
        "item": {
          "id": "f261c8d0-5331-4cbc-9d66-0befb1dbe404",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3a96e29b-c914-4f82-8a39-7d6271071ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e58222-1366-4c3c-8db5-343a6e401d3f",
        "cursor": {
          "ref": "9009fbb7-b74a-4ca6-8b18-4b39307d51a6",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1b3416db-45df-42bd-a099-b21fef513354"
        },
        "item": {
          "id": "03e58222-1366-4c3c-8db5-343a6e401d3f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "027baa0c-db33-4c93-b368-063824537c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d625fd7-26f6-473d-ba79-5320a5ab995d",
        "cursor": {
          "ref": "ec887a35-4795-4c2d-baa4-35b5a0d00d89",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "50ee703b-236d-4fda-80d6-cc99a62bb8cd"
        },
        "item": {
          "id": "4d625fd7-26f6-473d-ba79-5320a5ab995d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "429f58f1-908d-4481-86d9-1d720071d157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6b5914-cfd7-43a5-a111-4ee6d8f85845",
        "cursor": {
          "ref": "a5f2c9e1-adef-4451-90b4-87bcf02861c3",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0d993135-c689-499e-b2c4-46ebf4a5d8cc"
        },
        "item": {
          "id": "ae6b5914-cfd7-43a5-a111-4ee6d8f85845",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "933b0d35-dd49-467a-9962-e86ae59a6de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28be3e60-c3f3-4ac6-a58a-7ca98539c0af",
        "cursor": {
          "ref": "3d7ea3d0-0fff-48bf-a8aa-74ad08abf4e8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "542a9743-41e4-4f9e-ae4f-6ea4d33f8064"
        },
        "item": {
          "id": "28be3e60-c3f3-4ac6-a58a-7ca98539c0af",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8b3beabe-ef77-4b80-b1fd-72e2c5315b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5e4a25-074c-4af2-a2f4-c31cb8b52bbf",
        "cursor": {
          "ref": "fb042631-3e6a-4cb2-b50b-8287ba234820",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98d116af-ab97-47f5-ab39-a14ad8940bf1"
        },
        "item": {
          "id": "8e5e4a25-074c-4af2-a2f4-c31cb8b52bbf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6a93e48a-46bf-4bde-ba49-6a957d2bf921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a644a75f-911e-4fc3-bbd2-51ff7138d066",
        "cursor": {
          "ref": "afaf7f9c-f8af-414b-a77c-8b24c820f074",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a673a55f-1726-4752-8988-afa4f410f25b"
        },
        "item": {
          "id": "a644a75f-911e-4fc3-bbd2-51ff7138d066",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "95110a3e-456b-4b79-96dd-832f8114eb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c4d1df-d21f-4b5e-822a-c2fdac82fc71",
        "cursor": {
          "ref": "5b6d3c16-0843-48ab-b9ef-dbdce41c688b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "eff623ff-8906-4f94-8612-8ef0f981bafd"
        },
        "item": {
          "id": "12c4d1df-d21f-4b5e-822a-c2fdac82fc71",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4e09f36b-f081-497f-9679-87bf78b026e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fab7268-cf96-49fa-b1e8-46690b0f0b1b",
        "cursor": {
          "ref": "46bc4809-2f61-48d0-aa95-1a3ebcacd9d9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "71e5d4cc-da7c-4f80-9a4b-01e2cd91894f"
        },
        "item": {
          "id": "5fab7268-cf96-49fa-b1e8-46690b0f0b1b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "198925a6-858a-46d1-915a-2f81bde684c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15dfb2d-f35a-4155-8f4d-207601693db5",
        "cursor": {
          "ref": "e1861d4c-084c-488a-8465-2308ba14a17a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "173e1844-302a-4a1a-9154-b359e324cd34"
        },
        "item": {
          "id": "a15dfb2d-f35a-4155-8f4d-207601693db5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "09751965-b972-4061-8eeb-fbba1c49da50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09e8a38-5620-41e4-b088-d4011b003412",
        "cursor": {
          "ref": "d408f05a-8d5f-4197-98cc-2cc858fbfd97",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d57c5f22-a72c-4353-859f-a609891f420e"
        },
        "item": {
          "id": "c09e8a38-5620-41e4-b088-d4011b003412",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c845a3a1-29b2-4692-a544-9842ca17f265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69cb7ce-2dcf-4d46-92ad-270e52c89f07",
        "cursor": {
          "ref": "fa41df43-4ac8-4039-b326-e606d949f4c1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "da33364c-18fe-4459-99c8-d32fb8ca9bf1"
        },
        "item": {
          "id": "e69cb7ce-2dcf-4d46-92ad-270e52c89f07",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "959551e1-8586-47f0-b4db-cd48323d0d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c3ef20-de76-4e12-9384-177a5c089792",
        "cursor": {
          "ref": "dd276c6b-239b-4324-b584-b80430815075",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3cd82a47-dd05-4a88-a2bb-410c766e0de2"
        },
        "item": {
          "id": "92c3ef20-de76-4e12-9384-177a5c089792",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "da0bb6b5-225a-4268-b0a9-4045b12bf0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0460f590-d651-4390-9737-4c703ca98c15",
        "cursor": {
          "ref": "e8ba95d3-b5e1-4604-9fee-c928aa3308ea",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c5ad3462-720b-470a-abfc-6b56a6c72e1d"
        },
        "item": {
          "id": "0460f590-d651-4390-9737-4c703ca98c15",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5f0011bd-218f-477a-93b6-ba97fe9a2eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cc59ed-f2ba-4d64-a37a-ce54c86bfd60",
        "cursor": {
          "ref": "773cc131-2564-4187-8663-6eb38536ad29",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "27fb45b6-a506-4d70-a612-30069815dd05"
        },
        "item": {
          "id": "40cc59ed-f2ba-4d64-a37a-ce54c86bfd60",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "743939a2-67e1-4fb9-a42d-8d9dd80a5e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb920af-4187-4285-9701-7464d6488056",
        "cursor": {
          "ref": "5ca0af16-afd8-4fd7-9b81-ca1d2f25f256",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c95ec504-cf71-4149-87dc-2b87c7cd8931"
        },
        "item": {
          "id": "1cb920af-4187-4285-9701-7464d6488056",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a06a1aa6-7835-4978-a94a-7450d73e10d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a639f-e7f1-44f2-9871-48f96f837a6e",
        "cursor": {
          "ref": "e918e9f1-0a86-4802-86f8-fe2ebcb428ef",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6d2c7ecf-181b-4627-807a-b703b8016e4a"
        },
        "item": {
          "id": "a04a639f-e7f1-44f2-9871-48f96f837a6e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "285bd1e9-51bf-4f2c-b6a4-c2555c835623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df46dac-d7c6-4109-914b-4ebd9c6623ef",
        "cursor": {
          "ref": "3a6e1e69-6cf5-430b-adec-bba2b562030d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bd0fb7fa-40bf-44bb-82ff-493dcdabf2bc"
        },
        "item": {
          "id": "3df46dac-d7c6-4109-914b-4ebd9c6623ef",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dfb079bc-7151-4f48-ad28-98d8fffdb2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18deb7a-5651-4172-8971-f04861aa620d",
        "cursor": {
          "ref": "9eb37519-3343-41c8-93ac-8b73f7adedae",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fd707963-f142-4c5c-9220-f8e91880c622"
        },
        "item": {
          "id": "a18deb7a-5651-4172-8971-f04861aa620d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "834e64f4-6017-4470-aa8b-34d01551aec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220a0456-f9e6-427f-b15c-e0a8a8bcc837",
        "cursor": {
          "ref": "f9d85953-0527-4fd7-8dfa-3e106cfcfa2e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6a310efc-15c4-4a52-b41d-124a15d8c9d8"
        },
        "item": {
          "id": "220a0456-f9e6-427f-b15c-e0a8a8bcc837",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "aad33a67-c7ab-406e-84b7-95885197c9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b0cdc7-f885-41fb-92be-fd92ea612501",
        "cursor": {
          "ref": "faaf5d55-b319-4de7-8b15-19d7aae4590a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "582336a3-c48c-4099-88ee-e528b6b801d2"
        },
        "item": {
          "id": "91b0cdc7-f885-41fb-92be-fd92ea612501",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0aa125d0-f910-4101-a0cb-a105fec9b39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0d285b-f9e5-4b55-8fdc-2e153bcde3a8",
        "cursor": {
          "ref": "0bf7999b-db34-46c3-b4fd-37efb20c5e4d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "42717761-c753-4d3b-9ed0-f937fa33ac8c"
        },
        "item": {
          "id": "7d0d285b-f9e5-4b55-8fdc-2e153bcde3a8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "35602666-9b95-413e-b859-f964ecee419e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5394f7a2-3540-4cd3-86bc-5036dfb75d35",
        "cursor": {
          "ref": "573587b1-6475-42a1-ab27-1de992ee70bd",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8d5999a1-0cc6-4e0e-bb64-30d8c085779e"
        },
        "item": {
          "id": "5394f7a2-3540-4cd3-86bc-5036dfb75d35",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e77ce1cb-dff9-4c62-982c-82e9b438a33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3684deef-9148-40be-bc37-865cecc49a99",
        "cursor": {
          "ref": "ce2ea383-ef18-4431-80c2-8f1f619032ea",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d3872d1e-37da-4fa7-8623-ff18637a2799"
        },
        "item": {
          "id": "3684deef-9148-40be-bc37-865cecc49a99",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "03d7a477-db63-4b56-9bbd-00e46977a9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aa9f25-d436-43d6-bd36-4df19abd298d",
        "cursor": {
          "ref": "204fcdc8-544d-4a04-a95c-e76947b93cc2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a6795c90-9e50-4999-904b-0cff18690088"
        },
        "item": {
          "id": "c6aa9f25-d436-43d6-bd36-4df19abd298d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "938f0c56-2939-48ed-b0c7-b78e033a558f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aea2bd-4928-4703-8279-34819c9648c0",
        "cursor": {
          "ref": "10d1db6a-e613-44a6-a2b9-ec9484b5f155",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0209375b-2811-4262-ae63-50aa84cc1dbd"
        },
        "item": {
          "id": "61aea2bd-4928-4703-8279-34819c9648c0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "77dc5e63-15f6-4620-b6fd-9d59d6033157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851362bc-6692-4d67-ac71-db738cf52da3",
        "cursor": {
          "ref": "aee3ca43-6887-4134-a2bc-02bd735975b0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6711527a-d2a0-4fec-85d4-97b9cd6b96b1"
        },
        "item": {
          "id": "851362bc-6692-4d67-ac71-db738cf52da3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5c8c8a32-d0b9-4b33-9b4b-08ed41b2917c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8284dc-bc3f-4a7e-b751-c1c2fd30bb35",
        "cursor": {
          "ref": "8afff813-db1d-4fc7-8709-9e86e8fe33b0",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "68e5ef1c-8788-4020-97ba-282c594a9837"
        },
        "item": {
          "id": "fd8284dc-bc3f-4a7e-b751-c1c2fd30bb35",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "04fc193d-f178-42a0-9e6a-08114bd5fd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b72c226-3392-4443-bcf0-2d2b150ece9d",
        "cursor": {
          "ref": "063fe9cf-a72e-4e25-a89a-6c74e5ec011b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "708d8f0b-8a45-4004-b938-4c9efb278559"
        },
        "item": {
          "id": "2b72c226-3392-4443-bcf0-2d2b150ece9d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c1e820c5-c860-4464-b7ef-6851def1f47e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d08ed3-35b9-4f3a-9084-77dc47c1b2d4",
        "cursor": {
          "ref": "39d8f594-c8b4-4a70-9837-2df9805c4a04",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8e9be294-4f07-4962-b58b-a1a1f77d2ed2"
        },
        "item": {
          "id": "b2d08ed3-35b9-4f3a-9084-77dc47c1b2d4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f16d011f-f76d-421b-8df0-5608ece55cc5",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a7bcc1-4916-43ee-89e5-346837b957d6",
        "cursor": {
          "ref": "294e9e8d-b538-4d5b-a6ba-423090fe2963",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d79cfb38-a59b-4376-b45b-7ea4a86fc98b"
        },
        "item": {
          "id": "70a7bcc1-4916-43ee-89e5-346837b957d6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "094e31ea-0f17-4988-8f8a-f6d67ce38c9b",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1eeacb-e30a-4dd6-bb1a-837b340d30ea",
        "cursor": {
          "ref": "74e32177-1cdc-4a8e-9a60-cd24e7d2f6ff",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b5ee62ea-5e2f-4c8d-9302-39c0c0e6e79b"
        },
        "item": {
          "id": "6b1eeacb-e30a-4dd6-bb1a-837b340d30ea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4e707345-8548-4914-a377-83fe0eec45f4",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d83f50d-12cf-4589-a2ff-37daaf751231",
        "cursor": {
          "ref": "697ca942-5b25-4634-9a2b-23917c5d0276",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "121305a5-99d0-476c-851a-43be837d145b"
        },
        "item": {
          "id": "6d83f50d-12cf-4589-a2ff-37daaf751231",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2538d328-5d22-4f27-be82-2a110358ef0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d83f50d-12cf-4589-a2ff-37daaf751231",
        "cursor": {
          "ref": "697ca942-5b25-4634-9a2b-23917c5d0276",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "121305a5-99d0-476c-851a-43be837d145b"
        },
        "item": {
          "id": "6d83f50d-12cf-4589-a2ff-37daaf751231",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2538d328-5d22-4f27-be82-2a110358ef0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b5c153-711e-4296-a931-ad35c4a64761",
        "cursor": {
          "ref": "d6274782-1c02-4d00-9c20-25a0ad0f8872",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4a26551c-11f5-474b-8a81-d00652b66259"
        },
        "item": {
          "id": "d3b5c153-711e-4296-a931-ad35c4a64761",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c245f5cb-43a4-4ed6-bf1b-84a989fd2187",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15f1f2c-3c62-4e3f-b618-86baaaa16b29",
        "cursor": {
          "ref": "66cd3047-9a4a-478a-868b-3e3d1ecba004",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c5530aa6-9068-400e-b148-55df5c218f2c"
        },
        "item": {
          "id": "d15f1f2c-3c62-4e3f-b618-86baaaa16b29",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "381abde3-7bbc-4f54-aa06-f0de71f01893",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}