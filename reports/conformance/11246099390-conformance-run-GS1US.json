{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d0b28cbc-8900-44df-a1bb-6d66af012406",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d1bebf57-3c3a-43ab-bddf-62a641640da0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22b4575a-5c85-4590-8b77-ad810d239265",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "839fb33f-8e63-436a-8bea-fe9943c5fcdb"
                }
              }
            ]
          },
          {
            "id": "755dde7e-eb00-4670-9bae-754ca94dc1a5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9e0d8a2-1c02-4ebd-bfd0-7dd1d6bf8f9f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01b70f61-d662-45e1-8ac9-3d9cec32443d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5c1bfa69-0f75-44a1-9024-060e0ba5aa3f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c1359757-5a08-492e-8f18-e8d7a84ff89b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa23b592-a3de-4440-aa6c-ae86300f19f4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec625cf7-4e49-4e8f-bd9f-1ace9137adc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2a42856-0070-4471-95c6-f70bc06f0c95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "217c1b13-63cb-4588-919a-3343c92559c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25acc230-d6aa-465d-a0fa-50e88b312919"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "127ee858-de9e-4b11-9e82-6a40baaedcc2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a37dc8d-87f6-4ad0-9828-e153f5cefb6a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dff158c-9bff-4f79-8b43-6dcfc1613ec4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4239b6a6-c207-4811-b618-ad3134fa9497"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0204008f-fff4-4d3e-8ad7-b494723c4cb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "184696ef-ce0f-426c-914b-0c0db697cafb"
            }
          }
        ]
      },
      {
        "id": "5e87cb38-8e51-4d4f-8954-2d5f51caf385",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2c8fa6cd-9677-4700-81a9-3f4323359898",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89136594-8162-463e-8830-4cbb0c54cdb2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79d4a7d1-72c9-4031-9e78-6dc963757100",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7439e6a4-716e-4744-8eee-8830ba2c2e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a32f7bfa-7221-4514-94c1-7b1d9f3bba23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12f42ef-ecf6-408f-8e96-7bbc49c88da4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e37f7-8b7f-4654-b20a-4871535dc594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "726484bf-fa49-4e9a-9c9b-78af7ae02302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f62a62e-42f5-4d01-a628-47e2901f18dc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dcbe69-7d32-4957-8983-99224d228abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7e77409-00c7-4234-b7c7-e3afd9330c42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "246f99e9-dbcf-46dc-861a-0b257a316084",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87a3026f-880d-4c50-a8c5-7ed74dc7012a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d153ec-faa2-4dd0-9fa5-f2efd818891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3611cd70-1e7c-4263-a58f-3cef65670491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f120871-e372-4a1f-b112-2727e70b8136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d0613f-0313-4fb2-a0e3-97650bb23036"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "93b089e5-b44d-4b30-9c72-0adf48c2a942",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2933d5c2-0d65-4930-951a-aabffe94a5c4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a7f6f12-ae3a-4f9d-a600-85b264834ac5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "67361d1c-6556-43a3-bc6b-d334070bc60f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "170567ad-6778-49b3-8e53-53b64f07deef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e75639eb-b3ff-4c31-95d5-235d21d8280a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b426a6a-9fe9-49e1-a274-309b7303ef78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22c1650d-cdfd-4e1d-b151-10e8295934cb"
            }
          }
        ]
      },
      {
        "id": "99222c3c-4698-4722-932c-f33a9b099125",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0335b601-6438-4a61-9c2d-9f954dcd502a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "461a639a-bf09-41fd-b690-8b884bf8866e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4b09bf60-f111-4464-ba5a-07df69ad36f9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d272df-653b-46f7-be0e-fbecb37a4d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97009334-bbca-407b-bf2f-0ef0f7d8ffd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f0bbc3-7509-4e6b-872a-8ca93c6ae201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "447a2b21-71b6-41f6-a6a5-463675068285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9556c69-3fe9-4cb6-a015-a255ccc633b9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358a6836-68c8-4cfc-867c-4ebf2de59727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ed47e5-a13d-4107-adbf-5c6025c99531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0381fb0e-c292-40cd-94a1-7778be5f866c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "583f4ffc-9c70-4a5a-97ea-419af882b566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5358ab6-a226-4575-b329-14101c2b3b73",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745ca3c0-9c27-4f49-81ba-3a7c7c419cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516abab7-f48b-42dd-b339-1de8b80a0e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09a29ad-0c4d-4f3f-9aa2-8a9710af278f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37ffbb8c-646a-47dd-af8f-bf1630e23d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e71291-aeed-4d24-a88f-c3b571c675ae",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cf22fc-e12f-4971-abad-4e30a49dc097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabc80ef-0f83-4d9a-ad53-05a76e09b899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d30bfe-76bb-4a01-9f5b-fff6dd3dcf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6c7fcf0-00c4-47e1-bb6f-6673df570eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b55894-75f5-4fb2-80be-cab98bd7010c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac46ba57-b72b-4dd3-b29d-d9c0e3a2c66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f0fb33-7157-40d4-9fbb-00f3b7123da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07594966-d535-4d95-a50a-3a0e716e1e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb6e4c41-3be7-41cd-a04d-e2a2bd7171d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2eaf52-90aa-4d37-a12f-38354726b54c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b1eab2-fe83-491a-9215-c9a71dc1faa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca973ab-de53-4441-a73d-7c200132be66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0394dd8e-2cf2-47f2-b790-d90ef3381883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94e3bf91-afd3-4960-af01-5e6992834ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c9f740-f027-436b-b0f0-462a33fd16df",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0769ba-4623-4953-9dd8-20ebaf5e9616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23448644-e562-4e4b-a7a6-7db7b4ea2c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0a503c-3c50-45a5-8205-b4ab822595c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f795feee-9c70-4152-96ec-67f5154ca5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3f1ed4-b6b7-401a-96be-0a12fd66ba68",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30d8f94-6351-45e3-93bb-dd201d17023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8575f1cf-4f25-4632-81b6-5f995ba97fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e3ff59-de36-46ec-874c-d25461dd4bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "842b11be-8173-4260-b5aa-cff7d59a2ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605b9cf4-415e-40c5-bfd4-7603e9f97b21",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c86669-bfd4-4f83-aa9d-3f911affdeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1814427a-8632-4e89-897d-cde17461075a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c1e917-e443-45c8-9932-575e7bf51985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "853c8a29-e83c-449e-b5eb-08ac8f597473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf26be9e-fa6d-460b-9f12-fbbebc7a8d4e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f178e85d-9bab-4bde-8111-dc1538048cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537b2568-c817-46f6-be2e-8aa702ffd00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f33aac-75b1-4c57-947e-f5ac83d67271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e82d2263-f1c5-4e6a-a118-021ebe7d7701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3e43f0-e7d1-4ef5-99b6-374a053b9aa6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b9fe1c-8247-4ec2-9487-ac8bab021b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5cb88e-aa8b-4c8d-a4d0-dc274ccb342a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4391c58b-7a88-44dc-ba1f-8adf236579ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "877d6b87-e1c3-4ee1-b7dd-ac18a4a4dbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd15571d-deac-417d-b4b2-6b91e9cf33c5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc82cbb0-5300-40d9-85f0-3329d73bc636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05f7a19-bc1e-43cb-8adf-b1b35b5c8c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619b9eea-f0ae-45e3-a7fd-e957f653dfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3e21028-e063-461b-8640-f1bef4b97a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565f0244-563c-4db3-ad38-78fefbcf7bb4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529e8e89-885a-4b56-99d1-5e9945c3788b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d01da6-78f8-400a-9c6e-7f8d5f73fa6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484dfc8f-2f62-4485-85a1-15b63e17acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd161543-6cf8-45aa-b374-f87b91c50c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274b7c2f-890d-4422-8436-9005dbef5581",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae33a470-5135-4a39-a7d3-63e9368b4fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801885eb-1fd6-4264-961f-c651f9974b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f1efb2-410b-41a8-98c5-97888e6a2ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8ae1804-2eb8-4048-b9e8-88c4ffc2f28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f2c911-9444-4fa5-8eef-ac525b66e6e3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5b301a-e691-4a01-866e-b9bc605232ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f830c8d8-fec3-4800-8f9b-02b31d3cb855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef321774-5a30-462c-8784-c4d52cdd8495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d5c1828-d9ab-4d3d-94e7-01b2c917ea07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0cf84c-df60-4d9b-8d9e-aaf4458778d5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f3d85b-5aab-4e20-846b-ac887101f408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c398cd2b-609d-460c-8f77-ae03b8684981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43856cce-a324-44f8-a095-4432f69745ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "406cb57c-644a-4790-82ab-d87ae8e09ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46988a82-d077-4c9e-9139-804e6ad833d2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635c0ce6-02b7-43ef-9101-5706bda31379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4710b97f-0d6b-44c8-8b13-9d3e77a97738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecab0e7-a917-442d-ab4e-d80e3d935b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "657079e5-92e0-4f97-b068-06282835fe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7004c1f7-c8a5-4f66-96ca-22778979f840",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe82a97-3143-4261-bbf6-99bffebddb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b544dbec-e142-446c-8e89-50483e0828ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50106f44-87f2-46d4-bce5-e5c47cd80d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7b380c-9cc8-4fd8-9c6e-5865d7727f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e271f1e-c82a-4636-970d-f91c9f1b2299",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31e702d-a70f-493a-a35e-ae1eaa988a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e47513f-b8f1-419f-b0e2-b6a5eb5f2052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d825fa8-42be-477a-805b-856babe2c379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10eda09d-11fb-43ee-9c9a-eb3422764dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824b8c41-f8c9-475a-890f-9cdcfdf6899d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbea470a-cfc4-491d-9acd-0dfeafa01714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c11a2c-b18b-43b0-bafe-e49f83a1ea9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61fd8bf-4a29-4522-8255-ac432abf7d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e759018f-b05f-49b7-9eda-7777459bb279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2e2316-0af2-42c9-bb7b-6fb443b183d6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5045483e-5226-4b6e-88de-5b043c94f82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b138805b-16ce-43fe-98e6-d8da1450d209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3182b950-23c8-495b-b46a-f6f8dc1b87dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "957f56d4-af1d-4de1-bb8a-ad9bfc52f81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51f113a-8218-458b-b617-add0dbdfc8a6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b68df30-bc1a-43ee-b220-73820976bbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b2baf5-7ef2-4ea9-b2d7-e9f8961c09e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56676514-2f11-433d-9b4f-77252ad42c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdff4e4-e214-4ee4-9b40-1ebc66722328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1367578-e028-4081-9078-732e347bf3f0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836241c4-237c-4438-93d6-ca60a8439e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd07ce1-e35d-4328-9601-6ef9a6331e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134bd750-7936-413c-93d4-4d28c4837405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be50c4fc-9178-4fec-b80a-a75966d5b867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8946d741-19e1-4377-8065-eef773f174ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1a6b2f-f59e-4eee-a17a-5a1f006bc444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf7da44-230c-4191-8706-372a1026ea62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60395615-8566-4072-ba05-9a0012ed0da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee822eee-208f-469a-9265-e1009c6b7698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43acdaea-7744-4378-b2c0-03890fdc555e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a994c1a-b37a-4475-bdab-c4a4635ecf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4721682c-0c41-4646-a1c0-35923b79ecb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2ff245-2f3c-4097-bded-698082a89b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "455e3f72-eb38-48ac-8a4a-651e0e10ceb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5833d7e6-51b5-437a-a42c-3b302314a597",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136f2b1a-2131-4006-b6b4-f26ccdb068f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afefe66d-2f72-42fd-b35f-0ff1fd87ecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68bc0f8-b71c-4e5a-8436-a7a716ce9f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73069c70-2bf9-41bf-9316-cd96ab36c388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110db17a-b9dc-4cdd-b155-09ea08721a46",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6768f9-6f38-45b6-83b0-0749dbbda2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1aa0463-4c53-43f4-8cfc-e8c883da583c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40125086-6ff0-4930-ae53-5f04474d88ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b116aae-367e-4d9a-b8fa-348c1e3d4652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9046eadb-5bb3-4072-a833-ee8812f70aa8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478ceba0-044b-49a5-a36a-743910104920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2397ade-1d75-42c6-a63a-01915f50823c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23978dc-e592-4dbd-a4d1-dc4c02a4a2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb96e8aa-51f0-4a2d-ac65-1494adcdf6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fba1b3-30a0-4437-bba9-e4bd13f8d498",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24a66ff-88ef-44e2-b272-5498559fe36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6ea54c-5002-48b5-9eec-cb34123582cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1234c337-7a4c-4dfd-84a6-867677bafc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8aa521-a387-4fd1-ad1b-61dda8506d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d3952f-abe5-4137-8c6e-69e3803492f5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f42691-f15d-43f1-9f55-48de903b3483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6d1be5-fa78-43e3-a470-d0eba83c72e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582cf355-a4be-4ce9-8036-346f022e54b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "62eb4441-ca0a-41ff-a355-a2717b0c9f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a8c85-5b03-4463-b81c-4593ed66be5e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8db97e9-20d7-47c3-81ea-475965354d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a09161d-cd8a-43fb-b6fa-76f8adaf85e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a0517d-5d4a-4afa-9c7b-a0d58d0542a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f563a4-1a6b-4bac-8b59-e222fbab0321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc890d6-f57e-4828-b14e-7c3e75666588",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3332f9dd-424a-4f34-96e9-f3a08bb51e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb53ac6-06c9-4595-ba7b-f7790ed2f73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb601426-cb69-4461-b76e-252ba0efbffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae7c17c-2ad6-48cf-9124-b4f2f989db4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a7a630-8df8-4a88-8a0b-ad2f0c1165bc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8295c3f0-b46e-4c63-b737-75acb76e58f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28324f55-08a5-47b2-9b1b-1fae92e561c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69018dcc-1ab9-471f-bfb2-b73480a038d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e20b536-5c0a-403b-a65f-1ec8755ffc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e820b8f5-0acd-478d-8074-f2762a498e6e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2008a2d6-1b2f-4f7d-895e-93537692d9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b427038-895b-4b56-8d23-9c3bd3378769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36911d88-817b-4c48-b001-aacc5d3e8e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66af997a-9416-4342-8cdf-d0c8bcbd65e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96e9120-e7dc-4345-937c-29ab335a9d3c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7084aae9-a153-4106-84ea-2f61c9d812c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b380bec4-0cee-40b0-95d1-c28f0662f57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155ed89d-7ec8-4612-aa68-fb2dc5636cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "870a10e1-e3e3-46ff-876f-62bb65dee2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e6c11c-2da6-49ed-9167-6b73c6647f7a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b5555e-13c7-4d2b-8525-2770301fe8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c4a5dd7-076f-4b3f-bfd8-07d2a3a605aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839ca1d5-d34c-448b-a936-a799a2fa33c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db0a0cda-0501-4600-a95d-f56ff1cc2157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b6dde8-8d12-4029-b240-6b190a716dcf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0a9e48-a827-4ce6-9400-e95c4e5cb944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba7acab-f319-46a2-8c20-d451f30f88ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e794455e-8a7d-4faa-808a-3e5d9c287d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3b254a-3d96-476f-822a-9d84ba322799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b51070-6c9e-41ff-a3e0-29acaa944d1e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae749e1-11c6-4b01-b3cb-ab812e5d774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcb9848-c9f9-48ff-9185-b658c4367160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b159e560-3c02-4448-b159-d51b7f5e8850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50209d23-9e6c-4be3-8c72-aa825d8fa429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5845920-059f-4692-a7ae-176b3205a335",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8fd7d7-8a1d-4d4d-a8f9-ad1c6b6bde95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2818805e-c062-4861-853d-399e6bf4e3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb711161-fa17-43f7-b0e1-85d3a1331ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9978b58d-0605-474f-9c06-2354b3a16cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f585e614-d007-4255-9ff3-45382d5f7361",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb67cca-def6-403d-bed3-3cd40ce6923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad33a48-e8f3-484b-9b97-59d5435445fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9add7-c358-45a2-893f-cab568b66fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "116bf3b8-0e86-4ebc-b9dd-68fb3c1d005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ef4aaa-9b28-43b4-b31f-f62557a24e68",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0918ab96-3ecb-4ebb-a8ad-e6b6e3d8f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbfe96d-7982-475a-94f6-9c791f478fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29541f46-30ec-42b2-85e0-1e4051cb6873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f84376-2154-4588-9024-373bc24a358d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cb46bf-a9b3-431d-bf4b-a76aeb52cad0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334970a2-79b0-4e71-9b31-836d90ff6bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea22dcb8-457e-4a72-b7c0-bf493c695eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e99dc0-53a3-43c5-ba9d-00dbc29fb628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6907240f-3082-4d31-85d3-d2f9229d0ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194929e8-b879-4a35-92e1-c2d4f1367538",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd21b645-fa32-4804-bb3d-1f159a311a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6f646f-7fdc-4a0b-818c-e125e94f8698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae35dec-2876-4fff-9cf6-a1e099a06d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fc9842-15db-4f85-931c-2cb41a23c77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aaf790-d57f-4653-93e7-3e183c2c783e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00612283-b793-4253-a108-c050ca1fb4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20aae82e-3202-435e-a5fc-cebd6d3519b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7a3328-31e1-4085-b926-62cd02762b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9a30de-8846-42ca-985f-50f9ef65222c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4cc019-bdd1-4e57-9ef2-839d9f300fbf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b7e39b-e474-4cc4-af3b-fdf129ea0740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba69d565-5e6f-43cf-bd47-333a7f369a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533e5223-3689-40c9-908c-efbc334ae225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b295353e-1f52-42e0-9125-38de2080acdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2795fe06-dbe1-4ef1-97c2-fa4d23f12a71",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b164cd-3777-40fb-94fa-b2586f1dbef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5054176-f906-474c-a7df-158e42afc4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f73a063-087e-47ae-9b41-3fd087d7a638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f383634e-8458-46f7-bd65-228535dfdb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8190a2-75b2-4746-ab5b-0d3d12b0248f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5afa538-e605-429c-9496-f69bd5037d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc69ae4-e8a5-408f-8afa-ab62541819ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d941ca7-f249-4e3c-a0ba-2c5413d97764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8606979-4428-4681-820b-1946777604e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728d7e3b-7f1f-45c8-aaf5-3e175680192c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bd2bb8-9039-4785-892e-86d517c00dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955e0d85-b230-4cc9-8520-4ce37a8b8833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2591e66-8a9c-49b8-849e-086eeb93732d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ea5b09-4f46-425f-b56b-f3322332fd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad582d6-5075-4e03-b625-dfc25acd2ec8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b140c30-0307-4b25-8120-610ab80bc9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e241e3a-8aa2-4afb-854e-921f730edebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30c3bfe-9e0a-4185-8068-47c07987cd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "352b0370-7807-4f5d-9cfc-4f1e3ea2e398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309b7446-4cf8-4946-b851-5c4f93387f35",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc0daf4-df90-43fc-82fa-a9ffae4ffd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf324ff-a34f-4269-bb29-aca1b279aef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c64ca2-da0a-4e77-9d7d-fc0abc3a52c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81288396-016b-48fc-891f-fc21e04f9625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6aa4f3-431c-4c0a-9873-9bd9946dd4b6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b2f592-bf1e-4ab8-9974-a11c92a544c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fc0ff0-c36e-4661-ae8b-e0f5a61c11fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d893a127-e61b-407d-ba76-48fb3b3dc93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d24ef2d5-9c70-4fcd-99bd-17fecf160f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79726f81-5b1c-4d5b-9495-0c5dd6884054",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36065720-5a55-44f1-9661-25f88a5b1cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b324ddd0-2331-4cdd-bd61-442493d4fa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8a8dc2-b399-4a6a-b2fd-d97121e4faa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4506cd67-a684-495c-8321-71d997b3bf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d3e0e0-e50f-4af6-9641-b3843cb09c62",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bb9cdb-2447-4a97-b85b-4107f240ba9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10a2565-f4d8-4455-8fc8-edcf98da8229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c419c06a-2fb6-4c41-bc81-cf024aa0fcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14246782-9a62-446c-862f-9a5fc0a0b0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8c595f-1d81-4e88-8c20-c0ea5cb15d6e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5441b87-b3f7-43fa-8252-419d580bff20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd522a3-4daa-4f08-907e-ca40a5a50b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eefe46-a11b-4eb4-8849-ce329e85d35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80548c49-14c5-4690-92e2-5e1f3f808574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f9ac83-2521-4ff6-9c2c-2fbc429f4fca",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c309ea-4b8e-4c0b-92d5-5aab69525fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33077702-25a9-4e46-8d2c-c5e34ce67887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d20584-60c7-40ae-a74b-16cd7af3286e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64820fb6-b72d-4d65-880f-036a057ca800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125af86f-55c3-45a4-bcba-312171f23a21",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1ae8ab-05b9-4d2a-9a60-ed617a51f171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecce323-df0f-4cb6-b90a-8e0bd23358b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2884f23-8228-4232-9eba-1d809640c9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebf4fed-6668-4a79-81e7-142b625fb885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3152a7-bd40-489c-8a81-0432817f63d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d436fab-1285-4ada-b2b4-d691d0b65810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b745fdbe-5c83-4aff-9903-dbe2841339dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e24ae1-d9e1-4ec5-9cc5-ec24a9009e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03fe2621-8183-40bc-977a-dae00298bb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387f9ba9-9bde-4d41-8f26-66fad5b84819",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd0d3c4-b91d-40f6-b888-94d5b9398af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f9fc38-cdb9-4676-b8a2-669d1056cb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b2ec17-a7a2-48f8-8d13-28cfd3562cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64696ad7-dcc6-42cc-b4f7-30d8bb4bd999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd2180a-2f5c-4eef-910c-936be66ab3fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1bd411-51e2-404e-8700-5cb69d4ca321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36665cae-5026-4b50-93a6-822b614ddf66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ce75af-5802-47f7-89a4-108f4c160d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2abf3208-56e0-4ece-b12e-c8725da0911e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555c3f49-a0e0-4967-88b7-e74f458204f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a8b3a3-7596-4f16-b5f6-fee43e01b955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7115274-36e9-4701-93e6-0ed502b12739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d8a0ca-4fbe-4f78-9129-0aed0c60a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6463b3f-9b17-4793-930e-858e5e79370e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56f5d02-66e5-4090-9dc8-0e6b760a82ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b463824-f376-4aa1-a834-1c6c778b912f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f038ad-6355-4f47-b9de-9fd7f559e810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4923be35-d814-46cd-9cd6-bc9a79f1046e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f66d29c-06c1-44a0-9d13-0cf919354cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a970b1-6d53-4ddf-9e1e-572b316e89eb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c1dd14-8e74-42c9-a091-c78bea1cc3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d515910-9d2b-4b5f-9723-bfa72c35cdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b164102-1532-4f95-af6b-3763e0f89016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4d1fcb-79d3-4036-9de7-38bcbda72abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931ca5cd-27e6-473c-8a44-6c8bd75315d2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66228f0-1a92-4be1-af48-a9d689f4cf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232a7429-10f8-46b1-9117-1f1f2db56aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8612693-5627-4cb6-bb10-2df34af0e778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cad823-6acd-4d9a-8c1a-3e30f3d2496e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668472dd-bfe5-4ebe-8b7b-efa5d6dc0172",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05bf415-642e-4eb3-97c0-2026b3aa8698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bca690c-a1a5-466e-ac55-92234bc3487b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f707c11-21ec-4c42-9756-ee50a19f8168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "732c8dda-ade3-450b-a85c-ec26f4b60ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d457678-adf5-4772-9cd5-c3fee0f943e3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d808e3-93d0-4de6-a8fa-769c7c6f3a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06128d19-fda1-473e-b975-ca30debcd231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8defe43-c2db-4d89-a976-1c87742b4a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efa3965-4312-4093-8965-44c95f8c9546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b8181a-7d35-49d1-8fcf-e55c0814eda9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcd1dfd-5bb7-4201-af18-9f1cfd49cab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c37d747-767b-4cdf-8f75-54cc790de65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e974bae0-9e53-40ca-a439-8ca664670081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c19198e-b233-4849-8b7c-65ba2df7e7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9d715b-65b2-4292-b5a9-c98eb030ad6b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283b52ad-1249-4774-8892-5012a649eab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fbc014-9a04-4196-bb3a-3d5a54b3f4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478da35c-da62-4aec-bd0e-45ed7300dfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd2c7f0-20f6-4c55-bafe-e285bb928389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf95b6ff-060d-40c5-8a9f-acc0a234b499",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ca779f-b78d-4012-b1ba-1548a61b4501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a975134-455e-4690-8bd1-e4e952881621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7ddd07-eb7c-48bb-815f-a9dde09a2580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "55228942-3d78-41a6-8f04-8890a12fb943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a47b2-5ce0-4f93-9c17-21f338a5e5d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a44e665-2e29-45d1-9b1e-e6e3b71dd315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d55574-5410-46b1-bca4-ea2f6bb4e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dbbb11-3ba4-4363-a6ae-ef0fa04805b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62371dca-4167-4e4a-86c3-9cba8982be71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc7d84a-8a2c-42aa-8cc1-b8bf9e268bb1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e248ae-e878-49f5-b19b-6c401c061d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc09b662-8006-4d97-8199-d675946df64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363a8d6c-48c7-47e5-9ec0-5dd8e1f2576b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d71abb8-4adf-400d-9beb-f9a63107085a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e954ebba-dbd4-46f1-965e-00a175b00759",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f467d134-775f-4595-8ea1-f30255bd2cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8a8fbc-177b-42dc-8ecb-543229c92757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6be92a-c9af-4375-b689-8ea7c1b2515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26077355-a205-43f7-9845-e439007522dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d149a547-525c-4d16-b2c5-c0a86737dfbf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dfe567-1df9-485e-ad03-597a891c5316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff309264-d0e8-49dd-bb0b-e3d22f63c84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6208b62b-7657-4f5f-8254-5b3d2c9b6082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "534d87e0-331b-41c0-a266-3943c2f7ed97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52671571-1f48-4389-bf8b-b9dabbf2c54a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10bac85-5948-4cc6-a7f6-54e38d097aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3a6631-d16b-4060-94ab-0c66282a5172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5de24b-1dad-4843-8bc5-0733da76871a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59a6b80d-37d2-4b54-8d3e-19de9f215995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d186c5-9643-4e28-894d-b5bd20dfd268",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785fd7c2-e05f-408b-8ca2-3606143d8b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6766de9b-330c-4431-97f5-0b833df2fec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9c461b-567a-42b9-9b81-98d434bcbc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19fa0ca8-2257-4e68-8119-f32b6c2355af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d28a692-21e7-469b-9da5-ebabaf3a998d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e1498c-6559-4206-adef-22bbb6836835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e387101-af58-4fab-9207-5c7d69060c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85832bd9-a032-48d1-a63b-fe3e2da263fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fc98d5-344b-4fe1-a340-25eb0ac1ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc99aea-b71b-4dd0-bb8c-e7557d3e0dae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f568e31-16f7-49a1-91e9-6a10acaf4198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404b6a90-a7bd-4dc2-a4f3-8bedb7722f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5c0614-219e-4591-9660-c45f95f46f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "484199df-5417-487b-92d2-9479c938f2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c29a8b-ef87-4a11-a0ce-8d9a77f39e55",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f948cfd-2979-469c-9727-1be022cc0ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485d3812-79e3-4e87-b041-2c03be029c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfaf3b6-0561-47df-9735-bc456e935ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c248f81-8c7f-4af4-82d4-1dbb21956b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9544d82f-69a0-4595-80d2-56a4fa812ac4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911358f6-7365-46d5-adac-8482169a589a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d073b4-a9f2-4968-b8d2-951c649bb048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70bf993-da7d-4e77-ad20-a37f5d4714ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51851f8e-b1ab-4d4e-8653-9cbe4d78b6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffac8e1-8bd1-4bc6-9fc4-6ce94987b825",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98d5221-a8c4-48ea-98cb-686d76bdb4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eab4040-ab09-407e-ab1c-135067aacdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741b692d-6821-4b31-9829-85e8e50e5f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0336f2-6ae2-447d-9ba6-99050549788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f99f125-8ed5-45c0-bc43-6a48c9f4807b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd3871f-23b8-4ab5-b70c-1e8c0e83cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffcd1c0-b4be-4a44-bc5c-b81f26b226c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a438b7f4-6ee2-49c2-ac5c-754cfe604572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52f9921b-99f3-427d-be22-406549c13b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc2f50e-2a03-476b-b220-9e51e39234b8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9875d5b-6c1b-4c05-b251-5e17972a0e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b4c23f-cbb4-44f5-a28f-fe086afc9b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79b960f-7b97-49b9-bd3c-feeafac9ddb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2580d064-4e0c-43b7-9c84-a17f0545e841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fa12f0-3679-4dd6-a553-adacad9ad83e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491b32cb-afb6-43c4-8f59-4457484eeb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c400b6d5-d1f4-4160-b72c-3996f5187cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed89f38d-6364-4559-aa44-537b6da71f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b149124-03ec-4f29-bce4-0d3b0cdf8b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde4f076-02de-4448-9d91-b1451b6a1d30",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba36c70-4ca2-4198-8eb6-ad3f4b3b4877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3858c687-0a71-4604-b21e-9367aba3dc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5180d6b-cd50-40db-876d-dd333c72c39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ea8e2f-8860-4023-9644-4c0705b68b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1ef890-b43d-4a96-9de8-3c2c310b077c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d824970-3a73-48b4-bcfe-d7f31096afd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a4981c-18bb-488d-b5c3-74ac4c063b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db1a8e6-b38c-44e5-9957-300ff6dcb509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1133698c-c30e-4b28-92eb-d3b8a57a108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b73947-1a1f-45be-847a-af85db8010a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a345e4d-66e8-4b91-8a59-6fe54f2c4f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fd9467-2da8-426d-be58-e2f8120d680d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83533ee-138c-4e04-9476-2c966751de1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d58acb1-48d5-4841-bfb1-6648a8d6d72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0185420-7c54-472b-9ec5-a7189fe8296f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b855f7ad-6a7f-414a-90ee-6c4c2cc2aa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f689b9b-c9f0-46c5-8075-242eff285e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d5bc3c-d3f5-4de7-b5e4-822c4f8d1d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "850d1ef8-2de6-4a2e-bf7f-9f482832379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6fe2b8-6c4a-457e-ac50-1eacd42b957c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a13c79-9cfd-4d5d-9241-a5da08999cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe80a8c-2163-457f-8b93-cb08ec3a7f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45fef2a-e06b-45cf-abb3-7ef4d943d9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac865ac8-935f-4fbd-b847-703ad04f433a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f749b6-f5bc-4627-8367-bb2d6014a9cb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8737ac-831a-4501-ae2a-e6bc31418ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f82f6c9-1d6c-4702-864f-596e2f4d0821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20f8fe8-8f10-464e-b7f4-154d47d4d60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f059b9b-eae8-49f6-9215-21efde438d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1298a7a-110d-48b2-a61a-c9a4b8fe4e19",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96019f7d-b6b3-4c1b-86ec-7d678f30653d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd7b011-1d0b-4e43-90f9-c8589129d7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d649d6-e08c-41f0-9cdb-2c311101f8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b40a642-f239-41ae-bc9f-9d32edd31c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b50249a-9cd4-46e7-92fb-c7ac79df3c77",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7d9bab-b31f-4517-949c-81b107392b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5012be0d-20b1-4d08-9218-0bcd4a4355b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4065a4f0-338f-418f-af9d-958df9229c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6e674a-f740-4b80-aee2-d95178d4c662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eef082-d73c-41f6-8178-c87e09940f5c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9700a13-38c7-4ae1-919f-8af525b7eaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8610bb9b-4c3b-47ad-b604-eedb85b6fb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b090df-884b-4d8d-9ffb-c24fdc5d3318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "81f9d6f3-ffb9-41a7-a96a-14d51d4dfcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dbb6f3-956f-4068-99c5-652b84dcbbd8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556ebb9-b00f-4996-8551-c998074b84aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d8ce6964-56c5-4fd2-8c13-618e46415406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8913a71b-d22b-4913-a487-ed093224e1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "63e3f938-b6e8-4ecd-bb86-1b07236bce20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bd05e6a-2a55-4354-a17a-00b36eba670b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b4b9d60-4512-486f-afd6-332e53fae7e6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c20c86-582f-4d7a-8cb0-46f1c4e229db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76ced2e5-1d81-47ae-b621-41e4884eb689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d4b479-9df3-48f0-b10c-93a3edba59d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fbb3df4-6d6f-4dc6-a2d5-5eb1064b5d2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "149bc52c-6d62-4ec2-bb18-7d4bc79e5140",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c73112fa-1023-41bf-aadb-2a044983ca9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "011d964a-2743-4f33-b66e-c4cd190c1033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8718496-503a-40ca-95e7-7fa1c28d490c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "522169c2-3750-43b7-ab30-89eba32cfdc2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f872c1fb-369e-4d5d-96c1-0aa117996350"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d51bc09-4afe-4d3a-8157-49e764931c86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0f24e7b-bc4c-48fb-931e-64546c185791"
                }
              }
            ]
          },
          {
            "id": "7bceae02-4949-4b12-885f-374f3bf22f59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d11b25a8-0132-4e04-a24b-a631d3efbba2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6408bc75-1013-4c6e-9982-d79d5bd10552",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bea821f-a97f-40fb-8acf-b93f7478d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3a8bd25f-deff-42fa-ad91-ea8aba7878ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e86091-c04d-45f2-826e-10e7c5789c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526b0ac7-0290-4553-9a83-1cd2b95a9cf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84a07951-658d-46b0-a30c-faa49ded42c5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1f7e566-0781-413a-8649-cbdd46cc2330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0789b957-8a94-46a8-8de5-86c173734d14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d3ebbbf-b2a6-484e-84ad-3efd7a327eb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "509a12ed-2a23-4f41-9bbb-a42c10242508"
                    }
                  }
                ]
              },
              {
                "id": "0446f1e2-3449-41c8-8c4d-889df752e20b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebd48a15-867c-4311-88d1-ffea285aed52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06f3a368-1e27-44c2-8a15-e5cf3a9b535a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea011dc5-634b-43ee-88ae-34445d83b906",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91bf6170-6a7a-4fc6-8aef-1227dcf4a057"
                    }
                  }
                ]
              },
              {
                "id": "1967f703-8ef6-4fb0-b00d-53a36b705777",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ed058b4-8af7-4018-9a53-55db13355cbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b758bdec-22fa-4055-9e8d-e718c7591ce4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "837f169b-84fc-4392-8c61-0769ac037055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afa26cba-3fc1-4e9b-a9aa-319419fef353"
                    }
                  }
                ]
              },
              {
                "id": "8939eefb-67a6-42d1-8202-156f9ac073e7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4375bd30-c9c6-4489-962d-d7f16a717ff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70f3c275-f3a1-4fb7-b06a-69d310465eda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6ec4bc4-43e7-417c-8431-8928227d1e33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "56ca83c9-7b02-46e6-a2e6-6e0b11328177"
                    }
                  }
                ]
              },
              {
                "id": "3a0c3775-8416-4f4c-96db-f83e91b5028f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b97acbe0-b3cc-4623-99e5-599106d31171",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ca050a5-a41e-4ac7-a542-843f951419ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79a867b5-85c1-4858-b4a9-e71cbbb58099",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "50a42ed2-5ee4-4494-babe-2092729127a7"
                    }
                  }
                ]
              },
              {
                "id": "4aacb93a-9a88-4010-897a-4565c5fc9ae6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f66a43a-84aa-4442-b856-3ad3e46bf62b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "655865c9-705d-4168-8e43-acc933f8afd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87b650fa-2d03-44fb-b8aa-104e62090aed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08a5101c-39ea-4900-976d-80b19f7b7b44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a57974ed-be4f-4ab3-83ac-dbe604bfdd7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5120536d-453c-4bbb-9610-9ac5b0fde640"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6c0cfb3-5b98-4f66-be6f-d5210bb6d0da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd383700-eb64-462a-af28-5432b43ed446"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b08d0f4-427b-4740-8572-d089949c7f89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "456832ed-6145-49f2-ace8-f07f034d4b26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fad28b3-b04b-4911-8d97-b80a077493d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0bf39722-1a2f-460b-87d2-48ffd9156e19"
            }
          }
        ]
      },
      {
        "id": "ccf2b5cb-2ed6-41a6-aa1a-50ab82670532",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5e12c853-2c58-4814-b5b7-5d78e4a06723",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0538f77-4529-47c4-8887-5195fe54a916",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b93e9812-f9c6-4e58-9209-e5ce03975c99",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d3f2dd-3984-443d-bd9d-3f3904d4097d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720c02b4-1b8e-490c-b9ba-d6df32b79775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aaea8e-1d84-4e7c-ba42-d18a3c3b96d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb090a1-3091-4bd3-a504-1985519a9a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f15bd5-c599-4d1d-adbe-e7014b84d331",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8b80a5-970e-447c-becc-b28e8b6bc7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a457318d-9566-44df-b5cd-e6a6be8d06fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a80176-c40f-49f9-8a93-e0f31ad82955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cc8e59-8ad2-44f6-8d5c-dd5fe789a27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afa4d26-54e1-4f0d-9d29-662d39fd68f4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be3896-19bd-489a-b496-903e04671d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595e9b28-6986-42c2-885f-6a03e657bfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1acdf2c-43eb-4f1c-a19c-7d574c2f25c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ad7942-3900-427d-9ddd-76701bc68f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77683c16-8f5c-4445-bdbc-faa1538f2dbf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d39acaf-961b-4371-87f8-9a04dd4275fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dc23af-fc72-454e-90d2-96b205bf503d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a63d209-8e3b-4bed-b0a3-a7e1d80760b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da81e229-10d4-451b-be6a-30169029d93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161946fd-b55c-4302-8d97-5974e45a962a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce0a7c1-dd1a-4bc1-8f9b-e957fd539707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccd01a1-84ef-421f-a931-7288c6335a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d06908c-fe52-41cf-8ae7-8c41204bb3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec5e6ad-2e7a-4d81-8414-20c98690bada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9c57a9-3c9f-4bca-a2e5-561ee0e6cee6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e15e9c-ff21-4dd1-b056-8c56f094cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5713ba-64be-42ca-a3a7-7274e4c04639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fa8a87-e7e1-43a4-9bef-624467024e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4df40b-5737-4fe2-b4d3-e88451bd4274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7643b64-eb7d-461e-914a-aadeb1c93126",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cd3e2c-fa6b-4162-b9fc-f88f668f0074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8950832e-81dc-4562-a1af-46294f2c6240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b13219-7eed-43e9-9fb8-c94bad244abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f80d777b-7fc4-43fb-a70a-e3d7a9b50c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51458f7b-57f7-4106-aeea-f455a8f16618",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec7cf6e-4551-4fff-8524-4102d1c9b1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f085aa-bf6c-49f0-8cd7-8669e63f990c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4244d152-c0d7-4731-a1ea-6f0da49c90bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2b3e7b-0f3f-44d5-b2a2-eaaa674b4ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67991b63-0551-4a13-bd1e-20a1a10f5603",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9b144a-eaae-4d4f-a838-4dce9f2d9ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76f28c2-4910-4512-99d9-cd356727a29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0bd7e3-3349-46ed-8501-4b6795596cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a342620c-cdbc-466e-b74b-17f6b41dc04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef13002b-7ffb-41c6-9652-2b55775bc200",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb416f2f-fda2-470d-a090-80dad8f025d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df328e0f-52ed-4253-a855-34151a81a0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ab9d2a-a19a-4379-bebb-915941d9d949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0abf4d65-ba38-4315-a514-e2192ff0dad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f217aa-e0ab-4098-b4f9-aaf4202fb1f3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b9c223-2ec7-4b98-9970-d413101d239f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173d4faa-bd82-4b16-9768-7d0e2167ccaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3a97ac-f60e-46e4-b2f8-b3517c430175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c83ef3ff-5adc-49ce-9886-b3bb097a0754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb850a47-427b-40d5-ae66-bc8f837bc127",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d883243a-f80b-4e17-8557-4645dbd7d8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751dad74-a26f-4c78-91a2-fcd9ea8469e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaea8ffc-2088-4e5a-9165-9dcfffb8db5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c20bf53-a483-49f1-af31-c75dd00c4df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c6d176-33e4-4948-8557-b295e39c68ea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcad913-0b17-445e-8006-2398641521b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71478f4f-e441-4450-8cd3-d569804676c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7128ed31-fdae-4a3f-9b3c-4fd0f1e61f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59025578-a1c0-4a58-866b-6026f6402baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c19b39-9751-44f7-961b-deec6fa5e6d9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf62b4c-2a7d-4ea5-a5fc-7580bba20261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c37a4ab-b681-493e-b6dc-771cb125e48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d3f01b-8c9f-48b3-8161-f82c1f1d09fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "837f80e5-b29f-4f3a-9792-1e0dee2289e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36ed744-70da-4c89-8365-b1388d23cc85",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeaf50c-204b-4a38-860e-3d02f607b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76debb4f-ca95-4dee-8db6-8d67291df099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8795f3a9-595a-480a-b178-c6ae375a2ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "15337b07-cbaf-4e5b-b756-4df9b4b4222d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd65ebe-16d8-4db4-b74e-3502da599b0c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07bb5ef-764d-4610-bae9-57d43f3f9ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85f7e68-4a7e-4133-8b49-6543cede0113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4fec14-79cf-48e5-a0bd-d4b992783f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef573ad-1ae5-4eaf-9177-92ad81a02b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975dd555-53e6-4bcf-83d4-c9e49cd5c3c4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca93824-d70a-4103-8fdd-2ef7eaab1a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b93c47e-6b57-442d-9163-76021ef85948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab70c2d8-aa6a-4e9e-8370-4fac23ee793f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f56487-e342-41b6-9a5d-7684236b29d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6c3fe4-d4df-4ea8-974c-caf7f6cedc3a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc018baa-2ce3-4ed3-8f33-3e887a2f2b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becda1ca-c437-4ff1-9841-14f2acac29a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f1ab82-0818-49fe-9a71-cac20454c80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa7f4d2-02a8-484a-bdc7-270a62ad765a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fb506d-fc34-46c7-938e-4a1f4d4e723c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895ea33c-c975-4d6c-9341-43348f1ccd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f2b84d-8c4a-44ee-b681-d9f03c89f2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc69bef-4579-4767-9028-1f737387cca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d17424a-66a9-48a6-b968-0fe2bd7b078a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f517d431-b3c6-49ef-baaf-3173e7bd97b9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dc5157-72de-490d-bb90-ecee3b7b4d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bb4306-225a-4b32-b31d-e0e86364adb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefe9e55-42b2-422a-b713-91a87b227036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc37810-45e0-4f52-b36f-c1c46b1cdb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00656651-6e74-479c-98b4-babce1c1cdd9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c309ee11-ebf6-41af-99f7-197edc9054e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c15852-2afe-491d-8883-4e5df15c84c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f547d5-48b3-4ae8-b299-2b1bc8e63962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ae4a69-101d-4a8c-9279-98462ea4b4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264d5305-6e69-4b15-ad79-70a6cf4d3753",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7874c050-b397-4f49-8fb1-852de9462b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffd96ae-f21b-418b-9ccd-6d4d75757123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40da1d5-ff35-4489-9835-048b3be68f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1284a8c-0cd5-4c7d-92c9-5fe0084ae77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bc3287-49f8-4267-b478-6649b5e25c15",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ac3dbc-89a3-4bea-b121-9e12b05b2137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7aed581-f0d5-4907-ac77-5af40d68027c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592038c6-a430-4318-b05b-e0e9cb79f8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0cb681-d56e-4f64-b4ee-6a95aa97e73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5c2dd9-ad13-404b-8310-b8c68b797593",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5626ef7e-b501-4f5e-b1ad-6b78d55af28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9245ce-c2f0-4a84-bbc4-f88e67e56c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a364208a-18e2-4d51-9376-e18a3fadb840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2fe9de-51ca-407f-97b2-c553635bbfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79371528-ebef-4dce-bf55-47acdbbef8ff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb37a97b-bced-4293-9fc3-5288230f6539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4033d894-5326-4805-b77c-cd94aa93880a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1020b9-4a45-487e-9062-71bb99b7d140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba6cc34-4bed-4cb2-a4d1-9ab1a47d05c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59962623-fae3-45bb-9e70-46bee53dcfd1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78932a8-cffa-4b1a-9968-00a7274a9a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c92c6a6-c9e0-41af-aec8-bd00388a90e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f8c158-7d66-4e5d-97ba-0f52cb5fd74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6df1be-b0c9-4e7c-b05e-c3122f37d877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc480b9-a4c8-4eca-a4d8-322b45f31a58",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8118b699-78fc-48e8-93f2-152b84bc4830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b60e5c-202f-4590-912b-e08768fec2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a4b2a0-11a8-415a-b367-b5a71e1f4ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b9a968-cb53-4255-b483-1e776a67ea51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a46c53-4540-4361-9e06-6a032694d767",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470c0faf-e1b2-463b-b0e7-8a69851ef33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fe3e87-5600-441d-a31b-d1c0ecf01468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d3d2e2-c2dc-411e-a52f-289620853efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0af4d5a-7713-415d-b76b-1307964ee193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b3d398-3d43-42f0-9cac-387ada2a25d3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbf7ac9-aedc-4fc4-8b01-d6cfd43da355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef2ddbd-535e-4a4c-b157-e04a640cb9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248e00e5-6b78-4f13-a800-81920eed051e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "818752d9-4c87-4516-9521-fb560e4944f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093029ac-e171-46e0-b395-cd37d259928a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ac7dce-f0aa-4509-8f3b-015fc5d87167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403cb996-08d4-4db8-ab7b-443c0b33da88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43102b1-4d63-43ad-adb7-4328e9ce6e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "205a45af-ad7b-4a54-9274-3dc4013a5502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9806340f-0a1b-479e-bb34-bb02f7b88567",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f92c90-9ba5-4c53-a705-5dd2235eca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381fd618-7f6b-4641-ae74-204289894e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dabcfd2-fe9e-4da1-b01b-f3763726be81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f552be62-ebbd-408f-b3e6-eee85375a449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3505fbd-a7b5-46c1-95d8-02cfc7ba484b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed2dbdd-b711-4b60-8e0f-75125a9beb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d7c4e8-09a5-4585-b711-320b3ef0d2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f821b41a-01f2-4b65-b55a-62cbf0a5016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b833569-e1bb-420a-ad8a-ef43d7ba4092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fded5ac-a6af-4349-a53e-9ebeeef97970",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512db31e-70f4-4236-9103-4c76ea59bb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e970d03-777e-4393-884b-b89d3667511b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d769e7-70ed-4733-adea-e11935e4956d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc3ae83-b594-4a3f-96f4-c1d3bee0c6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ccdb4b-2543-4564-9a83-e33a7cd9e7a9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557152da-f2ff-4d7f-a802-2f731d18506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f542bc94-8b02-442a-84c1-87bda42cc191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b926658-6609-4162-b43f-50b3c712bbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd267d4-d1c1-4080-8405-e55355a91402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a391fa-cae7-4244-bb0a-4bc927020a6c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee137ca0-bb4e-4417-b170-102e78f530b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2925b01e-32ff-47b9-b0cf-a9a2ef99d6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d614193-a67f-4e97-91eb-1be4ed225a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65ca117d-5730-4c8d-b254-7720d69266c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9172b99-6e24-46cd-99cd-89c1e78b93c7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3858755c-624b-4891-89f1-a4a8aeddd3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab36bfc2-41f0-4d93-91ba-9afc013dfc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cf4f5d-03bc-4910-b686-a95044739232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b63120-24c3-416a-a6bf-903678829b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa343b5-fee0-4f9f-8163-1c40816c2866",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c8bde1-4900-42d9-96d7-be41c3b043fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138ef79e-51cc-47cb-8d44-2d7c5130d69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fc681b-5a61-4704-bd95-99953f481eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48188bc2-5f30-4940-84d6-559c13ee53da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83135db1-b90c-4cfe-8017-38ebac6f5b13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17425b4a-8a01-47c4-9e8d-03291138b96f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f87845-0576-44ad-beeb-91873ad054f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "287a6666-c015-4f2a-8687-e813c6d1f948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24035ad4-86ff-4ee2-94de-b4eb6f8bea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68a9d267-a489-4db5-ae3c-cc88eb404775"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e44a6cc0-9faf-453a-9e4f-98793f45e283",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38b7b3ab-6c2c-4a04-8289-8a1275214010"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93f632a1-1f31-4598-ac44-102f23b1bfd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a002013c-1e9c-4002-a176-38c7e5a267e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6523f5f-c413-4069-8c4c-fc7360d23940",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f859a6f-310b-4282-8615-0237e7765ebb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16777e48-eaf2-4272-93a7-872c732bb1f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0f9afbf-5eaf-4df8-8df0-8fdb526f2a9f"
            }
          }
        ]
      },
      {
        "id": "6f8ce989-134d-4968-ba05-2179ddbcbe23",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "69e8bddc-ad43-4426-ba8a-49687a6fa542",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc69620c-a64c-4a2a-9b94-d1ad2e621924",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "262072d9-3547-45f5-9324-43e1ef602bf7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9468906-de32-4b62-bfdf-db5ee80d7654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a734ff12-2aa6-40ef-aac3-6ac1ccc73b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2116df61-f333-4d68-ac04-b538e7f1f355",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9415e5-dcc4-400b-85d5-bd86265bc239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f0682b-29fc-414b-8ec2-92c9408bf0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b3b09b-3b44-4d17-82b3-a0c1130fd20e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12e92f3-4880-46a5-855c-24daa07c20b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9205616d-372a-47e3-94e4-12bfaadfc53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a8af03-7c8f-4708-980f-b434bb37923c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d71b027-a192-4191-91ef-271c9445ea65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abaf367-fbb0-4ee0-872e-6ad99caa4bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06a4008-e26b-488b-9c2e-a8947e4955a1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a35314-bbd9-42cd-8443-ec43d9f3aeef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e3241f-907c-48f3-b9b0-db1a3d905607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692fdeca-5ac4-4397-874f-8170c34625d4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebd9263-f3c8-4444-a8b7-3e68cf5b103b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5783e1-b460-4d75-ade3-4366b6ae47e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98164a70-e06e-4ef2-b06d-b85c7a6abdd6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbcb41c-e582-4819-894f-c5f83362b804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670a9e58-1d6d-4405-a38d-69526153f827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2be06f-3d08-4662-a950-295b09d8bbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4878ea-9cc7-48a5-a95d-815c64d230c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2ffbd7-974f-4c4f-a428-c6cc813bd8e8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592cf05a-7829-4295-90a6-55925d3ceaa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f50153-6da4-4bae-a887-b8613d10b985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3348e90-5dc1-4405-abb3-eda0e2f0dc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e425b4-4674-4bce-8569-cd9684514a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e04e18-5b54-435a-82e2-f77f09870487",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36d3796-e3cf-48c8-8d41-7845e8b6d685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d7cbdc-2e7f-4725-a221-e42d97b70d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2275f71-0df9-47a6-895f-2f27b841e4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a25866-413e-4a13-a6f2-6c3a642bd6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a580df-eb6f-4a63-b984-3bcc80a07d41",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd57cb2-ac30-4da3-a6ed-4524a37d5335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00cb49b3-dfdf-45f9-ba05-c0ecae2919b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8515fda0-f561-4573-a082-a5479198c5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3974623-2792-495c-b89d-b8f85a25da9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812db2ce-b9d3-4144-bb2b-c73d06655052",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c277a1-666f-4ef2-abe4-31461848ff6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1818e2-aa46-4231-bf17-7e6b218e8aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3939cce8-ba97-40de-8a89-a8e32c496dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960a6dfa-e148-433c-b77e-23bdbad699ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19431b1f-86b4-4ab4-8c3b-63f91a453ce5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956a42e7-1bce-420a-a24a-b78c329b59db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0b827a-cc34-4b9a-b906-11d349b6c358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a81a8e3-56b1-46db-998f-a4ee91514d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7772b032-82e6-4bd6-82ee-6667815179a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78af8ef6-167c-4b79-a8a0-2876f0ba820e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a3a733-458f-4d9a-9c64-49556699aaca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c89ee86c-2258-4012-88a5-333ee048cce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8edf4b8-7243-42c8-bf1a-ebddf025bbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcc23b1-1f2a-4518-9375-2541e968d952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a11d5e-00e8-4438-b890-8331b47434a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada59db8-9d6b-4af7-80a4-6dd43a916c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf335f4d-7c67-412d-bf8a-7dcb8985c2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157097d7-9c81-4ece-a3f4-16361c2f642f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27e9bfd-1193-4924-a718-b62dffe9f73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79ef6c2-79f8-4cb6-a2dd-62de785f0f05",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2119af2b-bd65-48a3-9a95-83443e8c2073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762ae745-0728-4d1d-a116-dd6c9f09d413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da593ca7-a4f3-4b76-88ab-52a988d0cbe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba0c799-fa20-44d6-ad44-814830355772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54db5e23-7576-4fff-b59b-b0d1469f2e01",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd52cae2-988f-47a8-bbe1-4b5bd832592c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b12f4e9-c7dc-4d8e-a20e-089398590807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae352292-0008-442d-81bb-200ebe2ffe47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9981d161-8422-4b7c-841d-0efcd193eb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f80ffb-aac2-44ef-8b5c-b21399c79de7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08edf307-ec86-4ec2-9d3a-33b5c74ab82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc4edcf-d037-42f4-8590-d2094cef5a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a079ef4a-c57c-46bf-97f6-6056fe20aac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e58f32c-0483-4fa2-b827-de2794ba9b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8039fcdb-3c49-44ac-95b4-8f7a56ad6a5f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5440d4af-e440-4895-9963-49f73e8b7195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bd5eee-68f5-4c6b-aee7-73cf814959c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833ff78c-4834-49d5-921e-326617d1975d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc702f7d-a969-4837-a460-9fe50c3d4104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c91133a-d59e-409b-9b99-f85c4388c837",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870992e9-82da-44d3-b462-6236ca85f46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9351d949-2216-4eb0-89b1-b77d7f467936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbe52df-8316-4750-b728-2250d1472dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472795ed-a11a-4a8b-b44c-731fae83461c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ee65ac-b175-4998-8ac9-2eca1588d585",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6ee030-9cf6-49c3-872a-83cbee5c18d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcb64b0-a592-42af-ac7f-2dc33d85acb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a69a960-15ee-43c1-b6c0-c1e1618a690a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19423aee-3826-46ae-88c5-7e26b3159e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce2494c-40ce-4521-b309-83b6ef1b6977",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b0faf0-5162-44dd-a418-0c905ee45ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2632b82-0faa-4f46-9786-b0c1b1edf5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a620a97e-5c52-47df-aac2-e281cb28ebd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976cdc8b-98a8-46cc-82d0-796afd294d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a93897-7bce-445d-bec9-f9c56c447789",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c72b2af-0edd-4791-9017-26d2e6f7b6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b331494d-2ffe-4fa0-9c25-0f841cf9aaf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a9366a-c2ed-4bbb-becc-b0d64befc6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b15248-8a69-407d-9c76-bcd19b26d632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f03569-2bed-4b64-b3e4-4eb39c2a2616",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4da59d-de52-43f0-896d-f32caa95f6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ee12ce-129d-4800-a246-4429a27c935e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8302f4-3e8c-4dc8-9aa5-1078f524cb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc40ad3-c898-4e6d-bcf9-da5cbc3a9189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3b6e9e-b74d-45a8-a4c0-4d0c143e1751",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353b28ca-7294-43fa-a8f7-10942b3a07fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f76c1dc-68df-4447-845b-f91b2e19d4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ab9642-7bc2-422b-97ea-1d6aff34951e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb00a9d-0d63-4c8c-b79c-8a2870c51d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d6dfb5-6e18-497c-bd2e-fda21152dccf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1160952c-d210-42fb-8e5f-4d7218879dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0c1136-7bc6-4ba5-8aa6-733727d4318d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa231020-0f59-41dd-91d6-a636949c960f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0433e2d0-da7b-40be-98e2-5dff07229dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075a9af1-5902-4e13-92ea-268076f0e513",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3557f0e6-68ae-408a-9d7b-e9d47fa1f940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea1f9306-2498-421c-ac01-667a15d70be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce245fd3-db4e-4aae-a060-6b707f33dd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23878d8b-7449-4573-bd8a-5c66cc3b69ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad90d54f-7385-4a08-8751-2b7e9b337dff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c270bf4-fb34-4262-9391-3714b0af8bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c161fb2b-a809-4e20-b0e8-b723d067b928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cd098f-5a88-4172-a943-b4865a09d868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13f86b0-8223-4638-851d-3cf2a3014eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb97c323-931d-49f8-a07d-90660bd6eaf4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ad3e10-c228-4380-826f-5fdb16316e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd71f56-35c1-4223-afad-161f5ede681a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed49a624-e99a-4697-942c-87ab7e3e4c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2a447f-60a3-445f-8ba7-8d72d555261c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ede2c3f-e0a3-4ecb-bda6-4fbfc61e3a69",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb67d35-0075-4035-96a2-d11332a49f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac48665e-04bc-459e-ae77-28365e808080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a159d021-fd8f-462f-a6e4-d11066119625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a0eb43-c68b-4d85-a5f6-ee23c295c5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96caf483-7aa9-44c8-9eb0-85ffbf5efa5d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a35eb90-2dce-491d-895c-9f074867323c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f0daa8-036a-4a65-a999-6fff53ac10aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a20ef3-91ba-42a9-94bc-51be94d0c4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0387cb-371a-4180-92f3-f915673e0ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4e91f8-7d21-48b6-a381-e20cb53187e5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2453f4f-9702-4fe0-ac3f-b193e7ca0758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b41b2b2-ecfa-4c49-8f57-7b8e1012cd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12073a4e-d5f6-4650-8f3c-ddaa1765ec40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759529d7-e56f-42c7-b283-2cf16dcef6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc4b48d-02b2-4392-a0bb-44f25929796b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8869aed-866e-4ffc-9ec0-c66aae3020ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c0d36a-ad01-4640-9c2e-283e9de7242e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b703392f-1a22-4698-8ee2-d709cc941219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4366746-2f37-472c-9ee1-041fd5a64070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb658c1a-63ca-4ddb-9b5d-c3e7c3e7c952",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a03de3-cbc3-4a29-8f78-803850a60ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad194e39-fe18-4a82-816b-109baaed7ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f972df-494a-4520-8b0c-bf187f0c5fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74c57c7-8fae-46b1-be7d-ad94db647c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7efeaf1-9354-46dd-98d1-2214ccd02016",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fa0902-2493-4419-8d8a-e2c837124ec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f61ff81-3cab-4a0f-9a25-4b94aac7c386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0becb5f6-ab2d-42be-9d98-0a1962c9b031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433a0d14-e367-4861-9bb1-50f33fb10aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1b9592-6641-4427-90ee-1ba3474fad8a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fba851-8b62-4c4d-862d-dbd4a70a4dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbf18c8-7785-48ad-8293-52286b32ab67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29933da1-b0d2-4796-b63b-9657257af5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2aca6d4-dfed-4fe3-9a58-8b99132c04ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c37a27f-6d3e-4c2f-bf80-aa1766b8b264",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08970f8e-6b11-4b5d-92e6-bbd0dc9ac74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f205c9-e722-420f-b574-2bc5eea86ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d761dd71-af9e-4fd3-b6ef-e4b25f792f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a6f750-61d0-4284-b0ba-ba2fddd8711c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b77cd4-78ea-42e4-9794-015edc546aea",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0d311e-3be2-42ca-b81f-7120161baf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ef1d5b-3c21-437c-b21f-630b642fa933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62375f44-d0ba-4762-b0b6-5e2bd230407b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cf7e39-ff70-4bb4-8c56-38e3ee62cf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d8139e-ea4b-486e-8836-0c4fde60781c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2442ee93-95c0-40dd-9b0e-123a8fa6f850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dee6425-3759-4192-a2cd-85a0438a47dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac9728f-da6d-4175-94bc-c2b872f5acc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b343db-bf71-41ce-8c71-6d08377b40ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c43557-dd2d-4f40-8823-f3311524e696",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb95db6f-77d7-4281-955c-646e16b2c815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d608d028-f25c-48f2-aa59-323fdf678615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cf34ac-c513-4d2a-9ff1-d0ae5b278f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e9760b-f9b4-4096-9583-572b50de99cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200aa9eb-c14f-4c08-951d-21b9f1cbae9d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214c4020-ba27-4370-8c8e-43057a63266c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98360ce9-4b11-4d82-b43d-3c080ee26b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb30ab2d-1b29-4c4c-be1b-fdd467443821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2290b43e-51c6-4949-81ed-5e49e0f34405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff42da-f92f-42f0-9237-a8452b7bcf88",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1064d7-993a-4aa4-9cdc-0ff70cd451cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7370a23-9e2b-46fc-9bdf-c15242d819fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b153e8d-c51b-41da-a28a-09c6cf5ccea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1c048c-b949-4436-b6e5-ff465f79b36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d409047-9d7d-438b-bee6-aa033a9e8e7c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6134d76-634e-466a-ae07-978627e1c92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1362d053-510f-4fd1-90b3-4a7fde264a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b077791-52a1-402a-9547-7cd789d7fb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66835dd9-3454-4f69-91c4-330b80b04830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03480b6-301c-4a45-a8dd-97c171272d84",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf3c3db-2452-40dd-b7ab-14d988dc465c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c543d3b8-df07-42c9-9b19-56adce304f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91496794-580e-4103-82f6-091ff51945f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8be6a28-1841-4247-b858-3f723b94da77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01267d8a-50e5-41fe-9afc-9883661d9abe",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22642b6-b63c-453f-9dae-80d86aa5cb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7756108c-aa36-4834-9c18-970c0f98580b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366073e4-16d8-4942-b8c5-9cd7ccd201b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0c0ea0-14b9-44c7-9f0e-1bc9c8fe59ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33cd826-6971-4ab5-a212-ad1d1f4a4225",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b9da75-b877-4092-9bb7-3a7a28249d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669c9447-75b6-4125-abd1-238e4529f10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8666aa-0b77-4de2-8278-a88d33c37bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f21a7dd-80b6-44b2-bd15-5c399e09fee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0fbb04-9f3e-45ab-ba36-7ef17c51e76c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055717ca-792d-4b31-8a24-2c0fd6109b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc295e39-7923-4283-9853-01e20daba93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128be84a-85a0-493d-be1b-19e7d745e28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e996605-89d9-4c23-ad9f-b1ede52de0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639186e7-c74c-4689-8363-37565c9e1cdd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b80bd9-386d-4b14-bd6c-884c73a63ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7519cd-7424-4a42-a344-706106a8b50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fbf00b-a61a-4295-9a02-622a90e2610e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480d85a1-26a4-49a1-9648-e11c8bc17ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad73a91-7928-472d-ba1b-77fde2eeb3ec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e69faa-319b-4b73-bda8-5af6ec353e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db70f338-3a2f-4b40-b64f-e60df8f145f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7470a5c5-b21c-4ae2-9210-06eae54a5ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4415f91-f5f1-4b86-b688-2eff968ccaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234c6f6b-1c2b-4545-9847-f02fb8f1dd63",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de95a87-c737-4328-90aa-56d2f0d85053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776d22e2-f7e4-4783-9909-e72d83610f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85fb5d3-f08e-423e-8196-a6af45976be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5522ee21-7c9f-4147-b26a-3b3702576add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16837339-0e26-4b7d-992e-e061a9d5e8aa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff7d0df-4a3c-4f0a-b6a6-6a5c37290722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e0a1c9-3e9c-4715-b750-b1bea7f0920d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079e9a6e-dfa6-4df1-9ec3-c5b4451b3814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2333c4f9-b780-4fa3-b90c-c24108df9904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd82205-1b38-4d43-b0a7-c7b55733b774",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad291cb-6bc6-449b-9dba-16ae88eeb1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f017f76-9aef-438e-8b12-bf96a072556a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e78339a-4b03-499d-8e0b-7be70e5d2d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8298f5-ca4b-4034-836a-6b2ae86d7b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd1abb0-466c-48fb-9c7e-8939b47281dd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8064d22f-0672-4c08-ae17-d34373394e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb74308-57b2-42b4-b336-543e2be06356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f465a8-27fc-4349-b49b-5ccf91f2cdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73702d45-82ea-412b-9e81-1b067adad569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d83ea3c-bd1b-4382-b8bc-23305605777d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3759592e-79d6-4322-8e4e-17942f68ddec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1d7e3e-3d17-4b83-8044-c1ff593756c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a92ff2-3f9a-4f7c-994a-4edb72dd783d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a607d5da-b3dc-4c18-9e5f-ec32f3c235de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f8feef-45ab-4ceb-b5a2-e1cef5c752f3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab0e7d0-2ae8-4a5f-b53e-83c920fd818d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c6f73b-ef63-4b22-a9b0-f2a69c22ddfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fddc20-a68d-45a9-8752-429a20aa06b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d30b66-3a66-4ff6-8d88-b93467bcfaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c365f7ab-e545-41a2-baea-4ec083062461",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a84502b-fff5-4718-aa9d-b74085d81747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dceb31f-5719-47f9-93db-09409f3b0892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475140b5-b881-441a-bcaf-1ec9baf621aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025bbbb2-3f7e-4619-8e72-e048e774c30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c981cd-5936-46b1-b8ea-52518dce4df7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924f05bc-37e6-4a49-a3d3-9fffbc7c0b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762efd91-ad06-4ff9-865a-a4e7fbe777b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dadd65-7a36-4093-80d2-5115eda6c424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc5b3e2-2617-491b-9f87-0f71a2424349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ed5201-a1fb-4500-8248-b0eeb9350709",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f3fbf0-14f0-4541-8fe4-57fec8d3fa54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fd23c7-5891-4294-a037-77cee16a5aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993f0a96-1ded-4d37-9209-e7435d9ca455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde525c4-00e4-40f0-a09d-d54ac595dc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c8d959-e318-4ae2-9297-b951b735345e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d780343d-86cf-43e3-8934-a510bb5026bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36bd73a-d4b0-462c-9016-12461dddbc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521e05be-80b9-4ae3-b8b5-289901e3c801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f481fdd5-5d6e-47c8-be3a-193075d99473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c19777-fbc7-473d-966c-0581f519b0e3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80320a5e-ea69-47b7-ae0f-9c8cf1c0a077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd33be9d-8cde-4a23-8258-fe1d53294782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46294c63-7d0e-475d-961c-04ad38bfd6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49fe782-f911-47f2-8050-54b632030564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8a6c7c-0afc-4984-ac81-219dfcb55db9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7472bae2-2516-40a1-96f7-52ae876030c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f735b9e-a0c8-424a-a97d-8033947ffa33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e8e297-40a2-4e89-816b-b2141b2df163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f17fd57-8472-40ae-bbd8-ee45ee9e5ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6207037f-5920-40de-bf29-12e4d8decaab",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a338bb4-248e-4f3b-899c-c71d3500615f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be88058a-f276-41d6-afc5-6e2b8d491119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c968e1-df32-47d0-9eea-39f0859000d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab25699-9cd3-49ed-b65a-8d152740b11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c53b1d-5597-4d20-b97a-00544eff41ab",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf2a050-9357-4d37-abb7-37c288333167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635b2d61-d59b-4d91-84ec-7fe15d5f02e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc906cb-210d-45cf-9e16-3a9114b0695c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd6635b-e548-40aa-9cac-54bf92f65aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62122c7c-83f3-49bb-83a3-1846a09b61e9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bb7915-ae2a-4872-8243-b5112ecb984d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941a2839-a48e-48f4-a0ce-7650d33bf748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c53f813-ef93-429f-8757-9e7c96d6adf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba763bb8-5946-4bf0-b27b-63a90f61cd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3e0231-cc8b-435a-904f-667225ec71be",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6a03e0-41eb-4e25-b371-48b824972a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02816140-8953-4dfe-abcf-1eda2f33aa97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d32737b-d2e0-40e7-946f-4a337d770a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146f3c45-587a-4cb6-9c7c-18725fa56b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9877db-7b5a-49be-a389-dca8798fef46",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ce3772-fe74-4934-9249-4f26ae5a22a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed5c2619-7f01-4fcf-aca5-867866b7c943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ae64b4-ab7e-4242-bca7-b40bca7eb811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a02910-be3e-45bc-9f9c-c1aa147ff20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12e451b-777a-4577-ac9d-767f80474569",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc7f4d-0ba8-4565-b1b5-2ac9b9983109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6bcc798-7892-447b-afab-e803bdb5a81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb41d5d-9918-4b49-ad8b-35fb0f98da0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf849648-1530-439b-ad68-b997bac9ca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f13b9b-8390-4de4-8d95-a84f5931ac4c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc199b0-da77-4367-8df8-6acd90c8d98c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac7c316-3701-49ee-bd5d-7d5e3dd00b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86de79aa-e18a-46d7-bd53-99581a3f25df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c22f10-3382-49a8-b358-0031c1a291fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc04fdb-4c94-4857-a432-a64e7ee73085",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a49429-972a-4ef2-a8f2-f074fdf0aa88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fdd031a-3ffe-403b-804d-4af13779a379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad719f4-7ef2-4819-8366-aa10800d9a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1d1194-63df-44d4-8ad0-38489b8720a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef1bfdc-5a21-4ffe-91e0-2ef8ef15c990",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcfa926-6d12-47d3-bddb-54d65970d510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3273abf9-b534-4920-a9c0-b0bfc377d93c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f397f9-f0af-427b-a304-6189724d77e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcea57f-4754-4add-b1a0-87f9a4b0571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26b754e-a201-429a-a691-42a638a7f831",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86183653-d094-4a76-8b07-7281d7467a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee67742c-9fb0-44a6-a458-7e7508918237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30944547-d84e-40f9-bea2-207215b4c22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9493d9c0-1d90-498e-ae24-f9948965f2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2044d797-af75-4d13-9af3-226269a607e1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fa4d47-4683-4422-b61a-7772b78211ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f23b95d-9737-415b-a16b-4b6930989511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49858a74-c419-405f-8967-506404fcf8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22ad2d6-b30f-4eb5-a8e0-a67dabae810f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba9e997-8d08-4a33-bf44-1ec26013bed9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa89edfb-f01c-400c-860a-45deaab747cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d016b659-6d7d-4e68-bb95-400310bea0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b147cb54-f3b2-4fdb-8632-78628da8ee92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044baaa1-f3f4-42fb-8b19-437b24c159f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aadaab1-0d58-46e3-ae6a-8d765078ff0a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53366776-9844-4abb-8f64-c3ab7d29e2f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166b8383-e416-4f7e-a59b-d2814d74a517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e241c99f-971f-4c4c-a258-4c9105a6520c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8efefc8-7cc6-4a28-a2a1-66684b61f5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0537e8f-7b07-4b62-8332-3ce001a7101b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44fba9c-57b1-4f18-858e-6c76bb6f68f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04653f9-9c5a-46d7-a0b1-7d7414e35be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae97b2e-db67-48bc-9e94-577a15f7e065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6532a4d1-5cd5-47ac-aae0-4224e069898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc08283-5160-4c29-aaac-80e88b446dad",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45459236-8658-4105-a60c-0aee62e19535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503ce8bb-10b9-466e-a23e-e3a90ec407e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a6f772-e1f9-4dbc-88a9-1dcacf023a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8bf137-eeeb-4f8a-8a4b-9c181503dd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d372f85-5690-498b-af4e-9d15df2686d2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5216f7af-0620-43f3-8ea2-39960f6d8418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe01f4f5-0a9f-4fab-a257-3917e8e91e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0b88d0-3f30-47dc-8b29-7adff7a4c405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79bec60-deeb-4e30-8ec5-0ac38925caa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179219fb-47d7-4a8b-9383-ae630a5f5af5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0ffe2e-aaab-4370-b838-ca7c98146051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "472416f7-7e26-42c3-9944-e1bfc79c470c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6da187-2f06-4cd3-959c-ea7f7b2ef448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c2dfdb-4785-4d1d-ba69-8ac70eaa536a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b92786-c5f6-4a3b-a06b-1f940b759ac3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb022dd-485f-4387-b42f-4d197bbad077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea53b3c5-bc41-4c7b-bc55-15d569355b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d269b34-a098-4a0d-8be9-7c22c44049aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670bc96a-0c82-433d-8828-5b321781c1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f91ff8-900b-4b94-aea9-7a32f9ca1d51",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431b7611-0eeb-49a1-afe6-3b607e3890d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0572e854-b4ed-4570-bf01-07c561e3c443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec81e54b-8790-4dd6-9ff0-335d33919f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837408d3-8ddb-49e2-afed-11670d9070ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08675e67-0ee6-4c3b-8f9d-a15e182071ef",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5006259d-2619-415c-8570-c05557db01ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ea9f1e-cd9e-448f-b780-ff6c3612a2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63df41ce-001b-461b-a8b7-234263fa0b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac45220-df65-46df-a4ab-93a2bec33f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7860b7-27a0-4784-bb3e-3075ddd076f7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663f52eb-9c55-4d8c-bab0-c35d9ad633fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f69ef5-9200-444b-98bc-44a1aeb883cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e21b4ed-5008-4079-9869-cee1a428a170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b85cb82-850d-422c-8f87-906183411bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658908a5-8b74-4aca-ab99-fe50b723ac32",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e66727-420c-4cb2-9bfa-bfc4dd02a8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d644dd-57e4-4b66-8fd1-323d39f45d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b53977a-b7fc-420b-821c-d72cb8834060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5a163c-7d38-480a-8552-69f2cc382218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dd0b1d-ce28-422f-a5fd-acaabdf40b05",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c792f105-1b4b-4406-a8a2-ad7ec5f86195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712fe836-3d0c-4d16-9efa-214f4a7ec913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cc5b24-2923-41f7-a803-cfc4f501042f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0655c45-cfee-4900-82b5-e786b8246715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1d474c-fc87-4e97-977e-da8e27ec5141",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a8b554-1bdf-4c30-bc49-aff7ada0b786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e9b3df-7f4a-4cee-8470-8af13013e06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a619f12-7f28-450c-befa-205a5ce477cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1fee1b-1ea8-45b7-a4d5-a657ae3cf782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24077f7-359c-436a-8fe2-13fe431cc10a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f02824-5a4b-44f6-8f74-c4c6a3901bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00fbaa29-17cb-45a4-b7ec-f9e6b62fe93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adde0e8-64b5-4a50-8c60-8bcd0f7e5010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a14bc87-c14d-43bc-b199-a85ef21ad47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a352ba7d-6384-471c-89a4-fadc8d46ab70",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcf620c-5d57-408d-af8e-fd55bd4e360b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859cd88e-c579-431c-b1ee-dbbb251f78d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7457773a-7298-4872-a1ed-db9d06e41fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dbf8c9-922f-4bb6-a504-6bde63932bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79b0bce-505b-4667-8267-d4be28c042b8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1664a6e-066a-4284-83fd-a3ec984698d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059557e5-670e-4e4e-9364-49c4bf501dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1f0dc2-fa32-4f34-85c1-a8c5dbc8b97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c12e4cc-a68c-4b30-92d9-dfda3fced062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6337a3b1-8b75-4524-bf3b-4559058811d7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b26097-2bc3-4475-9a56-61c8bdba67ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf1e3a8f-875d-4692-a890-f23aa7d3f77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d488366-2313-4af8-9c4e-affc0ce1c5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b20c95a-f9f5-456e-9439-62674b6cca58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c786c929-5c94-469f-833b-c51a1631ee62",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71bf5ba-f9d0-4ac5-ba7f-0aefa729fc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0220c2ae-57b0-46df-b708-a237f01881aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a56da8a-b0bb-4f03-8a8b-e2487a114bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37049105-c5f5-4ce2-8f90-18a77ae3b8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516e90fc-a1a9-43ac-8480-d45031f3dc29",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982b08bc-6ce6-4e69-8931-e59df43286f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a972709c-1845-46d0-97fa-83810da77509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f994ab-4642-4ee5-b397-69b3b5af02f9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6892317-6a31-4a0f-9f74-ead7f9f6a8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a64a4ea-f42c-4c37-ad46-61a5ebbdd364",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869df434-fd52-4aa7-8923-29c5678d709a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ec38ce-b609-4ffe-8668-e9a415e402b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1a45f7-92bb-4b09-8d95-9d5ff08feee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b942761-d038-4c42-b60c-ffadb11f01b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b0d12c-6d09-4ae2-8892-6036f608d2f3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170ae598-05ef-4f0c-befb-b55a444c32b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3d8a94-4a22-4624-9b17-11c4f185bd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816c334e-0b11-43fa-b672-1d9848d15ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b657909-a990-4ea4-aa46-63150a8a6f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4064ca54-564b-478d-a5f3-747c93d3b9ae",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14628b08-aba1-4300-afaa-e0c1a83802dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a51de25-7df3-40b1-b42d-e96eb90972b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ec8ce8-d947-4cb3-a94e-52c8c4468458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ba8eb2-c286-4fb6-8d5e-a3d9aacc7d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30da2690-b901-4182-8135-e197470a1675",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4841ad8-a4aa-4e03-b53b-bf847c7b8ca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e52042-a4ae-46fc-96dc-b9845e15ba8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88ba90e-0d2a-4db0-bdab-e4a53122d293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d997601c-5978-4956-a59a-04ac2380a76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181c52e8-38b5-43e1-9164-cdfea7988991",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756402a3-3287-451d-bcba-39992b11e79a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070ad5a1-f256-4744-972b-a4bcf4019cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e09b3b-8f5c-4246-80e6-4c5cd03781ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d4f621-93f3-4286-b726-d8ca5b754ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc35578-14c2-47df-834d-aed3633fc388",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f788ed8-93af-4b18-9256-5dcdf8dc6e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065f1b2a-0039-421c-bafc-f2cdb7ddb13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14f0843-d5a0-4585-bafa-637dbd236dd4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81841fe1-9114-4a8c-a9ca-f6528f986d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b67693-7e53-4dc8-b72e-1e03690cdd0b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6ad2a8-1306-4430-b1d3-7d149264f952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd951751-a6c3-4425-90fe-3fecebd41d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb7300b-baec-4831-a33b-e7617caf3bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ecfc7b2-37a0-4009-a79d-5b57a1df2602"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfc4fe8b-e32f-4839-b7ba-c328fea1618f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b2d4ad7-e01e-47bc-b021-e8deb8abd8e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4554c39b-0cff-4753-949d-dcf59c3dfa43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9067eff-c8b1-4159-82fa-0920cf6319b6"
                    }
                  }
                ]
              },
              {
                "id": "7ad8a5e1-f85e-4ca7-a694-104eb0abdb60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "775382be-7ef1-4013-889a-5d1e3d207317",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56e23c3-e322-4841-b6ae-bc1c1927f1bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "824f7ac5-8bc7-415b-acf4-234f7138eb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d49689d-a38b-444f-bc31-6f0502e41a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57925f7a-c2bb-44f0-891d-aceecc45afd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d3e62aa-5e33-456f-9e3a-2ae61ce57f60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e91dfcb-2b32-400a-8cc5-e463cc0bed54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31ddf17d-648b-46d2-bed4-08ff14c707a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0d6567e-3ba0-4a49-b3cd-91c3e36345de"
                    }
                  }
                ]
              },
              {
                "id": "e2ab4552-7c4e-46f2-a6d1-1bf2f3b0d50a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f8b039f6-29d9-475e-979c-4543a2a6f48a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1c5e51-f76c-4a1f-8f92-520498572382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7ae51bc3-7d16-420c-9c34-34095ddfbb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542f116d-b8fe-46f6-b6b2-9dbba0a81e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd38ed97-5552-478b-8050-2fb54de2c113"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "edcc9b9a-0c96-43af-8019-558b086e3d0b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a923c1e2-db68-41a6-8557-e47279800087",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa01d59a-2a3e-47f8-b384-c314b5669070",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2bf0e9d-e3c0-483a-8713-6c80b7d0713e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e85b28d5-a0e6-4f9a-8f58-f24e816c4444",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1fc3c5c-78c0-41a7-843f-27676af4a87a"
                    }
                  }
                ]
              },
              {
                "id": "e30fec99-0447-4bb0-953d-d9655383fe19",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06f9ea2c-5d3e-4c33-b8a9-c447cb26ea3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a9c54360-97ec-49c3-8dc3-9f11fa173f0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d7c9250-e75d-4a6b-90c4-dd4fa87055d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d2a38de-59f0-4b41-a459-fdafce8b3ac6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "960ee8af-a05b-4e45-83fc-056396169821",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0d4fda67-9f9e-4bbb-8b4c-0057ae92acda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffa512ea-c5e7-4350-8d7e-358f38de7f4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "201ee2b6-b8d0-440b-a1e8-0c4814d25f32"
            }
          }
        ]
      },
      {
        "id": "cbd87642-ff10-4b24-a00b-244bd971fa9b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ffa686b8-383a-46ef-b5d8-a1cc96c1c6c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a8f4f1a-2533-4ead-bda4-0f897f35f661",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8020000b-7dcb-4375-bb11-97fd6e5d2c2d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e322075a-3522-427c-ab4e-bf51297314e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "16e7f682-4187-4dec-ace3-01e1d04964bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb130a9-f4c4-40c9-9f6a-f8689b568963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6c2f248-6a2b-46d2-8ecc-a2e67acb6db4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19e7ebd3-5adc-4b7e-be07-083db6dc9f9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30bde7be-c349-45f3-a00a-2255740cfd18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2673ae59-093a-4bca-80fb-0070b2280fb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "453a0e63-ca76-4d46-a9ff-c0dabeb13afe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b4e0449-767d-4f6b-ada1-130fe5b59b2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "74ec09b0-6075-4e65-943e-4de04d8c6759"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98a0beca-b932-4f29-b3dd-e50dfa758053",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d38300b-4084-47b0-a78f-6f2fab08f0ec"
            }
          }
        ]
      },
      {
        "id": "670639c4-4503-4eb4-a921-6b517e726ff0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e4b4159b-a2dc-44c9-be6c-d2fbe696c224",
            "name": "Negative Testing",
            "item": [
              {
                "id": "069e6af7-08de-4c27-90b5-56cef2e8a2c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eceeb8b9-d140-416a-a36d-50f6118249a3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e0b60b-b709-4c3e-95f1-11404926ed25",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db4ebb2d-6070-4557-9158-fb82ce608d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bb78b1-ad58-41ac-aeca-6e4d41ca1900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d32170a3-c3c2-4989-866e-042d008bebda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff5156d3-c3db-4e77-a9db-d6b6d3f42b6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89bae9f7-904a-4d68-8e93-a201e36b9a73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b451ac5-3826-425f-ae04-154c64024b5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2a0c115-f931-44b4-b6fe-755897a0b0fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41289a82-64d5-46bd-8305-7f66149d7ccf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5710f65e-b6eb-4451-b9a0-16a19e1ca79e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09f44a76-3c72-42e4-94da-256a15ebf390",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37af2c5f-afe9-4c3c-994d-7ba0a37832a5"
            }
          }
        ]
      },
      {
        "id": "2da2e571-225d-4ecd-96e7-0448feef573d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "abbf5bf0-27a0-4599-9d7c-c3bd2ce5331b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e015b97d-2e0e-4bac-8a6e-4f3299e6ce72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57abedb8-27a2-4f24-a2b9-880090bb7d29",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd55ccc9-a047-45f1-8ef2-d80affacba71",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d05a9f98-569a-404c-b2c1-cff1cc801770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f9e7e8-371c-4433-bf71-f41ba45f4d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07667782-7cf5-433a-9727-62f08fb16eeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aff56253-94af-4575-abd8-5c436bc7911a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d29cdf9-dfb5-469f-b0f4-4e122dbe7174"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2bd947e-ae4a-466b-b739-06711f9ffb72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8a9264a-5334-49bb-bac3-75832ef763c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2958c566-4a1f-4b7a-b011-cf20b6e576b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "afdc5207-6a1a-478e-9e29-99b48acb3689"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c463ccb-1396-49ca-9065-09305c0866ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eddf90b6-1946-4125-bca1-557adba51d51"
            }
          }
        ]
      },
      {
        "id": "f5e0857d-abfb-48df-a58c-5742bd2ddd8f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3a8139e-9625-4aef-9c44-0704fb0d9e29",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d0793cb-201f-46eb-83b0-7275efaf6dc7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d93c8819-ac6b-4cdd-b27c-feab9060fff4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c223ad7-9788-43ea-9c56-9eebb8a6001c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc273452-49f6-4b4c-a365-03254583b3a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 39
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.75000000000003,
      "responseMin": 3,
      "responseMax": 11773,
      "responseSd": 796.0749676799713,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728434694444,
      "completed": 1728434730949
    },
    "executions": [
      {
        "id": "d1bebf57-3c3a-43ab-bddf-62a641640da0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8f27bd70-9959-4908-9ae7-03444c92ee86",
          "httpRequestId": "507e3860-26a1-46c7-a506-7b770a856349"
        },
        "item": {
          "id": "d1bebf57-3c3a-43ab-bddf-62a641640da0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "158f0776-d509-460f-8970-62d3ea4ad619",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "755dde7e-eb00-4670-9bae-754ca94dc1a5",
        "cursor": {
          "ref": "916aaea5-c4b9-4f71-84a2-42c02d2f917d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7075aec6-0963-442f-9804-3ea523152741"
        },
        "item": {
          "id": "755dde7e-eb00-4670-9bae-754ca94dc1a5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aa3f5e3f-676c-4beb-8334-2e0639ed08c0",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "fa23b592-a3de-4440-aa6c-ae86300f19f4",
        "cursor": {
          "ref": "901f723c-2e44-4451-89f4-ae49d839e7d6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2be93352-b544-4710-a0ce-7f963513a1b7"
        },
        "item": {
          "id": "fa23b592-a3de-4440-aa6c-ae86300f19f4",
          "name": "did_json"
        },
        "response": {
          "id": "b208aa59-7666-4c42-b1f9-91a0370cf64f",
          "status": "OK",
          "code": 200,
          "responseTime": 192,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d4a7d1-72c9-4031-9e78-6dc963757100",
        "cursor": {
          "ref": "9786ab2d-7aef-4e2a-8d58-b89877f50008",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a78834e-af50-4f30-9166-848a6273dfeb"
        },
        "item": {
          "id": "79d4a7d1-72c9-4031-9e78-6dc963757100",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b3598a2-313c-4360-a228-bebb7b62946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d4a7d1-72c9-4031-9e78-6dc963757100",
        "cursor": {
          "ref": "9786ab2d-7aef-4e2a-8d58-b89877f50008",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a78834e-af50-4f30-9166-848a6273dfeb"
        },
        "item": {
          "id": "79d4a7d1-72c9-4031-9e78-6dc963757100",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b3598a2-313c-4360-a228-bebb7b62946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12f42ef-ecf6-408f-8e96-7bbc49c88da4",
        "cursor": {
          "ref": "79c536d8-34f7-4361-bb0a-0e5181f07f28",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8145bcb3-0994-49c9-a1ab-8cce49526d76"
        },
        "item": {
          "id": "c12f42ef-ecf6-408f-8e96-7bbc49c88da4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9854b189-ae38-48f9-96d7-b46cacc7978f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f62a62e-42f5-4d01-a628-47e2901f18dc",
        "cursor": {
          "ref": "ac2c79c0-2e62-416a-8c5d-b9a6b190822d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2063474d-5eb6-42c7-807d-b55a3f6caffe"
        },
        "item": {
          "id": "8f62a62e-42f5-4d01-a628-47e2901f18dc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2b4d1f8d-5e68-43ed-87be-9a700dbb52e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a3026f-880d-4c50-a8c5-7ed74dc7012a",
        "cursor": {
          "ref": "9871f60b-c48c-4032-8f4b-9c9da72db173",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3c3d63be-9efd-4ea1-8bb8-362aee6fa816"
        },
        "item": {
          "id": "87a3026f-880d-4c50-a8c5-7ed74dc7012a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6c3cc42f-3e23-456e-8c68-82162e59f17a",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 200",
              "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "2933d5c2-0d65-4930-951a-aabffe94a5c4",
        "cursor": {
          "ref": "1c179a3b-2117-4144-9848-7939d9f2610a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "97d51e34-474d-42a4-bae3-881fc0c1ac76"
        },
        "item": {
          "id": "2933d5c2-0d65-4930-951a-aabffe94a5c4",
          "name": "identifiers"
        },
        "response": {
          "id": "7332c4b1-4486-4936-bf7a-4a458f2d3960",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b09bf60-f111-4464-ba5a-07df69ad36f9",
        "cursor": {
          "ref": "e244a13d-58d9-44c6-a2c7-ecc7bbdf6dd4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "df219a70-36a6-4314-b279-6dc8242bdc3f"
        },
        "item": {
          "id": "4b09bf60-f111-4464-ba5a-07df69ad36f9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e00798e6-ef35-449f-b0a8-0620a02fe20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9556c69-3fe9-4cb6-a015-a255ccc633b9",
        "cursor": {
          "ref": "31dd5af4-5acd-401d-978e-767ec10519e1",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cc7bb29b-7908-4269-9c73-28da4b8aeeb6"
        },
        "item": {
          "id": "f9556c69-3fe9-4cb6-a015-a255ccc633b9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b14be86a-8ce2-4c0b-b82c-08537ec84662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5358ab6-a226-4575-b329-14101c2b3b73",
        "cursor": {
          "ref": "4634b0c6-176f-4383-aed4-42834c67c16d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4996845b-00a7-47b6-91a6-8f7a01b48e4e"
        },
        "item": {
          "id": "d5358ab6-a226-4575-b329-14101c2b3b73",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ff6543ae-7480-408a-ad54-da75a500a46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e71291-aeed-4d24-a88f-c3b571c675ae",
        "cursor": {
          "ref": "97d6aaf8-2249-4408-8ab1-0d48bdc27ffb",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c12ea869-7e0c-45c3-9e56-33c58557b447"
        },
        "item": {
          "id": "33e71291-aeed-4d24-a88f-c3b571c675ae",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "49d8be0f-b835-4453-b36a-1837944a0771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b55894-75f5-4fb2-80be-cab98bd7010c",
        "cursor": {
          "ref": "b8c06567-4218-4925-8d89-8708c9b5a16c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "366cc4f0-5539-4608-b4ce-64701157ee09"
        },
        "item": {
          "id": "b9b55894-75f5-4fb2-80be-cab98bd7010c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "329727f3-88b8-4846-a6c9-d794c925b594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2eaf52-90aa-4d37-a12f-38354726b54c",
        "cursor": {
          "ref": "e61aa316-4d81-4b09-9e36-2d3aea7f3bca",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "35d1296a-7363-4bee-9230-df7fb1e974be"
        },
        "item": {
          "id": "ea2eaf52-90aa-4d37-a12f-38354726b54c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d5cec8a3-9fc6-4fcf-aaa3-6b246cefcafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c9f740-f027-436b-b0f0-462a33fd16df",
        "cursor": {
          "ref": "73051136-34e0-4074-9a80-fea2d4427841",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d17d27cc-326d-4382-b7d7-0fa972a9643a"
        },
        "item": {
          "id": "00c9f740-f027-436b-b0f0-462a33fd16df",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "167c36e7-bdfb-496e-b6e8-9fecec9255e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3f1ed4-b6b7-401a-96be-0a12fd66ba68",
        "cursor": {
          "ref": "ac69b823-34f0-4477-83e3-545125842d45",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "55656786-c676-49d6-bc82-3eb81884b079"
        },
        "item": {
          "id": "9f3f1ed4-b6b7-401a-96be-0a12fd66ba68",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e7938bb2-8ba4-46c3-a428-aa38cef88d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605b9cf4-415e-40c5-bfd4-7603e9f97b21",
        "cursor": {
          "ref": "9719b224-ced5-45ff-b2b4-8296ebad9604",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d81c11be-9b83-4971-8c2f-3ada2a4f9f3a"
        },
        "item": {
          "id": "605b9cf4-415e-40c5-bfd4-7603e9f97b21",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "45c8eb91-7887-43df-8d8b-0d21083d3d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf26be9e-fa6d-460b-9f12-fbbebc7a8d4e",
        "cursor": {
          "ref": "13b289ce-30e2-4158-b0e8-2dcd8dab2db6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f0171deb-69f7-43a3-be58-478c4a7c2726"
        },
        "item": {
          "id": "cf26be9e-fa6d-460b-9f12-fbbebc7a8d4e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e1291915-9cfa-46c2-8cc0-91cbbe4a8aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3e43f0-e7d1-4ef5-99b6-374a053b9aa6",
        "cursor": {
          "ref": "ba05fd9a-89f8-411f-bfb4-d10ee4e9de55",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e0ffb177-0c60-4b35-b893-a04b6ba7671d"
        },
        "item": {
          "id": "bc3e43f0-e7d1-4ef5-99b6-374a053b9aa6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d371e7c8-81f4-46be-bdb8-f6ac955ef66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd15571d-deac-417d-b4b2-6b91e9cf33c5",
        "cursor": {
          "ref": "44f54427-657f-4703-9ff8-caa2bf4b4fb9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dd495cf3-d153-4b4c-934f-74ae0950b999"
        },
        "item": {
          "id": "cd15571d-deac-417d-b4b2-6b91e9cf33c5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a9e3d0f6-dd9a-4a8d-bad9-f85afa50476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565f0244-563c-4db3-ad38-78fefbcf7bb4",
        "cursor": {
          "ref": "7cf8cba0-b1ce-4505-9a4a-a4f1c33b97aa",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cf74b2fe-2a71-43fb-a358-27df2d52d96f"
        },
        "item": {
          "id": "565f0244-563c-4db3-ad38-78fefbcf7bb4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f14d8472-0131-411d-9b18-3df9a93292eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274b7c2f-890d-4422-8436-9005dbef5581",
        "cursor": {
          "ref": "eae256d6-27b0-4687-8518-1603a0c4c86c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ac8af9c3-fec5-4ab1-a9f7-8badf51b398f"
        },
        "item": {
          "id": "274b7c2f-890d-4422-8436-9005dbef5581",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c1bc41bc-6625-4c5c-8a96-a83e983a5e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f2c911-9444-4fa5-8eef-ac525b66e6e3",
        "cursor": {
          "ref": "44d10821-f084-431a-91b8-4a79e9b0ffcb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f0492320-4572-4ace-b1b5-d2ce458e17f5"
        },
        "item": {
          "id": "b5f2c911-9444-4fa5-8eef-ac525b66e6e3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c53b1efc-14e7-44e4-83fd-2086abba16ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0cf84c-df60-4d9b-8d9e-aaf4458778d5",
        "cursor": {
          "ref": "59b5608a-9338-437b-a372-584a78a06d2a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d48d51fb-46f1-472f-bd08-c30db1c569b8"
        },
        "item": {
          "id": "2a0cf84c-df60-4d9b-8d9e-aaf4458778d5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1337f720-8f1d-44f0-b70a-2ebbaeb74907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46988a82-d077-4c9e-9139-804e6ad833d2",
        "cursor": {
          "ref": "b07cec05-9ff6-47c6-b3a6-98407e9287fa",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "26b360c7-ac24-4d84-9eab-e854e6ffd469"
        },
        "item": {
          "id": "46988a82-d077-4c9e-9139-804e6ad833d2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "54e22c2a-dd14-4c10-9257-695dd5f4e01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7004c1f7-c8a5-4f66-96ca-22778979f840",
        "cursor": {
          "ref": "f8e72672-18b5-4334-91ec-9f964e2673c1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ad5dc93e-2078-4dab-b77a-25aeef968702"
        },
        "item": {
          "id": "7004c1f7-c8a5-4f66-96ca-22778979f840",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c7d300fa-625e-41ae-8f5f-a35f532be216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e271f1e-c82a-4636-970d-f91c9f1b2299",
        "cursor": {
          "ref": "a478a99c-5a0b-42c7-a5d1-63d61f2f2d8e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2e521e27-d48e-444b-9a0a-5f07c1233e41"
        },
        "item": {
          "id": "3e271f1e-c82a-4636-970d-f91c9f1b2299",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8d9aa254-3d4f-424e-91a9-8e907c1359f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824b8c41-f8c9-475a-890f-9cdcfdf6899d",
        "cursor": {
          "ref": "846716b2-f2d8-4bc2-a22a-631a9b9870eb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "73c3bf6c-409d-484b-8b8d-e9255007ce03"
        },
        "item": {
          "id": "824b8c41-f8c9-475a-890f-9cdcfdf6899d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f0a60d9a-05a2-418e-b1ba-702ac78f5667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2e2316-0af2-42c9-bb7b-6fb443b183d6",
        "cursor": {
          "ref": "c6684dd5-525d-45d3-9507-a08fb86e85f4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c6d73284-e275-4e28-8359-579d80ec03a7"
        },
        "item": {
          "id": "ed2e2316-0af2-42c9-bb7b-6fb443b183d6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f233be4f-7d48-46c7-bdc1-e0ae73eb2d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51f113a-8218-458b-b617-add0dbdfc8a6",
        "cursor": {
          "ref": "8fb978d5-039a-4d89-a720-b0e27c9e90d4",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "18b9f3ba-7e0a-43e6-b6fe-daafc255eb91"
        },
        "item": {
          "id": "c51f113a-8218-458b-b617-add0dbdfc8a6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8362d857-8c3f-4338-a52c-c77e49a5104c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1367578-e028-4081-9078-732e347bf3f0",
        "cursor": {
          "ref": "a05a9ddc-8522-48aa-8f4b-f3989b1b908f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d990ba21-da1a-40e7-b7dd-9bdd33118b90"
        },
        "item": {
          "id": "d1367578-e028-4081-9078-732e347bf3f0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bdb3bb09-4125-44dc-a151-554bee5a6612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8946d741-19e1-4377-8065-eef773f174ee",
        "cursor": {
          "ref": "c7aa1c4c-4c88-4220-b895-bbf4711f9ed6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "270c3994-16d5-4df0-86c8-c61de870a31a"
        },
        "item": {
          "id": "8946d741-19e1-4377-8065-eef773f174ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a8d7eb2c-9b66-4e4d-9b8a-5f37b78f6a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43acdaea-7744-4378-b2c0-03890fdc555e",
        "cursor": {
          "ref": "f4306425-c3dd-4bfe-a50a-f300bc027a12",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3248760a-5ce3-47b9-bc44-a5752bdfac5f"
        },
        "item": {
          "id": "43acdaea-7744-4378-b2c0-03890fdc555e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "78243c6b-007e-43a5-92ff-9ac33f328509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5833d7e6-51b5-437a-a42c-3b302314a597",
        "cursor": {
          "ref": "445898c7-4664-42d4-a24a-ff0a45bd2381",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "38e8280a-59b8-4c50-b602-1985a9f4fe03"
        },
        "item": {
          "id": "5833d7e6-51b5-437a-a42c-3b302314a597",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "871ff737-d6b8-4b1a-9873-7f2d7d3869f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110db17a-b9dc-4cdd-b155-09ea08721a46",
        "cursor": {
          "ref": "197827a7-e0b4-4f33-8fca-7826142c8205",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b821861d-d571-4add-adf4-12098cebe9fa"
        },
        "item": {
          "id": "110db17a-b9dc-4cdd-b155-09ea08721a46",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2d07e55b-2531-4b88-ac4f-8b6804130cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9046eadb-5bb3-4072-a833-ee8812f70aa8",
        "cursor": {
          "ref": "1871e1d4-f979-4f9b-8694-4aed9b3d0518",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "959598d3-3a90-4508-a97a-5c7a3a120479"
        },
        "item": {
          "id": "9046eadb-5bb3-4072-a833-ee8812f70aa8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "55f0ecd9-1e87-42af-9dea-c05da9ec6d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fba1b3-30a0-4437-bba9-e4bd13f8d498",
        "cursor": {
          "ref": "69b4e27f-36ba-4ee8-92a1-bfe47e9a1fb4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "849e0cf7-845b-4594-aef8-edf082dc1035"
        },
        "item": {
          "id": "74fba1b3-30a0-4437-bba9-e4bd13f8d498",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c662b78a-bba5-43a8-8553-69c41f7d53db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d3952f-abe5-4137-8c6e-69e3803492f5",
        "cursor": {
          "ref": "078f453a-d240-4a7e-a928-c33fa3d73dea",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "de5e375f-94a4-44ed-9389-6de1642a6abc"
        },
        "item": {
          "id": "25d3952f-abe5-4137-8c6e-69e3803492f5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "129d2908-c513-4374-8c38-932facbd0018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a8c85-5b03-4463-b81c-4593ed66be5e",
        "cursor": {
          "ref": "45619208-868d-4c1b-8b79-a05f7df3b300",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b508134b-c434-4a71-a897-2d7d0652c25a"
        },
        "item": {
          "id": "0c7a8c85-5b03-4463-b81c-4593ed66be5e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2465d18c-bf95-4451-967b-a8cbdd7c35f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc890d6-f57e-4828-b14e-7c3e75666588",
        "cursor": {
          "ref": "518a2cfa-d516-45c7-9b31-516f1eb24f14",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8fa3c5f9-ce54-4784-81fc-f2b7ecd5234d"
        },
        "item": {
          "id": "7fc890d6-f57e-4828-b14e-7c3e75666588",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "60c69823-8c94-49d1-9efc-db50dda7610f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a7a630-8df8-4a88-8a0b-ad2f0c1165bc",
        "cursor": {
          "ref": "75f48b8e-8112-4fda-a8b5-97464e6f8deb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7d325f66-3d5d-4d2f-8ac0-8115e1135324"
        },
        "item": {
          "id": "41a7a630-8df8-4a88-8a0b-ad2f0c1165bc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c4948f3b-91f6-4634-9c93-69f6acab66a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e820b8f5-0acd-478d-8074-f2762a498e6e",
        "cursor": {
          "ref": "b77a71ef-ab6e-4214-b37a-9a0846f4118a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2c6d68bb-b3de-4bda-9b26-36e2a7c2f09c"
        },
        "item": {
          "id": "e820b8f5-0acd-478d-8074-f2762a498e6e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "96bb14c5-3081-44d2-a23b-598ea5ec14ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96e9120-e7dc-4345-937c-29ab335a9d3c",
        "cursor": {
          "ref": "a13e50dc-7e66-4eb1-824a-f77b9e76757e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a34830fb-ebfc-4980-8b87-c747b8d6fc54"
        },
        "item": {
          "id": "c96e9120-e7dc-4345-937c-29ab335a9d3c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e0372d42-de93-468c-b83a-7aa19eac26a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e6c11c-2da6-49ed-9167-6b73c6647f7a",
        "cursor": {
          "ref": "6e8a5de1-fa92-4564-9e5a-e0c4ccb607d4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d883b9c7-9763-40d7-b692-92ac13394940"
        },
        "item": {
          "id": "88e6c11c-2da6-49ed-9167-6b73c6647f7a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2680aa9f-a1d7-4e90-ab1d-4bd640097887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b6dde8-8d12-4029-b240-6b190a716dcf",
        "cursor": {
          "ref": "85212b49-e3cb-43d8-a82a-44cfd8a52a63",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "15c196ea-89c4-462b-8d47-24e4562a63e3"
        },
        "item": {
          "id": "b3b6dde8-8d12-4029-b240-6b190a716dcf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fbdbc357-7114-4090-af2b-2024da74b322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b51070-6c9e-41ff-a3e0-29acaa944d1e",
        "cursor": {
          "ref": "07327950-7db3-4d14-a9d9-0ae8a4ee46c5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "31350571-ec9b-4ce4-a21b-9524a40a9fa2"
        },
        "item": {
          "id": "93b51070-6c9e-41ff-a3e0-29acaa944d1e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b390711e-059e-4e3d-a230-9dd6e19ab08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5845920-059f-4692-a7ae-176b3205a335",
        "cursor": {
          "ref": "590357ba-1024-4561-8c7e-7a9ba7425b99",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1eb3356f-d478-4e36-814f-4583037e5f6b"
        },
        "item": {
          "id": "f5845920-059f-4692-a7ae-176b3205a335",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2da0a47e-c9e5-44d5-8be5-67f005af6c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f585e614-d007-4255-9ff3-45382d5f7361",
        "cursor": {
          "ref": "0bbb966f-3e03-41d0-82b8-748de1c4470d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "231e819b-8975-41ca-8588-583dc0c50a9a"
        },
        "item": {
          "id": "f585e614-d007-4255-9ff3-45382d5f7361",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aec9a2c3-cd24-4fad-ae9d-5e701d1d910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ef4aaa-9b28-43b4-b31f-f62557a24e68",
        "cursor": {
          "ref": "7105c772-9584-4265-8360-848aebce3605",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aa6c3237-4be5-4375-9065-e08f8a592d5c"
        },
        "item": {
          "id": "c5ef4aaa-9b28-43b4-b31f-f62557a24e68",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "69723eca-d6bc-488b-8f8f-07a4487f3346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cb46bf-a9b3-431d-bf4b-a76aeb52cad0",
        "cursor": {
          "ref": "0e96b398-3e78-4042-9537-c2148aa16500",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ee668d80-4267-4c11-88a3-163efcccc309"
        },
        "item": {
          "id": "23cb46bf-a9b3-431d-bf4b-a76aeb52cad0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "400a9e88-d0a8-4310-9cda-053b99157c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194929e8-b879-4a35-92e1-c2d4f1367538",
        "cursor": {
          "ref": "3b361168-4fa3-46aa-955d-f6283f42fcc7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "231257a1-4e6d-4ecc-bf48-73055ae5dfcf"
        },
        "item": {
          "id": "194929e8-b879-4a35-92e1-c2d4f1367538",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8d59ca8f-8b1b-4dfc-a460-9447aec77fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aaf790-d57f-4653-93e7-3e183c2c783e",
        "cursor": {
          "ref": "e84bb283-bbd4-4e3d-8b10-d6d0989f05b4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "27bead6d-d6f8-4881-9c8f-6a75ef7d9654"
        },
        "item": {
          "id": "00aaf790-d57f-4653-93e7-3e183c2c783e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0a0c5f0-6110-43bc-99f0-af140c78cace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4cc019-bdd1-4e57-9ef2-839d9f300fbf",
        "cursor": {
          "ref": "beda117c-c6f3-409c-934b-b9698bc04ffb",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "75f6f13d-ef1e-4d1a-a682-6653129970aa"
        },
        "item": {
          "id": "5f4cc019-bdd1-4e57-9ef2-839d9f300fbf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f1d81c45-e829-4cf1-8c70-9d24caeeedc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2795fe06-dbe1-4ef1-97c2-fa4d23f12a71",
        "cursor": {
          "ref": "b0466f32-cf02-4310-8eca-6f13ad48df71",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a222ec1b-4f6c-4b9a-a670-543d7097e981"
        },
        "item": {
          "id": "2795fe06-dbe1-4ef1-97c2-fa4d23f12a71",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "24ab258e-6da4-403c-96ef-1f5576250642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8190a2-75b2-4746-ab5b-0d3d12b0248f",
        "cursor": {
          "ref": "4f0b9e5b-df23-4581-a394-6fe44ac6476c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "063e05f8-4193-4fc9-be0c-67c06c5aa175"
        },
        "item": {
          "id": "6b8190a2-75b2-4746-ab5b-0d3d12b0248f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "49425aa4-e988-44dd-a892-5fe969399c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728d7e3b-7f1f-45c8-aaf5-3e175680192c",
        "cursor": {
          "ref": "8a1737b7-59e5-4668-b1e8-d4a5619d17ba",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eabf0f90-dc78-413d-a0f2-fa98fffbf024"
        },
        "item": {
          "id": "728d7e3b-7f1f-45c8-aaf5-3e175680192c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "06809896-73eb-4731-836b-12ed50f80f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad582d6-5075-4e03-b625-dfc25acd2ec8",
        "cursor": {
          "ref": "cb83bffa-31a4-4901-b1a1-33243bcbcd96",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "68f6c7f7-f81a-4eda-b16a-6d4aff9ef9d2"
        },
        "item": {
          "id": "fad582d6-5075-4e03-b625-dfc25acd2ec8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "be5ee106-d60b-4b80-a5c2-04b340f8c883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309b7446-4cf8-4946-b851-5c4f93387f35",
        "cursor": {
          "ref": "0993fc95-5681-4b17-a64b-c7a2e7d49528",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e977f7c5-e27a-4370-a414-ca309f6fa207"
        },
        "item": {
          "id": "309b7446-4cf8-4946-b851-5c4f93387f35",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0d0e8e0e-1f25-41ff-9629-368a89ed78a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6aa4f3-431c-4c0a-9873-9bd9946dd4b6",
        "cursor": {
          "ref": "72696d6f-fb63-4f7e-b262-daf356b53840",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "28af732e-69c3-4254-88cf-a47dd84cb7b8"
        },
        "item": {
          "id": "4e6aa4f3-431c-4c0a-9873-9bd9946dd4b6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "063f2fb2-fd6f-4da3-9166-47ffd494b602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79726f81-5b1c-4d5b-9495-0c5dd6884054",
        "cursor": {
          "ref": "12004184-ce4e-42d5-99fb-c7aec1b3b30a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4ba09ff0-5e38-4829-b4ef-79b770d91230"
        },
        "item": {
          "id": "79726f81-5b1c-4d5b-9495-0c5dd6884054",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fd01c687-0c7e-43c4-b0d9-3c16f7873ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d3e0e0-e50f-4af6-9641-b3843cb09c62",
        "cursor": {
          "ref": "483e420f-8702-4224-b641-302fcac229db",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bf3241c3-1998-4b0b-b6b7-52abe0a6b6b1"
        },
        "item": {
          "id": "24d3e0e0-e50f-4af6-9641-b3843cb09c62",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "62be817f-a7d2-4481-84dc-b567afaa8b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8c595f-1d81-4e88-8c20-c0ea5cb15d6e",
        "cursor": {
          "ref": "309ae687-6308-447d-af50-dfab06ab5b43",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "330f97ac-5bb8-4cc8-aeaf-c971d461d809"
        },
        "item": {
          "id": "3f8c595f-1d81-4e88-8c20-c0ea5cb15d6e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cbe63bd8-505d-4fed-b974-a94ff4d10b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f9ac83-2521-4ff6-9c2c-2fbc429f4fca",
        "cursor": {
          "ref": "fad2e66f-9d95-4007-8c5a-ea89f6a6e1a4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "af13b7a9-f7b8-4101-998e-df42377b45f2"
        },
        "item": {
          "id": "a5f9ac83-2521-4ff6-9c2c-2fbc429f4fca",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "816ce105-0bb6-4f1c-8034-8e1b74c9e55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125af86f-55c3-45a4-bcba-312171f23a21",
        "cursor": {
          "ref": "6f7699da-806e-4d00-b1cb-c8b4623c2fea",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1b560282-4a2f-402c-a1f8-e0416dc60b3a"
        },
        "item": {
          "id": "125af86f-55c3-45a4-bcba-312171f23a21",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a4b66eed-5329-4b24-9f14-5684153d0361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3152a7-bd40-489c-8a81-0432817f63d1",
        "cursor": {
          "ref": "9f6e9d17-dafb-4732-b4d3-12ef76c362d8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0aff4b19-2308-4e3a-ad9e-e345a092a101"
        },
        "item": {
          "id": "9b3152a7-bd40-489c-8a81-0432817f63d1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b6a74389-9b08-434e-a51d-5bfb35f7f92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387f9ba9-9bde-4d41-8f26-66fad5b84819",
        "cursor": {
          "ref": "2797459b-1c86-4bc3-a170-156c7cab6974",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8d85b2f5-691d-4f77-a71a-72c22415f8c1"
        },
        "item": {
          "id": "387f9ba9-9bde-4d41-8f26-66fad5b84819",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ca7117d7-154a-4d36-837c-6ae35d0410d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd2180a-2f5c-4eef-910c-936be66ab3fa",
        "cursor": {
          "ref": "c40144e5-ccac-4a7e-a26b-fb79f414cf88",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7bf21ec6-c065-46d0-874e-ff7b9dca48e7"
        },
        "item": {
          "id": "ccd2180a-2f5c-4eef-910c-936be66ab3fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f4aae0af-6b5b-45a8-b8dc-681404e54062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555c3f49-a0e0-4967-88b7-e74f458204f2",
        "cursor": {
          "ref": "5fcd1009-54a4-43f3-bccc-7d8a36ab1993",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "805085fe-6c1f-462d-bd26-f2c97f4c9f90"
        },
        "item": {
          "id": "555c3f49-a0e0-4967-88b7-e74f458204f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2ab15067-0336-411f-96e8-9d82bbaef831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56f5d02-66e5-4090-9dc8-0e6b760a82ec",
        "cursor": {
          "ref": "958f780f-b7d6-4be7-94ab-c6ea030cda57",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "61d4be41-cb27-4146-9b4d-6b859188a32b"
        },
        "item": {
          "id": "e56f5d02-66e5-4090-9dc8-0e6b760a82ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e7d2cdbf-77b8-44b8-b8bf-0555c5c7d70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a970b1-6d53-4ddf-9e1e-572b316e89eb",
        "cursor": {
          "ref": "d031c9c8-2dc1-4493-b359-5681447cc2c5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4f2d3f9a-0f94-46ff-bd89-c236cac614e0"
        },
        "item": {
          "id": "b4a970b1-6d53-4ddf-9e1e-572b316e89eb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ec6b2a16-435b-4d9a-b2c0-7bb5c2efde26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931ca5cd-27e6-473c-8a44-6c8bd75315d2",
        "cursor": {
          "ref": "8b2ea611-0837-4d13-99b3-818ca5513f2d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6d813e21-2cfe-470e-9da1-9103ec60c753"
        },
        "item": {
          "id": "931ca5cd-27e6-473c-8a44-6c8bd75315d2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7c9b4b70-317a-4988-abb8-83485a732887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668472dd-bfe5-4ebe-8b7b-efa5d6dc0172",
        "cursor": {
          "ref": "f833107a-27e0-4c8b-8bd4-91541fcf31b5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "88cb8b57-0fef-44f7-b2f7-a0b2bff3ffd6"
        },
        "item": {
          "id": "668472dd-bfe5-4ebe-8b7b-efa5d6dc0172",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e2ade04f-a1d7-4b2d-b252-23883c64b0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d457678-adf5-4772-9cd5-c3fee0f943e3",
        "cursor": {
          "ref": "9e456947-9034-4cc5-9f89-f0b9c1f16387",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "55b4d67b-6971-4a77-ab23-b57ee02d59c0"
        },
        "item": {
          "id": "0d457678-adf5-4772-9cd5-c3fee0f943e3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c413bc2f-465c-4ceb-a695-de5464f8598e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b8181a-7d35-49d1-8fcf-e55c0814eda9",
        "cursor": {
          "ref": "0abb8e93-2c3c-4554-8a23-800d255c8827",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7bdb35bd-97e9-422f-bc7d-7d4371b7358c"
        },
        "item": {
          "id": "03b8181a-7d35-49d1-8fcf-e55c0814eda9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "94d958a1-ff14-4011-b827-7c77709a53b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9d715b-65b2-4292-b5a9-c98eb030ad6b",
        "cursor": {
          "ref": "039116fb-aa5d-43fd-885f-d40d2c0e2f33",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "10dd76f7-52c1-403b-9504-f57ed7ba4369"
        },
        "item": {
          "id": "0a9d715b-65b2-4292-b5a9-c98eb030ad6b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e8741877-eb96-4525-a78a-f6b12c8a1910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf95b6ff-060d-40c5-8a9f-acc0a234b499",
        "cursor": {
          "ref": "f634b550-4ba5-40cc-9971-22069a16aee2",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "037b4385-7ca7-4a56-afe2-f98b52f0a481"
        },
        "item": {
          "id": "cf95b6ff-060d-40c5-8a9f-acc0a234b499",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a0308c61-9782-4eae-842a-a0a9d7b6ed34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a47b2-5ce0-4f93-9c17-21f338a5e5d4",
        "cursor": {
          "ref": "333ca238-f72f-4fe5-acc8-eacc8667bd51",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "891c960a-4377-4a8a-af52-147de6e889dd"
        },
        "item": {
          "id": "910a47b2-5ce0-4f93-9c17-21f338a5e5d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "96050648-ccb6-4767-8c2c-5e1840f84a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc7d84a-8a2c-42aa-8cc1-b8bf9e268bb1",
        "cursor": {
          "ref": "79af906e-d2aa-4a1f-a22f-6a748ac76ccd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "829e2a63-bbbf-4399-b01e-5f7abceade6a"
        },
        "item": {
          "id": "ffc7d84a-8a2c-42aa-8cc1-b8bf9e268bb1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "db6d346e-ff07-4cdd-a5cf-3c3f762d4e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e954ebba-dbd4-46f1-965e-00a175b00759",
        "cursor": {
          "ref": "3d545ef6-108c-406c-8701-fb1c0533c9dd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c84dc23e-daa8-4a8e-997a-bcab07abdcde"
        },
        "item": {
          "id": "e954ebba-dbd4-46f1-965e-00a175b00759",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3fcc636d-6ada-406e-a1fc-1ca877b40c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d149a547-525c-4d16-b2c5-c0a86737dfbf",
        "cursor": {
          "ref": "51b30b91-df70-423a-ad58-8191bb4e5ed8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cad973ca-1f83-42aa-88e1-81128d0b5015"
        },
        "item": {
          "id": "d149a547-525c-4d16-b2c5-c0a86737dfbf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eed4bfdb-99df-4952-b0eb-33d5e870a6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52671571-1f48-4389-bf8b-b9dabbf2c54a",
        "cursor": {
          "ref": "552734fb-221e-4f59-960f-1ae0a1860718",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d4fd2822-9cdb-409d-acf0-0de2c097be78"
        },
        "item": {
          "id": "52671571-1f48-4389-bf8b-b9dabbf2c54a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f1bc6446-345b-4411-9ce9-f4db690c2c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d186c5-9643-4e28-894d-b5bd20dfd268",
        "cursor": {
          "ref": "6c2da1b5-024c-4f9c-9d13-d8b7f3664248",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9f475274-2561-4380-a200-3d314e0826c9"
        },
        "item": {
          "id": "25d186c5-9643-4e28-894d-b5bd20dfd268",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9dbb85e5-77e1-49cf-91e7-fbe9585edd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d28a692-21e7-469b-9da5-ebabaf3a998d",
        "cursor": {
          "ref": "282a3ba8-178c-4c32-92bc-4b5f335fbd80",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e0d7be7e-eaa2-44da-8905-8fc3cd40e777"
        },
        "item": {
          "id": "2d28a692-21e7-469b-9da5-ebabaf3a998d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d8efdbd8-3fd9-492d-a1db-cf24fb18eed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc99aea-b71b-4dd0-bb8c-e7557d3e0dae",
        "cursor": {
          "ref": "069be1db-ff78-41c8-943c-1c299641b1cb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "656b5265-4233-4328-9b9d-dfaf936fc6a4"
        },
        "item": {
          "id": "bdc99aea-b71b-4dd0-bb8c-e7557d3e0dae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8e51ebf-6716-4caa-8b2e-b3085492453f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c29a8b-ef87-4a11-a0ce-8d9a77f39e55",
        "cursor": {
          "ref": "ba109ed9-ec83-4645-9912-8c9bd92ea3f5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "14b5f41d-8d9c-48f1-8afb-21dc03d4b833"
        },
        "item": {
          "id": "51c29a8b-ef87-4a11-a0ce-8d9a77f39e55",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7d722b8b-f2d9-422e-8491-cde5edc4fba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9544d82f-69a0-4595-80d2-56a4fa812ac4",
        "cursor": {
          "ref": "a1fdc695-7164-4bde-beed-805ea91560ef",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7f830688-8b5b-4f77-8eff-b369965b36e2"
        },
        "item": {
          "id": "9544d82f-69a0-4595-80d2-56a4fa812ac4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a29c7517-5a0e-48ba-b9b8-232b7fb7148d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffac8e1-8bd1-4bc6-9fc4-6ce94987b825",
        "cursor": {
          "ref": "8433d25e-b13e-4c2b-9efc-4d469a55625b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "51bf7d09-53d6-433c-94ed-80247c9fa5b0"
        },
        "item": {
          "id": "1ffac8e1-8bd1-4bc6-9fc4-6ce94987b825",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2bb836f2-0428-462b-917c-405b5c271ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f99f125-8ed5-45c0-bc43-6a48c9f4807b",
        "cursor": {
          "ref": "893078d9-13be-45b4-9405-d946b40d2b89",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0c4fd293-2911-48c1-8344-ef0dc780a438"
        },
        "item": {
          "id": "3f99f125-8ed5-45c0-bc43-6a48c9f4807b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6dba2b39-4ef8-46b5-8903-0ae37add118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc2f50e-2a03-476b-b220-9e51e39234b8",
        "cursor": {
          "ref": "e9e8556a-e848-4208-803c-eadbd50a4b6c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3b9b3b72-ee6b-4c7a-9662-895f8a919089"
        },
        "item": {
          "id": "6cc2f50e-2a03-476b-b220-9e51e39234b8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9a39e634-46e8-47ef-9ef5-21c22a8a35c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fa12f0-3679-4dd6-a553-adacad9ad83e",
        "cursor": {
          "ref": "900a6961-b92b-466e-a84f-df8c48f0fdc1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "52994a22-a673-44fb-8662-0d1f005ffebb"
        },
        "item": {
          "id": "79fa12f0-3679-4dd6-a553-adacad9ad83e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3c04cf54-20b5-4d88-9284-dfdcdc7bab2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde4f076-02de-4448-9d91-b1451b6a1d30",
        "cursor": {
          "ref": "1a0253e1-e2ae-4471-ac65-e50b2522255e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0e7cd555-f94f-47e1-a8b4-1484904571f8"
        },
        "item": {
          "id": "fde4f076-02de-4448-9d91-b1451b6a1d30",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6117155d-2f8e-4d1a-97e8-690c5d3a3e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1ef890-b43d-4a96-9de8-3c2c310b077c",
        "cursor": {
          "ref": "438c8bfe-5efe-4a79-9ee9-6d7f6d0cd69b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "edaa705c-28fd-4847-8bd8-466b4560f708"
        },
        "item": {
          "id": "4e1ef890-b43d-4a96-9de8-3c2c310b077c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3b77ac0a-fa13-43fc-87b8-5c5bed984ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b73947-1a1f-45be-847a-af85db8010a6",
        "cursor": {
          "ref": "3d614c2c-b535-43ef-b18b-a01e9650c551",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d66813d3-31a4-44a5-8ac3-77e467507c51"
        },
        "item": {
          "id": "c3b73947-1a1f-45be-847a-af85db8010a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "92825e5c-a2e6-4b13-8f65-85f02c6df167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0185420-7c54-472b-9ec5-a7189fe8296f",
        "cursor": {
          "ref": "3ba3b4d3-cdca-49a9-87e2-9c10df86c76b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a677944a-3c10-41b8-8573-5276f09d1ea3"
        },
        "item": {
          "id": "f0185420-7c54-472b-9ec5-a7189fe8296f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "89f52906-5848-47f1-89c0-b5b62ce21e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6fe2b8-6c4a-457e-ac50-1eacd42b957c",
        "cursor": {
          "ref": "0821f235-9d7d-477e-a72a-b9fde958afac",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f0f52550-946f-4bb5-9de3-926e655dbcfd"
        },
        "item": {
          "id": "0c6fe2b8-6c4a-457e-ac50-1eacd42b957c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "64225d09-9445-4b13-8882-f8e9e0390223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f749b6-f5bc-4627-8367-bb2d6014a9cb",
        "cursor": {
          "ref": "5f65c729-5a94-4adf-9ef1-63e5b21467cb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "639593be-d63d-4eac-b68c-03f865771d73"
        },
        "item": {
          "id": "f9f749b6-f5bc-4627-8367-bb2d6014a9cb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "620fe188-08c5-4f25-91b8-08c2e4b70a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1298a7a-110d-48b2-a61a-c9a4b8fe4e19",
        "cursor": {
          "ref": "d3cf128f-0dc7-44dc-9d7a-07ddf8e66feb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "454dc46f-ec5f-47b9-9aa0-84b15ae9ae80"
        },
        "item": {
          "id": "f1298a7a-110d-48b2-a61a-c9a4b8fe4e19",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ebe15acd-4924-4023-a571-fec905f6300d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b50249a-9cd4-46e7-92fb-c7ac79df3c77",
        "cursor": {
          "ref": "9f2f20e8-9c06-4502-bfab-3d5b1f146846",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "64b4d766-b8e2-4b37-9c87-6eb09c1983a8"
        },
        "item": {
          "id": "3b50249a-9cd4-46e7-92fb-c7ac79df3c77",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ba4c9a28-4d41-4784-a86d-a148b0467612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eef082-d73c-41f6-8178-c87e09940f5c",
        "cursor": {
          "ref": "31d44051-bca7-4156-a389-a99ec895fb8a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b5d8ec22-c09d-4340-b0c6-1f9ed5380a5a"
        },
        "item": {
          "id": "30eef082-d73c-41f6-8178-c87e09940f5c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2b70ab5d-603a-4a0d-82d7-8de2e63e8ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dbb6f3-956f-4068-99c5-652b84dcbbd8",
        "cursor": {
          "ref": "f5056cdb-496f-4aad-8e76-1ad5cbf58c3a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7366a7c8-db77-4908-8c7a-af6b706cf710"
        },
        "item": {
          "id": "c6dbb6f3-956f-4068-99c5-652b84dcbbd8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "958299e5-861c-4e35-8d8d-29e164ba3de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4b9d60-4512-486f-afd6-332e53fae7e6",
        "cursor": {
          "ref": "58dee3aa-3dc1-4422-af41-0d14cd35a37b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dc738adb-6eb0-4d44-83b7-2933de4eb02a"
        },
        "item": {
          "id": "8b4b9d60-4512-486f-afd6-332e53fae7e6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a97e61d9-5a06-4f94-a050-ef66ae2a9883",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6408bc75-1013-4c6e-9982-d79d5bd10552",
        "cursor": {
          "ref": "24df5e9e-5b47-4162-ab0e-6aa50c4e6ef0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "55b474a2-4de1-4a76-b0d3-ef9f31a5e638"
        },
        "item": {
          "id": "6408bc75-1013-4c6e-9982-d79d5bd10552",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ee28377a-111e-4083-ab09-0c43da8e0934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "84a07951-658d-46b0-a30c-faa49ded42c5",
        "cursor": {
          "ref": "02c18138-300d-448a-889a-e312cedbac44",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9e2e076e-f7a3-4777-8180-b86fcaf90281"
        },
        "item": {
          "id": "84a07951-658d-46b0-a30c-faa49ded42c5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ecb9ba1c-0510-4b65-89d3-3489d0efc7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0446f1e2-3449-41c8-8c4d-889df752e20b",
        "cursor": {
          "ref": "b9fb0894-6849-4785-8948-78c15e7fb6e5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d3cafa7b-4c36-44a6-94b1-01c131485aa9"
        },
        "item": {
          "id": "0446f1e2-3449-41c8-8c4d-889df752e20b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d4b573bf-8e0e-4fe8-8314-ab7c9faf3324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1967f703-8ef6-4fb0-b00d-53a36b705777",
        "cursor": {
          "ref": "3961bbaf-bf2c-4aa1-9836-4dd933505c7d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fd3df0f9-1d2a-4b99-a162-5ba5aacadfd6"
        },
        "item": {
          "id": "1967f703-8ef6-4fb0-b00d-53a36b705777",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0cbdbbaa-1e76-4fbf-b01c-6e0103ccec8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8939eefb-67a6-42d1-8202-156f9ac073e7",
        "cursor": {
          "ref": "d1fbfdf3-7bd1-4cf1-a8da-ffb6a287d586",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5b8a490c-3f3e-4883-a6e0-6abef30f3b89"
        },
        "item": {
          "id": "8939eefb-67a6-42d1-8202-156f9ac073e7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "402c03d9-0fc1-4b82-a519-a9b89f4b8cc8",
          "status": "Created",
          "code": 201,
          "responseTime": 11773,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0c3775-8416-4f4c-96db-f83e91b5028f",
        "cursor": {
          "ref": "293b43b9-0315-4d8e-8656-7d3d3cabc021",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d6a1b447-7b84-481d-8cf8-55e5c55357de"
        },
        "item": {
          "id": "3a0c3775-8416-4f4c-96db-f83e91b5028f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5cca0720-34fd-4832-8d5e-9b8ae8a48899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4aacb93a-9a88-4010-897a-4565c5fc9ae6",
        "cursor": {
          "ref": "f19867bb-924e-43d2-8023-fb25d1969e8f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e8315962-22c2-480b-b39f-e74d25b516c9"
        },
        "item": {
          "id": "4aacb93a-9a88-4010-897a-4565c5fc9ae6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f895df3a-4d3e-4f7d-823b-f97069f81cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b93e9812-f9c6-4e58-9209-e5ce03975c99",
        "cursor": {
          "ref": "f1e23e46-20c9-48ed-9ec1-dff167c0cdd9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "604f6916-5c05-426a-b146-6d39e77dea3c"
        },
        "item": {
          "id": "b93e9812-f9c6-4e58-9209-e5ce03975c99",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c70b6e74-7e5b-4798-b6d6-f5cb8b4edd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f15bd5-c599-4d1d-adbe-e7014b84d331",
        "cursor": {
          "ref": "0eeb0720-68ab-4435-82ff-7507cbf2ca98",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3c2348f7-dd54-4763-91d2-efb712fc9e88"
        },
        "item": {
          "id": "a0f15bd5-c599-4d1d-adbe-e7014b84d331",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9c5c37ba-d63d-4fb1-b5c8-d59db2ff5586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afa4d26-54e1-4f0d-9d29-662d39fd68f4",
        "cursor": {
          "ref": "87f7fdfd-6f29-4b01-b190-6ddaf3099a5f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d09c1d2e-0195-42ab-b0ae-dd7302b93542"
        },
        "item": {
          "id": "3afa4d26-54e1-4f0d-9d29-662d39fd68f4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dae9051b-35c8-4e71-8d0e-a66f45fd02be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77683c16-8f5c-4445-bdbc-faa1538f2dbf",
        "cursor": {
          "ref": "d80253e0-b06d-47b2-bd38-ad6339a70a05",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d453c9e4-ef28-4b5e-9e71-d20c6e36f1f2"
        },
        "item": {
          "id": "77683c16-8f5c-4445-bdbc-faa1538f2dbf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0ea39ed-2aaa-4a3c-822a-f910c10b8ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161946fd-b55c-4302-8d97-5974e45a962a",
        "cursor": {
          "ref": "fc7ac4da-5a40-4377-8118-760eb1ca9a99",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a8a1aa97-2d3e-4122-b3dc-1d828ec7423b"
        },
        "item": {
          "id": "161946fd-b55c-4302-8d97-5974e45a962a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8e1e6bb8-fbd1-4541-a09b-25cc283f75ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9c57a9-3c9f-4bca-a2e5-561ee0e6cee6",
        "cursor": {
          "ref": "41ba5e5e-bc70-4f3a-870a-785efefba231",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21e156df-1a8e-47bd-a2b5-6e6328c88a3f"
        },
        "item": {
          "id": "0b9c57a9-3c9f-4bca-a2e5-561ee0e6cee6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7cb66acf-6c2a-4b25-8244-b40ea9f28c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7643b64-eb7d-461e-914a-aadeb1c93126",
        "cursor": {
          "ref": "ca8da7b7-bc59-4d8f-95c0-edc3876ed15b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3cf797ec-bc4b-4f54-bd33-82c135cff8ad"
        },
        "item": {
          "id": "e7643b64-eb7d-461e-914a-aadeb1c93126",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9437e995-bf3f-49d8-a771-eceb2d6762b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51458f7b-57f7-4106-aeea-f455a8f16618",
        "cursor": {
          "ref": "4957e59c-66df-4d05-b6ba-8b987341cffe",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c8663fe9-2c86-43d4-ad4f-d2086a5aa234"
        },
        "item": {
          "id": "51458f7b-57f7-4106-aeea-f455a8f16618",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "01ad5744-d5fd-4dca-a982-9a67d122c18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67991b63-0551-4a13-bd1e-20a1a10f5603",
        "cursor": {
          "ref": "f1c21512-7c06-43fd-a79a-31cb319bef1c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "35da17ed-2735-4241-be40-96cdb65a3314"
        },
        "item": {
          "id": "67991b63-0551-4a13-bd1e-20a1a10f5603",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6ddc97eb-31df-409b-a281-55d2425d6859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13002b-7ffb-41c6-9652-2b55775bc200",
        "cursor": {
          "ref": "d874cf20-ae64-42bf-b018-494079cbc637",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6a288b75-c52d-4bb4-94ec-7ee6634d5092"
        },
        "item": {
          "id": "ef13002b-7ffb-41c6-9652-2b55775bc200",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0eeecf36-9d5e-4243-a386-8888e80d8ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f217aa-e0ab-4098-b4f9-aaf4202fb1f3",
        "cursor": {
          "ref": "669e00ab-5857-415d-a0f7-023e2ad1c46d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3a57f425-a1f1-4a2b-957f-161c054a788c"
        },
        "item": {
          "id": "e8f217aa-e0ab-4098-b4f9-aaf4202fb1f3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ea426876-1642-443c-8de2-de41b67b0f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb850a47-427b-40d5-ae66-bc8f837bc127",
        "cursor": {
          "ref": "c63ec9df-ff4d-4e88-8df3-7c572a73cdfe",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f47fb857-ada1-4c46-ac70-28699da7866e"
        },
        "item": {
          "id": "cb850a47-427b-40d5-ae66-bc8f837bc127",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d2c84b4-ad02-44ce-b3c8-a1aebbd8bdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c6d176-33e4-4948-8557-b295e39c68ea",
        "cursor": {
          "ref": "e7a63dfa-18c4-4667-b9be-93b91ad169c6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d2c742a5-3091-42e3-a78a-f97c91c90017"
        },
        "item": {
          "id": "f1c6d176-33e4-4948-8557-b295e39c68ea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "353ec884-0ad1-4242-abdf-fdfb73b73918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c19b39-9751-44f7-961b-deec6fa5e6d9",
        "cursor": {
          "ref": "adb58215-6282-464b-96a0-028c5bc9878c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5c9917d1-2e4d-4a8c-9d0a-94cb3e7c3f6e"
        },
        "item": {
          "id": "c8c19b39-9751-44f7-961b-deec6fa5e6d9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6cc508da-9a18-4f9a-9a65-2b2635e161cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36ed744-70da-4c89-8365-b1388d23cc85",
        "cursor": {
          "ref": "0abd0782-b5c7-42be-9d5d-268db4c2a717",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8742b661-e727-499b-adb8-37a47c48283a"
        },
        "item": {
          "id": "a36ed744-70da-4c89-8365-b1388d23cc85",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "225ba50f-fd65-4327-a15b-84b0671f60c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd65ebe-16d8-4db4-b74e-3502da599b0c",
        "cursor": {
          "ref": "c40ef9e2-35b0-40b4-ab07-9b3e642f4090",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ca9b99b7-3ade-44a9-92c6-4286b26b751c"
        },
        "item": {
          "id": "fdd65ebe-16d8-4db4-b74e-3502da599b0c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "81acdf56-818a-41d7-8b6e-c02b086d5a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975dd555-53e6-4bcf-83d4-c9e49cd5c3c4",
        "cursor": {
          "ref": "874f595d-1000-488d-bdd1-ae9e34b61086",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "31a4f644-cd03-4a84-8ccd-6c076e71418e"
        },
        "item": {
          "id": "975dd555-53e6-4bcf-83d4-c9e49cd5c3c4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a30309f8-e79e-410d-bb10-d6c2b475819e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "2d6c3fe4-d4df-4ea8-974c-caf7f6cedc3a",
        "cursor": {
          "ref": "207a0cf9-aaac-4176-8a8f-64a0f3873f24",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "914b04f4-5135-4452-b4a7-a8483f6228c8"
        },
        "item": {
          "id": "2d6c3fe4-d4df-4ea8-974c-caf7f6cedc3a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d651e5fe-e590-41a9-91fb-f1d83e12fe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fb506d-fc34-46c7-938e-4a1f4d4e723c",
        "cursor": {
          "ref": "26ca94dc-6f7c-4efe-a3f4-db80ff7a6d36",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "303f7dd9-4bff-45f3-a7b8-e8708b6b42e4"
        },
        "item": {
          "id": "32fb506d-fc34-46c7-938e-4a1f4d4e723c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ea2bf902-a1c4-4174-b9bf-122338e542b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f517d431-b3c6-49ef-baaf-3173e7bd97b9",
        "cursor": {
          "ref": "489ab0bf-19e9-4f87-9dc7-75f3c3c4f71c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "39cb657e-052d-4b70-b774-2877ee45afe7"
        },
        "item": {
          "id": "f517d431-b3c6-49ef-baaf-3173e7bd97b9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0704ad03-e505-4924-bc1f-7ab2b1483b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00656651-6e74-479c-98b4-babce1c1cdd9",
        "cursor": {
          "ref": "5ce7f7e2-7dca-4f24-9c43-3298cfe347a0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ae358a0d-d2d1-4d68-b2b9-2d5218c93e71"
        },
        "item": {
          "id": "00656651-6e74-479c-98b4-babce1c1cdd9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "af43680f-6865-4d93-849a-3e45303d3b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264d5305-6e69-4b15-ad79-70a6cf4d3753",
        "cursor": {
          "ref": "859ff18b-f59e-4fea-a559-f9fffa02f68a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "01971eb6-e117-445d-bfee-9317a8946d46"
        },
        "item": {
          "id": "264d5305-6e69-4b15-ad79-70a6cf4d3753",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "36b449e2-d6de-4593-8b62-be3f36982ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bc3287-49f8-4267-b478-6649b5e25c15",
        "cursor": {
          "ref": "a4384ab5-0e37-4226-b7f7-63ce0f408895",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e62be854-7ec1-426d-9b15-8225b581b529"
        },
        "item": {
          "id": "10bc3287-49f8-4267-b478-6649b5e25c15",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "af11fb92-d576-42c0-a4d5-c9e536a127b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5c2dd9-ad13-404b-8310-b8c68b797593",
        "cursor": {
          "ref": "82e35a3e-528e-4aa1-b836-49de9858792c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a43988f6-298e-4fa2-8ec8-657e7cb7f8e6"
        },
        "item": {
          "id": "ad5c2dd9-ad13-404b-8310-b8c68b797593",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "412c090d-7b1e-4e92-aabd-15e591978bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79371528-ebef-4dce-bf55-47acdbbef8ff",
        "cursor": {
          "ref": "e73d5c6b-fad7-4c3c-b562-891f74a8c854",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "95843255-b7f8-4067-b0fc-2c2555ededc8"
        },
        "item": {
          "id": "79371528-ebef-4dce-bf55-47acdbbef8ff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f30b4e0e-6bd7-4d7e-8865-b7f2f38d044b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "59962623-fae3-45bb-9e70-46bee53dcfd1",
        "cursor": {
          "ref": "980cc8c9-820b-4d8d-837a-521e0cccc847",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f7e848c9-b4dc-40d9-94ca-3f7697670e68"
        },
        "item": {
          "id": "59962623-fae3-45bb-9e70-46bee53dcfd1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "87914768-a0e9-4c88-8f0f-7be3fe7aa5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc480b9-a4c8-4eca-a4d8-322b45f31a58",
        "cursor": {
          "ref": "e10d6ea6-7f68-45cb-8d0f-b36d833586a7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2531f33d-74fb-4f91-b4e7-55759861557b"
        },
        "item": {
          "id": "9cc480b9-a4c8-4eca-a4d8-322b45f31a58",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8a131edb-3cc3-42e9-bee9-45913c3bb88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a46c53-4540-4361-9e06-6a032694d767",
        "cursor": {
          "ref": "11efecb7-01de-45fc-b9cc-6b311d2cb0b0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5bd6379e-8f97-46a6-9bb3-48af60df1625"
        },
        "item": {
          "id": "26a46c53-4540-4361-9e06-6a032694d767",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4316dedd-d3ec-4106-a34d-548c90d3cf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b3d398-3d43-42f0-9cac-387ada2a25d3",
        "cursor": {
          "ref": "206f6adf-2ad6-4201-bd1f-b54bcdb180bf",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "674b7f7d-488e-46ad-83c1-c1397aa0e12a"
        },
        "item": {
          "id": "26b3d398-3d43-42f0-9cac-387ada2a25d3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "69cfcd97-7a86-43e5-9a5c-e5f26028d298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093029ac-e171-46e0-b395-cd37d259928a",
        "cursor": {
          "ref": "21ec933e-cd95-4cc8-925a-51f42fe67ca5",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2dcd0725-3823-4f66-9853-1f44a50b93be"
        },
        "item": {
          "id": "093029ac-e171-46e0-b395-cd37d259928a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ca9b9471-cc68-45c2-9452-1f89fec9aa9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9806340f-0a1b-479e-bb34-bb02f7b88567",
        "cursor": {
          "ref": "0adda90b-60c2-45ce-8df1-dacb2b95af3d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ac843f6b-9cef-42e2-8829-a8e7803cef6a"
        },
        "item": {
          "id": "9806340f-0a1b-479e-bb34-bb02f7b88567",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "be93f1d4-8e78-4e59-b491-d92ac1c8e758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3505fbd-a7b5-46c1-95d8-02cfc7ba484b",
        "cursor": {
          "ref": "f702add2-f981-4c26-bb5c-a9fb65fa3f01",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3849e1ce-2423-49b3-b8c1-5155b6b0d768"
        },
        "item": {
          "id": "a3505fbd-a7b5-46c1-95d8-02cfc7ba484b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4078f93c-fc49-4b32-8344-039b3c9064f3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "7fded5ac-a6af-4349-a53e-9ebeeef97970",
        "cursor": {
          "ref": "b704de4c-f4ab-486f-ae6f-7e4cfb239c9e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cf59f744-1b62-437d-9f98-72f867934716"
        },
        "item": {
          "id": "7fded5ac-a6af-4349-a53e-9ebeeef97970",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8b4920c9-6b73-43fc-a3e9-bfbb435fac08",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "80ccdb4b-2543-4564-9a83-e33a7cd9e7a9",
        "cursor": {
          "ref": "c27e6b24-607d-4e7f-812e-330fb2e0085d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "88022c21-85d5-43e7-bd68-2a9d98bb139f"
        },
        "item": {
          "id": "80ccdb4b-2543-4564-9a83-e33a7cd9e7a9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b7036319-042f-45f8-b71a-e61cc34aa2b5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e2a391fa-cae7-4244-bb0a-4bc927020a6c",
        "cursor": {
          "ref": "fb173598-63f6-4828-9acd-355244c69f07",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cfcc58ea-662a-4819-9731-ffc02be00b06"
        },
        "item": {
          "id": "e2a391fa-cae7-4244-bb0a-4bc927020a6c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2d673fe3-b928-491d-acec-67e35f614e78",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "c9172b99-6e24-46cd-99cd-89c1e78b93c7",
        "cursor": {
          "ref": "62ab7c0b-7f45-4b4e-8848-17ec24bdf481",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2fe8c61a-6a72-48c9-b2e1-bee27051548c"
        },
        "item": {
          "id": "c9172b99-6e24-46cd-99cd-89c1e78b93c7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5fd38bc1-d9cd-43fa-9a71-f041a5a534ed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "daa343b5-fee0-4f9f-8163-1c40816c2866",
        "cursor": {
          "ref": "18f43037-6bd7-4d27-ae21-8a4fbf290ecc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bd313963-3977-4e46-918c-6b2467265b59"
        },
        "item": {
          "id": "daa343b5-fee0-4f9f-8163-1c40816c2866",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f809cc77-2d9c-42cd-a373-4a83f74689b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "17425b4a-8a01-47c4-9e8d-03291138b96f",
        "cursor": {
          "ref": "6aaffbec-ccf1-450e-88f0-c301e3d103ac",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "06f10c44-7cbe-4637-a17f-4de14291b6d5"
        },
        "item": {
          "id": "17425b4a-8a01-47c4-9e8d-03291138b96f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "930d4397-6677-4355-a413-3d0c0bcca836",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262072d9-3547-45f5-9324-43e1ef602bf7",
        "cursor": {
          "ref": "b23f506e-6f03-4b93-9789-95a523b43544",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f9368074-6167-4278-b50a-474acb356c5a"
        },
        "item": {
          "id": "262072d9-3547-45f5-9324-43e1ef602bf7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "acbfea51-2a25-4ed6-ae45-dc55a470672b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2116df61-f333-4d68-ac04-b538e7f1f355",
        "cursor": {
          "ref": "879b4a14-efce-40d7-a623-c30610f05400",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e44c9fcb-07f3-4547-b178-01d22d7f7982"
        },
        "item": {
          "id": "2116df61-f333-4d68-ac04-b538e7f1f355",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5f2bdda5-f30a-4bfb-8593-658a403a98d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b3b09b-3b44-4d17-82b3-a0c1130fd20e",
        "cursor": {
          "ref": "bac78a81-5bae-40f0-a94e-2608df0cd377",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "275f5b01-ec3b-47c1-8dc9-56432280a929"
        },
        "item": {
          "id": "04b3b09b-3b44-4d17-82b3-a0c1130fd20e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ac511881-0250-4a78-ba20-5ff6f5ae648e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a8af03-7c8f-4708-980f-b434bb37923c",
        "cursor": {
          "ref": "5dbc2251-949f-4a9c-b45a-e846cd52f572",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "469945e6-8024-410f-bcbb-6735797a615f"
        },
        "item": {
          "id": "66a8af03-7c8f-4708-980f-b434bb37923c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2f186cca-4116-4798-8cca-6d110403f0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06a4008-e26b-488b-9c2e-a8947e4955a1",
        "cursor": {
          "ref": "09684474-816a-4409-8032-c264965595c9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "03da1007-42f1-4dd4-aca2-234f4cb5619a"
        },
        "item": {
          "id": "c06a4008-e26b-488b-9c2e-a8947e4955a1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d999adc2-28d8-4ff5-a44f-5ba1da358758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692fdeca-5ac4-4397-874f-8170c34625d4",
        "cursor": {
          "ref": "5c52db5e-0c41-48aa-b53c-096cefac7d5c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ee3bebcc-2566-497b-b956-da688a0d8f60"
        },
        "item": {
          "id": "692fdeca-5ac4-4397-874f-8170c34625d4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c2dceb6b-c64e-4633-bf21-bca2bd8928a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98164a70-e06e-4ef2-b06d-b85c7a6abdd6",
        "cursor": {
          "ref": "91e2a769-0faf-45ca-ad09-d9f38132a997",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "90433578-34f0-4d50-8ced-7cb5efb664d8"
        },
        "item": {
          "id": "98164a70-e06e-4ef2-b06d-b85c7a6abdd6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bd25b531-87ee-49cb-846c-7ebf148b3d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2ffbd7-974f-4c4f-a428-c6cc813bd8e8",
        "cursor": {
          "ref": "0177b229-a878-4c5e-92f3-9fe08d155366",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a4ecf1b2-667b-4b31-b8f2-49192320c7e7"
        },
        "item": {
          "id": "2e2ffbd7-974f-4c4f-a428-c6cc813bd8e8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7fd8d492-958f-48cd-a461-c6eb162d4df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e04e18-5b54-435a-82e2-f77f09870487",
        "cursor": {
          "ref": "6589df4a-a161-4a9a-99d5-c7104b23bdff",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dad1cdff-2505-4a6d-b19e-5d383ec96e5c"
        },
        "item": {
          "id": "95e04e18-5b54-435a-82e2-f77f09870487",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4bdc91d1-3420-4baf-860a-81aab05f2ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a580df-eb6f-4a63-b984-3bcc80a07d41",
        "cursor": {
          "ref": "8e97a2cd-9013-4434-b84b-a78bff546f7e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "128eaaec-b49e-4dda-b2e6-023d0a94cc41"
        },
        "item": {
          "id": "57a580df-eb6f-4a63-b984-3bcc80a07d41",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "82474747-3501-4dae-a912-a92ce364f66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812db2ce-b9d3-4144-bb2b-c73d06655052",
        "cursor": {
          "ref": "16deda37-a921-471c-9f3b-f52eceb586dd",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "16e9f540-11f4-4fcf-9242-2187a63a8564"
        },
        "item": {
          "id": "812db2ce-b9d3-4144-bb2b-c73d06655052",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4235da05-066a-4d39-9d17-4a54a536d744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19431b1f-86b4-4ab4-8c3b-63f91a453ce5",
        "cursor": {
          "ref": "2a358e3a-5692-4bda-9e44-194610666622",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b49998da-a0bb-4dd3-a985-a23932ab8057"
        },
        "item": {
          "id": "19431b1f-86b4-4ab4-8c3b-63f91a453ce5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "deb4437e-e130-4adb-a075-d9309e2620ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78af8ef6-167c-4b79-a8a0-2876f0ba820e",
        "cursor": {
          "ref": "1e71d6ee-1171-4a73-8820-fc6863403b1d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "24b348b7-8351-4161-8897-8f4cb6ad18ec"
        },
        "item": {
          "id": "78af8ef6-167c-4b79-a8a0-2876f0ba820e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "71bf16fa-220c-4faf-95c7-149d93750876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a11d5e-00e8-4438-b890-8331b47434a2",
        "cursor": {
          "ref": "7fcc8476-5826-4fb3-b4f1-6b11b8defd79",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "09e8c708-30de-42b1-af34-6776d5a45d5c"
        },
        "item": {
          "id": "72a11d5e-00e8-4438-b890-8331b47434a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "52b6b5b2-8ca7-4bd1-930f-0d5df5c35098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79ef6c2-79f8-4cb6-a2dd-62de785f0f05",
        "cursor": {
          "ref": "f4931b46-033a-420e-bf6e-6373c57aedb3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eeeca2ce-3fa9-476e-9411-ce984502577f"
        },
        "item": {
          "id": "c79ef6c2-79f8-4cb6-a2dd-62de785f0f05",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d3f3883b-6818-4d43-8c20-b437fbcdf6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54db5e23-7576-4fff-b59b-b0d1469f2e01",
        "cursor": {
          "ref": "b6c3a376-f5e8-4f8c-b892-17b2b6d006d5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1e17e1b0-badb-462d-98f9-5d24949b88a5"
        },
        "item": {
          "id": "54db5e23-7576-4fff-b59b-b0d1469f2e01",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "735050f7-0e90-4047-8fc4-e2f210e3a7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f80ffb-aac2-44ef-8b5c-b21399c79de7",
        "cursor": {
          "ref": "26427fc2-2141-48dd-88ae-a51f68d7e35c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "21357d4b-f2d6-43dd-8b52-d8b7c88deb24"
        },
        "item": {
          "id": "37f80ffb-aac2-44ef-8b5c-b21399c79de7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b6b44348-5504-45bf-9070-8a6fc979f737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8039fcdb-3c49-44ac-95b4-8f7a56ad6a5f",
        "cursor": {
          "ref": "3d7d68f4-b067-4824-ba04-277d42215a1c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "15d7139d-5c8a-4d63-889e-2fd7db012edb"
        },
        "item": {
          "id": "8039fcdb-3c49-44ac-95b4-8f7a56ad6a5f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ed9cffb1-3d80-4fa3-a220-884402b58c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c91133a-d59e-409b-9b99-f85c4388c837",
        "cursor": {
          "ref": "16330eaa-ae6a-4c95-b569-27d4e4c29b30",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "841d4719-870d-4b2c-a671-19c1ae27b3d7"
        },
        "item": {
          "id": "6c91133a-d59e-409b-9b99-f85c4388c837",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6df4bd75-dc5c-4c41-a929-4eb7ab658a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ee65ac-b175-4998-8ac9-2eca1588d585",
        "cursor": {
          "ref": "cfb4eb3e-a728-48f7-8038-cd18f6001fbb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9c235c05-4212-4bbe-9148-45add8748b57"
        },
        "item": {
          "id": "b1ee65ac-b175-4998-8ac9-2eca1588d585",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d171f047-7681-422e-8472-bf2123873249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce2494c-40ce-4521-b309-83b6ef1b6977",
        "cursor": {
          "ref": "7515803f-a2bb-4c22-ba65-9943b52ea7d4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8ee542f3-a597-4e22-a731-4dd7b441d8c9"
        },
        "item": {
          "id": "0ce2494c-40ce-4521-b309-83b6ef1b6977",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fb35e437-2f04-427c-af0a-e38097671f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a93897-7bce-445d-bec9-f9c56c447789",
        "cursor": {
          "ref": "91bfdb69-9cb3-4847-a84c-046b6db3a4f3",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "536f2d4c-8fec-4fc6-b0e5-1e8d7161d9a4"
        },
        "item": {
          "id": "b4a93897-7bce-445d-bec9-f9c56c447789",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f98dd23a-2ed3-4421-84b2-c68ec3a4d82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f03569-2bed-4b64-b3e4-4eb39c2a2616",
        "cursor": {
          "ref": "4c26318a-9676-40fb-a45b-d3f31468af38",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d5eb811e-217c-47b9-9d1e-68b550298326"
        },
        "item": {
          "id": "33f03569-2bed-4b64-b3e4-4eb39c2a2616",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4c85b091-0134-4d38-af83-808490273cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3b6e9e-b74d-45a8-a4c0-4d0c143e1751",
        "cursor": {
          "ref": "aaf4530a-8108-4ab3-986a-abbfa20d46e8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2750dd71-8f9b-482c-bdae-0434cb2d1099"
        },
        "item": {
          "id": "6a3b6e9e-b74d-45a8-a4c0-4d0c143e1751",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "64934767-7f29-4f15-89be-63e5ea348d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d6dfb5-6e18-497c-bd2e-fda21152dccf",
        "cursor": {
          "ref": "3185424a-35a9-4e60-b765-b8712674e17b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "540b2c87-9ab4-4377-8ccc-cfad66e8e5c1"
        },
        "item": {
          "id": "35d6dfb5-6e18-497c-bd2e-fda21152dccf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0bdb4996-5458-4725-a53d-590a0380b30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075a9af1-5902-4e13-92ea-268076f0e513",
        "cursor": {
          "ref": "7e8d1bba-f3f2-4100-9743-3317883faf55",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "23f83916-4f43-4f2f-83c8-bbd154c60cfb"
        },
        "item": {
          "id": "075a9af1-5902-4e13-92ea-268076f0e513",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e2beadc3-2c02-4869-9c48-100db31d4239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad90d54f-7385-4a08-8751-2b7e9b337dff",
        "cursor": {
          "ref": "f32cafe0-aa27-42f7-b3f2-66ffef3ce089",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "090c140b-1aaa-4231-8f3e-9baf8417a3a1"
        },
        "item": {
          "id": "ad90d54f-7385-4a08-8751-2b7e9b337dff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7757ef71-5c4e-47bf-934f-676558899849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb97c323-931d-49f8-a07d-90660bd6eaf4",
        "cursor": {
          "ref": "19eb693e-1700-4042-9792-7c04e5067ab2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "30f7f2e9-cc25-42fa-935a-7b8736bfda28"
        },
        "item": {
          "id": "fb97c323-931d-49f8-a07d-90660bd6eaf4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a9da06ce-5feb-44a1-af04-11b54972e4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ede2c3f-e0a3-4ecb-bda6-4fbfc61e3a69",
        "cursor": {
          "ref": "4675a78f-6aac-4f05-b059-ace1b0d15585",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "99bdd1e6-576e-4d27-ae3d-f95c6a7b326a"
        },
        "item": {
          "id": "9ede2c3f-e0a3-4ecb-bda6-4fbfc61e3a69",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d993e2f9-5b8f-4d82-8793-3f75ccc6c99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96caf483-7aa9-44c8-9eb0-85ffbf5efa5d",
        "cursor": {
          "ref": "01e711e1-0553-4e1a-8a6c-0e551e114a43",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e29092e1-6b46-4526-ac24-f326f18b3e64"
        },
        "item": {
          "id": "96caf483-7aa9-44c8-9eb0-85ffbf5efa5d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0d240efe-2ddc-4ed8-8602-08f534fd3b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4e91f8-7d21-48b6-a381-e20cb53187e5",
        "cursor": {
          "ref": "b860bf33-af36-499b-b75e-54b87bc47962",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e2b0a726-b34f-4f5c-beab-115410515cda"
        },
        "item": {
          "id": "dd4e91f8-7d21-48b6-a381-e20cb53187e5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "308d766b-3580-4281-a625-9cc5e331b441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc4b48d-02b2-4392-a0bb-44f25929796b",
        "cursor": {
          "ref": "41bba4ec-636d-4fd7-ba02-d4239be0c6bb",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "11be2286-fa9d-48ba-b671-e55f88dc3ff7"
        },
        "item": {
          "id": "dbc4b48d-02b2-4392-a0bb-44f25929796b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2d2a6329-73d7-4199-a1e8-4590c1204a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb658c1a-63ca-4ddb-9b5d-c3e7c3e7c952",
        "cursor": {
          "ref": "83eb6f0f-7905-450c-b74a-d5298fa97027",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "48ac957e-9f8a-4add-bdd1-bd1f2e4beeac"
        },
        "item": {
          "id": "bb658c1a-63ca-4ddb-9b5d-c3e7c3e7c952",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f637299d-e3e9-468c-83d0-5d22de0d7491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7efeaf1-9354-46dd-98d1-2214ccd02016",
        "cursor": {
          "ref": "ebd5378e-6442-4ab3-b71e-9f155382861c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "46d9a5e3-679d-4679-85f5-f1b3b309dfe7"
        },
        "item": {
          "id": "d7efeaf1-9354-46dd-98d1-2214ccd02016",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f92db4ac-6703-442b-a01d-66d01403e41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1b9592-6641-4427-90ee-1ba3474fad8a",
        "cursor": {
          "ref": "de577ced-f90a-42e4-bdbf-b0abf1748df7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e6b94de5-fa53-4020-b472-80dd56ead8b1"
        },
        "item": {
          "id": "fb1b9592-6641-4427-90ee-1ba3474fad8a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e12f5bdf-850d-49cb-95af-6e92e2a4b362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c37a27f-6d3e-4c2f-bf80-aa1766b8b264",
        "cursor": {
          "ref": "5b7be669-7c9c-4885-afd9-0966430518ab",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "864be124-ad74-419d-a795-fde33c6aeb65"
        },
        "item": {
          "id": "6c37a27f-6d3e-4c2f-bf80-aa1766b8b264",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "992d99bd-94d1-48f2-bf12-688520015c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b77cd4-78ea-42e4-9794-015edc546aea",
        "cursor": {
          "ref": "f65d43f7-1a11-4467-bae9-44da477b0659",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bdc4180c-c433-4c70-97ef-9d8193bb26f9"
        },
        "item": {
          "id": "84b77cd4-78ea-42e4-9794-015edc546aea",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f0ba1bf5-f63a-4c24-979e-5c38043cfd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d8139e-ea4b-486e-8836-0c4fde60781c",
        "cursor": {
          "ref": "db6abf43-bb4f-48ce-8812-17907e143f02",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b4ac3083-e23d-4640-9aa0-4d5ee74d92d2"
        },
        "item": {
          "id": "f8d8139e-ea4b-486e-8836-0c4fde60781c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ff82ef19-4e5f-4840-a21e-bf864e0cbffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c43557-dd2d-4f40-8823-f3311524e696",
        "cursor": {
          "ref": "f93746a3-b48c-4e56-bdad-ce9d859b1907",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "361f18ad-d53c-48e8-bc59-781f3a271cbd"
        },
        "item": {
          "id": "05c43557-dd2d-4f40-8823-f3311524e696",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "32a664cc-c5cc-4841-95b4-4d3a4319e2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200aa9eb-c14f-4c08-951d-21b9f1cbae9d",
        "cursor": {
          "ref": "6b23008d-203c-4578-9ece-87ed809f6caf",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2fd23da3-a263-415a-8d94-d52e9a57f4f0"
        },
        "item": {
          "id": "200aa9eb-c14f-4c08-951d-21b9f1cbae9d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7faab305-ff8d-4a5e-bdc8-b2059b9f19d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff42da-f92f-42f0-9237-a8452b7bcf88",
        "cursor": {
          "ref": "4950bb0b-f2ab-4a70-a83d-7df972eeea55",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "251addae-445f-4f34-a289-3a867b7bdcef"
        },
        "item": {
          "id": "c5ff42da-f92f-42f0-9237-a8452b7bcf88",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4b4ce721-2eb5-4885-87f2-846002c7d5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d409047-9d7d-438b-bee6-aa033a9e8e7c",
        "cursor": {
          "ref": "dc58ffbd-538a-42c6-846a-be39d7a0bad7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d2763a1b-ad52-40ba-a1f4-2b791adb9c5f"
        },
        "item": {
          "id": "6d409047-9d7d-438b-bee6-aa033a9e8e7c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1fd95405-6e6b-4e9c-af9a-0fb4730775b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03480b6-301c-4a45-a8dd-97c171272d84",
        "cursor": {
          "ref": "11b54fe0-2241-4dd1-aab1-0886b2950781",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3422c82f-4d90-4856-a72a-17ecf0392650"
        },
        "item": {
          "id": "c03480b6-301c-4a45-a8dd-97c171272d84",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8981983e-a06f-4d62-8f63-2c6be440c19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01267d8a-50e5-41fe-9afc-9883661d9abe",
        "cursor": {
          "ref": "a06622db-cfff-4040-b40f-75aeef72df92",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6fad3713-80ce-4f7a-b7fc-8623aa9c0aca"
        },
        "item": {
          "id": "01267d8a-50e5-41fe-9afc-9883661d9abe",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fcdcf9a3-06aa-41ad-be8b-7dd9d52cb35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33cd826-6971-4ab5-a212-ad1d1f4a4225",
        "cursor": {
          "ref": "0654fc50-a8f5-44e8-9b2e-4a7f46bc31b4",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "08409999-5b08-41a9-8570-93801205dd79"
        },
        "item": {
          "id": "c33cd826-6971-4ab5-a212-ad1d1f4a4225",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3ea3f700-d0e8-466a-82cd-06e35e033736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0fbb04-9f3e-45ab-ba36-7ef17c51e76c",
        "cursor": {
          "ref": "50a2fc69-1461-446b-9792-345aa1fae9a5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2a16abae-34ba-4bfe-ab01-6e830ff1820d"
        },
        "item": {
          "id": "7b0fbb04-9f3e-45ab-ba36-7ef17c51e76c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "58e00990-3d7a-4135-b7a1-be880699e810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639186e7-c74c-4689-8363-37565c9e1cdd",
        "cursor": {
          "ref": "cd658f73-5e4d-4e2c-b161-1cfaf33802c4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "575837ff-53ca-4e06-910e-66ff692b6738"
        },
        "item": {
          "id": "639186e7-c74c-4689-8363-37565c9e1cdd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6581ab05-e67a-48fb-9744-968f72770d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad73a91-7928-472d-ba1b-77fde2eeb3ec",
        "cursor": {
          "ref": "8f7dbcc8-9fe2-4f64-b1b5-979b03c34486",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3e768f5f-a816-440c-b4ef-9f9ca5dc909d"
        },
        "item": {
          "id": "3ad73a91-7928-472d-ba1b-77fde2eeb3ec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5d35e46b-08bd-4589-bd43-2b78945d3770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234c6f6b-1c2b-4545-9847-f02fb8f1dd63",
        "cursor": {
          "ref": "11e542ca-936c-474a-a505-e9112f3e5e72",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c3367512-aa94-4c97-922b-35816d5f7671"
        },
        "item": {
          "id": "234c6f6b-1c2b-4545-9847-f02fb8f1dd63",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9e1efcb0-e542-4e46-ad7d-3a7a111780e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16837339-0e26-4b7d-992e-e061a9d5e8aa",
        "cursor": {
          "ref": "1ebcf4fe-7f12-45f0-ad9b-b60e8b1dc5f7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4287be2a-d2bc-4d28-b44a-75545a8fc709"
        },
        "item": {
          "id": "16837339-0e26-4b7d-992e-e061a9d5e8aa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8a2f835-e24f-4cd0-94da-2c5d1593af6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd82205-1b38-4d43-b0a7-c7b55733b774",
        "cursor": {
          "ref": "9a0944b1-db36-4b35-bd7c-447d3638f4c8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "680ff768-4a28-4fb2-bdf4-23d535a07c32"
        },
        "item": {
          "id": "cbd82205-1b38-4d43-b0a7-c7b55733b774",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46b9a8a3-0fc7-40d0-b8d9-e71e2cd7e56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd1abb0-466c-48fb-9c7e-8939b47281dd",
        "cursor": {
          "ref": "8a1b1e11-8242-45b8-b3ee-cc7f752a14cc",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "faf3ed24-6b1c-4cac-b40d-5c5f1650360a"
        },
        "item": {
          "id": "bbd1abb0-466c-48fb-9c7e-8939b47281dd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5c3caaca-ec56-4b11-b4ac-747270a90aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d83ea3c-bd1b-4382-b8bc-23305605777d",
        "cursor": {
          "ref": "559a0a1a-bdee-4030-8c2f-f9c5d9fcff46",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "87f14517-8aea-4740-b6d1-31d4f8888528"
        },
        "item": {
          "id": "7d83ea3c-bd1b-4382-b8bc-23305605777d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7400026c-e339-4124-a26e-77183f035bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f8feef-45ab-4ceb-b5a2-e1cef5c752f3",
        "cursor": {
          "ref": "8a13ebda-d02d-44f0-8a97-b333155ccc2e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c2e4ac7a-fc41-470e-bb72-94d1843e2ebc"
        },
        "item": {
          "id": "36f8feef-45ab-4ceb-b5a2-e1cef5c752f3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "beaafe28-74c6-4dba-98f0-224ea8d28e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c365f7ab-e545-41a2-baea-4ec083062461",
        "cursor": {
          "ref": "7c621d13-62bb-4aed-931c-63bfb240fcc5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cf92803c-a43d-4ce2-8d0c-b2faaf47e080"
        },
        "item": {
          "id": "c365f7ab-e545-41a2-baea-4ec083062461",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "353d2692-5596-435f-92c0-b58303528b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c981cd-5936-46b1-b8ea-52518dce4df7",
        "cursor": {
          "ref": "254b615b-b739-4458-ba1b-cf90551aa4a4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "66b0a007-89af-4eac-bab6-6dafd4c094be"
        },
        "item": {
          "id": "f5c981cd-5936-46b1-b8ea-52518dce4df7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "63748b5e-22fe-44c5-8e58-81986380db96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ed5201-a1fb-4500-8248-b0eeb9350709",
        "cursor": {
          "ref": "6fd79cc9-6afd-45a8-9b07-ad95f2f5deb3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "91382660-2b92-42a0-9cd8-257b4a3d4e69"
        },
        "item": {
          "id": "c6ed5201-a1fb-4500-8248-b0eeb9350709",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dfd47549-a889-4e5d-afa3-50c10927608d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c8d959-e318-4ae2-9297-b951b735345e",
        "cursor": {
          "ref": "4c1d2db0-5980-441d-a793-bb029c112fed",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c736d6cf-def5-482a-8944-ca101c1d3cc8"
        },
        "item": {
          "id": "01c8d959-e318-4ae2-9297-b951b735345e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "21e1b635-90f2-4de8-92ca-7465ca722919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c19777-fbc7-473d-966c-0581f519b0e3",
        "cursor": {
          "ref": "1c365a5f-2284-463c-affe-45f27ad7f826",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ba27e850-1bde-40aa-b5f2-6abfe28abb94"
        },
        "item": {
          "id": "c8c19777-fbc7-473d-966c-0581f519b0e3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1f428381-923d-4267-8249-5678518bda97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8a6c7c-0afc-4984-ac81-219dfcb55db9",
        "cursor": {
          "ref": "794260f4-6ed1-48c0-a7a8-d4fdfd39602b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "95f8525a-d89e-4079-8971-f0bd8c2cb407"
        },
        "item": {
          "id": "9d8a6c7c-0afc-4984-ac81-219dfcb55db9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "40f71dce-001f-43cf-8c85-d56584138183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6207037f-5920-40de-bf29-12e4d8decaab",
        "cursor": {
          "ref": "f5abb8c7-c210-4591-b663-2fa72deeb5e9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aa09185d-1c5b-4b59-884a-dd3473ebedfb"
        },
        "item": {
          "id": "6207037f-5920-40de-bf29-12e4d8decaab",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1c81ca0d-046b-4380-a21f-db43061badb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c53b1d-5597-4d20-b97a-00544eff41ab",
        "cursor": {
          "ref": "f025e847-5989-4b4e-b2c5-21184b110226",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a4c238df-0ea3-45b6-ba52-65feec069a35"
        },
        "item": {
          "id": "c2c53b1d-5597-4d20-b97a-00544eff41ab",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0b0e71dc-b80d-4609-86af-d150431738b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62122c7c-83f3-49bb-83a3-1846a09b61e9",
        "cursor": {
          "ref": "ac25c309-93c5-4d99-8e63-c59b693d4b0a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6d0b50e9-5571-4796-a6be-1be1d1af8f4e"
        },
        "item": {
          "id": "62122c7c-83f3-49bb-83a3-1846a09b61e9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "306a8c94-e3b9-4242-9ff6-5a5df7476681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3e0231-cc8b-435a-904f-667225ec71be",
        "cursor": {
          "ref": "1c75f7ce-3156-4072-8fb9-3d09f2fec781",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a0af14ad-7cb5-4ca5-a886-8a7b5a60c59f"
        },
        "item": {
          "id": "0d3e0231-cc8b-435a-904f-667225ec71be",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "52dff422-91ea-44f7-b252-b2e5646d88af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9877db-7b5a-49be-a389-dca8798fef46",
        "cursor": {
          "ref": "d3588bd5-5ca5-4e58-b1a2-fa3ec024b73f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "18f12880-a120-43b7-ac7e-6fef2cd62d8c"
        },
        "item": {
          "id": "2b9877db-7b5a-49be-a389-dca8798fef46",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "527ec95a-87a3-4075-9d43-9a7bda17f9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12e451b-777a-4577-ac9d-767f80474569",
        "cursor": {
          "ref": "398f14d0-b63e-4b4b-af16-17e52a3efac1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d3d5ce86-2e31-4ae4-946b-f38b038a5c17"
        },
        "item": {
          "id": "d12e451b-777a-4577-ac9d-767f80474569",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b017aeeb-b1b1-4499-9314-d491853f24cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f13b9b-8390-4de4-8d95-a84f5931ac4c",
        "cursor": {
          "ref": "a9226da1-62ee-4aa8-b1b1-28ea45800b4d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b38c5a1d-9804-48c3-95be-1fd8463e1dc7"
        },
        "item": {
          "id": "90f13b9b-8390-4de4-8d95-a84f5931ac4c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "be32a999-0e71-4538-9f6b-af770f8d2a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc04fdb-4c94-4857-a432-a64e7ee73085",
        "cursor": {
          "ref": "2936c05d-06c8-4f27-8f3f-48bb7a6fbe99",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0bac558c-b75c-484c-8f52-07c5bb285d6d"
        },
        "item": {
          "id": "1dc04fdb-4c94-4857-a432-a64e7ee73085",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0b94fed9-0271-44e8-a885-4a9bb423ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef1bfdc-5a21-4ffe-91e0-2ef8ef15c990",
        "cursor": {
          "ref": "74b0498c-2664-414b-9061-15cc3e7f34e7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c3b243ec-8a92-444c-aca0-94d3b4f72e73"
        },
        "item": {
          "id": "8ef1bfdc-5a21-4ffe-91e0-2ef8ef15c990",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bc0ff626-668b-4420-bb46-e968743b6c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26b754e-a201-429a-a691-42a638a7f831",
        "cursor": {
          "ref": "87b5f973-0cbf-491c-bc59-b5ba89fd8258",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a93abe3f-bfc2-4354-af56-76a145a39757"
        },
        "item": {
          "id": "c26b754e-a201-429a-a691-42a638a7f831",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "04377043-9f81-49e0-9ea9-911aeea0fc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2044d797-af75-4d13-9af3-226269a607e1",
        "cursor": {
          "ref": "05bc7834-bd0d-4a6c-9deb-6974be96f124",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2fe24be2-dcd9-482b-8071-ccfa0fae3d42"
        },
        "item": {
          "id": "2044d797-af75-4d13-9af3-226269a607e1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "52db633a-1b19-434b-b4d1-e5fcf7eff718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba9e997-8d08-4a33-bf44-1ec26013bed9",
        "cursor": {
          "ref": "cda593a4-c3b7-4eff-9811-ebdda9003d82",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "964c8566-e161-428a-809d-f28f1665be1e"
        },
        "item": {
          "id": "cba9e997-8d08-4a33-bf44-1ec26013bed9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f5067279-2c24-4243-a31d-893d37f3a216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aadaab1-0d58-46e3-ae6a-8d765078ff0a",
        "cursor": {
          "ref": "9cab7169-6524-4692-9208-d078e9208590",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e653ba76-c821-476e-ac06-19dbc38ceca9"
        },
        "item": {
          "id": "6aadaab1-0d58-46e3-ae6a-8d765078ff0a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ac429cce-d1dd-4648-a622-cd8712abde37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0537e8f-7b07-4b62-8332-3ce001a7101b",
        "cursor": {
          "ref": "bdffd4c6-3531-4cb9-9011-d7cf0f7cfa2f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d7d598df-2935-4523-9ddc-a803e8ee99f4"
        },
        "item": {
          "id": "b0537e8f-7b07-4b62-8332-3ce001a7101b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "232f6bdf-13d3-47b6-bf68-665abff86655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc08283-5160-4c29-aaac-80e88b446dad",
        "cursor": {
          "ref": "03afa928-d548-4b38-9bf7-c1425895aa0f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "68d1c3b5-d6cc-41a2-8733-5cd2b85b35ca"
        },
        "item": {
          "id": "4fc08283-5160-4c29-aaac-80e88b446dad",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "19a31321-ee1d-400d-8bde-bd1dda2befcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d372f85-5690-498b-af4e-9d15df2686d2",
        "cursor": {
          "ref": "7e120d10-6e8b-4cfe-bfcf-9bd49326ec50",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ebe58705-1437-4fb3-b141-c9baa59970bc"
        },
        "item": {
          "id": "1d372f85-5690-498b-af4e-9d15df2686d2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cf0523ac-0e54-4e3d-aba6-f952779438d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179219fb-47d7-4a8b-9383-ae630a5f5af5",
        "cursor": {
          "ref": "9182208e-d031-4da5-94d3-2caa8ca0f41e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4dc5d919-62b3-4100-a7c4-cb60acf25ef1"
        },
        "item": {
          "id": "179219fb-47d7-4a8b-9383-ae630a5f5af5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f813756d-ed0e-4dec-a94f-308d91e52977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b92786-c5f6-4a3b-a06b-1f940b759ac3",
        "cursor": {
          "ref": "f9933ff9-6187-4b63-a774-5e7b103f1455",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "575b54f0-f0c4-4fa0-8b84-6f2c84187b4c"
        },
        "item": {
          "id": "50b92786-c5f6-4a3b-a06b-1f940b759ac3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b4bbf11f-98dc-4f6c-bac8-8795c32b9a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f91ff8-900b-4b94-aea9-7a32f9ca1d51",
        "cursor": {
          "ref": "96b947a9-a7dc-4bc5-9b9d-cd1056c57374",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "26bf8b08-fce1-439a-b617-cd40680a6734"
        },
        "item": {
          "id": "33f91ff8-900b-4b94-aea9-7a32f9ca1d51",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bfc665e1-ebaf-426a-a0c2-de52913b33b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08675e67-0ee6-4c3b-8f9d-a15e182071ef",
        "cursor": {
          "ref": "3ed93883-f977-4490-8309-d6567c7708fa",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5d4a1a32-59d3-4f09-854e-6f40f70d50aa"
        },
        "item": {
          "id": "08675e67-0ee6-4c3b-8f9d-a15e182071ef",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9a1c001c-e427-4a51-ac51-91b8ca3c3fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7860b7-27a0-4784-bb3e-3075ddd076f7",
        "cursor": {
          "ref": "cc0d2364-f431-4ad0-a51a-136f5c462d0d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4142ca26-df5f-446f-b00d-412f80385d65"
        },
        "item": {
          "id": "7c7860b7-27a0-4784-bb3e-3075ddd076f7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9de1a25a-1451-4fc9-aadb-dd99d6bee7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658908a5-8b74-4aca-ab99-fe50b723ac32",
        "cursor": {
          "ref": "9fd4cd0d-a6dd-472a-84e8-566901bfe770",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "53bc0ab2-b93e-4211-9593-8d7834adae50"
        },
        "item": {
          "id": "658908a5-8b74-4aca-ab99-fe50b723ac32",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "87cdb373-b8c7-4bd0-a23c-2dab805b83da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dd0b1d-ce28-422f-a5fd-acaabdf40b05",
        "cursor": {
          "ref": "bd9315ba-31de-4219-b829-8673f26b43c3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "65efe8cd-a7e0-43e7-8900-e369a0c733c0"
        },
        "item": {
          "id": "15dd0b1d-ce28-422f-a5fd-acaabdf40b05",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f03be5d5-7bb2-4c60-80ea-7db34c0adbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1d474c-fc87-4e97-977e-da8e27ec5141",
        "cursor": {
          "ref": "8673e22e-c979-42e8-a9bf-83f90548d376",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8cc1c0f7-4ce9-44e4-9284-b65e96a4f436"
        },
        "item": {
          "id": "6a1d474c-fc87-4e97-977e-da8e27ec5141",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ed97f86d-2526-4910-a157-cd167ae498fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24077f7-359c-436a-8fe2-13fe431cc10a",
        "cursor": {
          "ref": "7dd83d85-d8f9-4444-9498-c3ec836d044f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "18b03900-e36d-4904-85a8-8d54781d9b54"
        },
        "item": {
          "id": "c24077f7-359c-436a-8fe2-13fe431cc10a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f414860-bd98-4245-982a-85dd2e437e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a352ba7d-6384-471c-89a4-fadc8d46ab70",
        "cursor": {
          "ref": "014986e5-23e1-4a09-aca9-8d0f60fd5470",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "38799b3e-88aa-4920-8dc5-c5f85694da9c"
        },
        "item": {
          "id": "a352ba7d-6384-471c-89a4-fadc8d46ab70",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7e05d066-344b-4d4d-a22a-717467c78328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79b0bce-505b-4667-8267-d4be28c042b8",
        "cursor": {
          "ref": "4ea664fb-c000-46a9-82db-5464e892b09b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "34995d60-d5dd-4cf7-88f6-706c75d5cff5"
        },
        "item": {
          "id": "a79b0bce-505b-4667-8267-d4be28c042b8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "441fee1a-2a7f-42c4-a275-6ec75dd15f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6337a3b1-8b75-4524-bf3b-4559058811d7",
        "cursor": {
          "ref": "93740d06-ae82-437f-96ee-cea4b72ddca3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3dcaf0e6-4821-498a-ab76-4c01d3f5cf7a"
        },
        "item": {
          "id": "6337a3b1-8b75-4524-bf3b-4559058811d7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "05c4016c-c95d-4eca-9c0a-7ad6511bb7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c786c929-5c94-469f-833b-c51a1631ee62",
        "cursor": {
          "ref": "1042583b-2c31-47c2-85e7-b78be63e04ea",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6d2d3984-615d-4f7b-b6ed-1872b5c21f64"
        },
        "item": {
          "id": "c786c929-5c94-469f-833b-c51a1631ee62",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4afe29ad-7c44-4ee5-bf4d-be23bf0820e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516e90fc-a1a9-43ac-8480-d45031f3dc29",
        "cursor": {
          "ref": "012b2166-f41a-410e-8902-a8ec703f8b54",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "22df0668-b10a-49cf-b40d-0ecf7072f54e"
        },
        "item": {
          "id": "516e90fc-a1a9-43ac-8480-d45031f3dc29",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9a13e3c5-1a01-4a78-9f9a-809e31a6a89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a64a4ea-f42c-4c37-ad46-61a5ebbdd364",
        "cursor": {
          "ref": "646ba9a3-8142-4341-86e2-57cea6c9270c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "638fbdf3-f568-43bd-af75-fa382a2ae5a5"
        },
        "item": {
          "id": "3a64a4ea-f42c-4c37-ad46-61a5ebbdd364",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8da90e28-18ad-4a48-a246-5be0914f0a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b0d12c-6d09-4ae2-8892-6036f608d2f3",
        "cursor": {
          "ref": "265fd234-06e4-460a-b4c8-bb42a1f06d0e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "73c6041a-00c2-44e4-88b2-6f132c08073b"
        },
        "item": {
          "id": "42b0d12c-6d09-4ae2-8892-6036f608d2f3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6e4bbade-fb4d-44a2-8a27-4e02210c3321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4064ca54-564b-478d-a5f3-747c93d3b9ae",
        "cursor": {
          "ref": "8a4ee423-2edc-4845-92ff-f1a63bd35056",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5b5ce27e-e90c-4b3b-bec4-be9b4e2bee6b"
        },
        "item": {
          "id": "4064ca54-564b-478d-a5f3-747c93d3b9ae",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "89eb266b-58c8-4d7c-a039-2d8141defc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30da2690-b901-4182-8135-e197470a1675",
        "cursor": {
          "ref": "ee6e1038-acd3-4925-9b3f-4c763c43fe51",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8cda504d-6e6a-43c4-9f9b-97bc1e843ed7"
        },
        "item": {
          "id": "30da2690-b901-4182-8135-e197470a1675",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dd066f76-f7c3-4b56-9da8-3837219af47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181c52e8-38b5-43e1-9164-cdfea7988991",
        "cursor": {
          "ref": "e99bc18a-5bf6-4e5b-bc06-337f9456a30b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "de3b1e53-3357-4d90-9640-55b4f67ebc8b"
        },
        "item": {
          "id": "181c52e8-38b5-43e1-9164-cdfea7988991",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d97e8d59-83e7-4214-b33b-4250b7b087fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc35578-14c2-47df-834d-aed3633fc388",
        "cursor": {
          "ref": "656a6ef6-ad3d-4294-b19d-ff61ffa2ed76",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "33e74002-8724-4650-9d05-b3b10ef55951"
        },
        "item": {
          "id": "2fc35578-14c2-47df-834d-aed3633fc388",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "598aded8-bf29-4292-9c95-c4c33834a344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b67693-7e53-4dc8-b72e-1e03690cdd0b",
        "cursor": {
          "ref": "21bbab8f-ad11-473a-9244-0e75a4041d0f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "44297966-59c2-4bf5-89c4-49f25142a2c4"
        },
        "item": {
          "id": "56b67693-7e53-4dc8-b72e-1e03690cdd0b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f172dc37-4124-472f-a548-8fdeef98254e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775382be-7ef1-4013-889a-5d1e3d207317",
        "cursor": {
          "ref": "4d8f55ce-403b-4fe9-9db8-f55145adde2c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ec11a812-b6b8-4601-8478-019bf4b30b7d"
        },
        "item": {
          "id": "775382be-7ef1-4013-889a-5d1e3d207317",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "556d8f88-db78-47b0-ab8e-f2e120d1c9ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b039f6-29d9-475e-979c-4543a2a6f48a",
        "cursor": {
          "ref": "b05c62c3-e3f5-47dc-bc41-a61a5f850151",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "06569f01-645f-4530-8ca5-73330db2aa19"
        },
        "item": {
          "id": "f8b039f6-29d9-475e-979c-4543a2a6f48a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c0c25f57-a5c8-4a08-bc61-e4185cb5996c",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a923c1e2-db68-41a6-8557-e47279800087",
        "cursor": {
          "ref": "99ad1409-62ae-46fc-b65a-cd0436214160",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e3fe9823-9737-426f-8a0a-c12d1cc8ade0"
        },
        "item": {
          "id": "a923c1e2-db68-41a6-8557-e47279800087",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d564668e-0557-449d-aacc-ba01be703a6a",
          "status": "OK",
          "code": 200,
          "responseTime": 3506,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30fec99-0447-4bb0-953d-d9655383fe19",
        "cursor": {
          "ref": "2cbf0538-bef7-4f12-8f3f-98921e807483",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e543f481-71cf-4f36-a28a-08a6dfeaa97b"
        },
        "item": {
          "id": "e30fec99-0447-4bb0-953d-d9655383fe19",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "957878e4-2686-4ebc-893e-911e4b310850",
          "status": "OK",
          "code": 200,
          "responseTime": 3025,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8020000b-7dcb-4375-bb11-97fd6e5d2c2d",
        "cursor": {
          "ref": "7db5d3b9-1dd9-4106-848c-ace2d1af4f0c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46fb4363-d362-4ea6-98b6-bd0998745929"
        },
        "item": {
          "id": "8020000b-7dcb-4375-bb11-97fd6e5d2c2d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "896da309-9aab-46b9-af1c-e348640ede40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8020000b-7dcb-4375-bb11-97fd6e5d2c2d",
        "cursor": {
          "ref": "7db5d3b9-1dd9-4106-848c-ace2d1af4f0c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46fb4363-d362-4ea6-98b6-bd0998745929"
        },
        "item": {
          "id": "8020000b-7dcb-4375-bb11-97fd6e5d2c2d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "896da309-9aab-46b9-af1c-e348640ede40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eceeb8b9-d140-416a-a36d-50f6118249a3",
        "cursor": {
          "ref": "522e574e-d59f-4c91-86b5-b25ed73e784a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "91207261-7dd6-4e25-9d88-c4b79bdff28f"
        },
        "item": {
          "id": "eceeb8b9-d140-416a-a36d-50f6118249a3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cee0ef18-2e71-419e-b27d-ffb252f38967",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57abedb8-27a2-4f24-a2b9-880090bb7d29",
        "cursor": {
          "ref": "9a4d502a-fb43-4c63-95ed-f1e1254c2669",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4c55933d-7efe-4f71-98f9-a4233f3a059f"
        },
        "item": {
          "id": "57abedb8-27a2-4f24-a2b9-880090bb7d29",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6b4af178-7afc-4728-a676-cb5959ca7a15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}