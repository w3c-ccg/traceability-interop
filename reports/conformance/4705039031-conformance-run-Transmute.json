{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2500aee2-8391-4c7a-9435-19b3adb43b13",
        "name": "Clear Cache",
        "item": [
          {
            "id": "886b16f6-b2e5-4c7e-aea7-b74bdf408e47",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87adac84-c3cd-48f6-b081-38bca1816865",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a15f158-60e0-4fc8-8f8e-5c5492bc7353"
                }
              }
            ]
          },
          {
            "id": "d6a97b6c-1f19-4e80-8c63-892620c87880",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f58df7c-d652-4b19-86f9-4b64c4ef33f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d3603df3-1b01-47fe-b2cb-71f1e37e7736"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8a4acd70-e816-48dc-a23b-09fa105261ad",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4f51ad7e-ce46-45d6-ac2b-56b8efb11b1e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f523af0d-c765-4285-9464-30a57575ff43",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fb8570d-31b0-4ad3-af2c-423d1d216bef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68178d5e-265d-484f-998d-21c9074e356e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9be374a7-141d-423e-b385-dc5a9176065e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "004767fe-33cb-4309-8f43-5ea9fbdd44a6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c07cc945-2501-4a8d-b5ff-6f366a3ff560",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "074d65a5-6697-4f44-9889-bb8eaaf8afef"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10d7c6aa-97c9-4234-95bc-3236d655d211",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "edcfba11-3b52-4445-8f5c-d26a5a753272"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37f34c1b-e645-461f-a49c-18a5133627dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61b905bc-b99e-4df3-958e-84491c27faaf"
            }
          }
        ]
      },
      {
        "id": "6f4de8a8-979f-4d07-bb57-c23df77002e8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3a617e84-e45f-4b3b-886d-7bfa1c5aa9ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87146607-8d74-4627-b50a-45fee88da77f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8633a0c-c0cc-4bb2-8db9-16272e046d0f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f562b6f8-5314-4193-a1b9-9c8c7d9b70de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ac43e45-330d-4665-a99f-a54d7900727a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11171a91-9376-45c2-b590-ed5380defa0d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffb9b23-a332-4fb7-ac17-b82f0c247ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a90fb45-15f1-4852-92a6-99cf09581016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f921ace3-f880-4a48-96e8-1376e12b2920",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1ad0e0-7e12-4d0f-ad36-52ab833bbd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9371a3f-75f6-41dc-b56c-2b55a695da39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14a7918c-d3de-4553-bb1f-8119b0870b60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6089a12a-7da8-4e76-ba8f-7ce4106af78b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9996451-aa3a-4553-b1a7-a68ed22464ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc84dd38-7717-4bb4-b010-592d3de7fe68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556cd587-474d-4b41-bdbd-a62beccf8e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03f4233-0230-4ab1-881c-5b4141f55572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4431a73-0f71-4b10-951e-b165e0464684",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19766f7-00b9-45e9-8265-92bdff7b19e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb91842a-0b43-4261-8f88-920c7a486e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1e6435-ff26-4dd4-adee-dfee708ff735",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "9de2c9a3-bdc0-4174-87a6-8a5a66d92f6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6695315-8809-4b4d-baa9-68e23c29988d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a29c2a24-c571-461e-94a4-98653ac1e07c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6a99336-6143-48f2-b64e-10bc56fb853b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8d7ff147-30db-4892-a74f-d4adfbaad543"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f39cead6-6b64-4f04-9efc-071904e7d7f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8bf96bac-c460-4746-ab72-25d95ff17812"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7be9edeb-af7e-45c9-b286-30a5d153b67a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c707397-27d1-46e2-bb2c-c76edfd4feff"
            }
          }
        ]
      },
      {
        "id": "66fdb9ba-a0da-47a8-addf-3cdcf21cb2c8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1a85514e-18e6-449d-878d-4e1caea094e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a0c9042-f200-4e70-8519-8befe6e47bb5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7c13f1f3-eb2b-41df-98d7-22b1a4ee3bce",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a966ab72-132c-4680-82ec-dee729959ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc71126-759d-4fc0-a9f9-f3c5088c93c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1069afb9-41a2-4b89-a706-77db80035530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eeb93fc-c398-4a78-8039-55036afc692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8365b69c-1aa2-4f6e-8b75-76651ff24cd9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc61578f-17b0-4c95-9f05-db4cece814fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5fd697-f0b0-47c8-836b-73a298347c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64396726-2b2b-45b7-a2f8-f5e3c73c5f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9729afb-20cc-4c8c-8313-185c048b1af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7bbfb9-ff7b-4e3c-90ac-2514930d2851",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eefc5dd-ed33-4e00-b8ab-ae81e8c563a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd4018c-c82d-4c6e-9836-889034d5b3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a20b9db-bb1d-4ec4-b458-553478821a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd6eef79-a2b8-4bff-8590-eb595545d7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c9023e-93a7-42be-b358-503de8f186e4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04874902-f541-42a8-8742-7d40b44bea48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e1e18f-b51d-4f75-99e4-853e774d0bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f365768-0a30-425f-8cd0-19b4e87cc2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "917460d3-2408-46ec-9585-61feeb00c371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd65660-e194-4dc5-a561-03c245444729",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe84e480-8821-4aca-a0fd-255b7e90785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9092aa4-85c9-4616-91d2-2a03c973a5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3d70f6-8ccc-4bcb-9801-c436493a1923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0284cf90-1742-41ac-99d7-17f59639e490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5a7c25-76ed-40c5-b449-40881cd63016",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b1e6f5-cac5-458e-a5c4-2b3653788bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff83d33-5674-4d5f-8f5d-ca36ccadb95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd924c6-4527-4a15-ac47-47c842ea03ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ebcd345-a330-479b-81c3-c6e29b16e280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbba24f9-4222-4a40-86ac-74d7117255c4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8db19a-6ffe-4cab-8c5d-15de17b073a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489009ee-38c0-4d2e-a52b-2a0ec8014fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc1dea9-12ca-4db0-94de-16eeedc91d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59cbac9c-327f-486f-9395-1f2b6ee04cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85adc17-1d11-41f7-9e2c-e0c61191d4d1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674e6810-fa69-4d26-9231-4dc61e461573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fd0ab6-8ef4-4018-9999-4b3b4bf57e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1619caa-8af8-4e93-ac60-8abcb4351d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bc69335-4144-41c4-9b38-5d246c88ce2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7b42d0-5211-4a81-8b1f-323e738bbf73",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b09f20-1c8d-40c5-a435-385d0fdda572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87919ec4-10ba-468f-82ec-031640f281b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcffcac3-2a8a-41c8-9c6f-b536d2d7afd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95d21d5f-b207-4838-849a-ad02fe306a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163dd623-4e20-4b3c-804e-c6e316e85b3d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a345f0f9-f994-4281-a80c-432e457782ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d000b97a-4b56-478d-83ab-2e2d3365450e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c7a072-6391-467e-b9f2-41c58c9eb6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55e1182f-58b4-4b50-9c46-d86d40a03007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08096c3-613e-4109-a23e-f796dd9f2306",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa89254-cbd9-4660-91f6-6561fc724eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed55500-31e1-4003-930e-11c920fee119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22ce41b-ef94-4e8c-b433-04a63f48663b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7969bcf8-45d4-492c-88f7-edf65eaf95b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940dda4a-622c-4e35-bda2-430a2d5906bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d89492-048e-45ab-879e-84dd56a87390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8172e833-7a89-4442-bda0-de3a5ae1582c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a5ce73-ef5a-41a0-8adc-44f38fbb702d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "290e17a7-edf5-4e2e-a5ae-68447b0503e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d392cd76-fccc-4b6c-a088-9b56e25d2cf8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0be7144-101a-41ee-99e1-9d11602fde1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f17dc1d-cd7b-4332-a67b-beaa1173f14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcdfcc8-437b-46b2-9106-1afbc7028b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1611fe6-aa23-442d-b94b-23b6a171f076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d80b734-12ec-4d83-a354-39852658bbd3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9bbce2-8b23-42c6-9a7b-4bb009549a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef75cfaf-7d19-4496-82b2-43a3c4d29d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f15a47b-1012-481f-9f20-143c44e5c3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d892c49-a4e7-41df-9e0a-030165587bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18005b3b-04dc-4077-9d18-f64b6a9e58a7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb2ffbe-e722-4d73-a9a0-c57c1ec2c59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1675a33d-ab49-49c2-9f1b-1aa38bdf708f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0ec6f1-38ca-4097-b783-0e0b9335b9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea2b30e3-e155-46ed-8096-57e41d402c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7d9396-c30d-43ce-bf07-6eb6c30dd912",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ce9737-c181-4446-be33-16d2ef706320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629735ae-e80b-4fac-8848-7082beb4dd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478196d3-6803-4a2b-bd08-15793355cf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e39def9-a879-4964-b1fb-e11646b2c6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45398ccc-9202-4c02-9189-14af5315d9d8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114f4c78-c109-4199-9471-0f8fdb7c4288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc61976-f8a8-4b21-a9bb-f3c8a499bd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c6876d-a78f-46ad-82f5-38c3a45a14b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24d9ddfa-52c4-43cb-8cd9-a3e66bfe73e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de98369-32cb-41b5-9a55-0eb39849b8be",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac07845-6b84-4fc7-af0f-8fd7731bfb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b217c08-293d-426f-8903-14b69a184945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d78d6ed-c000-4f9f-b446-9e12a208b287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e7d642-617e-47f5-b3ee-7494b1216aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dba693-f44e-4e08-b8a7-1ad1cfa40bea",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2596c58b-5e1f-4cac-8016-cb42195f9050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16c9501-92e0-4b5a-b061-23e7fb347143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5059b7-0767-4752-9db5-fed662a81892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "346dbede-ae98-417e-ae07-85534bbb36cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588119f7-efc1-4f9e-9f83-3150ffd83800",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fd41dd-076e-4af4-af8a-046b95f8e246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4640f62a-825d-4127-a5da-f807cf719e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b6b146-b9a8-4ecd-9c77-e3ed2e8e86e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e67c1a1-053f-479f-bdba-2cc6555ede62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017a62af-4a78-41ec-ba80-877101fa8ddb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ca866b-490f-426e-a6cd-0961a3c0cda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4f5cd9-b910-49dd-b415-97fd3cc260bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af91e824-237c-48e3-b284-2719aa0ed427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5299cc18-a99e-4acf-a754-d0656669cefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397ba698-f218-44e7-b071-005efeb468b2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a6dbba-0182-4c72-8c82-422659f680c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9420844c-8f80-4d05-af3f-b0806beccbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea2a1bc-2495-4ed7-aa34-88558ab6094c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08bf6853-96f0-47be-9939-e7c1b294e04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d871fd-d953-4b00-b130-d437ed48a7c6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b497bbb7-bda6-402e-a867-06946aa7edd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2e9d59-a165-45b2-89b3-9869c04f15a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97957e8-d7bc-4936-aab5-33e181c5b579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c340a68b-3332-4c61-bdd9-f0644322b376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc2fc84-c0d3-4f3f-a070-d6287235477b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edae5274-73b3-4aa4-8d62-0b87b669ca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750eb7c3-e21c-4398-8403-dc0314ec03a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fff82e0-0bad-4b33-a17b-b814de7ac1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9430a01b-4fe5-4228-bfde-58e2738e7896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f03ba1-8cbf-47d6-9422-25d2ac94e718",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa86de87-fb86-4e3d-9692-e1b88824cfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8649a6-4023-4e62-b8a7-1492d7c57123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfc1bd2-0ffb-445b-a7b5-f2bb41d731c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7449b5d9-5e2e-4361-8c37-f67514a2568d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390e544d-484f-4be3-b481-a2972b4fdb23",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e110ca86-fc94-4bf3-9d57-c64cebcb4ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e02b6bd-3d3c-4eaa-bc27-8c3b8921a813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbd0b83-4669-4abc-a729-e0760581c1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58191ab8-5dfb-4525-98a3-ba36b89f1d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad73f314-f7f9-497e-ad27-879f9e86ce69",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1e8018-2fd9-4c43-8705-36f02b2bcd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b78f3c-d444-42c8-802d-8e6e8fc326cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79514c69-ef8f-482a-af8c-e204acf2a044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5849abb-76ad-4bc4-a01a-33d84498785d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b182d6e-23e3-4149-97ad-7103719e3a7c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfef1262-495b-442b-9303-354fdacd790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc10d66-ddcf-4b34-a6e0-8cc51ad7f074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738c1e59-108b-48eb-b8b0-84b98cff5455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2274fa00-9be6-43c5-af4b-a5eccb5b13d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31c3793-fff9-488f-b471-fd548d9ba790",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f6c5aa-15a3-44a2-b0a5-966582495b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb14472-2ad9-4a21-a6c6-83b4696091d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf585493-fb61-4647-a3f8-579e3feb9de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df3b1f3e-6a2f-4702-b177-c7d76ecee612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf0ad65-2371-4c4a-89de-e833a070fd48",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83ced65-e396-49b2-9200-675b13da7869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b644172-8a48-40bb-a54d-dba30dad0402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3ed389-81be-43e2-8b08-f83f4a288b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eda14d2-f6ed-41f8-9cde-c3dcc59fe012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2383deff-b8ac-468c-86ea-e17133427985",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7c07dc-2e90-438b-b468-61519a99ba24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e317e008-e808-472a-9a47-364befb2b88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd34134e-a329-4edf-a80e-6ca35f2c2560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02fa8ec-c160-4542-8dcf-d1ee55fb0314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266dda14-02c5-4f8f-a31e-a8b914940b76",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73bc670-3ce6-4daf-a8a6-3775923022f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9718ef-0be7-4792-b644-fe0336f9d90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14843f8-1fd5-4248-84d4-9b76f2931443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e30e535-ba86-4000-89c3-47aab3628a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d629047d-1922-46bd-a397-6c5763b95219",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2f8775-eb8c-43a6-a52b-e7cafb14731d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da73c337-0b2c-4da3-a781-b43371bd80ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3fe9d0-4810-4c7e-9c48-abd2d57d9cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9660831e-b3b8-4a36-9e77-8b0b054c0a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e957a7-5db1-4836-b253-46399d094e97",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17c946b-a103-453b-9809-a4ddedde9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69123fcb-cbf0-4057-a48f-3549b1cb8c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93341c12-8a16-4b5d-81d0-2722aec61690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1006f1-4346-4334-823d-e718739197f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eaa633-3c7f-4810-80ea-981bad00957d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eab1b13-fd56-493d-b9b7-deff3b9e1124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43d2901-a876-4752-ab26-53b1a50a8abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699c0bf1-fb29-4291-bb92-cc9bc18db771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2563d7-a9c3-4c9f-979b-c2253bc80fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc73aa6-5820-4ad8-b0d0-c1590ffdac10",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7e42d1-e22a-49a5-b392-5491eefdbdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2f1394d-f52f-420b-8978-27d07b3b18a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156553c2-7f16-4790-a99b-76ec1959efcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17f47d04-2a9b-469c-ab60-cbcc379c57d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ff1549-6c47-439f-99d8-b9ff4096eb3e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7deef0-f8e5-41b7-9a7c-451c75c6ee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca815323-2768-4207-bd72-a9ce30c0da07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec5369a-f1b7-4876-b659-3aaa5f6a4211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "008bd071-cd6b-48f4-9ef5-9aa24ba16431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fa2a38-b453-4110-beee-e93c3d7ac37e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f83d68b-c856-4d06-81c9-7f6aa2c0df2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d6fa1a-c34c-40ea-b21d-31a1ea3ba696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcb5097-0bcb-487a-b3f2-21471667ef46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "63f589e2-88aa-4253-8967-8d79ea46599c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e63355-f118-44a3-b382-c5face76ba3e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a04a0b2-0f3e-4338-a188-9bc0c4ef8d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27733418-3343-4740-bff7-f68e59871833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3714097-c93a-4776-8b6a-827cf9fe168e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b36cac93-91ce-4f8a-8ef1-dd1913c28d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3fa286-6c46-4118-9f04-b0911b66c3f5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624e678c-9323-49df-8cc7-da33ac74589f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22e3247-edb7-4019-be05-454419d525a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118bc36c-7bb9-408e-a0fc-505e9fb74876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd46569-374a-4cca-9d45-23d5f5915abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8b45e2-a1cc-4f90-a1c7-4ed238fb8270",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8119257-1dbb-4261-a8a6-255c037501a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8619e29-9b4f-4c7d-8dfa-4845498caa63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb88773-ff47-4b24-b0c4-9c5d2d21ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a30fc99b-1fdc-44b2-b304-030dacc94cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe54584-8f75-4d08-9ac7-d6773bc36470",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050bb628-2927-4366-9a8b-e54a428b7ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f252ab-e99e-437c-9846-711a3019bf72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a9f9ba-7670-448a-848a-362b7d3051c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2797b2e9-5c79-4a47-8efe-6c49eafa0075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d20a7b2-c068-4ecb-8a1e-bf08aa65809c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e36fe7-e4f2-49e5-8ae4-99bb5c7a409f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dcf772-4847-4807-b4d5-cbfeb2f6039a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4c4c58-d644-4711-a544-1c2c2532da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "35d58922-70b3-48de-84e5-1d006036d0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7436b4-2229-489a-81ce-a73c663ee413",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12ee378-2d9d-4b04-9034-ed2efe5c75d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98f2e0a-49e8-4855-9fe0-85a444e1ba3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef29b7b-7907-4f1f-8a6d-28881057dc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf688fc-43e8-40b3-9d92-56cad66b011e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3cf2a2-6f7d-48d7-82db-4815e51e6171",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2d93cd-7fc7-4ddb-8bdb-dfc1c88c7745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649b6b27-c0c7-4f18-aaca-0655345be819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7ae993-22fe-4c16-8eae-ab98ad87275e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b0528f-8103-46aa-9e0b-0513b77ff0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c8d131-12a1-4003-9ef9-fd00104cc146",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38905c60-ce32-43dd-8afd-619d685b91e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28202bbc-a1b6-4341-87c5-69b4dd3f6ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08875f08-607e-4e9a-b860-a56212f4d2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "003a61b4-e35d-44fd-8a47-0a4a834952a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ce4f9b-ec13-4fcf-8360-5ec09362cf93",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d962c2-7156-41a6-9bf1-84a1f523f242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f165ee2-4cc4-4e5d-8b8a-cd9ce082f660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9919bb2f-b71f-45bd-a617-24c43c5a622d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b91f66e0-0165-4437-b768-4ab827a0a3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7721704-43d9-447c-9f2d-2e8c66680b5c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce436f4-628a-40c5-b753-446fce8d4ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b98091-a5c0-44a8-b7e0-213259ad0967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340d8eb6-a348-48c7-99e2-d2a606e287a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3afa9465-65ab-47c8-a976-4ae65dda63d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f375cb3-36c4-4653-9038-ed2120f2e22f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01c3da5-6736-4001-be2d-4c6192b0cc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a9e7d5-e32c-4d03-b600-98bccb16fc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a0a26b-821d-47b3-8a0c-a7197c38ae8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f473145f-5c0a-4a35-a3f1-e19fcd48e813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d85845c-66ea-4cf9-8e6e-c758bfed62f6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d136ef-a995-48d0-bfa7-0934b95e067f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77df252e-6fdf-4770-9e97-0e0cccf588f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb9d325-5bb2-4f2a-ab3a-138a546e028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6efcc7b7-d824-4528-825e-3310f6df70cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261b5a15-e1fb-4d61-987b-d62cd19b1f80",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01a9ae1-2bd3-45af-9dbf-dc57c8307871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e199600e-12c7-4267-85fa-568c197a7a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecc93b8-67ec-4415-a411-40469247c357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c343308-036a-4ba1-8aa6-84bb55c4cdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6aa297-a799-4335-a44e-a092704e5080",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7074a9ef-d2c2-461c-8d72-c452f71bcba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76473d8e-449f-42d7-b103-83f738b9cd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b32bf0-ad9c-4f30-a862-968cf4199529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcad7aa-905b-4913-84f6-47c09dcd3506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c8756e-796c-483f-aa27-0b07f4184424",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf88014-90cf-4d7a-8110-ab7f92dfbf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114e3f9c-8644-4b7d-8ae8-85825c2a6c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3975e3-f6b6-481a-b5e2-82b5bc9fca87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b208c50-d9ff-4095-a5f0-64f66217fd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d681a80-b356-43d7-8614-969fae060a47",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35207078-2bbf-4885-ab75-3d506562d27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9fcae4-6e33-4bbe-86e2-c3afa59dd689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c31fbaf-5e66-4cde-b3f1-5dd66f13c836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcad012-7fb4-4c0e-9e9f-3b497118c96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08995d8b-66b4-4693-b81a-ef4b36820d6b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7e503c-b523-43db-8342-61aa19ec5f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4dc888-ea44-43ed-a80a-4bbd92f4ee7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad4f216-226c-4551-a388-c3c1f8569833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1d9787-618d-4934-8861-6dc512b227cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135fec00-7112-4266-8bea-833d5971bb3f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cbe699-5386-45a8-9a76-5a818b5be7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9cb68c-6e57-4851-94bb-0ea90c9efea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa2a943-3628-4454-8ee0-e8003e483bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c21bd950-cf4f-4a30-978d-3b3c12cce9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5a1a7b-21d0-4946-835c-1195354b4650",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced56916-0197-4c78-be58-e69e3533c1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b3c059-b84b-4ffc-99a0-60b1ab024b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f269150-f661-4f1a-8b5a-6d199d083309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f592e36-780d-4b14-a308-e50b36dc0c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e59d9f4-773c-4f3b-a812-71b5a720c702",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e303d40-ec19-45e1-9d5a-94811aabddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a8e8bb-a4b7-41ca-9e16-9161ef7c1e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde80275-cdf2-4b3b-b430-5172db19f954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6e30e9-7800-4d96-bc88-a632c5001019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739d661f-1dc1-4060-8dd9-ad5b2dc4a015",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763d3b13-ae67-4fc4-ac6a-2d7d5bf7a049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac833d8d-9579-411c-82fc-92af232eda69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaafbda-8a2c-4504-8e28-737c6a684427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be0c6555-590b-4aa7-a760-ab18976f8c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9f9195-5813-461f-b69b-726c09f36959",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1106f88c-a384-40ef-8721-c28a9c4cb19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4a335b-31f2-45c0-a5c9-b211bf09a2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca1b497-a14a-4cd7-8492-78c3a246a46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c74248d-93c4-4ce9-b54d-468933445217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e7cc17-6b88-44fc-9968-a759bd1dfc25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcae94f5-f982-48b2-a402-9c2bcaacbbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c544b6-347f-4eb3-af8d-f2b4d04bd1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b5f10b-01d0-4564-9ccc-a3c64ea57fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9baea67-2f96-4388-bb4f-041c99352a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049c6e1e-cfdf-41f2-9e1d-509717d73ba9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee5e977-b5ea-45ef-ab53-c415d04175b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb356ee-c873-4dc3-bc59-3f5e04c3ef1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf8ac56-0494-470a-884c-c2716e7a019d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d4d84f-3f8b-4a89-9c01-98f6aff06e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec517a4-6459-4fcb-a894-9626898e52ef",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ae1d1b-2881-4c39-bf3c-f83518eda933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8f6cda-7219-42f6-8ca9-30b41eb4d377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae94eba-8e20-4f24-9474-9aae35d35610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0776a0d9-e9e0-43eb-af9d-ca4e36a03865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6f6f3e-7add-4c30-803e-2037d79e20f8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcf6a4e-01b3-4582-b2a4-73deeb979a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33017f8-d1e0-4ceb-888a-8348d91382c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fe1075-3509-4a3f-b6ea-ecab84b4754a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "482791ee-69b0-47ae-88e6-2e6ad8a250c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4777ef87-072a-45c7-9215-525b703b4879",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371922f8-985f-4f25-95b9-5748134062b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecafc54-9a17-47f3-a173-8abfc714abf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ff36ac-0316-4a1a-b779-b2481ee8a331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2162ff0-3af2-40b9-af48-2be2a0b4a24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20704e14-1719-47af-988d-2d697e16a982",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a4ae0f-bdce-44c9-8071-d14ea1795a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bee7b2-20c2-4eae-8df7-928eaec5597a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195f25fe-c7b7-4887-af56-de6a92825d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63ab1f09-e86b-4c99-acdf-bbbe800de7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf9d621-1102-4266-83ef-fc39ad5e477c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d88b585-0b6a-41ed-8f1d-51f3d5efb319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579c813f-6ad4-46cc-bbc3-6e86c818678b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58f987a-b857-41fc-a1c9-b5c321dd576d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86d2bbaf-204f-400a-90dd-2c53e2df9d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4027dbd-54fa-41d8-9c2b-4c997a422242",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce4a15-e9e3-40b0-80df-a087c8cc6421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdebf27c-0b95-4786-9ad7-ff4e5f0c4433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e49164a-63d1-4f4d-b59a-abe44cf3e80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5363630-66d7-48f1-a831-0edbc3d4d3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d61c92-581b-40a6-8ee7-73d91c04ce8d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a867ea33-cb5c-4311-b816-4029516b2577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb0e0dc-a1a9-4cfd-9b1b-91502da0657e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a6d110-b93b-4fe7-a91d-01a2e0a17be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "543702f7-7462-430a-a06d-384b12fbd027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e102e0f2-859e-45d1-8ce7-9d9d401cfb6a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f50c24d-b677-428f-85fb-61b089117dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1e5738-6fc9-423f-abfe-4b4be80f1637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61393087-f3ca-45cc-b73e-450e96fa7fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d81f7e2-87a3-476c-9d94-05b907feef9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c053e7cc-3ef3-4278-84a8-8cf39fb12c78",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db93aace-c3dc-426d-b67c-aafd6ccd2d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9d3b4a-3280-40ea-a636-c6e819bb7e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6408268c-27c5-4986-a526-6017c0d25f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4590922-a3f2-475f-a153-0886afbf35bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2820a0b0-e2ef-4172-97ee-3a94731c8a3e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0836db36-a8dd-4e1a-a551-2488ea0db0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ccb785-f0a4-4379-83ad-702c9d4b011e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1000f3a4-bdd5-4a6a-9742-a189e1588a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f0caa2-768d-4e16-9d94-4779d4f7cec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9180c904-52c0-4c45-9972-484b975b1ce1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f1cfbc-e0ce-4f86-b6e6-b23de3cc6097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f88e2b0-a0ec-4323-81a4-4629408a755d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46424010-ce48-46f5-b78c-7bc70b03f16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5a451a-db76-46d0-a476-d47eeb04b413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17703153-fcfb-479a-94af-d6f8b6587a50",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ae0bd6-7da1-4c71-9739-22b48a7be455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0320496d-053b-4ca0-8664-b245ab53d87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1796d0b-7f38-40cc-a8e4-6149f257b698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "703365fc-88b6-4d99-a018-80923d51dbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f81ce75-a7b1-4655-9f4d-930a25bd8d0e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520dd618-3d70-4f56-b122-ff9b9b538025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea4350d-ba38-4fb9-9e16-ddc7d81db37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3344fb43-7ac6-4126-841f-b992f0c126d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0731eae2-ce2c-4a76-9f5a-7260194120bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a39b46-d524-41a7-8604-bfbc651041eb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0057af-2aac-472d-ad3c-82cf22b7800c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31245b0-c319-44a0-9a98-98a5acef0ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230c55c9-4e6c-4575-8469-5ba6c0ad6542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "082eb2c5-3f34-4c05-8a05-4cd12d85a102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9699bde4-1fa1-4ff2-ae63-b3a02a7b81d7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcb50eb-daa0-4999-be74-5ff29b7556b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0944cbc0-9fa8-40ac-9d10-8627fd633960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8e9cd6-18ae-4e27-9822-bf8312dc1be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c526a8f-94bb-4db4-9a27-878d518d1c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508490c8-1d45-4747-b256-5762453c616c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5490347-9a1c-404f-b705-457b350e9e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b15753c-09ef-4b48-8caa-bd8562f0aa39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca74a446-ad1b-4334-8f0f-1ee5cd620ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17dadb8f-0687-4d83-a80c-25e2c3fd2ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ddd0c6-9e91-4343-8004-2029bd124fcf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3234f011-b9bd-4906-acea-e4ea6275a408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84d2b45-239c-4a8a-a48c-370353460a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463d7320-df55-4580-adf3-a2634666fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f755881d-d8ea-4f0f-88cd-7f03bf7db357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5380c4c4-38ed-4100-a1cd-31f4587c7f92",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5329083-39aa-46ef-afad-f7e49827b705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4418ae90-3769-49e2-bfb1-70eadee999ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9953b52-d601-4c88-8bae-b08558c13cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "954ca181-47a6-4c59-b0fa-a154f1fcd0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735726f6-dd14-4c66-80e2-c2663144811b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c0e519-530a-44f2-b3ae-34428618425f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf78939-f02c-4ba4-8248-c2578ee1270d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebdd01d-a285-4f45-bbbb-86c3e805ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0ccd9b-606c-483e-98c1-39e54a977e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf74ee80-c384-4c30-8f72-b9f2c2098865",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481a429d-3137-4a72-819b-4dc2c04174a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c47911-2d1f-45b1-807b-4cb2c5f5d41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97e2619-06a1-410d-8704-aaa6416b148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c09eee-e8a7-41a2-8e2b-c6a51bf0e1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e57cf1-08c5-4e88-9461-3fe8bded9ba0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933b8689-bed4-4af2-9f72-d4da201b531a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbe0d4e-d0f7-4438-9693-833b04bf1c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fdb928-b27d-47d6-8c53-3d7c284b4b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "748f2406-aeb8-4bef-9360-c67aeaa6af44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316358c3-0ba5-4115-b395-40e34e55fd76",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97d9406-4e5a-4735-af5d-06b6b0d06692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba8f75a-e633-4b60-910d-86235ac7d200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0370025b-dd2c-48d7-bc1b-0eaf1a40b9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51d7a362-b19c-4bf5-be61-7a0dab2f9d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568266d8-2615-43bc-9b5e-e312f26de02c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257a52fb-0d21-4772-a7c0-f3288b32b133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e05174-fa41-4665-b5ff-94229ffb4a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94632841-d986-4587-9127-5dfc464ed798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c97b70ad-2abd-49f7-896b-2ec5b2252851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d31b8a-5646-40ed-a0a4-ad7777f1c15f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a59664-6cae-43b1-b8a1-95ffdb6461c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d44c49c-1e0d-4801-ae58-0998b6e40578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579b4b2b-f4bd-4417-a267-871795185144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c23c55-5c5a-4948-8896-3eecbc640f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ab1594-10c2-463c-81c3-893ea037df30",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af817cfa-5a66-4c18-8776-db16cba7f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad10c31-9293-4a2f-99f3-29809d50202c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2f9ee9-16ec-4f42-9ba0-f0f3982026fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f9c0b3-6979-451c-8e0c-8b282d0891f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776593d2-120d-4787-bfdf-469ec0c3a678",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07732bd7-d96e-48ef-80b1-94ed737e9fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249e6217-2a5e-4fbc-a823-e14d7ede5ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4864bb-4ac4-485b-9bf3-f024aa669819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c188ba92-bfe6-496c-b2bc-5a3b5a83dd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fc004a-d586-4e4b-a1f2-324a99d289a1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80269429-4995-4d9b-8fb9-991dbd883ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13df97f6-0974-4a1b-b63a-464841c919f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb724cab-595c-471f-8450-0e858aefe479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "255d97b9-348d-44d4-a0d0-61fdcb7ae7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c5f5c9-4db6-4638-b9d7-dabbf7e7228e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d595f0-f20f-4517-9bbe-508213546047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fdbafa-0252-4074-99bc-6fc2a75e3165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1f7f84-e839-46c7-b59d-c4a5919ba6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8b8067-0a4f-4bba-aee0-f1713feee2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120379b7-d607-4da3-98c1-bf6a222c9b59",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b7275f-1b44-4b8f-b2ec-b7af694b5583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b19a21c-427d-4087-ace1-824bcb9c3f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329bd74f-f124-48aa-9e2e-1c3131f2d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "38fc9153-09f9-4172-9198-c0c36382bab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29e49ee-a434-455d-a932-b1901bc01d9e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b57d10-ecd0-43cb-b61a-8175399f1a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c4501252-2209-4549-85bb-a6c9f6120edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b22f3f8-5948-4726-ae62-abe772439c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfab2587-fc23-4f0f-bd1f-a9d2c39fa913"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25ac4ae3-b51c-4b6d-bdff-914ccc52c0ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dae5a2c0-8008-4133-a6d4-cdbcedaaa9f0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ec4c86-8140-49a1-9b81-a282498826d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d9a0b3a-8ba1-4eb0-880e-ccf4c6830703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc39a0a-bed1-4926-adb7-0738788d91c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6ec188e-a433-485e-a571-5d9ff8397acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb34f599-c432-4f3b-a117-c08b9b6b9b7b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3381f7-5c95-4576-a030-b9e58a9e3099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d311a63d-b12c-4191-a55d-a55b13712845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b538b9-77b5-4797-af4b-39db00f8eba3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e42ea8e1-76c6-46e5-aac7-f2799a47a5ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f8a60fa-cc34-4770-9728-4bcd5750c01a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5710c136-32d2-4676-b186-f7ca5d7ce0af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a27891a-02ee-450b-8e64-dce9ba91185d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2984059b-6a10-4c57-b8b8-17b829ba47af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d889e75e-ba1b-4bd5-9d78-85448ef9aa48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d1fa3ed-829e-4808-b07c-050113e15aae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2981e66-fd1c-4bcc-993e-5e47c9ae1b1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f05ef97a-d7fe-4cb4-9db4-fcfe6dbb461a"
                }
              }
            ]
          },
          {
            "id": "cfd33629-e87f-437d-87d5-012e391d741e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e1d5d39-15c2-416e-a2a1-cbd5758d6c24",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee9e2f57-0a9b-454a-be95-593c547dca67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47049885-fdff-48c6-80c7-b93d940cd01b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9691670-cb79-4d61-8040-a740f53a945e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "294bce54-3605-4d1c-b974-a6fdbc854951"
                    }
                  }
                ]
              },
              {
                "id": "f78af145-42b9-489b-a87c-08722ce7be7d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa04d460-9d08-4ca9-8eaf-62b798175625",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56736e3d-d353-4466-aed7-742a943415ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13ec86f1-73d4-446f-b624-6bed763015a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1063fe15-b1eb-4597-91ff-2669977a17af"
                    }
                  }
                ]
              },
              {
                "id": "3992dfe6-7131-4e30-bcaf-f979905dac71",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff529757-8cb3-43ac-9968-a63723a0b3ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61fec05e-af31-48ea-a736-6153e05c8547"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5c04356-b6dd-42a3-b83e-a829d676f972",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5045dfe7-5d8d-451c-adcf-954180f3f25f"
                    }
                  }
                ]
              },
              {
                "id": "8ec80c21-953d-446c-aa56-f3a018ca0818",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb654f79-74ec-48ae-a045-f1053cd79586",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42944212-0981-4e62-bca8-446b11c903ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c105dc5-4cb2-427d-a6f6-6d657334b0a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5fc72686-2774-4eff-850b-7d3aa897da94"
                    }
                  }
                ]
              },
              {
                "id": "d0658366-5f67-4bfc-b9a2-1ec0483c7496",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7cd7c44-d8ba-4d56-9a00-d36be05d0abc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03029283-efbb-4d1d-97ee-b0a32c856d62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d8b663b-4089-4d67-ada8-e439c3d086d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c4ea566f-ebe0-4b7f-81fa-c96fe2165c34"
                    }
                  }
                ]
              },
              {
                "id": "b45b00ea-bf87-4b01-85f2-bb99cd9ca700",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52e15a6a-bb39-4884-8bb1-138aebaf1b38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2c5ba0c-db63-4c3a-9017-183a32289f3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ce4c162-de04-4438-89f3-00cc004bc39a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "38c23aa9-2221-4c63-b6f4-72a46f72f791"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c88ce626-c2cd-418d-976c-3c741f3e8e6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b9882f6-69a1-4ada-a757-401b878b8f8a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f9a04c88-13e6-4ae1-b7e8-c5a332d4b5b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "142b5a34-aa49-45e4-a0fb-a6ad8b88c67f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f67bc5b-e966-4d84-88f8-130caeb17f10",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9c9ef4e8-1146-424e-8a42-15564975038f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a38741c6-aa30-41fc-9dfc-0d2baf112db9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6eb33f57-fee0-461a-96e4-a72e21b545ae"
            }
          }
        ]
      },
      {
        "id": "6c397150-149a-46cb-b8e2-85d4c3a18ca2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b44ebcb9-8565-421f-8228-0a83e6adb0bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41a7b266-3cd4-4916-be6c-de0d9a3c045d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34abe30d-7191-4d2e-b4de-092e5d55ca94",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb006c5-c796-4749-bc53-e1ca70b7069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fca992-ff73-4148-a5da-4bf334c8577e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0794de7-628a-4ba0-8f2d-eb3701776983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4077422-5cfb-4c99-b9c4-7d1179a74051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d522e9-7077-4ae9-bfcf-b613ac7f79ea",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9235e4ad-83d5-4714-8ec6-ba61bfed08a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec0b345-0cda-4196-9dc8-a3a8e06c0207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2e030f-cfb0-435a-b3db-f51c12ee2775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb774a5-f194-4afe-b440-5ae84fd02efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4c3e9b-a185-41db-a587-12087c498e48",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6998d1-6d05-48d8-9478-4b91d4133d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e33cda1-2bbd-442f-8d0d-3492d333436f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff759b8-e2f0-4053-9105-c7ba7074b9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26be876d-2d1e-4961-b384-8514c8041fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347f3441-a543-4692-96fb-31776f320b62",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c928972f-a1b3-4742-9d2d-c3af5c9a2a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a06d027-1ca7-4e4d-b8ea-ee8553e01fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4dc810-14b1-4315-8650-dfdd0d8dffa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15fb1098-ee5e-4653-943c-948712183d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0168e7c9-1f3f-4638-a51a-a763e82c1a05",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4a607b-634a-4df6-9047-5713117fd4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8772a5de-13dd-415a-86f0-a218cd42a73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967fc549-fdd6-489a-93e8-f6c2c2e7bbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee0a1bc-6e2c-47f1-b53f-d69b2778d2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e09f23-eaaa-4332-98ae-ea4f4100f8a1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39820b2e-4113-407e-b738-c41219a9c467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ce1cb5-3ba3-4198-bcb3-e8d8170534e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63656883-9adf-40b3-aa13-485e3001c9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9de4b09-487e-4ac5-904e-b1aa655dc404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8a1189-d97b-419b-9a23-c8784a0dd79c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f650919-143f-4cf4-8f5f-893db1e4f283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed96aba-8865-4364-96ad-64028c1e8452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84874956-03a7-42df-9ef0-26f17856f544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8feb4d60-1b63-4a18-a39b-50b919d0a07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6f7675-a6a2-4b34-831a-a423208adf78",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c75b4b-c22f-4efe-aa81-deba1e93e722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709f1059-6689-4f97-b404-b7777236f091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3956d6-cede-4956-b923-c60345d2448c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1d8bfa-aad5-4a9e-a635-d19224ca166f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d151255c-5a3e-4a3f-89bc-3e04e1bbb5c1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4e2d81-df0a-4800-8e8c-ef432e9c3250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f93adcf-721b-4c16-82af-b2e875adc24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e488f852-7115-4b92-b0c4-d53f4beb824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a8eb5e-a6b6-4edd-9cd8-b95eee9b24ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085861c2-cc78-4e3a-9cc9-31c3192b2678",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcd0b0a-5c6b-4197-bbbb-6d77313c560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a1862-a0f4-4872-8375-9360bc8e98c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b01ef42-f39c-4825-b1d2-371bb6c3f0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb329700-5fd1-40ef-9845-f1bc766f5a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da23b67-a735-4c31-ac83-8e8a8044a7b8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b403b69-050e-4526-95cd-410f8d417d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5936082-aeef-4392-ada1-6a730ca0521e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedd34bb-be38-4296-8d5b-0b0173daecdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac2edb8-ef82-48f2-8817-4fe9795990cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c60f6e3-9166-4153-9b3c-e3588ccbf83b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab55a8e3-d9dc-41cb-aad0-4b39248c220d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab07e6c-8ca2-4362-b9cb-4d669638a85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c858ca1-e284-4a31-8db0-1974d8842af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1806ca34-1f7c-4f5d-9550-6b79d3d6539a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5b77e5-f473-492d-a543-2fbf73888e9a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8742842-2a6e-4c69-a129-f106a5d66775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a790ce-90b1-4872-bd0d-187367b18350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea07232-97f1-43d4-a8cd-0db0f3d94751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87674753-d7bf-4cbb-9bf7-9b8d47c0d75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7b1b38-58aa-4557-9354-9ec5c84d0039",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c4b2b3-09a0-4212-86b6-2ee430a52dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49f2a89-00dc-4788-a821-f2d186ca6b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac939ab-dfdd-4cca-913e-ccb7aeb2ee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e72d1ad-81b2-40cb-8c75-c5e46d7c6b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe0295c-97fa-410d-9b5b-01115f72af5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0585579-54a9-490a-808c-c65c126736e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a5dd3f-bda4-4cfa-a040-077ed3ceba9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa797dff-3214-4ba6-a297-feb93573e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef86c707-c61a-40e9-b273-31af23a01f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3376da9c-087f-4d6a-8c99-13ce0b781e22",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6576eb-c384-4cca-ad24-663545b81bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5cd606-0b30-41f7-a621-1d205de5d48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda2291b-d06b-49ab-a2f7-ced15095f304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "95321c10-c0a2-4c89-a4ed-a5f02b05b5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878d0059-9773-474e-ae11-912f1029d02d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856ef57c-42d5-4a7e-8f55-b9ddf5dc0eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8025aa-fd01-4c9c-b007-8b715dfe5660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c32cc59-b311-4339-a815-841c7cce2299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddcfd99-3edd-4050-b4e0-9df4cc44f08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ac98e7-538f-46f0-a6b2-dc74cda440ef",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f288a59-828a-43d4-b5cc-0f123666be7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bf2fa6-6792-4d40-b9e3-3495353e6cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab69b234-0bdd-4298-85e9-621d187d20c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b74d19-9a41-475f-bdaa-bc8199fdc8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416afe9d-7874-44a4-a3a8-ff36a43833af",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c53eb9-48b7-4077-9682-7e53e4b4b724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0214a8a2-7e58-4aec-8cba-6e42a1edb890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222fb85a-c7dc-45d3-81cf-08eacbba5cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "434577a5-88dd-4401-a3a5-336ed44ca2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079d38c5-e21a-4f55-942e-441a4b82854e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ae7058-71b4-49bb-aba0-612b7216e6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dec4c9-89ce-472c-80e3-884c190dcf83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcdd92a-fd0b-45e3-88fe-d8b3b605adc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d4d81e-cba2-4bf9-bb5e-864290dd5824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3f5048-c65f-4461-9910-ff4e8040d6bb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782d4f9a-9e88-4c17-a4c9-9cd78ad139c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f001b0b8-39b6-40f9-a893-c957a8051de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393b5f92-80d6-4af1-929e-5b2904d9d37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf6719f-daf1-47f9-92c7-ef25a78a5069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01be7179-3174-4e40-992a-2ca140210790",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b327ac-1696-488b-8aea-8c36be7ea571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa4c13c-25b0-47fa-91ce-d13ae0d129e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc2529d-13a7-40ec-a318-6f377411dcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc4ba96-8cc8-4b80-9c6b-8738096a3249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6f20be-5319-4c82-8590-c732b6bdd3fa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa48478-1e02-40d8-b25b-f50227fa66e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c06b5eb-0849-4feb-9cd9-3ca03fecbfc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636814ec-8e04-412b-a6ae-3474d1e8b490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12e6829-235a-4af2-b7a3-c84a6a3c39bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9b547f-5abd-4e7c-ae4b-1dc244e50c30",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c2b8fe-3490-4fae-96e6-5852bf66f5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe1234f-01ff-4951-8666-fbec7aafead8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab3ea64-74b8-48a5-a519-c382147eb0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5553e20d-2208-402a-9031-27522aea652c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb607ca-5673-4521-90c3-c4f4c85527c6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd391d62-9cbb-4acf-af3f-f5703b1eb0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edeb2bcf-2f40-4318-83e1-f4326f73b627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975fd9a2-4033-4d59-99e5-74ad6b6462b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1637c7-be8d-4fa3-a0f3-77478c87b625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374a90e8-45d1-4db2-b005-773e17f9dd9b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814f0538-30f2-4636-9178-a3cf0f76d0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1ca7bf-3941-4989-81a8-fcf6e5a50a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49aeb2c-2a6b-4152-92f8-036d7a126337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a738f6f2-6c9e-45ca-9601-22ead9e478b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a8dfa5-f2d6-4792-b2a3-7ef9782aa4cc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9867ac6b-cacd-4982-ab9e-9361cb1d8ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27e6c55-8931-45aa-9f4f-10c8b5556225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a07ac70-ec4d-424a-a117-fe4768556aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9164f35-dd7a-464f-843c-2d2f37ffc7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f814fd29-1984-4a6d-b28e-78456419bfc2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbee86dc-b0b6-4992-9a49-871c269b0657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ae3ad4-843f-49ed-96d2-29755889c843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b62d4a-3367-45a6-bf2a-79abae3de9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e7e482-7cd9-4c2c-9e95-e52925a065dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce4c5c8-2125-4089-bb63-4468e7041cb9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb033976-2488-4b4f-9630-648bc7c4df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b02089-5b7f-4a47-9527-09509a8e037a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310e3818-cf4c-4565-88fe-0b1696231b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d70239c-5896-4fb3-bb3a-c30b3c79335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82632aac-72cd-4a53-80e5-0e5c2bcf1361",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62649776-b704-4c82-b980-1d695d246fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ef6bd0-da56-4dc8-9901-902835f6e7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ba28e5-c543-41d9-8f71-f83758f528af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d5b557-a108-4bfb-b0a1-8ca00fc057a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceec4193-5799-415a-aa87-ac9b7457b5d1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9237afd6-dd1c-42bb-9ec2-a0a6427c1eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6893b24-c91b-48fd-8538-f1bff8592fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ddcbcc-2eb2-4e21-a5ec-e53e3b6f039c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb04f3ba-5bf8-4c35-89a4-13d5d11d3776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6183b110-08ab-478f-9dfc-48231efb660f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a725dfd-8c67-42c8-99b5-004f970a6ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b95e31-16eb-44e2-b87b-26c33fb227e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f241097-874c-4409-8283-9a006f24de0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364de163-c1c8-4676-ba13-ca1c9c5df221"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75e71e07-697d-4b4b-b860-104f821df36e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "715914b7-2393-4529-ae2e-649740f5dae2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de21884-fabf-462d-af62-7db7c275d5c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cd019256-93f3-40f4-95e6-1cb6d65f05a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9350e72-d27d-4f2b-8ffb-b233043f440d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12969531-ecd8-411d-800f-99550df08f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa58608-a924-45fe-8178-12168e96717e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a427a55-f997-4996-8f74-0f654f62c9b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c6247dd9-55e7-4c7b-aac7-dd017f36098f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1712b90-eb65-46c1-abef-930aba2d0f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "081f369d-df60-48bb-aeb8-95ff1240b0aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d013d7e7-0a36-4fa6-aa6e-b347728116da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8c6b7da-5fdc-441c-a782-8ce231fa96ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18cb7b44-d0da-4e97-b508-bb83d91b50ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "591d7958-6d12-483d-b136-bdb91e960851"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0280601-7034-4b39-b5fa-e5c56d9043fa",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e931f6a5-b0d0-413a-8849-12a484ba6c08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7099843a-9a8a-463e-b5a4-1b1c8291afc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cccc814e-0955-44cf-b95b-533f92ea902e"
            }
          }
        ]
      },
      {
        "id": "03cfcbb4-5272-423e-9a20-779720b2e9b2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8e3f3398-78da-4a81-836e-798bb4bbbe49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afbaefec-ac3c-4f07-b03f-1cddba5737b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6f84a16-1ff2-474e-9b7c-41d547fe06ce",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069620a3-0879-437e-a570-0d42833f3b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1c3a07-47e3-42d2-91d8-e494ade589bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611cd46b-e7ee-408e-bec9-bce50f29a920",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecebd68f-ed7c-44a4-8b0f-511877a63d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3a4045-9572-45a6-994b-efd70470d404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467852d0-3a67-4268-ad8b-90dedf664d37",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1796ef-840c-4878-bfbe-7239ea55129c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35250f7b-ceeb-4762-a650-dd9721db835b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b714ef0-633f-4697-820b-862c9cd6526c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145cb498-de7d-4418-a233-38b442971c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40d896e-be0a-46ef-83d1-9eff686c01f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b6481d-27c7-42c3-934b-cb3cb5757396",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f87af4-8643-48e3-9d17-bf34f5852f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a3f85c-2c96-4171-b647-643ca2612878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49067e5b-25f9-49ae-bfc8-5266b8a9de6c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7502ed-1949-4c30-b13a-c5b12340e923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8111f516-2f82-4754-a154-a14f77de31ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0e659b-bd6c-40d1-8f5b-4383c8c42b07",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2733daf5-a2d8-453f-aeb2-ffa1a4eef741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46396717-90e5-418b-96fc-82260379799c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45dbc4c-36a9-49de-9969-b922172655b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadc6d1a-535e-4433-8568-572598195542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbb17f5-2149-4893-93c8-5f3592ef5792",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef359ad-323e-4179-8d56-d66d5c6c5e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760906ca-d401-4ee5-866a-1a52e4cf8402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b258b78-8381-4c33-b0c1-0cf97e7e193b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa219898-0f5b-4db0-a42d-17d79f8ccf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e837b091-fc9b-4d72-9ef6-1b43a93b1c60",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50da09cb-8c7c-45f9-96f0-4b52c8a5fb59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f40df08-c8f5-4a65-b771-b518d67998b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa1c237-5834-48d7-8c53-fdc47384b3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8f4de2-95a5-4e57-bee9-2bd869848f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600a2791-e4bd-48e3-9d62-766412a82a7b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c379c2e-c02e-4059-9ec7-406b88894263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53317b8d-c4f2-497c-8d3d-f832fa937c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae6e90f-5c10-427b-9df4-7b0d2c149e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531d4c4e-072e-4989-ba21-d27bead0fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167e98b6-c3ed-4367-973d-7c803f383b97",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5733d633-98b9-4c48-b51f-f728553e433e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585f7438-2469-479d-b0f7-812289a20956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8df411-b2e3-4c80-9a7d-3ff3ef1b6d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c493eb-5d06-49f9-a950-2a36f5800446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9f5023-244b-4370-ad62-7c1ded7343db",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ed201c-3a8f-4918-b560-947fa9630c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5daf8e-3eaf-462f-bf0d-c866eec40b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9333a81c-10ea-45c3-a7ca-7ed1be9cf363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bec48a-8109-4203-a886-eb69b2e83d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a34741-8783-4c68-adc6-2638fec7ff0c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef0140f-bee5-410a-bdae-ae7329375dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e308db7d-5bd1-465d-b28b-90b585efdc44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ff305f-40bd-4c22-827e-ece000f7a757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12501838-a4b2-4eec-8276-8f91a21fa8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3366553b-49b4-4f42-a31c-627817354fc3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa898187-a5c8-4a4f-ae3d-e7f999db17d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39294ae6-048c-40d7-acda-19de496bed81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f1438c-9657-43f3-92d4-ff8185fcf9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6647c9-340e-45b3-9120-f8fee5288c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad1cf96-d35f-4ebb-802b-0347ef5a0c0a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a02e3f5-6df3-48e4-a652-e8cb45942766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef26e7f-fd42-4c3a-873e-86dac162d10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b155ec-49df-48f9-ad8b-99858c6d0894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5130cc8d-b388-4b2e-bf77-a29a4cb1bea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51a4756-a864-4598-875d-57d5268d77c1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb1d0d5-51ef-41bb-993c-6da9f3981c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee35c3d-d085-4aab-99dd-de7a815eeb49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94a79e4-b108-4a7c-83bd-40b8f145cde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f649b6-d6ad-40a3-a8d8-b74762745e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7bbaee-30b3-4629-b893-ee0847eef58f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89684bc7-61ab-4f7e-b571-de0f27b24feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756cf4c5-a204-4497-a56f-30bfcf93c77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649ee7dc-243f-4330-8ec6-b87e73c44840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ceff08-4eb5-4b94-85a4-e1913e93218a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316894f9-56f6-471f-8dcd-b2fde75a4fb2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb534ff-ddb8-4121-a7e1-3280efced8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44500bb3-61ed-434a-a9cc-8f6b1054d608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256ac8ad-41a7-41f7-8739-148b751c8697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e4ea51-a031-40fc-bde5-5e1aadd6c048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383e8017-1f95-4510-8ad2-dad4b6cc0502",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56afbfe-0fb1-4969-930f-1f2d8670a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b29eb9-07e8-49df-bb95-048792594e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa013ef-0d23-403a-a3bc-6a847db20c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99018d4-47f8-4334-895f-d8f98b9eb079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f11f27-9f37-49af-a2f6-57baa03adfce",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a133091-33a6-4afa-b80d-f9b138051557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d576bbc-9892-46e7-af0c-0139c59cff8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f6e598-6c7e-4f18-bdd7-01c34a702fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75130552-c5d9-46c1-9f29-aa38da6c957e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332c871f-b820-4a6b-9630-1d75ff58b044",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20389462-98b8-403a-a1b9-c96026973da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3936a5b8-4ca5-491c-a9fd-ccf304c2b52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2976334-e17f-40d4-b40f-59205db3341b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9091769-d053-4e95-a721-03cb778f341d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0c3e68-88e7-4fce-a1c1-779655491c2a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6263b2df-475a-4716-af8e-44965c6a31e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f8c5d4-4163-4310-8304-4562d1a74874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15c3338-1a57-413e-b37d-a240467f42d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f11d892-93ac-40fc-9820-0c88a6f8e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba9f9af-79a8-42d0-922e-bade730dc79a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd8dfa9-a65a-4010-8c6a-82291dc017cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729a2c37-718a-4e06-a4f7-913ee4766a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339f6a69-7f0c-4ded-90da-7a0dad07d45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf228258-5d42-49a4-a632-ffd7ae6c6cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88033b1-3618-4968-b343-289687d4a222",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081bc3a6-418a-43e8-a5f7-50df31514780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da21e27-fffa-47cd-a1ab-6544751bc8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2ace61-fdda-4816-af52-237cbf04408d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c455235a-3dab-4db6-aa7f-5a70a0dc274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c77cc1-6b22-4879-8dd7-fb5ba7999350",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3de5114-1668-4d2a-8184-806a9093a64e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0426911f-dc91-45c9-bf24-40c24a17d6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affd3252-b276-48ca-b2bd-b5dc8d5fc1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608cae98-23be-4af9-8cb7-9700b7b1bc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc82bac9-6aa2-42ac-a33d-f00b9a361b19",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de70208-0abd-403a-aa01-c7d2f671c23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9305530-0aaf-4982-a824-4263cad79741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8ca4c7-e006-4d98-a967-2a7d548b1d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025a5ed1-fea8-48cd-aa2e-262619f84167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76863fd5-fb8f-4c82-a28d-a1593be0fb97",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edaaf36-a8fb-44ac-9dff-5e4c5a8392a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da336c1e-beb2-45ae-ae39-5bc56c7c28d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74da0d9b-d8de-47f4-bb80-7e6f9c94f9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d91cbd7-5ec5-4dd8-8834-71c6137be023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd447828-624c-4cfa-b4f3-78109c52fe61",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4838af5a-a4b8-428f-a9fd-97b191d87e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737b70b9-83e2-4b85-b4e5-c9256302bdcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67628adc-c43e-4c91-8be2-b2ce11185cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae94565-f48e-405a-a36a-bab2dc6e4ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7deb52-f8b3-425a-8fe0-4d7b58f232d5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2025edcc-3ef9-4d81-a535-9fdcdd28bcda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed741638-f340-4ed9-9ecc-eefcb3bb07d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0944a4-abeb-447e-adb3-7847230dda1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a476fc29-dc98-4fde-9f90-9878561bd29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e70a92-ce94-44a2-adf3-d4edaac384c5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4939aa8e-7c24-4810-adf0-77af9d5264c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd66a0bf-b15e-4a21-b516-379e9a6b9c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b2c97a-4a2c-4fc2-9ba8-6314128d30a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8540eb44-0e2b-429a-ac37-2e627ac86693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742b9acd-cb71-4bca-93d4-baa5c6f1f51b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cf97ac-0eb9-4ec9-b3aa-cd44ca8eec15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867e4568-db5f-4cb6-b3a9-e923c7c5b006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a401367-05a1-4c04-91bd-25f651812fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735ae361-0330-425f-b40b-e7619fd2d01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1de493-f2c4-45d3-bc7e-0754bfcc6db5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e35c45-f00f-48a9-9c6a-5e14077779b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "645eb248-b8ff-47bf-aec1-8f75c14593d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b77a972-a860-408a-bf3f-7c9e7bb43abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1bd76e-8f53-41d3-b8d4-00c5c0904eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3754d597-4219-4f52-a3a8-f2392a2df76b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8643ca01-0ddc-4195-8631-5c93aa72f6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e31c265-c73b-4940-b0e5-b2ea9634b84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9680df6-fe7c-4eb7-8a52-0a74070cea74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d25f77-d87d-4355-8a5a-4bede44fe7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8183db5c-8810-4eec-8107-6f4c3c4ac20b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332aefdb-44c8-4c38-991d-09dc935519ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5ee644-23bd-4698-b849-afb61a9e2e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0e46cb-2d3f-49a2-b705-93f5e26f2567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5f8d43-03df-482d-8855-8f2127f02519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46b7b9f-cb80-4fd2-b81c-9dee4cae32a4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e5e944-c021-404a-8c0d-54380a92e280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bf70a9-f0bb-42c7-8171-d598e9e2aaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b705a-d391-49ee-bdb7-4703c8850646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0603112d-d994-487c-b1d4-1b7eb74352f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d24eda5-216b-4537-837a-bad51a173dcd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6468b2f-90e5-4284-af11-30eb28e4e8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e816330-1a34-4835-809e-26190c352188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d599e96-b477-4a07-8800-99357b894fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f75105-6803-4bf4-a165-cfd100247177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf4929a-1cf0-473d-8a7f-88431dc6b3ff",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae23845-422e-4e45-a1d6-5740a0f7dc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3aa19e-495b-48e6-a905-50ba97cc781e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be85d510-adaa-480f-900b-7e8b57fb0070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c80aaf8-b049-4373-9226-fa7b9b9c08e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fca9fb0-5434-415d-a892-ef6ed4b0e3c4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72098ae-0b61-4775-82ac-013b3b91713e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1360472d-26f8-48b9-b5c1-80dd1f4535c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a2c3ab-3e3b-475e-97f9-1c84ddeb5b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57bf3b0-fc44-479b-aaa2-d5e4c54cee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8538e8-86eb-4790-9d7a-91da4b5784ba",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84701467-f5b1-4b79-872b-187eaa088917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bad2c47-c76d-483b-a037-1c2ab739270d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a273a6-ff64-4057-b291-d101d3994959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d31f8c-d1d4-4353-9d24-fcf5fef0cedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fd0afe-920b-4f7e-876e-316148313a2d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12074fd-ebf8-45c5-bb45-4d0b0d9d2b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f56722-e752-49a5-8e16-17da146ae7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61247ee3-df32-47c1-9f4e-f87b927507ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec59bb80-d536-4240-8154-6dc9edc65e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6887fc7a-4727-4055-9c38-772e21162dbe",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464a8ac3-a1e6-4ce1-b555-096aa6eada38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2823e602-7b59-43fc-89f6-47666d26f10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8002fe-2129-40cb-88e1-5d2836561483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0071a7a3-3e55-4d58-a59f-740b6a57bee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44b65d2-c34f-45e5-888c-8a85f3df5757",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec6e7c7-e283-4504-b09d-d0f1e4b499ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3451436-3743-499e-8afc-c59059a19c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22455bfa-0c19-4c1b-b41c-d08cb22121bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7632d9-dbaa-4c5e-81df-355cf4ad91b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed385d3e-d1fd-42ec-9cb3-1d5e60e0b5f2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fc82a8-9459-4d87-abe7-293a8bc29598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0c8ec0-5dee-46dc-9220-f7d7f9afeb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73aef76-c66b-40e9-a415-0800fb5c8a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3836aaff-e041-4778-9241-03e9c67558bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf44f14d-15d3-417f-a241-4375841627d1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb93b262-6c55-4604-991f-fb818c1b5432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0fa396-2e87-482b-ad95-1696778f5b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493fb67c-4bcb-4772-a9be-2c4b3e6df7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b06108-14ee-42b3-96f2-9379c90e2c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2152010-bfaa-414b-9a63-50dc8236ee1c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384fbebb-6883-48c6-ae12-13328a25764a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2187d97-a44b-4375-8c78-dd429a23ff15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e7f8a-cae6-469d-937a-40152dca6282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc0d73b-f835-486c-9e12-c378e034ef2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15276d3-fc2e-45f3-bbc5-a85bc39b7bcc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5c17e1-264a-4c89-998a-b41ba4b73d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa333d6f-6241-431d-918d-e8ad9bca3133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8eb544a-3521-49a3-8e14-2e3a95ce9724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0bdfa0-3fa0-44ac-9584-30c1f129e4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a621389d-6ed2-4b1c-97f6-3fb00b35b60b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1015374b-ae2f-4718-9aa3-af1009a61fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c00912b-e28b-44a5-8b47-bc391e4b6949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae16d86-02e4-4146-9ab9-aa3a69232c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09496058-2736-4b43-8139-a6265c632159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bf3219-e489-4e21-b3bc-508a5e0be988",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe01134c-9035-4be2-ac09-0e0f1560fcf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d091d4-8d7e-47b0-ad58-1596ebad57dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2020bb23-07cd-440a-94eb-82de67c3cf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff082d8-fd4c-4e98-9eeb-e3d022dbd9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51ff36d-6fa0-4aac-89f3-ed79077536ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f841b6-e2fb-4ee1-bfef-8192d47ef28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9af9e5-62fb-404d-a4fb-f59b4f45c59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daa5a4c-bef7-4b73-895e-284d872d0637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4c31c3-68e2-458b-925b-3d2774efc7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c5be61-ca30-4bfb-aca6-eb5cb242baf5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96e34b8-6108-4fed-a9f5-68017989a9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0bd8bb-4c75-4acf-ac69-d37183649839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6df6d9-cfe4-4e4f-896e-adb2d70d81a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1903dea5-4fe2-4983-b63c-62ec842b419f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18e5ac9-45bc-4a06-bed1-30084e5fac70",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d25bf0-47a3-4f16-9fb9-a6ed9e48d956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e39606-e462-4cdc-b245-fa354315a153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedd11ae-005e-451a-8db0-42eb2a2eb725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c65d431-06fe-4eb2-97ba-4de584e7ca52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c6a1d3-af28-4097-ac99-97eda2850873",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb2dcc9-981f-431f-a333-0713e7169b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a406b11-5f69-4b63-86ee-56669697e74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b229a18d-0065-4cb6-9db5-b39d950a0f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ea4405-cda9-41be-ac12-454d34410cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5ebdc3-50ee-478e-a4dc-5baf28a1a028",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1f2385-cf50-44e1-8863-b89556957ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4c0e33-54f1-42e9-a98f-b1ff13ec5ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027c595d-fe0b-4655-802a-000460caac11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a28e08c-7970-40b9-bc7d-2158eb6f89c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d9ea6b-1128-49cc-ae40-ed0ebd6d0780",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3e7fcb-a00b-4ce1-8cdb-e15a97207452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e34788a-68d4-4620-9eeb-1280b3a6ded0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c67f33-833f-43f7-95cf-2984d08e905d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a91881b-d39b-43ac-8a85-6af23785db0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e0723f-4cd3-4605-a4e6-bac9aa7f2c65",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832d0436-7af3-4635-8a6f-b2bce7a39f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345fe4ee-ac76-41c7-b25e-b202766b6761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1084a51b-8554-4c14-9416-83d9078c6937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18524730-6293-4509-b1ed-cd580e9b32bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ab16fb-b942-4695-92bb-c33595545812",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b91e0df-575c-4ae1-8f76-95fd18b46f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb74002-5667-43f3-9a8f-c485c8061450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8417b-3342-4bca-ad05-07bab96d3dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47385fd1-f5f9-40ae-ac0b-3087ca166612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfac8cf-e68f-4142-ae4a-80b5d4b4f853",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40660397-a638-4195-a42a-90b9e867c755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da313081-bc39-4b6a-9635-85346f096f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1579ce56-ac81-454c-95d9-61205cc7a7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06362f67-e8e3-4fd1-b9ea-ec4db0051d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcef11d5-ac85-4c28-ae0d-6d5cadfe1b22",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebc3907-c3ee-4d00-a2af-0fa052a187dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b6b0db-a62f-43c1-adbc-d7851f457d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f4a441-5347-4a9a-a2b2-f89b45d9700d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702bc0e8-3d41-4a98-82bf-e6417e478d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eadd52e-3882-4821-a4dc-20a17280fe39",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a77a5c-de3e-4506-9237-e4270563f267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de5e61a-f5ba-4cb5-972c-6db1487bd3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62966771-3d2c-406b-841c-f55b7ffaacdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2e3ea3-cae0-4bf7-9895-76c2b45e27cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323fbe33-08fb-4024-8bdd-c4f2a4f942b1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7453f516-9d2d-4221-b824-e4d58798f93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9096594e-a257-401a-a24a-e128448e1ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e67cb97-e5ab-48ad-9ee7-3180a7908c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529df283-b607-4eba-8433-3a89d10e9445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b3f027-2ba2-4870-b597-5ca3d2787241",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f4814c-fa16-4dae-8557-09fdba98ed15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e037f428-e95e-48d1-966a-9aaec7895b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57205174-0713-4855-af18-6b587698a79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a92ad0a-d181-4acf-9cb7-18f1d6fdf06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25d3a38-6a9f-4572-b18f-24b7985ac74f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dd7640-d1aa-49d8-821d-37d62aab615a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd38687-f5bd-4b5e-98b0-94b8fdf8d217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbd75ad-44d6-4bf4-b8cf-3b185b4fa552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aea8a89-6c13-43b6-99a3-0b44d7915bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dfafea-4250-4846-951e-344592ab0f04",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33793d6b-fe60-4fd1-ba41-527afe28e26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c6abeb-65b8-4f6d-8c77-616524980624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e0af7d-da9c-42e1-9c64-ee1b24f1f1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2823f20-faf6-40af-9274-f041c58b4389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eb14c4-2585-4963-b76d-bb2a69d10902",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b3e550-f07f-4670-bbfa-12b76cbee050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b870477b-e14f-46ed-86ab-b89d82814d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d807ca-a2ba-49e8-9c11-0f25de12e195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afcbc4b-5bc9-49cb-a2d5-d2d26e69d862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b627df-9d6e-46c9-85cf-665c1ae08d49",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892c29a4-9d11-4c28-9a22-d83f6905e4e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80644c5c-a703-4f33-b42c-0ab9436839d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930e56a8-f860-44df-b7d7-d73ce3623195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e6c9ec-cf3b-4e57-8873-2bd1c3ca1a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc204310-2c9d-4d59-b555-9e93ac292248",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9928ac40-76c4-4c98-8fb4-daf66e94d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7bdea0c-bf59-4264-a480-476274a95a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587c19dd-1e5e-4a9b-88e0-53979218a42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9abd55-ebf4-4fa0-a80e-48696ceeb799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0f809e-cd06-4e58-b612-e9197af72858",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e5f3e3-e9e3-4e5e-ac11-c6a88b3b8dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0bf466f-6661-46fe-a6c9-9afcc7b89d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eccd03-ab83-42ff-916d-40212255badd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287812a2-70cd-41f7-845d-8c49e28b6819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb63725d-e844-4a25-96b3-f9b1d5886146",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25a2ce3-1a07-4dc3-89c1-f5342ffe640a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5777d61e-d3c0-476d-a42e-a0ef87a8b5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb2edb9-0efa-49ef-887e-f54d28920c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faa4550-63e3-4594-87d1-17a746d6e87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec550846-ee1c-4c10-a42e-67839106b5e4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d692910c-a28f-4684-b7f1-0197ad74050b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f890ccbe-16c6-4513-9ded-a6e10cfa9366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510b646f-24cd-42a8-8b1c-0a9343714a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a44a185-8c12-418b-8724-715b24ba5108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986647e9-9013-4865-8cdc-2489731a86bb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdc2e62-5c71-4aed-b87d-66f5b18270ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8086ade-542d-4257-8047-1f4cefc311d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e01839-53ae-41b9-b836-3011fde89f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ec4fcc-50d5-489b-9e00-a7222a7c4ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b00daf-5fca-4a5e-b847-f953a570af3d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8970a9-857d-4e65-aeab-58dbfb0435e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f3d709-108c-4b04-812b-9f4897c45c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fd0f79-0bb6-4a1d-9150-545bbdd5de85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bf03ee-c7b0-4228-a906-b0059a0bb11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d576b4b-bacc-4151-92af-a62b36594ef6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699f247a-e84b-44fa-8f11-ac0f24e33879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb54c58-d4bd-41ba-8b44-72a62559e170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bc8da4-4b47-4373-bfd6-ef3d9f063b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db005611-8fa8-44b8-8166-aca99356d64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2ca053-df6c-4ffd-94d0-fbe8f6b27c83",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f5e07e-61df-4acd-9a64-325952fc285c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e888c00-98ad-4052-8f13-f78f719d7a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7af3ab7-6493-4665-ad1f-e0f72355dae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57390c16-32e3-4ba4-a101-09a6786941e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b53f04e-9e40-4808-bf3b-928bef4fa8ed",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25317476-0025-44f3-9696-8c38c604249f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7cd44e-8958-49a8-911b-d9f3d6828ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae0a4ec-c11d-4cf0-9a33-e1f44100f9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebf6f45-97d1-43b2-92c3-eb09dedb2e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea484a7-3d1e-4c0c-976e-d551396d816b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cac3fe-169a-41dc-8535-6c4b31dad3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bacfb89-328d-4d18-b9c8-08b9ee8d8f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90325f10-c0fa-44d3-8a99-51123aa90889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d10fa3c-2dcb-48c4-8ada-18680b9aa271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e4f0dc-28e6-43f0-acf2-2a44f7bbe87b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b389f8-42c7-4524-be11-f9d19b1c6217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53b92d4-1ccf-4687-94ab-06c2b9be0e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327158d1-ce5a-47c8-a397-c3f45012a5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed72f6bf-e664-4a51-85c2-b865f9859b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41acd6e5-239e-452f-80a1-64cc89790185",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc3b292-73c6-43a7-a68c-aa929dbc21e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bb9615-040f-46c9-a600-4ae80baef289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e30be5-ed44-496f-8049-84ea3585d072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e6c375-16ba-435b-9470-8ddef94a8ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba0908c-48ea-4f02-a52b-cb96a8ab90c5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c45bb79-d115-47ba-9b1e-866381ee7cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b8c586-c551-4c9e-bb98-70fbee0acef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4ac192-e423-4082-a895-2dc25f5bf8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae690fb-283e-4dd2-b28e-a826923a55d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e791e91-50c6-4c1b-b773-c28046e7f2e0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29aa7a4-2aea-462e-a264-9f84512fe980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a497e44f-b17c-4503-8f84-b8d70cb7ac7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45366c51-2f23-44e4-bbf8-998e6da670e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152dae1b-9cbd-46b6-a05a-64a6cc614919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25245398-7dd1-433a-9133-28bee2088638",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa97c75c-9ca4-48ba-98d7-e03bb3adf138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7995db3-7ddf-4427-8da0-5b92727aa66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ec9fe2-506f-4eb3-b4f4-145c642931de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9275417-66c4-4d8f-b3d6-ff3f9abd2d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e576dd99-a4f4-4bc2-9037-2eab98e66dab",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aee1c48-64a7-4526-be9f-eca3a64db9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26f2fda-4c1c-46bf-8431-8575e3655c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b70eddf-36dc-444d-aa58-ec65e207d71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31f281a-0f1c-4589-be21-3851e83ff268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0863c56e-1edd-4245-9438-2effb85f49da",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e18648d-6fdf-4bde-9809-327fbc529c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe82bb1-16fb-4f2d-bd66-f6c2b8368380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ec64d6-a08f-4159-9962-de7caa03fb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698fd971-b2f5-4130-bfef-faf9b8e6cc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce692838-4955-4cbc-8170-b4f928e31c14",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e21f8f-ba30-4207-8362-30845a3d543b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07f3637b-4fae-4a63-9c43-07471426e854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb51171-aa5c-4a6d-9a1f-beb6213585bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7525c2d-1613-4681-9d05-1823d8cc5195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32ac969-9637-457d-b4df-d0cdfe7cd0f1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f963f5fb-6a5f-4d62-aaa4-c6f4250a6cf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a305e068-1f87-46f8-bff3-4fc8c1dd5abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596714fb-7d62-4878-a89b-26eaf5f8ad19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a2f00f-ad69-4e58-bbdb-53ff3de5a19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30276575-c29d-43d4-95b2-e9d46efe866b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6708d6d-5b30-4597-b8ee-2277cedef25c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f1b0356-b608-41ae-8b44-e2071ee12e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62abc7aa-1db0-4ff6-bb27-2139d113ab2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0373c3fe-252f-471f-8692-5ff06dfda0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db451a9e-bf25-4217-8a05-ac6669c462a2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d2925a-bd3e-49d6-b171-ad644ea87882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0a89317-2cd2-4495-9cbe-b20b0b88b635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79990ea2-0c1d-400e-a072-d314821a28da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa3cb4e-194d-490a-a8ba-74954a521825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b7a280-0a16-4e43-bd52-eca43e5c1ff5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1048f6ba-de6c-4dcb-8145-857b502b73c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f03628-db66-4f04-841d-2bad072fa5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c140404-c40f-4635-9bd3-0da8aedf7875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4fc253-7151-416f-92a7-697c4ff4ff20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f38f315-432c-40c6-8608-dd8a4b9a2c76",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebaee60-c906-4274-ac86-a7cc4ddc2ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bfa921a-3db6-4671-994e-a70a7f5d6202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8147f51a-61f4-4b48-bb0a-54610e8890c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55651808-1feb-46a2-9614-7d846960b7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dc58f1-b3cb-4329-a948-b38bab38f5fd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7444c014-3d8b-4bb0-8df6-ff3ab916baaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f92cb8-150f-4d6c-8cbb-44cb2cdde2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5852a2-35ca-4743-aa39-c0ddebe56392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289b4dc0-3a1d-43eb-8adb-25392383c15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffb65fe-7481-47f0-8906-93d7a9d83372",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344475f6-bd26-4eaf-b11f-cbe635c8763a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc6c9ac-2d71-4cc3-9e13-af576678679d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8ad340-52fa-4e64-9d7b-de2e717ff1e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb858d0-76ba-4525-bc5d-299e1303bb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85731c8b-d425-41dc-ba15-2fb39ea99d33",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24698ecd-9195-4b4a-afe0-d1e549d79a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b625c7be-6e6f-4de5-a786-2b72b6ef27fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df90434-13e8-4a9c-b27a-4732c0a5f37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c473fd46-afaf-4e2d-8c4b-1eead441fe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598a121e-928b-40f9-bf69-4f430e55224c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5548bd-0ef9-4739-be7e-986b9eeb1a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0c81b8-61fa-4882-8a04-ad966756bd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d240dd-115e-4cab-b3d2-4aa21db59fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92eed4d2-4415-4fd4-9785-88adf883b464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d556511f-33ea-48b1-9237-3c661edc538d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870dd315-1c5b-4f25-b9b1-9475bef2d0f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3e8d79-4b1a-4952-a467-178a5013c86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a402a1df-f4b9-4350-9911-6d4674f7c241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51f8449-278b-4e1c-8654-7f25166b8587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d25e5e-5328-4d6c-a89d-9b36fe948aa3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596ee396-8f5f-4755-9619-c4fd0488ed8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef51c6e7-9215-45b1-8428-bf3f81c30f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96042ae3-0af4-427a-88ce-dab7cd779a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82b2a51-fd57-40ab-9693-56f7b281f89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c59dfe-43d9-43ff-a668-32744b5f0428",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8ee269-e336-4cc4-b8aa-11ef3318b0df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f69253-5d7f-4e6d-961d-f075b31689c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6eafff-3aa5-4fbf-a313-942aa7468f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d337dfe-bfe7-470a-b44a-dea08462e78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190f744d-ac8f-4a2c-9d28-afd4606bde12",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748eb0c4-93da-4b9f-ae13-4032348ee065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b9ed03d-e610-4390-a2ed-ebe1b4d240a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e00f231-73f3-4af9-9835-472c63542301",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1312267-e43f-4523-8821-e72a80353fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c631a4f6-dea9-4917-b9d2-aa2327eba712",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9631e53e-3fc9-48f5-a03a-645ba0a22cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92eb8943-e897-41a6-97f2-b99e07c8d415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9057d6-accb-4cb7-931d-fbb13b07b788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0291d7a5-297f-47d5-b627-a812a8ce8a53"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13567389-10f1-4ca6-9f7c-933b98bde3d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "343024d0-1ab0-4465-ad43-5d57ab7d277a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf45cde8-69a0-492e-b106-c639d2fda91d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19faed1c-f13a-4dd4-ad13-68378d8d585b"
                    }
                  }
                ]
              },
              {
                "id": "393ca56d-9f0d-45d9-91a6-a358fc124c51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c83637c5-f200-45a6-a8a0-f8d02c61b8dd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7f1265-6928-4200-801f-8214c3cf11dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "82640127-ca55-41f5-b74c-966701a45901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d46605-9c54-47d3-a18d-f8b5def9ade3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "313f92f6-ac4c-4d87-b7bb-40aeee06031a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1b35c5-2044-4881-893a-75cb330b5917",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c2b0d7-1aeb-4d4b-ab12-1277bed0c126",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a79c9e1c-ab44-4e60-9a25-56f156a2e88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1b1cef-f093-414a-8d6d-74d7a0507bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc98beaa-0a8f-44b5-a260-4bd7d349e235"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6ae2bd1-4372-4fb6-93f2-e53e120ab7ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73135f4a-6a4d-4fe4-a56c-297c66f0cfbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a74b6fbc-598a-46b5-913b-e9266bcbad53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af4e087d-78af-4ba7-bf98-854447979145"
                    }
                  }
                ]
              },
              {
                "id": "61295684-2f19-4167-8cbc-58d2d81a65de",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7609961d-a662-4606-8152-41770b366d68",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70837441-5b31-49d9-8505-759c3c0ef6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6e3ae62e-73bd-4db0-90da-2b8f025178e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53a9e54-6e7b-4c34-a53a-759472c47c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466ebe71-2d8b-4808-9bce-13835ce04918"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6e55ecbf-f971-4585-8c6e-652ed3bc48b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8879b4d1-f140-441f-b823-86041bc90c3d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5442e2b8-ce43-40e1-a173-24123cf595ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "34bf94b2-1919-4725-a7ee-4a19971bee3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cc8b2e8-0ccb-43a9-96c4-e0601c32f01e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2663098-9487-4b76-93d9-8b54a3443e55"
                    }
                  }
                ]
              },
              {
                "id": "d7c62c8b-e163-4de2-890d-c7587c882d4d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf9a65bf-d089-4f58-a071-a6f8357ea678",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6e2ea53-dc4a-48dd-b2d1-642bc2a79df7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6caf3b47-7ea1-41dc-bd5b-e5da86d4bbd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c38f5b3-3287-4fb3-9990-77fbc15e7267"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3787fa0a-e0d4-44c3-ba46-bd230365a1f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a27cf6b0-9792-47b3-b8ed-c90243b3bc9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66f0e0ac-8be2-415f-b27f-6081b82e33cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4949fa71-ea80-4ba1-be83-84363dcdf51e"
            }
          }
        ]
      },
      {
        "id": "f0a3dade-c09f-4b9d-810b-5a18af87806e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e8206253-7824-45b0-a2e6-bb7a78e05a42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bbb1153-7189-4bb2-9ac7-f9eed6c1cb42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7ff2cbf-32f6-4fd3-a423-8510275a42db",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00cd669-f3ce-4257-a268-2ed0d0ab3ace",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3ce97c26-5adb-4228-a617-d215f3f6301a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c50b1a-0427-4e74-afb7-bb375baff458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93c3271c-caf2-4337-9118-ed74aa09e471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da179e5c-6861-4fdd-92c5-f1707ac25300",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f744b9-d41e-4088-8ec7-a7066edfa56d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "119574b2-c694-43f4-876a-906007ab9991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b09476-f70b-41ad-881e-9f95d5c97e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "763abd43-47d0-48dd-b16d-13b94fc69665"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66b60cbb-4913-4068-95e7-f48670a86dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "938786e6-df49-4926-9337-4f4735179e67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9039f791-0d0e-4b18-8065-62724a237c9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29a5ea9b-1e84-4c6d-b36b-d234c065c55b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b1606aa-2ae8-40c1-8094-00ab261b0ad3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "438018b6-2b88-48fd-98de-8f21318981e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afe164f4-cd50-446a-aad1-51e2c52054b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0754dfec-5c72-4a8b-a5ae-4ed759efa320"
            }
          }
        ]
      },
      {
        "id": "f9966a6d-5c95-429c-87d4-d77c6bc84732",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "15fda69c-e754-4081-89bb-57e4aba46c5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63de5cc0-3bd9-4880-afea-68d0b7ee64d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5dafb6a-7331-4e15-b845-abde8f62d067",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf064730-fedd-450d-86f3-8c3cc388cf48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69dae02f-f80d-44a0-8ce5-58daf8f84b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ba674b-5fbd-46ad-94f5-079f64baba7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa5bd54d-d1fc-4fd8-bf0c-7242fa028eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba39f52c-afed-479e-a9e1-a3e674730d4b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c37b10-dce9-4215-bccb-df0b84d59c2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4d14a98b-0b06-48de-a8de-50578d3374ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adfa13c-4209-4cef-9fe3-af06a835652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39c44f45-f2fd-44b9-a13e-5c1f47a1e5c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1669f5e3-9d2a-4e2f-a864-cd8526438f39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9936d1e-88b3-4bb9-98b6-e82ded64bbd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e2aabc4-9cfb-4741-bc90-19c43cc248ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feaa9fb4-7a6d-4ed4-ab15-960c71c23fef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a1307ab-47ea-4273-a280-20da71051a25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "120ff4a1-9c8e-4879-bb66-f2e89aa8286a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3c752fb-bd0e-4c51-837b-012e38e0cd35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "464dc26d-061d-41d0-a399-72c9aed6b9e7"
            }
          }
        ]
      },
      {
        "id": "02fa24a0-0346-477f-bd7d-1d8daedace4b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e180a199-f2e9-4dc5-b849-51d9bbe31245",
            "name": "Negative Testing",
            "item": [
              {
                "id": "226bb9e8-3088-4d97-8e4c-6f333c79cbcb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "802737d8-3c8c-476d-83cf-7ecaa5081408",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7051e46-0d16-4ac1-9054-c5969598f046",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7e4c923-8e87-416d-8fa9-450d28a64dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6927ec26-bd77-400b-b9fb-6d677aed5777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31367304-e1cd-48c9-9594-46ecc78ce095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb0b5c3-53cf-4d78-aa5b-0f642d71c4c4",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7171d68a-7bb5-48b4-badb-d0840fbab712",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2c2133-8401-4cc9-9f77-676705cd536b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bea8eb-ab37-46b1-8025-49335b360d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37b4b0fc-4246-4f3f-acc4-105a302c2596"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fd40051-6f1a-448c-81e1-e9a423f49231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01855953-3053-4cd7-93b2-e6f4485f73fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c16e8d-dba6-4b25-9dd0-13c616b481a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8276372-7af8-4e11-8c57-64bc96260df8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43a17051-fb82-4e93-beb3-c6cfc1ec767e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9370751-cf38-42ae-8784-2ffe37c55281"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e3ea366-4178-4bbd-8955-e952398d5c25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "777ae381-11cd-4e82-a7cf-0dcb2265e8f4"
            }
          }
        ]
      },
      {
        "id": "349d35f5-1a61-4fdb-9dc2-dd3482f64e51",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35229491-429a-4120-8a9b-90ae89cce6fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43f201a8-af37-4306-b8fa-ea09ce27ef4e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "672b339b-8f8c-4861-8dee-6878d1b7a657",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3c0a040-eb27-477d-ad5e-5d06a323975d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3eedbf0-6a38-4f38-bd71-aca42c719b96",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 677.4384615384615,
      "responseMin": 18,
      "responseMax": 8833,
      "responseSd": 1027.6380424123165,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681519116027,
      "completed": 1681519302668
    },
    "executions": [
      {
        "id": "886b16f6-b2e5-4c7e-aea7-b74bdf408e47",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ff3c8978-5940-42bf-8d63-0b90216d9b90",
          "httpRequestId": "145add05-fde8-40f8-8358-40f03d0dbec9"
        },
        "item": {
          "id": "886b16f6-b2e5-4c7e-aea7-b74bdf408e47",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "daf3e109-b2eb-4dbf-a4ef-d3e2fe4665ad",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "d6a97b6c-1f19-4e80-8c63-892620c87880",
        "cursor": {
          "ref": "4355e2cd-5b3c-475f-ac41-3d09f048c8f1",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2c825f49-43fc-4932-8c70-6c972ea6ce5f"
        },
        "item": {
          "id": "d6a97b6c-1f19-4e80-8c63-892620c87880",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1d26fd7e-bfe1-427c-9fcf-2905f3267db3",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "f523af0d-c765-4285-9464-30a57575ff43",
        "cursor": {
          "ref": "2e481d9b-f482-4264-a875-adbdd5393ff7",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "904fc906-eb58-4f97-befa-384a9b15fc2e"
        },
        "item": {
          "id": "f523af0d-c765-4285-9464-30a57575ff43",
          "name": "did_json"
        },
        "response": {
          "id": "d3f0d5d0-9d7a-4545-82a7-e70fbf4b7da2",
          "status": "OK",
          "code": 200,
          "responseTime": 826,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8633a0c-c0cc-4bb2-8db9-16272e046d0f",
        "cursor": {
          "ref": "897616ba-74d8-40d1-ab4f-56efb9be76be",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "771d2cb4-1676-4e3d-9f36-085b0cf4a1fc"
        },
        "item": {
          "id": "f8633a0c-c0cc-4bb2-8db9-16272e046d0f",
          "name": "did:invalid"
        },
        "response": {
          "id": "cccc0320-9d14-4a64-885f-795b30cad32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8633a0c-c0cc-4bb2-8db9-16272e046d0f",
        "cursor": {
          "ref": "897616ba-74d8-40d1-ab4f-56efb9be76be",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "771d2cb4-1676-4e3d-9f36-085b0cf4a1fc"
        },
        "item": {
          "id": "f8633a0c-c0cc-4bb2-8db9-16272e046d0f",
          "name": "did:invalid"
        },
        "response": {
          "id": "cccc0320-9d14-4a64-885f-795b30cad32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11171a91-9376-45c2-b590-ed5380defa0d",
        "cursor": {
          "ref": "a0a2d0ea-7b17-4462-b740-97e237ac83f3",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "55c1449e-c5b1-4aa4-91b1-b30c558ed5d6"
        },
        "item": {
          "id": "11171a91-9376-45c2-b590-ed5380defa0d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "93c0fd36-d0c8-477e-bc27-c1887f396fcd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 579,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f921ace3-f880-4a48-96e8-1376e12b2920",
        "cursor": {
          "ref": "24444480-a684-4ce1-8450-6c99a2fc15a2",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "28e1be70-0976-4363-900d-ef563476f4b2"
        },
        "item": {
          "id": "f921ace3-f880-4a48-96e8-1376e12b2920",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "aa8bd67f-035b-4c87-8f3b-3412a51bbb2f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 507,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6089a12a-7da8-4e76-ba8f-7ce4106af78b",
        "cursor": {
          "ref": "69a9c285-17ea-4cda-b563-07a91214e809",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dd9677ac-b897-4ad8-abe3-83a9e8dd1dca"
        },
        "item": {
          "id": "6089a12a-7da8-4e76-ba8f-7ce4106af78b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "651ff2aa-3bfb-43bb-9a8d-fef397bb6550",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4431a73-0f71-4b10-951e-b165e0464684",
        "cursor": {
          "ref": "212546fe-3fd0-4efe-9ed3-3f0604e952cc",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "320ba015-c29f-420d-ac86-9f7e79c07a50"
        },
        "item": {
          "id": "a4431a73-0f71-4b10-951e-b165e0464684",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "6609fbe3-c506-45e6-bdbe-3616602ec621",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 500,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4431a73-0f71-4b10-951e-b165e0464684",
        "cursor": {
          "ref": "212546fe-3fd0-4efe-9ed3-3f0604e952cc",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "320ba015-c29f-420d-ac86-9f7e79c07a50"
        },
        "item": {
          "id": "a4431a73-0f71-4b10-951e-b165e0464684",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "6609fbe3-c506-45e6-bdbe-3616602ec621",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 500,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29c2a24-c571-461e-94a4-98653ac1e07c",
        "cursor": {
          "ref": "bf85c21d-32a2-422d-b48b-324e5cbe4ab8",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b0bd71a7-996e-4429-bada-d34018ad820f"
        },
        "item": {
          "id": "a29c2a24-c571-461e-94a4-98653ac1e07c",
          "name": "identifiers"
        },
        "response": {
          "id": "b80c026f-3d03-4eb4-b136-47a904077ff3",
          "status": "OK",
          "code": 200,
          "responseTime": 1012,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c13f1f3-eb2b-41df-98d7-22b1a4ee3bce",
        "cursor": {
          "ref": "776554fe-d07c-4ac1-803e-d736a804f252",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cc52601b-d55c-4931-87e0-b1e31bc4bddb"
        },
        "item": {
          "id": "7c13f1f3-eb2b-41df-98d7-22b1a4ee3bce",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f21dba65-d2eb-4268-bbe3-eb658bce7464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c13f1f3-eb2b-41df-98d7-22b1a4ee3bce",
        "cursor": {
          "ref": "776554fe-d07c-4ac1-803e-d736a804f252",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cc52601b-d55c-4931-87e0-b1e31bc4bddb"
        },
        "item": {
          "id": "7c13f1f3-eb2b-41df-98d7-22b1a4ee3bce",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f21dba65-d2eb-4268-bbe3-eb658bce7464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8365b69c-1aa2-4f6e-8b75-76651ff24cd9",
        "cursor": {
          "ref": "87f7e797-392d-4ad6-954e-12afd8ad603b",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b5e0dda9-6078-4aaf-a276-7ba104705950"
        },
        "item": {
          "id": "8365b69c-1aa2-4f6e-8b75-76651ff24cd9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ed6f2d6a-4aa4-4a4f-bc05-76a7c5353607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7bbfb9-ff7b-4e3c-90ac-2514930d2851",
        "cursor": {
          "ref": "5506d6d1-cee5-46f7-a5be-5c2345f18880",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "37bbbd64-2531-4a79-ac52-662bc6706aec"
        },
        "item": {
          "id": "6c7bbfb9-ff7b-4e3c-90ac-2514930d2851",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "72230fa3-cb7d-47cd-b257-5e881304a839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c9023e-93a7-42be-b358-503de8f186e4",
        "cursor": {
          "ref": "ea65b828-3230-4ef8-87a4-1a3e236c32d3",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "37a7b215-816e-418b-bd2f-4f033985b4cd"
        },
        "item": {
          "id": "84c9023e-93a7-42be-b358-503de8f186e4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "019860db-5cf9-4bc2-b613-d5fa4c404266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd65660-e194-4dc5-a561-03c245444729",
        "cursor": {
          "ref": "f747611a-eda8-447f-a248-7b14e6b3b079",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5213e770-0a38-446d-a579-a00501e97c50"
        },
        "item": {
          "id": "bdd65660-e194-4dc5-a561-03c245444729",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8ccaeffc-f3d1-4f07-a387-ac58da31b657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5a7c25-76ed-40c5-b449-40881cd63016",
        "cursor": {
          "ref": "4ac05bad-8104-4dc2-9751-569536672ab8",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "58c7969c-2481-462d-91aa-9d8b0ca3fd01"
        },
        "item": {
          "id": "fd5a7c25-76ed-40c5-b449-40881cd63016",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c3b8188a-2794-48f0-8aa2-f9b2f4efdea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbba24f9-4222-4a40-86ac-74d7117255c4",
        "cursor": {
          "ref": "fa78928d-25c8-451a-b860-b3c539a0808d",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1ef87294-dd4d-4bbc-81e2-9a596b1fe271"
        },
        "item": {
          "id": "bbba24f9-4222-4a40-86ac-74d7117255c4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d5d5aa8a-9fe4-404f-8088-9285ee0097dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85adc17-1d11-41f7-9e2c-e0c61191d4d1",
        "cursor": {
          "ref": "6e8b2a84-7694-4539-94db-124f07d10e78",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dbd0826b-cea8-45e0-ba7f-cc4468a26ca8"
        },
        "item": {
          "id": "c85adc17-1d11-41f7-9e2c-e0c61191d4d1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e83d20a9-3322-4b43-aefa-b83a72f56f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7b42d0-5211-4a81-8b1f-323e738bbf73",
        "cursor": {
          "ref": "a9e005cb-6f01-40d7-95b4-b1789b7296fa",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "32060ea5-d44a-4190-bc48-40235be82eb5"
        },
        "item": {
          "id": "8a7b42d0-5211-4a81-8b1f-323e738bbf73",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "85580e25-bb68-492e-9e12-b3fdc90dd322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163dd623-4e20-4b3c-804e-c6e316e85b3d",
        "cursor": {
          "ref": "5c452931-c206-46cb-8f8d-a66298adcdea",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "82c6c26f-56be-4f9f-bdf5-ca180f5f7270"
        },
        "item": {
          "id": "163dd623-4e20-4b3c-804e-c6e316e85b3d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2f36fc4d-8096-4899-b476-6eb5cbb30525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08096c3-613e-4109-a23e-f796dd9f2306",
        "cursor": {
          "ref": "744b7982-455c-4948-b411-f075d52554dc",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5bd0f493-a290-4e9f-9539-b97d9efa9dbb"
        },
        "item": {
          "id": "c08096c3-613e-4109-a23e-f796dd9f2306",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0ed715ab-1af5-4f6f-9be8-27fd9359ced9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940dda4a-622c-4e35-bda2-430a2d5906bf",
        "cursor": {
          "ref": "39a35983-93f2-4429-b80c-a3e2523758cb",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ac5f139f-f079-40fc-9a81-78842fe53581"
        },
        "item": {
          "id": "940dda4a-622c-4e35-bda2-430a2d5906bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "77d5596d-ac51-46b2-817a-1fba2bf45013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d392cd76-fccc-4b6c-a088-9b56e25d2cf8",
        "cursor": {
          "ref": "cc386bc6-4770-497e-add7-2746c3e02d8f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "45a78e38-d47f-40f2-b0c7-e3a5c27eb5e0"
        },
        "item": {
          "id": "d392cd76-fccc-4b6c-a088-9b56e25d2cf8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "08848f3c-7b52-497c-a7cf-1403f3b2637a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d80b734-12ec-4d83-a354-39852658bbd3",
        "cursor": {
          "ref": "72250f6e-0180-48f5-9cfb-d47c284f3ada",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aae42ade-9fbb-4652-a8b6-0cda926eb32a"
        },
        "item": {
          "id": "8d80b734-12ec-4d83-a354-39852658bbd3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1b9d38cd-5261-4db3-a13c-8a8ea0e38459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18005b3b-04dc-4077-9d18-f64b6a9e58a7",
        "cursor": {
          "ref": "1d828604-016f-48c0-92df-2cbdb11a1eed",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "127c7309-9ede-4da6-b7df-0cee63fc8ccd"
        },
        "item": {
          "id": "18005b3b-04dc-4077-9d18-f64b6a9e58a7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "82e3b1c0-8ff0-44b2-951c-5b3f7fdedd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7d9396-c30d-43ce-bf07-6eb6c30dd912",
        "cursor": {
          "ref": "479d7712-d549-412d-9a7b-5c9fb59071d8",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "32996b12-587b-4390-8f4c-07416af87bb5"
        },
        "item": {
          "id": "4b7d9396-c30d-43ce-bf07-6eb6c30dd912",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a2523e95-cc60-4c57-b48d-c4bf72a3a928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45398ccc-9202-4c02-9189-14af5315d9d8",
        "cursor": {
          "ref": "cf694021-f1a9-4a05-a4d5-3cb07d5250e7",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "83c4906d-e6b3-4c24-8fb8-eb12d7a90755"
        },
        "item": {
          "id": "45398ccc-9202-4c02-9189-14af5315d9d8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c19e111c-4a7b-499e-891a-26c3ed89f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de98369-32cb-41b5-9a55-0eb39849b8be",
        "cursor": {
          "ref": "48127cc2-6364-426a-9889-d230a4ab8ee8",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "53ee37a1-1e71-4616-ac79-d1ee421566ae"
        },
        "item": {
          "id": "8de98369-32cb-41b5-9a55-0eb39849b8be",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ac7755db-0b01-4852-b7f7-63d7f9ab3321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dba693-f44e-4e08-b8a7-1ad1cfa40bea",
        "cursor": {
          "ref": "df002839-0b11-4cac-985c-31f77322936b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "95df37a5-ef8e-4cc5-bf3b-2fe43a0d4179"
        },
        "item": {
          "id": "40dba693-f44e-4e08-b8a7-1ad1cfa40bea",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b76e46d8-19dc-46ef-a6f5-b29ce5da9aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588119f7-efc1-4f9e-9f83-3150ffd83800",
        "cursor": {
          "ref": "856f04b5-0bff-4273-ae9b-ab1d54653fbc",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7cad00d3-4d92-47ad-9f1c-33ec494dfd6a"
        },
        "item": {
          "id": "588119f7-efc1-4f9e-9f83-3150ffd83800",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b7b5ec49-2f3c-4864-a74a-eee3984b3a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017a62af-4a78-41ec-ba80-877101fa8ddb",
        "cursor": {
          "ref": "c7477741-4d83-43de-9ac1-e1d3e520e06e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "78f34494-3420-4398-b960-2e19b253cd23"
        },
        "item": {
          "id": "017a62af-4a78-41ec-ba80-877101fa8ddb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b7dd4715-a7b9-43c8-bffd-b1254c173101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397ba698-f218-44e7-b071-005efeb468b2",
        "cursor": {
          "ref": "d569173e-fc4f-4225-a86a-c5c3cdb86b1f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3063282e-131d-4602-8596-edcc81953493"
        },
        "item": {
          "id": "397ba698-f218-44e7-b071-005efeb468b2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aae3659e-1cce-4b44-b716-30104265b500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d871fd-d953-4b00-b130-d437ed48a7c6",
        "cursor": {
          "ref": "ebd6bb86-9dab-4e08-86fe-7a37dd809920",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2df74dc5-2fce-4614-8192-4d57713efb2f"
        },
        "item": {
          "id": "01d871fd-d953-4b00-b130-d437ed48a7c6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "75d91248-2b44-4c4f-8a85-bbfea85d07c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc2fc84-c0d3-4f3f-a070-d6287235477b",
        "cursor": {
          "ref": "93e73856-2b01-4a09-9cc6-d08287a5cf4b",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f5cfa69b-fd98-4596-816c-b191fa71ce77"
        },
        "item": {
          "id": "5dc2fc84-c0d3-4f3f-a070-d6287235477b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "30fcd0fa-cd02-4eec-9c0b-b2d1da12878a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f03ba1-8cbf-47d6-9422-25d2ac94e718",
        "cursor": {
          "ref": "b8221290-6aa2-4027-850a-5b8007f94e56",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4d01d8db-6e2f-452a-b219-23cd0dbc9340"
        },
        "item": {
          "id": "04f03ba1-8cbf-47d6-9422-25d2ac94e718",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a68aaa67-9e12-4c4b-865e-33b83570f68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390e544d-484f-4be3-b481-a2972b4fdb23",
        "cursor": {
          "ref": "f692b25d-f94d-469b-a231-c14ce8e58253",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b33b89fb-9514-40a4-a62b-f0f83b6359e8"
        },
        "item": {
          "id": "390e544d-484f-4be3-b481-a2972b4fdb23",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "64a61467-a7c6-410a-9e43-3b34fe03407d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad73f314-f7f9-497e-ad27-879f9e86ce69",
        "cursor": {
          "ref": "6d8c770e-94ec-45ef-a092-34103d8f917a",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "57c3998a-4fee-495e-9337-0c8f97ee5274"
        },
        "item": {
          "id": "ad73f314-f7f9-497e-ad27-879f9e86ce69",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "88cbac6c-203f-4e29-83a0-268dcb8c4eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b182d6e-23e3-4149-97ad-7103719e3a7c",
        "cursor": {
          "ref": "97567661-66e8-494c-aa65-3358cd572814",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "47598aff-234f-48f3-a480-5bac2a9aa828"
        },
        "item": {
          "id": "3b182d6e-23e3-4149-97ad-7103719e3a7c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8d8fb92f-75b1-462c-b1bc-f4c72cbf450c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31c3793-fff9-488f-b471-fd548d9ba790",
        "cursor": {
          "ref": "31498a53-e8af-4c6a-a35d-260fb399844a",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "18093284-afd2-46aa-b78f-cd2a7e619796"
        },
        "item": {
          "id": "d31c3793-fff9-488f-b471-fd548d9ba790",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8736743d-3e07-4b5a-9ce6-edc504bdf7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf0ad65-2371-4c4a-89de-e833a070fd48",
        "cursor": {
          "ref": "2dc57832-499e-49be-be17-2e088c90aab8",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c7cdc97e-8d28-48d9-a89a-8b4187a1d14f"
        },
        "item": {
          "id": "5cf0ad65-2371-4c4a-89de-e833a070fd48",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "feca3cf8-2d0e-408e-8bc0-2e550e6001b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2383deff-b8ac-468c-86ea-e17133427985",
        "cursor": {
          "ref": "d99cfb5a-79d5-4982-8f03-02f7c605d2b8",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d43af45e-4254-402e-8abe-e8f4d46a128d"
        },
        "item": {
          "id": "2383deff-b8ac-468c-86ea-e17133427985",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "21905bda-4cfc-47b9-9cd5-e59df307a694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266dda14-02c5-4f8f-a31e-a8b914940b76",
        "cursor": {
          "ref": "de9d5909-cd8b-4dd3-a1e1-e676bee98f1f",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d5054a5c-dff2-4801-9aaa-a79f0453c12b"
        },
        "item": {
          "id": "266dda14-02c5-4f8f-a31e-a8b914940b76",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6232d4c0-7ed0-4d81-a56f-78f5bf90ede0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d629047d-1922-46bd-a397-6c5763b95219",
        "cursor": {
          "ref": "bae82fc4-8ca9-444d-9224-06c6295d4baa",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0c9c24ab-c40d-48f3-8a4f-fbd2b012316b"
        },
        "item": {
          "id": "d629047d-1922-46bd-a397-6c5763b95219",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0d0a847c-c8cd-492d-a396-feba8f4e561d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e957a7-5db1-4836-b253-46399d094e97",
        "cursor": {
          "ref": "7a0d62e5-e40f-4974-b304-2307372eddfa",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6560ad25-3645-465a-b220-6a2a3d4dcbc4"
        },
        "item": {
          "id": "d7e957a7-5db1-4836-b253-46399d094e97",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "57654230-a863-45af-8040-0b387b803314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eaa633-3c7f-4810-80ea-981bad00957d",
        "cursor": {
          "ref": "b2c0c624-8e86-4ecc-8af3-9a5ac40a01c6",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e39edaac-4ba7-44c9-b560-da23dfdf553c"
        },
        "item": {
          "id": "62eaa633-3c7f-4810-80ea-981bad00957d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "82931380-943a-4632-8050-8db3da71cffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc73aa6-5820-4ad8-b0d0-c1590ffdac10",
        "cursor": {
          "ref": "cfdbbf98-bde4-420a-aa7c-5f44b97b6f00",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d94eb8cf-c2f1-4bdb-8a14-f0e92d1425ee"
        },
        "item": {
          "id": "0fc73aa6-5820-4ad8-b0d0-c1590ffdac10",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0760d471-c2c5-4603-9fab-741977e610b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 666,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ff1549-6c47-439f-99d8-b9ff4096eb3e",
        "cursor": {
          "ref": "428647fb-a2f2-460c-b815-c017893a0b53",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "246fb024-aa5e-47bd-8e68-a644353fb0e9"
        },
        "item": {
          "id": "72ff1549-6c47-439f-99d8-b9ff4096eb3e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "36e88302-f04b-4606-9d45-8a8fab545a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fa2a38-b453-4110-beee-e93c3d7ac37e",
        "cursor": {
          "ref": "36c69f75-160b-4863-934d-671d12e015f1",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb245c32-4db6-49d8-8744-b4cab88a16e4"
        },
        "item": {
          "id": "85fa2a38-b453-4110-beee-e93c3d7ac37e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2c81e44e-656d-4635-90bd-7c369ad8e4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e63355-f118-44a3-b382-c5face76ba3e",
        "cursor": {
          "ref": "91b001ee-a0bf-4bed-8fb1-6d8fc3a56d65",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1b733ca1-a9c1-4685-b122-7be7ac83fad5"
        },
        "item": {
          "id": "d4e63355-f118-44a3-b382-c5face76ba3e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a561298b-d532-418b-a66c-2c733c0081ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3fa286-6c46-4118-9f04-b0911b66c3f5",
        "cursor": {
          "ref": "a5984761-9e24-41c5-be34-ea8b5dd6c7ec",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7741bff2-b666-44db-a269-097ca1c89590"
        },
        "item": {
          "id": "af3fa286-6c46-4118-9f04-b0911b66c3f5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1d184be0-a426-4e21-9a1c-9f81c59dfdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8b45e2-a1cc-4f90-a1c7-4ed238fb8270",
        "cursor": {
          "ref": "d0ec2c91-7b79-4be3-b4bb-10996ef6fba6",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "85150c05-b895-446c-9925-f0d1f3c8ad9e"
        },
        "item": {
          "id": "aa8b45e2-a1cc-4f90-a1c7-4ed238fb8270",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "da56fe23-6be0-4039-8724-dae764a50153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe54584-8f75-4d08-9ac7-d6773bc36470",
        "cursor": {
          "ref": "34a922a8-4760-43d5-9328-c45b6c9b5ba8",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b6ed0d1b-6352-4436-bafd-997b0ddb34ac"
        },
        "item": {
          "id": "ffe54584-8f75-4d08-9ac7-d6773bc36470",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2e6730a0-8938-4d49-974d-b4aee99356c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 892,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20a7b2-c068-4ecb-8a1e-bf08aa65809c",
        "cursor": {
          "ref": "4ab6d0c2-7404-42aa-bfa6-959d962c4858",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c375b98a-6be2-4d27-8449-761d8b716f8b"
        },
        "item": {
          "id": "8d20a7b2-c068-4ecb-8a1e-bf08aa65809c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f1513179-cf02-4677-8b08-b097d8824522",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 948,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7436b4-2229-489a-81ce-a73c663ee413",
        "cursor": {
          "ref": "101128bf-f37b-43f3-a018-e491f663397a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "710bb507-a81e-4333-a148-965e3320ddbf"
        },
        "item": {
          "id": "6b7436b4-2229-489a-81ce-a73c663ee413",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bd533385-46e8-4b99-a22b-960a6ea2a68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3cf2a2-6f7d-48d7-82db-4815e51e6171",
        "cursor": {
          "ref": "130628d4-7a99-4105-a4f8-fdd6cd90e071",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c57796fc-a670-4abc-9513-f10f5425f8d8"
        },
        "item": {
          "id": "bc3cf2a2-6f7d-48d7-82db-4815e51e6171",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aad420fa-dbe7-4b40-9dad-11ecd182eaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c8d131-12a1-4003-9ef9-fd00104cc146",
        "cursor": {
          "ref": "44f7457f-7649-40c1-9b27-95668dca5732",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2d38a31d-54f5-4843-89fb-88e212caceca"
        },
        "item": {
          "id": "e6c8d131-12a1-4003-9ef9-fd00104cc146",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dcd72ea4-0bd1-40c2-a1de-f32245534204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ce4f9b-ec13-4fcf-8360-5ec09362cf93",
        "cursor": {
          "ref": "8f0648e0-25f8-434b-9996-ccee2dd7d8a4",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c1b7612f-73a1-4878-81d8-10aea840e2b5"
        },
        "item": {
          "id": "77ce4f9b-ec13-4fcf-8360-5ec09362cf93",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a00efcb1-7297-49a5-a3a5-d2bb58d0a595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7721704-43d9-447c-9f2d-2e8c66680b5c",
        "cursor": {
          "ref": "6963498c-769a-4af7-acbc-3a57e3cf1783",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e0d2c565-e894-43ba-ad4f-a9cf7718f99d"
        },
        "item": {
          "id": "f7721704-43d9-447c-9f2d-2e8c66680b5c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "840321e9-d984-47c3-b424-0b0dbfbf1109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f375cb3-36c4-4653-9038-ed2120f2e22f",
        "cursor": {
          "ref": "343686d1-e54c-4dca-a6b7-61d4c68b113d",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a5842141-1752-4a5b-8883-4e8572c2d22d"
        },
        "item": {
          "id": "1f375cb3-36c4-4653-9038-ed2120f2e22f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4651863f-2580-48e8-ab43-f146d0a68a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d85845c-66ea-4cf9-8e6e-c758bfed62f6",
        "cursor": {
          "ref": "e8e2bd4e-d4fd-472a-915a-94bf9b2443f3",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fdf3cdea-24c0-499f-9a20-282a95dcae6e"
        },
        "item": {
          "id": "5d85845c-66ea-4cf9-8e6e-c758bfed62f6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7143374b-d01f-4a14-a65d-b0430b5e92b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261b5a15-e1fb-4d61-987b-d62cd19b1f80",
        "cursor": {
          "ref": "32a9cd08-bac7-4b5b-9b67-0ae69707ef93",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "40ff7977-46d5-41b9-b01a-999fbabe060d"
        },
        "item": {
          "id": "261b5a15-e1fb-4d61-987b-d62cd19b1f80",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c7712509-4969-4435-8be6-1294d1d3b50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6aa297-a799-4335-a44e-a092704e5080",
        "cursor": {
          "ref": "8fedbbc0-c9e9-4d44-8677-cc91eb061a2a",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2f1742b3-4a47-4816-b120-dce7bdaa61b8"
        },
        "item": {
          "id": "ef6aa297-a799-4335-a44e-a092704e5080",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4b6a33be-f83b-4048-b358-6ff9c83481e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c8756e-796c-483f-aa27-0b07f4184424",
        "cursor": {
          "ref": "bb70ab85-5127-48e0-b0cb-48464d888caa",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4bb50eb8-fe7b-4122-a86e-a8773cf55c9e"
        },
        "item": {
          "id": "85c8756e-796c-483f-aa27-0b07f4184424",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2c6bcd27-a41e-49fa-bfb2-bbb3cc194a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d681a80-b356-43d7-8614-969fae060a47",
        "cursor": {
          "ref": "4109a8bc-4338-4036-bc58-5a163c90a4b1",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "af85df20-d89c-479e-a14d-36fb61ba0978"
        },
        "item": {
          "id": "1d681a80-b356-43d7-8614-969fae060a47",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c73d403c-088b-4322-9bfa-1af13bcec1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08995d8b-66b4-4693-b81a-ef4b36820d6b",
        "cursor": {
          "ref": "80499836-aca4-4f1b-896c-74de1c45edc6",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "944ea8ad-be18-47fa-a380-076cb60bc6a8"
        },
        "item": {
          "id": "08995d8b-66b4-4693-b81a-ef4b36820d6b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bfb356e7-cbef-4c79-8cd2-482c9d7a04ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135fec00-7112-4266-8bea-833d5971bb3f",
        "cursor": {
          "ref": "13bda4ff-64d0-427b-890f-4f0ced9154e6",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "04d4be73-2e16-4c3c-98fb-de90882ba9ed"
        },
        "item": {
          "id": "135fec00-7112-4266-8bea-833d5971bb3f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "706d7fae-dbf1-4d49-b472-e3414bb2b4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5a1a7b-21d0-4946-835c-1195354b4650",
        "cursor": {
          "ref": "631b3f54-5e98-4807-91a8-b54dedd9a2a3",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "68dc2b22-31ba-4c22-8d5c-c856b1e1048c"
        },
        "item": {
          "id": "fc5a1a7b-21d0-4946-835c-1195354b4650",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2b3f63b7-6971-4dcf-ae5a-0d318dcb2008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e59d9f4-773c-4f3b-a812-71b5a720c702",
        "cursor": {
          "ref": "1e850898-2ea4-425e-87b6-8f1a7c69dccf",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c95229a2-b0de-497c-b83e-224ef465bd2f"
        },
        "item": {
          "id": "8e59d9f4-773c-4f3b-a812-71b5a720c702",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2e940476-13bb-4ffe-9c29-efc59fd073f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739d661f-1dc1-4060-8dd9-ad5b2dc4a015",
        "cursor": {
          "ref": "aea86ce3-8c88-48d2-860d-19d08c7c61dd",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5506192e-4303-4ebc-aa75-7bcba9eef81a"
        },
        "item": {
          "id": "739d661f-1dc1-4060-8dd9-ad5b2dc4a015",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a7d2577d-0c80-47d8-ab6d-4c0f2362459a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9f9195-5813-461f-b69b-726c09f36959",
        "cursor": {
          "ref": "9b658131-d340-4131-ac18-01a1b8977e1f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0404d8e4-eb67-4006-a6e6-9296de292901"
        },
        "item": {
          "id": "2b9f9195-5813-461f-b69b-726c09f36959",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6edb9c5d-4ac6-4547-a5e4-b5af6e434276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e7cc17-6b88-44fc-9968-a759bd1dfc25",
        "cursor": {
          "ref": "ee2c5484-9eef-4b84-aa68-810b59804c9a",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "973bbc9a-cc48-4235-b842-446ac27a5f52"
        },
        "item": {
          "id": "a2e7cc17-6b88-44fc-9968-a759bd1dfc25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1b081393-d7aa-47b2-8cee-dc24c47aa526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049c6e1e-cfdf-41f2-9e1d-509717d73ba9",
        "cursor": {
          "ref": "69260f76-bd05-4b62-b077-051bf29d6b40",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4fb5d45a-7bac-492b-9226-e44aaa0dcc36"
        },
        "item": {
          "id": "049c6e1e-cfdf-41f2-9e1d-509717d73ba9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "47e679b4-0e8f-4c99-bc85-b9cfac921346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec517a4-6459-4fcb-a894-9626898e52ef",
        "cursor": {
          "ref": "bbfe2473-1b81-437a-b2af-d62670907caa",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c08be146-3c5b-438f-b225-d6e6eab72e71"
        },
        "item": {
          "id": "0ec517a4-6459-4fcb-a894-9626898e52ef",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b071cbee-22b1-4595-8b8b-858f0f1774cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f6f3e-7add-4c30-803e-2037d79e20f8",
        "cursor": {
          "ref": "c64f8094-ce36-4976-83ac-236514f0b215",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e0199231-ba5d-424d-bf15-564925d4b803"
        },
        "item": {
          "id": "7c6f6f3e-7add-4c30-803e-2037d79e20f8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "39a7cdbd-b943-499f-bbd9-b817ae2d5685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4777ef87-072a-45c7-9215-525b703b4879",
        "cursor": {
          "ref": "696f6bfd-67ac-434c-a0dd-f6e59b0b59c0",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c3b69af3-71eb-41ad-8637-4d2a18affc59"
        },
        "item": {
          "id": "4777ef87-072a-45c7-9215-525b703b4879",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "17b15777-b314-4cbb-b87b-e2d2953ceecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20704e14-1719-47af-988d-2d697e16a982",
        "cursor": {
          "ref": "2cce6e8a-4c9f-4942-99b1-886794edf341",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "806993b9-7e45-469b-8fe3-90bb8532c5c3"
        },
        "item": {
          "id": "20704e14-1719-47af-988d-2d697e16a982",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "305089d1-4c85-40e1-9961-3af28a907a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf9d621-1102-4266-83ef-fc39ad5e477c",
        "cursor": {
          "ref": "bd02f4f4-3be0-4792-b311-da68c27ae6fa",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "48f93316-fe41-4481-aa3b-c14afec9258c"
        },
        "item": {
          "id": "2cf9d621-1102-4266-83ef-fc39ad5e477c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fcfeaca2-4221-4ffa-86a0-88c8ce7f652f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4027dbd-54fa-41d8-9c2b-4c997a422242",
        "cursor": {
          "ref": "48adfe37-0631-4b13-afd3-152104a86201",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "42b7103e-5421-4169-a4fd-b9ba20270da1"
        },
        "item": {
          "id": "c4027dbd-54fa-41d8-9c2b-4c997a422242",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0ec1dcdc-6f3f-4085-8a21-016c8b67f0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d61c92-581b-40a6-8ee7-73d91c04ce8d",
        "cursor": {
          "ref": "dc97325f-6d90-4480-9801-5bec24dbda6a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ac95746d-e025-4240-b3ef-7f6e98982fd4"
        },
        "item": {
          "id": "b7d61c92-581b-40a6-8ee7-73d91c04ce8d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "95dfa35e-3981-47e0-81a7-6a14d34ac17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e102e0f2-859e-45d1-8ce7-9d9d401cfb6a",
        "cursor": {
          "ref": "5386ff6d-8b0a-496e-87eb-01cb54959f40",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b2f15d63-4dd4-4878-bc04-497b11e79654"
        },
        "item": {
          "id": "e102e0f2-859e-45d1-8ce7-9d9d401cfb6a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "349bbaf7-4f0d-431b-b1cc-b58ccb26e5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c053e7cc-3ef3-4278-84a8-8cf39fb12c78",
        "cursor": {
          "ref": "9121f63e-6cfb-4eb1-9bf1-315bcccd8888",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9611f924-69e4-40e7-a828-3b3b6af63972"
        },
        "item": {
          "id": "c053e7cc-3ef3-4278-84a8-8cf39fb12c78",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "08e041db-4174-44bf-be88-f0199ac3919b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2820a0b0-e2ef-4172-97ee-3a94731c8a3e",
        "cursor": {
          "ref": "30a0f0e9-3049-4139-890e-b07e04bae401",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9ea0ac8b-b40c-4914-9b6b-437c3ace24ea"
        },
        "item": {
          "id": "2820a0b0-e2ef-4172-97ee-3a94731c8a3e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a2f07870-7ed9-4f1c-83d1-15e86b475bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9180c904-52c0-4c45-9972-484b975b1ce1",
        "cursor": {
          "ref": "58e6e753-5ae5-4303-bfeb-41d441e2e131",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "02c8f426-0e2b-4678-8ac1-7938fe2a9bf2"
        },
        "item": {
          "id": "9180c904-52c0-4c45-9972-484b975b1ce1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cde2fbf0-2460-4716-8924-aac107b8537d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17703153-fcfb-479a-94af-d6f8b6587a50",
        "cursor": {
          "ref": "283c06e2-56e1-4c66-9e90-a240e995b469",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "94f38575-c152-460d-84cf-998aec2f80af"
        },
        "item": {
          "id": "17703153-fcfb-479a-94af-d6f8b6587a50",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "648590f9-7ac5-447e-ad14-d9b779e75c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f81ce75-a7b1-4655-9f4d-930a25bd8d0e",
        "cursor": {
          "ref": "d8730356-fca6-448c-9876-16bd9207d911",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "50b5545c-80f3-49ae-af16-ffc1161c4b46"
        },
        "item": {
          "id": "6f81ce75-a7b1-4655-9f4d-930a25bd8d0e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "521d54a2-0105-42d8-9063-ca2cbc691028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a39b46-d524-41a7-8604-bfbc651041eb",
        "cursor": {
          "ref": "0e3d2812-2614-48a5-9339-eb5b68acba27",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d2af91df-774c-4027-b4d5-285f6ccb0b9f"
        },
        "item": {
          "id": "31a39b46-d524-41a7-8604-bfbc651041eb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9892b7d4-e10a-4b63-90f9-50818beee550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9699bde4-1fa1-4ff2-ae63-b3a02a7b81d7",
        "cursor": {
          "ref": "20b6132c-914c-42e4-956a-153c03c6fb44",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "19f384db-ec1d-4268-8e39-2312f8c5713d"
        },
        "item": {
          "id": "9699bde4-1fa1-4ff2-ae63-b3a02a7b81d7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d0841cce-d172-449c-a4ed-bdb5e94b7e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508490c8-1d45-4747-b256-5762453c616c",
        "cursor": {
          "ref": "8acb144f-d923-4545-af6d-bf9143771f2b",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5ddf2497-3f2e-420d-a023-f6215be85436"
        },
        "item": {
          "id": "508490c8-1d45-4747-b256-5762453c616c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "026ece9d-9442-49f5-9f91-5acdfa57a703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ddd0c6-9e91-4343-8004-2029bd124fcf",
        "cursor": {
          "ref": "c7b8779b-1be8-4d4f-9219-dafab4df4604",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eadd6d6a-92c9-4108-bf8e-f5fbaed1342a"
        },
        "item": {
          "id": "92ddd0c6-9e91-4343-8004-2029bd124fcf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bd9f3a4b-beb0-4508-8ee5-87110031934c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5380c4c4-38ed-4100-a1cd-31f4587c7f92",
        "cursor": {
          "ref": "32a63b49-04e6-4805-8830-cf25f6522697",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c521e444-6b57-4165-aa75-aa4c995a1570"
        },
        "item": {
          "id": "5380c4c4-38ed-4100-a1cd-31f4587c7f92",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8ac00f11-686d-4d19-b944-08620e151ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735726f6-dd14-4c66-80e2-c2663144811b",
        "cursor": {
          "ref": "9d979460-097b-4437-890f-f18839d48e0f",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "08ac6ce1-f40a-40f6-817b-752c5c0db5da"
        },
        "item": {
          "id": "735726f6-dd14-4c66-80e2-c2663144811b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7e2fd360-1621-4f9d-98c4-9d73bf43d5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf74ee80-c384-4c30-8f72-b9f2c2098865",
        "cursor": {
          "ref": "d7a8fb7d-1241-4089-b72b-77f736735c0f",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "062cdda3-8785-49ff-a423-397d4e71eb1d"
        },
        "item": {
          "id": "bf74ee80-c384-4c30-8f72-b9f2c2098865",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "39d97c0c-adae-4d49-9ca8-3a71bb5724c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e57cf1-08c5-4e88-9461-3fe8bded9ba0",
        "cursor": {
          "ref": "5e62f8e8-f0b7-43ff-b49a-0acc40f23a6b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f6874f57-9c2a-4de4-b5b6-db8b7d486957"
        },
        "item": {
          "id": "e7e57cf1-08c5-4e88-9461-3fe8bded9ba0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3d36db9b-b806-460e-96e9-3de44c200dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316358c3-0ba5-4115-b395-40e34e55fd76",
        "cursor": {
          "ref": "b75619f4-617d-44f6-ba3f-6e22cb103bf2",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a15cee22-5e56-41df-af9a-6e500bc7deaf"
        },
        "item": {
          "id": "316358c3-0ba5-4115-b395-40e34e55fd76",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5333bbfd-d5d0-4ed8-ac58-efe0c2e0dd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568266d8-2615-43bc-9b5e-e312f26de02c",
        "cursor": {
          "ref": "6aeac862-5845-4a4e-a59a-c75b2f2a572b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ff865402-adca-4b31-8b2c-4ccf86838def"
        },
        "item": {
          "id": "568266d8-2615-43bc-9b5e-e312f26de02c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "035957d4-15d7-4e17-84c8-7c5c340b2e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d31b8a-5646-40ed-a0a4-ad7777f1c15f",
        "cursor": {
          "ref": "20d76fa4-8b0c-4871-b3ac-67d45a58d06d",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3e7ed574-3548-4940-9f0b-42f7ee52b21f"
        },
        "item": {
          "id": "70d31b8a-5646-40ed-a0a4-ad7777f1c15f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "19bdff15-7e04-4b79-8b8c-72201501cab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ab1594-10c2-463c-81c3-893ea037df30",
        "cursor": {
          "ref": "2896e942-f983-42e3-ba93-ce4407eaa05d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "14f7f53c-92d4-41cb-82e1-d7436cceced7"
        },
        "item": {
          "id": "e0ab1594-10c2-463c-81c3-893ea037df30",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "be54d685-bb19-4cb7-bded-f753469e19f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776593d2-120d-4787-bfdf-469ec0c3a678",
        "cursor": {
          "ref": "a2571f62-58ac-42f6-8dfb-21db22598082",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9e179d21-f529-494c-afaa-82d645f1975b"
        },
        "item": {
          "id": "776593d2-120d-4787-bfdf-469ec0c3a678",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8e79fb5a-6fc6-4c64-93cb-ab93885d0c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fc004a-d586-4e4b-a1f2-324a99d289a1",
        "cursor": {
          "ref": "f73413a0-c93d-448c-b36b-ddafc5c95c8d",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f496e892-d9e4-459d-b5be-827b3e3e55bd"
        },
        "item": {
          "id": "56fc004a-d586-4e4b-a1f2-324a99d289a1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0c911710-daf7-4e22-9fbc-33d2ca4ff523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1083,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c5f5c9-4db6-4638-b9d7-dabbf7e7228e",
        "cursor": {
          "ref": "08c73519-ae4b-44fe-a565-5a712d82b6fd",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b4faf0b4-82c0-4f63-aae5-6d0f666fe8b0"
        },
        "item": {
          "id": "d6c5f5c9-4db6-4638-b9d7-dabbf7e7228e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3b197888-add0-497a-892b-9c6345bb84d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120379b7-d607-4da3-98c1-bf6a222c9b59",
        "cursor": {
          "ref": "701dc1e4-7d3a-413f-bfda-ae3163f0bd77",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f14686c1-c658-48d1-8b3d-4737d66f9516"
        },
        "item": {
          "id": "120379b7-d607-4da3-98c1-bf6a222c9b59",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98823b84-fcb6-48b7-9877-785a60ee808b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29e49ee-a434-455d-a932-b1901bc01d9e",
        "cursor": {
          "ref": "fbe4605f-31bd-4a17-bc59-9263ad0845c0",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c42437d3-7e30-455d-97c9-b0e6a923f20e"
        },
        "item": {
          "id": "c29e49ee-a434-455d-a932-b1901bc01d9e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b59caf7d-45ac-4d62-91b3-2dddcd6ec522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae5a2c0-8008-4133-a6d4-cdbcedaaa9f0",
        "cursor": {
          "ref": "f87d8751-5b1d-4db4-ae18-1d164ca88875",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7f09f8a7-8efb-400b-8f04-a6f67a9a015e"
        },
        "item": {
          "id": "dae5a2c0-8008-4133-a6d4-cdbcedaaa9f0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2701bfc6-c5e3-4101-8345-a4ea5cb91af6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb34f599-c432-4f3b-a117-c08b9b6b9b7b",
        "cursor": {
          "ref": "e708ce15-7e7d-4e1d-9790-f79de06a449f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6be19c29-4444-4124-8986-9e4cfa5d0cc5"
        },
        "item": {
          "id": "bb34f599-c432-4f3b-a117-c08b9b6b9b7b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "13fc03a7-eb54-429d-85e9-337706ad9a52",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1205,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1d5d39-15c2-416e-a2a1-cbd5758d6c24",
        "cursor": {
          "ref": "575c354c-f346-4136-ba5f-532a55f3e95f",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c9e8cc9-0950-45a3-8214-1d444e18ec4c"
        },
        "item": {
          "id": "2e1d5d39-15c2-416e-a2a1-cbd5758d6c24",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3962609c-4ee7-478c-8cc6-5ba6e86109a5",
          "status": "Created",
          "code": 201,
          "responseTime": 8592,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78af145-42b9-489b-a87c-08722ce7be7d",
        "cursor": {
          "ref": "2b4ca1b3-6338-403e-a5e0-0e36efa7af1b",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0b797e88-91e7-4322-a153-b739a55baa94"
        },
        "item": {
          "id": "f78af145-42b9-489b-a87c-08722ce7be7d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "86b98aa9-f8af-4333-b830-e2960c942a16",
          "status": "Created",
          "code": 201,
          "responseTime": 5786,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3992dfe6-7131-4e30-bcaf-f979905dac71",
        "cursor": {
          "ref": "3821b0d3-0839-4dd9-918c-9261c508ffa2",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "898b6b03-b31c-4f5e-a528-c1281d8059d9"
        },
        "item": {
          "id": "3992dfe6-7131-4e30-bcaf-f979905dac71",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "085eee9f-3826-44b3-9e20-99b053fcb213",
          "status": "Created",
          "code": 201,
          "responseTime": 5719,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec80c21-953d-446c-aa56-f3a018ca0818",
        "cursor": {
          "ref": "97003835-5868-4ab6-9c87-c9cf725b84d7",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "099f09ac-ba00-489a-b314-2525affa0e4d"
        },
        "item": {
          "id": "8ec80c21-953d-446c-aa56-f3a018ca0818",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "91321424-72f1-4796-b5cc-d7f91c73e963",
          "status": "Created",
          "code": 201,
          "responseTime": 8833,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0658366-5f67-4bfc-b9a2-1ec0483c7496",
        "cursor": {
          "ref": "8d8483c4-4ed9-4dcf-8f5f-579b302c1f0a",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f0b96bf0-1b9c-48b0-aa94-183f41d65b3f"
        },
        "item": {
          "id": "d0658366-5f67-4bfc-b9a2-1ec0483c7496",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b3f6150d-dda8-4465-84de-705fb35fe6b2",
          "status": "Created",
          "code": 201,
          "responseTime": 6011,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45b00ea-bf87-4b01-85f2-bb99cd9ca700",
        "cursor": {
          "ref": "edfa4d8c-f7a7-4777-9c68-a5b65ca8b737",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a6405502-ca2d-421f-b85e-8db27688dc19"
        },
        "item": {
          "id": "b45b00ea-bf87-4b01-85f2-bb99cd9ca700",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3e9fe587-dc36-4274-ae28-c28c039971e6",
          "status": "Created",
          "code": 201,
          "responseTime": 7529,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34abe30d-7191-4d2e-b4de-092e5d55ca94",
        "cursor": {
          "ref": "1c2525dd-6973-4f8b-a00f-e87dca541f5d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3f7db21a-7e5a-44fa-9672-de2a14265b5b"
        },
        "item": {
          "id": "34abe30d-7191-4d2e-b4de-092e5d55ca94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c7105692-0a9b-48d0-a680-f511523eae33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34abe30d-7191-4d2e-b4de-092e5d55ca94",
        "cursor": {
          "ref": "1c2525dd-6973-4f8b-a00f-e87dca541f5d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3f7db21a-7e5a-44fa-9672-de2a14265b5b"
        },
        "item": {
          "id": "34abe30d-7191-4d2e-b4de-092e5d55ca94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c7105692-0a9b-48d0-a680-f511523eae33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d522e9-7077-4ae9-bfcf-b613ac7f79ea",
        "cursor": {
          "ref": "b4e29397-3760-40c1-a7dd-0c92f94fbaca",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b30406d9-7402-48bd-b446-2dc9a6774a35"
        },
        "item": {
          "id": "47d522e9-7077-4ae9-bfcf-b613ac7f79ea",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aafd8292-8089-41be-8fed-189ed7de63ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4c3e9b-a185-41db-a587-12087c498e48",
        "cursor": {
          "ref": "22305f7f-ab69-4594-bab1-ac693639fc9e",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8428aa4d-4d75-426b-bf9f-b8335df127fd"
        },
        "item": {
          "id": "3a4c3e9b-a185-41db-a587-12087c498e48",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1576fe23-b688-466d-9bc0-2cf5f4962a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347f3441-a543-4692-96fb-31776f320b62",
        "cursor": {
          "ref": "829ea4d5-d6d9-4885-945d-d87b0569815c",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "982d0f01-8a39-4044-8e44-1a5637b73756"
        },
        "item": {
          "id": "347f3441-a543-4692-96fb-31776f320b62",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "33dc1330-04bc-4149-97c5-f82bdb0290d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0168e7c9-1f3f-4638-a51a-a763e82c1a05",
        "cursor": {
          "ref": "31ffe8cb-b73d-48f1-a21b-5f4c75aa19f5",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "26f8eba7-4023-422c-b9fb-8e19bc50f04b"
        },
        "item": {
          "id": "0168e7c9-1f3f-4638-a51a-a763e82c1a05",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8715fdb5-000c-4014-8a03-6427d707b323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e09f23-eaaa-4332-98ae-ea4f4100f8a1",
        "cursor": {
          "ref": "a163563e-2472-4fd5-9406-9d366a5f627a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d566a1d8-0e0c-4fb0-9896-ee6f0d8f4597"
        },
        "item": {
          "id": "e4e09f23-eaaa-4332-98ae-ea4f4100f8a1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bf4a36cb-4b8a-42ec-9cd0-d4026ab0e771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8a1189-d97b-419b-9a23-c8784a0dd79c",
        "cursor": {
          "ref": "8648234e-958f-488d-9785-dc3c8762bac5",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "db66ece8-dbe5-4490-a0dd-377ec0ca29c6"
        },
        "item": {
          "id": "6e8a1189-d97b-419b-9a23-c8784a0dd79c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ad21b2ca-60ca-49ab-8a92-94d826fe17f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6f7675-a6a2-4b34-831a-a423208adf78",
        "cursor": {
          "ref": "ae0b1cef-1924-4914-8bae-75f56747e3fa",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3c6f9729-bf01-4266-a2ed-b3cd580b7ae2"
        },
        "item": {
          "id": "5a6f7675-a6a2-4b34-831a-a423208adf78",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "10f5ae99-bfe3-43f7-acc5-4d383ee75ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d151255c-5a3e-4a3f-89bc-3e04e1bbb5c1",
        "cursor": {
          "ref": "3ff427c6-871f-4398-8a17-b8678c313d73",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0309f252-9808-4ce7-9eae-7ccd8f5e7eeb"
        },
        "item": {
          "id": "d151255c-5a3e-4a3f-89bc-3e04e1bbb5c1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "674e38b7-af3e-4665-8d65-d417f12a6790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085861c2-cc78-4e3a-9cc9-31c3192b2678",
        "cursor": {
          "ref": "b662429c-3571-411a-8a0c-073ef4fe3022",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e3726bcb-73cf-4818-8fe1-1d73eccb6da8"
        },
        "item": {
          "id": "085861c2-cc78-4e3a-9cc9-31c3192b2678",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "10632111-114c-4ddb-bea2-82a0f19761d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da23b67-a735-4c31-ac83-8e8a8044a7b8",
        "cursor": {
          "ref": "eb08210c-ca0e-4541-acef-89760377ef77",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c763db52-2edb-4aa1-80ea-28026d5de9a6"
        },
        "item": {
          "id": "5da23b67-a735-4c31-ac83-8e8a8044a7b8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3cab362d-9555-47f6-84ca-c07998108541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c60f6e3-9166-4153-9b3c-e3588ccbf83b",
        "cursor": {
          "ref": "eafdc699-3bd1-4848-9300-486b64f7939f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e9dd493c-02f0-44c3-880e-dc3fdd94615e"
        },
        "item": {
          "id": "5c60f6e3-9166-4153-9b3c-e3588ccbf83b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b80b20c6-754f-427f-882c-b2bf57133234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5b77e5-f473-492d-a543-2fbf73888e9a",
        "cursor": {
          "ref": "209497df-e7e6-4c18-a5e1-093bb4ac88cd",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b2a0c4bf-ce15-4a84-9edd-e9b40df3c02a"
        },
        "item": {
          "id": "8e5b77e5-f473-492d-a543-2fbf73888e9a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b0e42f13-d403-4d51-943e-26cfd89b84b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7b1b38-58aa-4557-9354-9ec5c84d0039",
        "cursor": {
          "ref": "19a0845f-da6c-4224-987a-534e31de91e8",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "933e699f-fa3c-4271-ad22-a64bcbaeabcb"
        },
        "item": {
          "id": "be7b1b38-58aa-4557-9354-9ec5c84d0039",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "29f82315-63aa-4cb1-be82-57c4a829fb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe0295c-97fa-410d-9b5b-01115f72af5f",
        "cursor": {
          "ref": "258d1174-6b42-4504-85a7-6d954518946b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fd2f6404-dbf7-4a34-931c-44a48b43edf7"
        },
        "item": {
          "id": "dbe0295c-97fa-410d-9b5b-01115f72af5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7231c1ab-f304-4113-b63e-a071da773eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3376da9c-087f-4d6a-8c99-13ce0b781e22",
        "cursor": {
          "ref": "9652a51d-73d1-4994-86f0-321eadd4f785",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9e7441dd-d1ad-45ec-a868-0b3e32255485"
        },
        "item": {
          "id": "3376da9c-087f-4d6a-8c99-13ce0b781e22",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e1f86a3b-485c-4f88-9c46-87e3a92a20f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878d0059-9773-474e-ae11-912f1029d02d",
        "cursor": {
          "ref": "030b983e-cc80-40ff-b8c1-03d15968fbfb",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9c21245a-ef99-42dd-9832-7e3018f79665"
        },
        "item": {
          "id": "878d0059-9773-474e-ae11-912f1029d02d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4a9a24e5-7fc4-455c-aaf8-1fbef83439d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ac98e7-538f-46f0-a6b2-dc74cda440ef",
        "cursor": {
          "ref": "0c8710fd-069e-4338-b205-839dc44bcbc5",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cd0546ff-81a8-4d34-8617-f0f9d3ed455e"
        },
        "item": {
          "id": "66ac98e7-538f-46f0-a6b2-dc74cda440ef",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f03256c9-4218-4710-8005-bcbd5b1753f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416afe9d-7874-44a4-a3a8-ff36a43833af",
        "cursor": {
          "ref": "c3bd7b8e-d7f7-4a9a-866d-bd57b6572841",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1c4badf7-e4b9-40b1-b4b8-aed506e1c1de"
        },
        "item": {
          "id": "416afe9d-7874-44a4-a3a8-ff36a43833af",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a187cdd2-10df-4b6d-9ebf-be22762ed59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079d38c5-e21a-4f55-942e-441a4b82854e",
        "cursor": {
          "ref": "6c7e1471-2807-41e5-ab53-ac961068163a",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "08974df9-50c4-447a-bec2-06fa002cf20e"
        },
        "item": {
          "id": "079d38c5-e21a-4f55-942e-441a4b82854e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c030a429-2e21-4cb2-aab9-cca27a004b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3f5048-c65f-4461-9910-ff4e8040d6bb",
        "cursor": {
          "ref": "288b2e35-334b-4c47-87be-ac873da60d83",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f6606b5b-0e16-41d8-9242-93e65b0dd8ba"
        },
        "item": {
          "id": "0e3f5048-c65f-4461-9910-ff4e8040d6bb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "28cf976a-ea5a-4eff-af62-f04986bbda16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01be7179-3174-4e40-992a-2ca140210790",
        "cursor": {
          "ref": "22f33eb4-8319-406f-b761-5eef98516cf5",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "21cbcb93-c91a-4a7e-b672-0ccc577e8a63"
        },
        "item": {
          "id": "01be7179-3174-4e40-992a-2ca140210790",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eafbd575-058e-4f86-8c3c-961d1b38e070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6f20be-5319-4c82-8590-c732b6bdd3fa",
        "cursor": {
          "ref": "87d734b5-e9c0-455d-809e-5959b779cbd2",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ab18c6fd-8961-4f6d-a7a8-23b387174afd"
        },
        "item": {
          "id": "dd6f20be-5319-4c82-8590-c732b6bdd3fa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aa48e8ea-c74b-4b6d-8156-9d8f570fe935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9b547f-5abd-4e7c-ae4b-1dc244e50c30",
        "cursor": {
          "ref": "c0102361-d079-4309-bcdd-20ca9d487c2f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5edbd0d9-624f-4f74-b1b6-9fed587f4382"
        },
        "item": {
          "id": "0d9b547f-5abd-4e7c-ae4b-1dc244e50c30",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9c0f406-45e4-4f64-b7bc-88e259a55f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb607ca-5673-4521-90c3-c4f4c85527c6",
        "cursor": {
          "ref": "3a0718e6-8532-4394-8522-5d98fc12917d",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "57c5e7b6-ac8a-472c-a04e-1e900febc20b"
        },
        "item": {
          "id": "efb607ca-5673-4521-90c3-c4f4c85527c6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4716a2b6-ac29-493c-9142-16fc67806f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374a90e8-45d1-4db2-b005-773e17f9dd9b",
        "cursor": {
          "ref": "4d28e06c-3b15-4ba2-a893-08ee5ecca938",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1c123cbf-abe5-404d-9a04-3303933dc309"
        },
        "item": {
          "id": "374a90e8-45d1-4db2-b005-773e17f9dd9b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f78eb098-547e-4847-9f95-52f0de8f9d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a8dfa5-f2d6-4792-b2a3-7ef9782aa4cc",
        "cursor": {
          "ref": "21af3ed1-876b-4b52-b046-20b5099c2876",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "92707a5c-44b3-44f5-9074-bfd393e01abc"
        },
        "item": {
          "id": "74a8dfa5-f2d6-4792-b2a3-7ef9782aa4cc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aedd73ed-7f80-4b42-90e2-ba3339f71090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f814fd29-1984-4a6d-b28e-78456419bfc2",
        "cursor": {
          "ref": "9d8c1ffe-29a1-4576-b5ff-c32d9f89d319",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c9b8278b-993f-4673-8217-6eded77af866"
        },
        "item": {
          "id": "f814fd29-1984-4a6d-b28e-78456419bfc2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32970617-3fa4-4c12-b5c6-2f821d6b28f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce4c5c8-2125-4089-bb63-4468e7041cb9",
        "cursor": {
          "ref": "82aee258-54a6-44dc-a804-da6686b4c732",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "38ef5bf1-1327-42cd-a796-94f41496e050"
        },
        "item": {
          "id": "dce4c5c8-2125-4089-bb63-4468e7041cb9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1f2abe48-2c0b-4219-9d51-c8db235fdc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82632aac-72cd-4a53-80e5-0e5c2bcf1361",
        "cursor": {
          "ref": "a3cd3892-0724-4f1b-8bb7-52fd91394033",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fc4c5e35-28aa-44fc-ab0a-c36583ffde28"
        },
        "item": {
          "id": "82632aac-72cd-4a53-80e5-0e5c2bcf1361",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c0981ad9-4a69-4e5f-9112-a341de0ca4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceec4193-5799-415a-aa87-ac9b7457b5d1",
        "cursor": {
          "ref": "4f92f2f9-f588-4ad1-9ca7-3da3499599b4",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8ac59827-4a3d-4f32-b640-e371bd3d58e4"
        },
        "item": {
          "id": "ceec4193-5799-415a-aa87-ac9b7457b5d1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7bc357fc-159e-4274-b36d-ee6547d4da54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6183b110-08ab-478f-9dfc-48231efb660f",
        "cursor": {
          "ref": "21db9c89-ca45-45ad-a783-2b85500832a9",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e8aa78aa-19ab-46d0-adc9-47419a7ea6ad"
        },
        "item": {
          "id": "6183b110-08ab-478f-9dfc-48231efb660f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dba6f2e4-d6b0-49bd-ad15-adf6e2f56945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715914b7-2393-4529-ae2e-649740f5dae2",
        "cursor": {
          "ref": "c3b3dfc7-579b-4fd6-9d0d-5441f9125391",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eed8e7cd-6519-43fb-bf40-cc24aabf27aa"
        },
        "item": {
          "id": "715914b7-2393-4529-ae2e-649740f5dae2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "472bc3a4-f3eb-4ddf-ac5e-9c7dd54a433d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa58608-a924-45fe-8178-12168e96717e",
        "cursor": {
          "ref": "86a343e2-bbba-419c-875c-1899edf5c40c",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5b1b836d-c9ec-47af-b277-1c84df317fd3"
        },
        "item": {
          "id": "7fa58608-a924-45fe-8178-12168e96717e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "55d741d9-6667-4856-9f07-70dd97d68488",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 576,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f84a16-1ff2-474e-9b7c-41d547fe06ce",
        "cursor": {
          "ref": "09f316dd-323b-4518-83e5-e13163e08411",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cff61aa9-9ddc-4a46-87b4-033a7117af34"
        },
        "item": {
          "id": "d6f84a16-1ff2-474e-9b7c-41d547fe06ce",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bf2b59f2-519f-49bc-bcee-fab87414cb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f84a16-1ff2-474e-9b7c-41d547fe06ce",
        "cursor": {
          "ref": "09f316dd-323b-4518-83e5-e13163e08411",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cff61aa9-9ddc-4a46-87b4-033a7117af34"
        },
        "item": {
          "id": "d6f84a16-1ff2-474e-9b7c-41d547fe06ce",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bf2b59f2-519f-49bc-bcee-fab87414cb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611cd46b-e7ee-408e-bec9-bce50f29a920",
        "cursor": {
          "ref": "77a137b0-983e-4e09-ba97-299f2e5eba8e",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e1c95ec0-be26-48ca-b3d2-6b956745eb54"
        },
        "item": {
          "id": "611cd46b-e7ee-408e-bec9-bce50f29a920",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4ddcbc87-573f-4c9c-987c-85c5db3b39cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467852d0-3a67-4268-ad8b-90dedf664d37",
        "cursor": {
          "ref": "b4a934e4-c5e2-4f6c-a89e-e7807ddd025c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "043bef0a-a9a0-4978-bd5b-a4cc368174a9"
        },
        "item": {
          "id": "467852d0-3a67-4268-ad8b-90dedf664d37",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d53cdcc4-3378-4600-8a81-80988c43ea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b714ef0-633f-4697-820b-862c9cd6526c",
        "cursor": {
          "ref": "aa54a865-454e-4f76-88cd-a57cafadcda2",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8fea6afc-ae66-4d74-b7d7-bf179dfd8693"
        },
        "item": {
          "id": "2b714ef0-633f-4697-820b-862c9cd6526c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4a7acfda-2df6-4158-867c-618729935e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b6481d-27c7-42c3-934b-cb3cb5757396",
        "cursor": {
          "ref": "06f371ee-9081-4ca7-afbf-056536444de5",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e2fd1393-14d7-469c-9fb0-a06cfad34d8b"
        },
        "item": {
          "id": "e5b6481d-27c7-42c3-934b-cb3cb5757396",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a7cf0971-9cd5-4e2b-a2cf-58874b1a78e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49067e5b-25f9-49ae-bfc8-5266b8a9de6c",
        "cursor": {
          "ref": "edeee229-c67b-4537-bce3-70f417080681",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dddc3f65-7625-4a64-88fa-edbe4a8b796b"
        },
        "item": {
          "id": "49067e5b-25f9-49ae-bfc8-5266b8a9de6c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fbdd931e-ab3e-44c4-97e6-6b443000147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0e659b-bd6c-40d1-8f5b-4383c8c42b07",
        "cursor": {
          "ref": "0ab76685-bfa5-4edb-b535-a06e4018cf7a",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4bf7af01-5b20-40bc-b0ed-ec15ff738585"
        },
        "item": {
          "id": "2a0e659b-bd6c-40d1-8f5b-4383c8c42b07",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "17ab5ff6-b4e0-4d5c-b9c2-2f76f9d876d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbb17f5-2149-4893-93c8-5f3592ef5792",
        "cursor": {
          "ref": "8eb5ca7c-0481-4042-9335-f559658f7d80",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "993ea53d-646f-416b-9e34-ef58156d77c3"
        },
        "item": {
          "id": "4dbb17f5-2149-4893-93c8-5f3592ef5792",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9e7dbc05-5168-4559-bf0c-1fddefb0196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e837b091-fc9b-4d72-9ef6-1b43a93b1c60",
        "cursor": {
          "ref": "dbca84b9-0327-4682-b1fb-d5ce45862d4e",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0ed63a3e-44f4-4309-b54f-58a430dce908"
        },
        "item": {
          "id": "e837b091-fc9b-4d72-9ef6-1b43a93b1c60",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8ebf1f6b-2bcf-4bf2-855d-ed8e274dae5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600a2791-e4bd-48e3-9d62-766412a82a7b",
        "cursor": {
          "ref": "01871545-672c-4c34-8110-817faac0dd76",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9a21a38a-2bab-4ce4-8592-3d4579601187"
        },
        "item": {
          "id": "600a2791-e4bd-48e3-9d62-766412a82a7b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d91831e2-e2bb-42a3-b1db-5cf1f3364c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167e98b6-c3ed-4367-973d-7c803f383b97",
        "cursor": {
          "ref": "04738781-05a8-4f02-8f4a-55fc0b1a21bc",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "259c217c-1d86-475e-b6c1-38c13c72648a"
        },
        "item": {
          "id": "167e98b6-c3ed-4367-973d-7c803f383b97",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1e46b564-edb0-431a-81a7-e1a7a15bd264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9f5023-244b-4370-ad62-7c1ded7343db",
        "cursor": {
          "ref": "09860191-a97a-4fc4-bab8-d679bbe9c548",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "11b0ba56-70ac-4245-824f-715d64cd2d68"
        },
        "item": {
          "id": "df9f5023-244b-4370-ad62-7c1ded7343db",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7e5c76ae-dfc1-4ff5-a4b0-877f8ab3da63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a34741-8783-4c68-adc6-2638fec7ff0c",
        "cursor": {
          "ref": "741a4d39-b947-45cb-a007-374a3e03821f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "35aaf256-a9c1-4d70-a252-b15ebf730a6e"
        },
        "item": {
          "id": "77a34741-8783-4c68-adc6-2638fec7ff0c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f70f22f0-da8d-490e-93ba-1db75e27b344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3366553b-49b4-4f42-a31c-627817354fc3",
        "cursor": {
          "ref": "b1945d4f-7f0d-4518-8b6e-02e3002c849e",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ee83691c-e0ee-4665-84a0-3d5e95843bf0"
        },
        "item": {
          "id": "3366553b-49b4-4f42-a31c-627817354fc3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fa2e57be-6039-4cd4-a6f6-0989381dc4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad1cf96-d35f-4ebb-802b-0347ef5a0c0a",
        "cursor": {
          "ref": "e73e7f78-7fb5-4dc2-b551-9143ddcfcacc",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "31a545cc-c40b-4104-9d38-7edc2a639867"
        },
        "item": {
          "id": "0ad1cf96-d35f-4ebb-802b-0347ef5a0c0a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9d3345c6-1fae-49cd-9165-f269b9d71837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51a4756-a864-4598-875d-57d5268d77c1",
        "cursor": {
          "ref": "28a4f2a9-c862-4be0-ae50-d4ad7424c899",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b50709f2-662f-4dcd-b121-976a65f519b8"
        },
        "item": {
          "id": "d51a4756-a864-4598-875d-57d5268d77c1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "39a3de0c-9bc4-478c-bccb-93f1617d6318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7bbaee-30b3-4629-b893-ee0847eef58f",
        "cursor": {
          "ref": "331be155-ce0b-4314-b877-5482e8bb6271",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cc12e148-f2c8-4061-9d13-7551667cb57b"
        },
        "item": {
          "id": "2a7bbaee-30b3-4629-b893-ee0847eef58f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c5d53a7e-9726-437c-9206-cab482cf7049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316894f9-56f6-471f-8dcd-b2fde75a4fb2",
        "cursor": {
          "ref": "e0666d05-b23a-40a9-ae8b-2badc7ce1df8",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8ffd5cf6-f06c-487f-b797-20ded5410191"
        },
        "item": {
          "id": "316894f9-56f6-471f-8dcd-b2fde75a4fb2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4cc8dd55-9d62-44ab-ae47-c2101240c02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383e8017-1f95-4510-8ad2-dad4b6cc0502",
        "cursor": {
          "ref": "532228c8-643c-42e1-8373-a9b8d4e0d2c4",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e11de8b3-ff19-405a-a48b-c682c799c200"
        },
        "item": {
          "id": "383e8017-1f95-4510-8ad2-dad4b6cc0502",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c923ae28-8618-4132-a290-59311bc3eeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f11f27-9f37-49af-a2f6-57baa03adfce",
        "cursor": {
          "ref": "69837d16-5396-4a52-9720-23d544aa6db5",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "93a395f5-63fa-4539-8a34-e29df164a9a5"
        },
        "item": {
          "id": "98f11f27-9f37-49af-a2f6-57baa03adfce",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "16279806-c74a-4061-a1d7-5d8b1de06ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332c871f-b820-4a6b-9630-1d75ff58b044",
        "cursor": {
          "ref": "7d0ad816-3b53-460a-a851-0daa3151cd1e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "708db40d-0c02-4005-9a36-932e2c47986a"
        },
        "item": {
          "id": "332c871f-b820-4a6b-9630-1d75ff58b044",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "af3a3303-05a8-439d-863d-80e8422624cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0c3e68-88e7-4fce-a1c1-779655491c2a",
        "cursor": {
          "ref": "7cce14de-3fa6-4874-a730-07109d94478e",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "139001da-92ca-4622-afc7-bfb72395db0c"
        },
        "item": {
          "id": "ca0c3e68-88e7-4fce-a1c1-779655491c2a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ac495955-4c31-4990-be1e-9c478d1dd606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba9f9af-79a8-42d0-922e-bade730dc79a",
        "cursor": {
          "ref": "be6629e2-418a-4255-a9bd-a0a4577cc550",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3dfaddfd-8462-4f23-979a-3845a75de795"
        },
        "item": {
          "id": "8ba9f9af-79a8-42d0-922e-bade730dc79a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "74687326-501e-47cf-a7c1-c07f4255b716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88033b1-3618-4968-b343-289687d4a222",
        "cursor": {
          "ref": "cdc89a00-eba3-4e64-8d44-548baa824b46",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7a501e9e-4fd3-4726-a567-ded6e7c2b4b0"
        },
        "item": {
          "id": "a88033b1-3618-4968-b343-289687d4a222",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cc9222ca-8c98-49fb-bf5f-3e63498cdd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c77cc1-6b22-4879-8dd7-fb5ba7999350",
        "cursor": {
          "ref": "b9f717e1-2fd4-469d-b4fe-7ce1bfd6df44",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "44394d9c-e841-44d8-b19b-18c0618c4241"
        },
        "item": {
          "id": "14c77cc1-6b22-4879-8dd7-fb5ba7999350",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a9dc12f6-1a3a-4d28-a29d-1a2741cb1d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc82bac9-6aa2-42ac-a33d-f00b9a361b19",
        "cursor": {
          "ref": "4ddabb6a-d32a-421c-a107-5aba9fdfea9e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "52b8aa71-e6ae-49c4-898b-d47a68941057"
        },
        "item": {
          "id": "bc82bac9-6aa2-42ac-a33d-f00b9a361b19",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a6f15502-a027-409d-b9f1-e23e3f9a6608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76863fd5-fb8f-4c82-a28d-a1593be0fb97",
        "cursor": {
          "ref": "95494a44-2d27-41ec-9039-cac2ddf8acf6",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "187abe83-2b60-4414-9495-84dcaaf86b52"
        },
        "item": {
          "id": "76863fd5-fb8f-4c82-a28d-a1593be0fb97",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c7d71eca-d7f5-46c0-9898-a716b3da0e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd447828-624c-4cfa-b4f3-78109c52fe61",
        "cursor": {
          "ref": "4d21ab00-c47a-47f9-950d-ea0baba6deb5",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "95baeebb-fd63-4f49-a335-392edc52e421"
        },
        "item": {
          "id": "bd447828-624c-4cfa-b4f3-78109c52fe61",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "687578c5-518e-4d7b-9960-715d0d149d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7deb52-f8b3-425a-8fe0-4d7b58f232d5",
        "cursor": {
          "ref": "e4b0be85-d542-4dbb-b06a-770badc030eb",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "89e9f743-5463-4404-9dca-3c2be2f61f7d"
        },
        "item": {
          "id": "5f7deb52-f8b3-425a-8fe0-4d7b58f232d5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "32540e84-91a1-4910-b697-47f6a841f8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e70a92-ce94-44a2-adf3-d4edaac384c5",
        "cursor": {
          "ref": "1a800e12-e1ce-4594-9467-d203e7240768",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a76bbc73-a33c-4538-a964-39aced7111a6"
        },
        "item": {
          "id": "86e70a92-ce94-44a2-adf3-d4edaac384c5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0833810e-e3ef-4685-89d9-f0aacec2d998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742b9acd-cb71-4bca-93d4-baa5c6f1f51b",
        "cursor": {
          "ref": "36f002cf-d3c6-49c7-830e-1fba1c1c84a7",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8a63f0c6-8e04-4d24-9243-acff24fadfd7"
        },
        "item": {
          "id": "742b9acd-cb71-4bca-93d4-baa5c6f1f51b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "46ce9399-d918-41aa-8f37-33ef7522f4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1de493-f2c4-45d3-bc7e-0754bfcc6db5",
        "cursor": {
          "ref": "9d6866de-7eb1-4818-8293-f2ee8b89d7bb",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "897a563f-dc79-4875-9300-ef3ca6ec4ce9"
        },
        "item": {
          "id": "dd1de493-f2c4-45d3-bc7e-0754bfcc6db5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4ecee6ea-8811-4077-8bbb-d03300cf610a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3754d597-4219-4f52-a3a8-f2392a2df76b",
        "cursor": {
          "ref": "4876499e-6bb8-4b84-954b-65fe1e5e58ac",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9a654d27-b9cd-451a-ac0f-5b2d6c802c5e"
        },
        "item": {
          "id": "3754d597-4219-4f52-a3a8-f2392a2df76b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c69e7eb4-833b-4cd2-af97-b9e3bfef059d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8183db5c-8810-4eec-8107-6f4c3c4ac20b",
        "cursor": {
          "ref": "5e98d4fb-930e-48d7-9947-9f7ede2868d3",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "85e960cd-df8e-4e8b-b6b6-7ebd847dd594"
        },
        "item": {
          "id": "8183db5c-8810-4eec-8107-6f4c3c4ac20b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c30d9878-2ebc-4cf5-8ecd-6517a009f3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46b7b9f-cb80-4fd2-b81c-9dee4cae32a4",
        "cursor": {
          "ref": "2421c983-ffe5-4349-91aa-6a3a74117637",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3b314371-aae2-4a9c-8cbb-c46743aeaa63"
        },
        "item": {
          "id": "e46b7b9f-cb80-4fd2-b81c-9dee4cae32a4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fa5a20aa-4474-4b69-8f96-2892ccef53c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d24eda5-216b-4537-837a-bad51a173dcd",
        "cursor": {
          "ref": "90dbb939-a538-4bc4-928f-3dfb2c58bc82",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d75c56d2-31ab-4c8d-8b1a-297d7b897cc7"
        },
        "item": {
          "id": "1d24eda5-216b-4537-837a-bad51a173dcd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2998b32b-d078-4d82-aa1e-87f76060954a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf4929a-1cf0-473d-8a7f-88431dc6b3ff",
        "cursor": {
          "ref": "ef400c28-7785-4682-9080-b5fff6718709",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cf134369-bf1f-412d-9fd5-b4ba51ebe9f4"
        },
        "item": {
          "id": "4cf4929a-1cf0-473d-8a7f-88431dc6b3ff",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "69a0b76e-83f3-41cb-badc-9dce212057ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fca9fb0-5434-415d-a892-ef6ed4b0e3c4",
        "cursor": {
          "ref": "9ae19984-7f94-4d27-a675-e1272765fc42",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d19b4280-90b7-4805-a90e-ec245e26edb9"
        },
        "item": {
          "id": "6fca9fb0-5434-415d-a892-ef6ed4b0e3c4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e236ea80-a0e7-4aca-890c-4cd215e0b93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8538e8-86eb-4790-9d7a-91da4b5784ba",
        "cursor": {
          "ref": "7fe549e6-e7c7-49ad-b7be-d41e521c42ca",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "22d1f32e-78dc-4c55-835c-46f033e8dc9a"
        },
        "item": {
          "id": "9b8538e8-86eb-4790-9d7a-91da4b5784ba",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6751dcf5-082d-4d3d-a902-db543ed2263f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fd0afe-920b-4f7e-876e-316148313a2d",
        "cursor": {
          "ref": "dcce6bf1-1fb6-46b5-ab27-f64df668c3f8",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "60b1d7d4-8827-428e-b5fa-ad68bc9785a1"
        },
        "item": {
          "id": "f1fd0afe-920b-4f7e-876e-316148313a2d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "42dea86b-e5f0-4468-8c12-bd70232db592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6887fc7a-4727-4055-9c38-772e21162dbe",
        "cursor": {
          "ref": "4f080451-1940-4f89-8777-fa19d2701b90",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bbdbacfe-09ba-48d0-bace-305a1f5fe3e3"
        },
        "item": {
          "id": "6887fc7a-4727-4055-9c38-772e21162dbe",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9ddfdb8c-d702-4664-89c3-d91ed1595e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44b65d2-c34f-45e5-888c-8a85f3df5757",
        "cursor": {
          "ref": "4f06f9e7-8012-456e-b93e-ec5d7b2b7e39",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9e7740e4-b934-4ac0-8719-e6fb97295e46"
        },
        "item": {
          "id": "e44b65d2-c34f-45e5-888c-8a85f3df5757",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "27a769e5-b792-48a4-bdac-8450d57f9114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed385d3e-d1fd-42ec-9cb3-1d5e60e0b5f2",
        "cursor": {
          "ref": "acff81f1-7253-4e29-a80a-cc267378ce62",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "29111356-5e0f-4ce2-a556-14eba1db5d22"
        },
        "item": {
          "id": "ed385d3e-d1fd-42ec-9cb3-1d5e60e0b5f2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0998e269-2463-4c9b-a64d-cd88dd64b4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf44f14d-15d3-417f-a241-4375841627d1",
        "cursor": {
          "ref": "ed5696d9-2627-4656-82ec-af2d459bd035",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3f3218d0-c46f-47d2-b9cf-141e0bccae6c"
        },
        "item": {
          "id": "bf44f14d-15d3-417f-a241-4375841627d1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a99e5b8a-4831-45f3-adfc-38d45b360a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2152010-bfaa-414b-9a63-50dc8236ee1c",
        "cursor": {
          "ref": "de54d0ef-4b34-4df3-a75a-0027b7f7213f",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7a0858d0-862c-4d3c-b28f-924909a27cfd"
        },
        "item": {
          "id": "d2152010-bfaa-414b-9a63-50dc8236ee1c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "72bfda5e-a7d5-484e-ab67-42b7abbe6246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15276d3-fc2e-45f3-bbc5-a85bc39b7bcc",
        "cursor": {
          "ref": "9081b8aa-fe4a-474a-ad87-8f58f9c8d61f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d2211aab-0b7d-44b0-ad44-ef81ef634846"
        },
        "item": {
          "id": "b15276d3-fc2e-45f3-bbc5-a85bc39b7bcc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d4d9286c-cbf6-4132-b4ed-4f349ea35a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a621389d-6ed2-4b1c-97f6-3fb00b35b60b",
        "cursor": {
          "ref": "3863852f-30a2-4c1a-9c2e-d628194388de",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e3e49370-5581-4b94-a20f-6092f5511de5"
        },
        "item": {
          "id": "a621389d-6ed2-4b1c-97f6-3fb00b35b60b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f513e841-6cd6-411b-bc2d-a47c0bf0a8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bf3219-e489-4e21-b3bc-508a5e0be988",
        "cursor": {
          "ref": "34718140-5399-4a5c-a1d5-43d15be3447e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ed3a0754-cd9a-458a-8582-9bd077b6514a"
        },
        "item": {
          "id": "c0bf3219-e489-4e21-b3bc-508a5e0be988",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "711cee9d-0acd-4a32-b0dd-f1fab1c6bc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51ff36d-6fa0-4aac-89f3-ed79077536ce",
        "cursor": {
          "ref": "a67cb0f9-1a4a-4ec0-9e18-cdc0d8185a3f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7b5e4bff-d11a-41c8-a7df-f742d9c9b249"
        },
        "item": {
          "id": "e51ff36d-6fa0-4aac-89f3-ed79077536ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9c49b323-b971-4fdc-a999-32a2d084f896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c5be61-ca30-4bfb-aca6-eb5cb242baf5",
        "cursor": {
          "ref": "894533ed-1bdb-4bf0-9406-ba23d346498b",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "532d8f5e-f0af-492f-8045-ba0e79699bf4"
        },
        "item": {
          "id": "37c5be61-ca30-4bfb-aca6-eb5cb242baf5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0efc4237-10b5-4520-be41-dacd63ae780c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18e5ac9-45bc-4a06-bed1-30084e5fac70",
        "cursor": {
          "ref": "eb40791a-0c58-4e1b-9425-cf956d10ef32",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a6002908-9526-4ab4-add0-cb70daf4f7f0"
        },
        "item": {
          "id": "f18e5ac9-45bc-4a06-bed1-30084e5fac70",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b68902eb-1272-4dc5-9487-15482db85022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c6a1d3-af28-4097-ac99-97eda2850873",
        "cursor": {
          "ref": "55cf57d0-cfa5-4c53-92b8-d6d5b91ed1b2",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4b608dbb-362b-4ba4-a142-4d3ba5cad11e"
        },
        "item": {
          "id": "10c6a1d3-af28-4097-ac99-97eda2850873",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6b7ad4e6-da37-4410-9ebe-8bd076f6072c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5ebdc3-50ee-478e-a4dc-5baf28a1a028",
        "cursor": {
          "ref": "d2f6af45-0215-45b3-8659-3b466a68c824",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "06ff8fd9-a6d9-49da-9791-08f394a76556"
        },
        "item": {
          "id": "4e5ebdc3-50ee-478e-a4dc-5baf28a1a028",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "01de7e8b-4334-4e0d-89e9-7effcf9731b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d9ea6b-1128-49cc-ae40-ed0ebd6d0780",
        "cursor": {
          "ref": "516477ff-8657-4346-ba73-97a7b1e5c681",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "348abb70-781d-489a-94af-7be0462389e4"
        },
        "item": {
          "id": "12d9ea6b-1128-49cc-ae40-ed0ebd6d0780",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d4826d1e-c2a7-48af-b592-f45b563a31b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e0723f-4cd3-4605-a4e6-bac9aa7f2c65",
        "cursor": {
          "ref": "eb5757e2-a2ac-47bd-95af-03307bf68982",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e2d426cb-7ca8-4cad-92d3-da28c1070bd8"
        },
        "item": {
          "id": "64e0723f-4cd3-4605-a4e6-bac9aa7f2c65",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d7812183-6c84-4ab9-bf5a-a9150100ef2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ab16fb-b942-4695-92bb-c33595545812",
        "cursor": {
          "ref": "f419aa52-587a-4811-9b23-d9eb3182bd46",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4077ca8a-f982-453a-9bde-65a5ffab9c56"
        },
        "item": {
          "id": "99ab16fb-b942-4695-92bb-c33595545812",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8f4f9a33-672d-4af7-906e-960b5b0e22f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfac8cf-e68f-4142-ae4a-80b5d4b4f853",
        "cursor": {
          "ref": "8f73301a-5a2e-4bb3-b5cd-9b072ff478a3",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "07260303-3bfe-4398-a393-912ffd1cc85e"
        },
        "item": {
          "id": "1cfac8cf-e68f-4142-ae4a-80b5d4b4f853",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ff226c13-ed09-4f7a-8f41-396842a750d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcef11d5-ac85-4c28-ae0d-6d5cadfe1b22",
        "cursor": {
          "ref": "430adca9-c9d8-4a5f-b66f-481f872cd59d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b01e1a4b-2413-4fc3-b9f1-fe54e3b9c70a"
        },
        "item": {
          "id": "bcef11d5-ac85-4c28-ae0d-6d5cadfe1b22",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3f73d7ef-0be3-4c72-817c-c0726e147387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eadd52e-3882-4821-a4dc-20a17280fe39",
        "cursor": {
          "ref": "234fd6b5-fe19-405c-b5e4-3229768b3bb4",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "295d288c-7181-42df-b482-07d211d0bc13"
        },
        "item": {
          "id": "8eadd52e-3882-4821-a4dc-20a17280fe39",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ac8a9553-5739-4858-b66e-8d42273edb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323fbe33-08fb-4024-8bdd-c4f2a4f942b1",
        "cursor": {
          "ref": "a7cac63f-00dd-41b8-819e-97765bba2623",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fcc8a4cd-282e-4d6e-8f88-001f8f0e2683"
        },
        "item": {
          "id": "323fbe33-08fb-4024-8bdd-c4f2a4f942b1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "91c0075f-c3da-409f-8f79-8529a93abee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b3f027-2ba2-4870-b597-5ca3d2787241",
        "cursor": {
          "ref": "7ace5e75-90c2-442a-b437-8ecb22145d14",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e9f3d702-b494-4765-a0af-03ed8d64719f"
        },
        "item": {
          "id": "17b3f027-2ba2-4870-b597-5ca3d2787241",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5f24967e-b1f5-4451-970d-25b952ded50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25d3a38-6a9f-4572-b18f-24b7985ac74f",
        "cursor": {
          "ref": "e1b7db47-0be3-4e5d-9ea2-89b2089dbc63",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "703b5bd6-7116-4f43-b61e-1030482ba85d"
        },
        "item": {
          "id": "e25d3a38-6a9f-4572-b18f-24b7985ac74f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "02214b71-18ed-44c0-b4d3-dc78e428aef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dfafea-4250-4846-951e-344592ab0f04",
        "cursor": {
          "ref": "c67a2196-1777-43c2-bb3f-433e3d1e3049",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b0e3993b-0fa2-4f15-b2f5-17e9d1a090c4"
        },
        "item": {
          "id": "d5dfafea-4250-4846-951e-344592ab0f04",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1af699b0-0aed-4877-8c17-d635f14a3347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eb14c4-2585-4963-b76d-bb2a69d10902",
        "cursor": {
          "ref": "00d29369-712c-4c07-bc0e-e5a6b5512732",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "02464ad8-0bee-422f-accb-42a66ab06d27"
        },
        "item": {
          "id": "39eb14c4-2585-4963-b76d-bb2a69d10902",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b4459a8f-e26e-4ae4-aa22-db59ed0dabee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1155,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b627df-9d6e-46c9-85cf-665c1ae08d49",
        "cursor": {
          "ref": "be1dd99b-e576-4701-ab70-065a0902795d",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b45de298-c13a-4dad-bde2-d7266b77802f"
        },
        "item": {
          "id": "60b627df-9d6e-46c9-85cf-665c1ae08d49",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1748c916-c9c6-40d9-a8bc-1a3c7fc2715f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc204310-2c9d-4d59-b555-9e93ac292248",
        "cursor": {
          "ref": "c34ef15f-2c1b-4d96-96c3-a288da9534c0",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5dcfcc39-36eb-48b1-9d55-d4d39483768f"
        },
        "item": {
          "id": "fc204310-2c9d-4d59-b555-9e93ac292248",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b4f41dad-b55b-4df7-aad1-23c4ce55581a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0f809e-cd06-4e58-b612-e9197af72858",
        "cursor": {
          "ref": "5046b084-07f1-4ad8-85fe-50bb60243fef",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c463cf32-63b1-4d2c-8a78-854f9f212bcd"
        },
        "item": {
          "id": "0d0f809e-cd06-4e58-b612-e9197af72858",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6b2140d9-dd2b-437d-8fdc-60a5d8d0c45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb63725d-e844-4a25-96b3-f9b1d5886146",
        "cursor": {
          "ref": "7784aec1-4185-4d15-8977-d3ce0a85b53a",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9ce4ef46-9a8f-4ce4-8fb6-19b315fdef20"
        },
        "item": {
          "id": "bb63725d-e844-4a25-96b3-f9b1d5886146",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aa72e312-0248-4f8c-918c-1e3fb8866fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec550846-ee1c-4c10-a42e-67839106b5e4",
        "cursor": {
          "ref": "46753e74-a1b0-4c8f-874e-c71531a3a7f1",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "86116cb8-9c62-4a78-8142-d4bdc6e4aa2e"
        },
        "item": {
          "id": "ec550846-ee1c-4c10-a42e-67839106b5e4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1d2381af-960d-48be-a73d-bd5c654129b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986647e9-9013-4865-8cdc-2489731a86bb",
        "cursor": {
          "ref": "91fa545c-faa7-4b3b-98d7-55fd7a58029c",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d0d0a79b-409a-4fce-92c3-d111b72997d8"
        },
        "item": {
          "id": "986647e9-9013-4865-8cdc-2489731a86bb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4b559c0b-05c1-4d80-b578-bc9a2a4bba14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b00daf-5fca-4a5e-b847-f953a570af3d",
        "cursor": {
          "ref": "86fcff18-49d3-4a30-bed2-ac276ba9a069",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8140831c-0684-4c39-af33-a4e1e3c7f6a5"
        },
        "item": {
          "id": "02b00daf-5fca-4a5e-b847-f953a570af3d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e75c91d9-8665-48e9-b8dd-ad13d900e9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d576b4b-bacc-4151-92af-a62b36594ef6",
        "cursor": {
          "ref": "bb5beaa1-feb4-4244-82d8-d471267c9189",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0db7dc6e-49b4-4d25-b4a8-d4e5a08b63e9"
        },
        "item": {
          "id": "0d576b4b-bacc-4151-92af-a62b36594ef6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bdd64e0b-d508-463a-b08f-24d9ebacdd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2ca053-df6c-4ffd-94d0-fbe8f6b27c83",
        "cursor": {
          "ref": "5173ea46-e5ff-4ceb-b251-723dd100808b",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c7a532c4-3c81-460e-ab6e-e5a6ee756f9d"
        },
        "item": {
          "id": "5c2ca053-df6c-4ffd-94d0-fbe8f6b27c83",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7fd0fbed-f40c-408b-b5d0-14525672ff79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b53f04e-9e40-4808-bf3b-928bef4fa8ed",
        "cursor": {
          "ref": "1f4f95ac-5279-4ccc-87fd-f983afd9e4f3",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d2283744-862f-4c38-b539-cc8f08753a13"
        },
        "item": {
          "id": "6b53f04e-9e40-4808-bf3b-928bef4fa8ed",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "80fed130-4a8e-4bb6-9995-523ad7890e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea484a7-3d1e-4c0c-976e-d551396d816b",
        "cursor": {
          "ref": "c865f00f-9e04-46a6-bc87-55d9468fa0b8",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "43d381a8-3e22-44ab-a732-c56ec6b1699b"
        },
        "item": {
          "id": "3ea484a7-3d1e-4c0c-976e-d551396d816b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3425c0fe-563b-48bd-bd71-fe870f027802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e4f0dc-28e6-43f0-acf2-2a44f7bbe87b",
        "cursor": {
          "ref": "d38f5d45-4cec-4ce4-b4c6-b01f5fff5c82",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "48c10123-2aad-4261-8775-2feb702fc3f3"
        },
        "item": {
          "id": "c1e4f0dc-28e6-43f0-acf2-2a44f7bbe87b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "362771e0-d82b-412b-993d-03fbeab54119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41acd6e5-239e-452f-80a1-64cc89790185",
        "cursor": {
          "ref": "410bea51-d508-4433-af7b-612dd1939e1a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c37e9eb1-915f-493e-b534-9d35a1df8dd2"
        },
        "item": {
          "id": "41acd6e5-239e-452f-80a1-64cc89790185",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4fe07d21-acf7-492a-9779-c50d70add88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba0908c-48ea-4f02-a52b-cb96a8ab90c5",
        "cursor": {
          "ref": "30b2a36d-ed00-4aa9-af04-b427ade38ea4",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "41caf9d5-6810-4c6d-b889-c21b5a28752e"
        },
        "item": {
          "id": "6ba0908c-48ea-4f02-a52b-cb96a8ab90c5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e92c2d2b-cecc-44bc-ad09-5f3cf0f3f922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e791e91-50c6-4c1b-b773-c28046e7f2e0",
        "cursor": {
          "ref": "c834dfea-a745-49f6-9a4d-5474dc507614",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0b45289c-fc39-49f3-a43b-272efcfa867c"
        },
        "item": {
          "id": "0e791e91-50c6-4c1b-b773-c28046e7f2e0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3598f84e-2b80-4b88-8b03-e3d654ab1a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25245398-7dd1-433a-9133-28bee2088638",
        "cursor": {
          "ref": "977571e2-d8e1-4956-a8c9-e381d987550a",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "32c84a69-98f6-4516-801e-4483cba724f5"
        },
        "item": {
          "id": "25245398-7dd1-433a-9133-28bee2088638",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cc82d36f-e6a3-4cff-ab84-289af05cf205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e576dd99-a4f4-4bc2-9037-2eab98e66dab",
        "cursor": {
          "ref": "df82b946-14d9-414f-a691-3f7194e93034",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b1963725-0fa8-4d37-8ecb-93c6fccd5c91"
        },
        "item": {
          "id": "e576dd99-a4f4-4bc2-9037-2eab98e66dab",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6e916511-4b15-481f-b2ea-8bde640d1e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0863c56e-1edd-4245-9438-2effb85f49da",
        "cursor": {
          "ref": "b44251e4-2191-47be-90ac-53ee15a6e429",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fba9d409-057f-4283-9e5e-a6ba213b2629"
        },
        "item": {
          "id": "0863c56e-1edd-4245-9438-2effb85f49da",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "310a9182-d096-422d-adaa-6c02a41bd758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce692838-4955-4cbc-8170-b4f928e31c14",
        "cursor": {
          "ref": "08deba67-ed62-4c6b-9730-4beadb013cc1",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "df5837c7-eaff-4081-bc49-9c0528765177"
        },
        "item": {
          "id": "ce692838-4955-4cbc-8170-b4f928e31c14",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e30f3021-d3ac-4ab0-9607-3fa430696284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32ac969-9637-457d-b4df-d0cdfe7cd0f1",
        "cursor": {
          "ref": "f9735d6c-dbd4-4f69-a5a3-69f8e60ee567",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "03844d8c-6ce5-40b3-9c6b-9f79147f84ef"
        },
        "item": {
          "id": "f32ac969-9637-457d-b4df-d0cdfe7cd0f1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "69fae26a-4791-40be-8347-d1ad39fe36b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30276575-c29d-43d4-95b2-e9d46efe866b",
        "cursor": {
          "ref": "8eab8c74-320c-46a0-9695-b884869c9de4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "95bc7f88-fa9d-4328-b029-1ca42c07c88a"
        },
        "item": {
          "id": "30276575-c29d-43d4-95b2-e9d46efe866b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "16789af8-1516-4069-9262-0e61e547b637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db451a9e-bf25-4217-8a05-ac6669c462a2",
        "cursor": {
          "ref": "d8977569-c831-4a01-b2f5-e199753ee39e",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "91860224-60f2-4bfe-b3d6-cecdc8218d15"
        },
        "item": {
          "id": "db451a9e-bf25-4217-8a05-ac6669c462a2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "422bfc63-c9ad-4e67-ac9b-2ae59b18ca0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b7a280-0a16-4e43-bd52-eca43e5c1ff5",
        "cursor": {
          "ref": "7b220a2b-4cf9-414c-911b-8192429b690c",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c3698efd-f2e8-42a6-bea9-f84905c4ab30"
        },
        "item": {
          "id": "b3b7a280-0a16-4e43-bd52-eca43e5c1ff5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "468073b2-a578-4e52-adf4-fb51121d613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f38f315-432c-40c6-8608-dd8a4b9a2c76",
        "cursor": {
          "ref": "67f32527-f2b6-4a42-bf94-a0c11b9868c6",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d2cedb4f-fa2f-4043-8c9a-6a1ab3453596"
        },
        "item": {
          "id": "8f38f315-432c-40c6-8608-dd8a4b9a2c76",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c02edfe9-9473-4a42-b0d4-16aadec60926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dc58f1-b3cb-4329-a948-b38bab38f5fd",
        "cursor": {
          "ref": "a1b600c2-ac47-4b4e-9a22-269618cb3107",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6477958b-f9dc-4474-8d60-e3e868bf407d"
        },
        "item": {
          "id": "b7dc58f1-b3cb-4329-a948-b38bab38f5fd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "265b67f5-a327-4d19-8c9b-5b92051ad576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffb65fe-7481-47f0-8906-93d7a9d83372",
        "cursor": {
          "ref": "eef72daa-418b-4918-adc7-df5dbaa52a15",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d2501f9d-9c97-4e9a-936e-ba134214a962"
        },
        "item": {
          "id": "6ffb65fe-7481-47f0-8906-93d7a9d83372",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0ab20ac9-7e7c-482d-902b-c33e5f7428a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85731c8b-d425-41dc-ba15-2fb39ea99d33",
        "cursor": {
          "ref": "dcf4a7fc-cf4b-4773-9da5-5c6e46c63029",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d68d5cd5-d5a4-4968-85e1-6a251ab24b01"
        },
        "item": {
          "id": "85731c8b-d425-41dc-ba15-2fb39ea99d33",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f4019ab4-a974-41b5-8d90-7b69a4355467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598a121e-928b-40f9-bf69-4f430e55224c",
        "cursor": {
          "ref": "98c18117-e13d-4006-b4d6-406fb1487a5f",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "685d21fb-68ba-4563-b646-485d5d0c4d43"
        },
        "item": {
          "id": "598a121e-928b-40f9-bf69-4f430e55224c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f37d2160-1252-4b2f-992f-c17ccb49f14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d556511f-33ea-48b1-9237-3c661edc538d",
        "cursor": {
          "ref": "a29838d2-4b45-4530-81a2-6f242794f106",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5881ef25-35b8-431f-97a2-b412479c0be9"
        },
        "item": {
          "id": "d556511f-33ea-48b1-9237-3c661edc538d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "90c01969-09dc-4f34-8d9d-5aaaa684e923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d25e5e-5328-4d6c-a89d-9b36fe948aa3",
        "cursor": {
          "ref": "600e6fcf-e91a-44d3-a233-960ff3ff8f5d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2f257976-baa2-496f-ae2e-24fd3d7af98f"
        },
        "item": {
          "id": "b3d25e5e-5328-4d6c-a89d-9b36fe948aa3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eb3f84d5-45f6-4958-862f-11e41b377e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c59dfe-43d9-43ff-a668-32744b5f0428",
        "cursor": {
          "ref": "4a81edd5-f125-41bd-9b79-a34fe417251e",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "30bfee92-0944-477c-b380-b65e7056ac2e"
        },
        "item": {
          "id": "a2c59dfe-43d9-43ff-a668-32744b5f0428",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "09258547-16e5-44f5-b29d-4fda29c00209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190f744d-ac8f-4a2c-9d28-afd4606bde12",
        "cursor": {
          "ref": "e5346813-53b0-49c2-af73-2f30491f2a3d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "448e8c88-37aa-4b90-aff6-9773fde140da"
        },
        "item": {
          "id": "190f744d-ac8f-4a2c-9d28-afd4606bde12",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "822f9497-1ecb-4cdf-bbfc-9edc0684c71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c631a4f6-dea9-4917-b9d2-aa2327eba712",
        "cursor": {
          "ref": "f29f683a-53ae-4eb1-8127-f818e58ee603",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cc8bfedc-943f-4981-b06f-64a17a3999b8"
        },
        "item": {
          "id": "c631a4f6-dea9-4917-b9d2-aa2327eba712",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4ef7bc24-6f04-44ab-a6db-b44481c33e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83637c5-f200-45a6-a8a0-f8d02c61b8dd",
        "cursor": {
          "ref": "e6d76dd2-6ab9-4940-8c01-63a268a10410",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ede1281a-2751-415c-afa3-d87412ee4f35"
        },
        "item": {
          "id": "c83637c5-f200-45a6-a8a0-f8d02c61b8dd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "57777f52-c620-463c-a44d-f5577aca3168",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1b35c5-2044-4881-893a-75cb330b5917",
        "cursor": {
          "ref": "88e6c896-fe90-4642-a8ae-7cdb0e07e7b2",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "69bf6c9b-d6bb-47b0-ab79-759efb5b4e99"
        },
        "item": {
          "id": "ec1b35c5-2044-4881-893a-75cb330b5917",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8eed7293-e8f6-4573-9c9a-36ae61c0149a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 316,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7609961d-a662-4606-8152-41770b366d68",
        "cursor": {
          "ref": "d2837c76-5127-4b60-bbe9-13f1e84b011b",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4e056364-497f-4b11-9b25-baadb781a74e"
        },
        "item": {
          "id": "7609961d-a662-4606-8152-41770b366d68",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "969bd2a6-bdb1-40c8-b5ef-33bfd3a08c5d",
          "status": "OK",
          "code": 200,
          "responseTime": 389,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8879b4d1-f140-441f-b823-86041bc90c3d",
        "cursor": {
          "ref": "4eb8ba8b-2915-4de0-8c1f-b0b82615aee0",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cd2795bc-7e0b-4048-9208-9cd5b7d0e39c"
        },
        "item": {
          "id": "8879b4d1-f140-441f-b823-86041bc90c3d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e6355651-a531-4a25-864e-7c3967b662bb",
          "status": "OK",
          "code": 200,
          "responseTime": 1885,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c62c8b-e163-4de2-890d-c7587c882d4d",
        "cursor": {
          "ref": "373257dd-40b1-4040-af67-4a3fd3ff2ea7",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9fbe4868-aef2-4d38-a48b-8c82acfc2475"
        },
        "item": {
          "id": "d7c62c8b-e163-4de2-890d-c7587c882d4d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0dcab453-4c52-4492-bd01-77ee7d9762ca",
          "status": "OK",
          "code": 200,
          "responseTime": 1747,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ff2cbf-32f6-4fd3-a423-8510275a42db",
        "cursor": {
          "ref": "d8bd1b77-fdef-4bec-84bb-f0a7e7120c40",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f39553ab-33ab-46ff-8b69-c67503682f2b"
        },
        "item": {
          "id": "a7ff2cbf-32f6-4fd3-a423-8510275a42db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2451e767-ce06-4bc6-8a74-cfbc932173ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ff2cbf-32f6-4fd3-a423-8510275a42db",
        "cursor": {
          "ref": "d8bd1b77-fdef-4bec-84bb-f0a7e7120c40",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f39553ab-33ab-46ff-8b69-c67503682f2b"
        },
        "item": {
          "id": "a7ff2cbf-32f6-4fd3-a423-8510275a42db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2451e767-ce06-4bc6-8a74-cfbc932173ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ff2cbf-32f6-4fd3-a423-8510275a42db",
        "cursor": {
          "ref": "d8bd1b77-fdef-4bec-84bb-f0a7e7120c40",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f39553ab-33ab-46ff-8b69-c67503682f2b"
        },
        "item": {
          "id": "a7ff2cbf-32f6-4fd3-a423-8510275a42db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2451e767-ce06-4bc6-8a74-cfbc932173ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da179e5c-6861-4fdd-92c5-f1707ac25300",
        "cursor": {
          "ref": "1da41a15-e2da-4752-9349-5b57cf9c815f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b2988d7e-ef40-46c0-8c01-7f588a85e3d2"
        },
        "item": {
          "id": "da179e5c-6861-4fdd-92c5-f1707ac25300",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6c34d05a-55e7-49ee-b31f-28662a1ca91f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 315,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dafb6a-7331-4e15-b845-abde8f62d067",
        "cursor": {
          "ref": "d236abda-0533-4302-8346-609e896a0389",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a3a4fc1-e6c0-4ffd-85a3-b9206b4c7358"
        },
        "item": {
          "id": "b5dafb6a-7331-4e15-b845-abde8f62d067",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1a4141f-f016-4d1a-98b4-0c41f8032ccc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dafb6a-7331-4e15-b845-abde8f62d067",
        "cursor": {
          "ref": "d236abda-0533-4302-8346-609e896a0389",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a3a4fc1-e6c0-4ffd-85a3-b9206b4c7358"
        },
        "item": {
          "id": "b5dafb6a-7331-4e15-b845-abde8f62d067",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1a4141f-f016-4d1a-98b4-0c41f8032ccc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba39f52c-afed-479e-a9e1-a3e674730d4b",
        "cursor": {
          "ref": "b3cf60c9-cac0-4a7b-a022-032c39cf7c83",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a3e9bf6f-9579-4bda-bfb1-759fffd67fb4"
        },
        "item": {
          "id": "ba39f52c-afed-479e-a9e1-a3e674730d4b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "546169ee-dd36-4d94-b1f9-152cd4747361",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 514,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802737d8-3c8c-476d-83cf-7ecaa5081408",
        "cursor": {
          "ref": "ac43bb4d-69d6-45a7-b029-67213bc8358a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "49ca1f82-be72-4c71-a928-c3bc255d1c24"
        },
        "item": {
          "id": "802737d8-3c8c-476d-83cf-7ecaa5081408",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f2cee576-34b9-47ba-9c6f-9c75b3ce7adb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802737d8-3c8c-476d-83cf-7ecaa5081408",
        "cursor": {
          "ref": "ac43bb4d-69d6-45a7-b029-67213bc8358a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "49ca1f82-be72-4c71-a928-c3bc255d1c24"
        },
        "item": {
          "id": "802737d8-3c8c-476d-83cf-7ecaa5081408",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f2cee576-34b9-47ba-9c6f-9c75b3ce7adb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb0b5c3-53cf-4d78-aa5b-0f642d71c4c4",
        "cursor": {
          "ref": "7b5ba39f-bff8-4408-9115-46050757722b",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d1375023-671a-4461-86af-c7332b2a265f"
        },
        "item": {
          "id": "edb0b5c3-53cf-4d78-aa5b-0f642d71c4c4",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "48996584-cd5e-4dbd-a88c-5c17c085d05f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}