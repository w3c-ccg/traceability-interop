{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "05ad631c-2a86-49a5-ba88-8ba947bc47fe",
        "name": "Clear Cache",
        "item": [
          {
            "id": "866ca7a0-3b98-4bda-80f8-447426aef512",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f8026ce-b7e9-4460-adfa-1b1fa5eb7b49",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b2e5bacf-94bf-4908-a7c8-92dac0314167"
                }
              }
            ]
          },
          {
            "id": "0435a59e-9106-437b-9133-d97814eefc4c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42347252-ddfe-4060-9d70-17c97bd57469",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "198d4cc4-e184-427d-90e0-23edf52421eb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4e52f0b4-8838-4600-9c73-60bafa345c83",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d18213b9-4d86-480c-9064-79898514845c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97985f85-4796-4b43-8820-e09f6f65c62a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d68a17a-c908-4585-8264-6f410c5200bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24d5c462-98f6-4f98-9055-111b1a82f46d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26639e15-0044-4001-bd18-12064ed2d7c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd5de39d-569b-4fca-84d4-c20679067bcb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1259fd35-513b-4306-a4bc-75892995016a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1ceea43-2b10-4208-a444-caa68be5b3f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1a60cb0-6843-4b2a-a201-7b0eea8a87eb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "de3a5aa5-cc56-49b3-91cf-72548a90bc83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4412090-1569-493e-981b-61e265b22ac8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab2d98e8-f2b3-4caa-bbc9-c3934ca644a3"
            }
          }
        ]
      },
      {
        "id": "649ceda5-1ea0-46af-a15e-a5c48be9274b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7480c61d-ffc7-4e33-99c8-cd863a41df2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9d8edfd-81d9-40df-85e0-9cfd48d74993",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1baef0d-b4b9-4f65-b003-0ab6d084c559",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4becfeea-2894-4d83-9d7b-3e54c4321973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaaf2486-5c7c-4692-abf7-38f7efd42dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ecef19-c3ed-4cdf-93c2-0b22be019ea3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c91fc26-79bc-4f35-bffa-ab689bd7ba19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "883de96f-ae4d-4e9c-8505-a20cb7abf72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a029d2ec-ee13-4206-a3ac-5e65efe1a19d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa090eb-7507-4254-a7e4-d0e4d1b59cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99d60f85-37c1-4dda-b22e-659fd6782c99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "882f4c12-c843-4b58-97e1-a555c2bcd5b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffce3dac-453f-419c-9d93-95facf78ae37",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d96abc0-b91f-4ef3-ab2a-a1e9d71c0e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94512315-f711-4105-bbe4-3bca7904fd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2960d47e-f7ab-4957-a254-9bddded9430d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f683ec59-bc99-44f0-a58b-9e44710e49ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c419c5cb-07fa-40b6-baae-77b960344bb1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb048000-290d-4a03-9f7d-4a4260631b5f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aa714b5-9a3a-4cb6-b76b-8943056ba36d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "89b59de5-174a-4ecb-8ddb-7e6a66bcd1c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63eaf7b0-ffa9-4f9e-a110-59f3eb2b7040",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b3882095-cf9c-4e77-8cfc-d8471ec2b654"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a0c5c2a-e4a3-4e78-8482-1ba1c5c6f088",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d496040-3bc5-41d5-a7bf-6cc7934b0bec"
            }
          }
        ]
      },
      {
        "id": "6b71b3f7-140b-40ef-b833-805e3eef628d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0c35db02-b543-4df5-b4a7-5c9d0842457a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90e4aed8-c08d-4c0b-81df-4e1415b35dc1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "694acfb8-0a28-4378-9111-f0fe2a9294b0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db34e43-7e0b-4224-8026-d3c17d7d045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33ea4b5-5b80-4e06-a719-3c958aea1ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccd86b7-127c-49ee-ab0e-f66e4f6a0238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12b8caf9-d711-4e5d-ae75-3799d0463c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bab339f-1590-415a-aa5c-ae9f71a547c7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7b0a94-8e00-491b-810c-e7ea3803aba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2f1c3c-17ae-4d80-9eab-bc6c9b718f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb406b93-2b6e-41ca-9ccb-7bec1f0bb229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1ebde76-3e0a-4f94-97b3-f393992d362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56187045-5e6c-4e24-9c40-25c4ef9533cd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e700f0-4e3a-40c8-a065-c16e9636faf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5974f7-9001-4c7b-b5ae-47c5bb48e84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da015e7-d34b-45af-bf76-9cacf2eac36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "455225c4-a312-4b0f-a8cb-2bf4cae40bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de55b09-dea3-4830-8cb0-e874cf6a4df2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37e86ae-c915-4f0a-a044-20470649ab53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e7892e-b19f-433d-a2ff-5c1eb5c74b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f421266-4cf3-4a58-b957-2b57439f863f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f883618-7139-46ce-870c-1f3de9efa08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab96534-adf4-4d84-8f16-d803e1d7e7fd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2273b047-7d1f-4427-8262-5cf200578c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5ff166-22b4-494d-b5c5-a7c480c121b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38441e53-2e0a-4638-ad68-255fcd59c4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b02170fb-b592-4408-a4fb-9a680005d840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46eaba14-621a-4009-9b3c-e3e17a9b45c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a6544d-86b1-437e-ba97-4d3062727f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f002599-e463-4c2b-be43-e1407a50047b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca938b8-9cdf-4563-a920-39a8515689ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74f36f68-7795-4443-90ca-df9a7d719e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e393df72-2f24-4544-9962-a29245383d79",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f309b60-d8d9-4733-8dd6-45b68c8bdb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7306e16e-f493-441b-81e2-4c358259f6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142d6e3c-0e9a-4a31-b872-576cdf77528b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20e67bef-be76-4d05-b1cd-f38158eca74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b96270-ced7-4dd4-a127-6ef30dccf5e0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5d668b-c679-44b7-90a3-2169987517b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9325f066-8991-4e6d-a98a-3a035d8dbfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329fe3b8-7fd8-4d74-bb30-f2be77c55d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9173719-3c5d-4a53-b677-994305e720a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7cd4c7-d0e7-44c2-bb87-2ac9104e98a3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04b0faf-5683-4e8f-bb46-a2faf7fc7148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28548b5b-fd31-4c41-8ad5-92566002c9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26da2ce7-f97a-44d7-879f-cfac36b393b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "407e7860-7f2e-4ab5-ac23-d59be16edf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373cd290-0363-47e6-9002-1bbac83af0b1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b25a0f0-975c-4607-91fd-d320f34b9cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69eae74d-e8ed-4821-afe2-bd4d41389a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22fcc51-2123-4aa9-9c96-b76b3d4b4ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7348ae1-dfca-4218-b3bf-d16fc5214123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c384bd-d7bb-47cb-a708-489d2896c9d9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13abd3a5-5aaf-494b-9a2a-9ebe36e96a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3662c403-f2c3-4637-a959-53f68d166770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ba3f58-2fc3-46fc-a5d0-b61a723cf491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c994ff4-7d3e-4473-8b88-99b00b2dbc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f4ec46-b1a6-4566-89ff-05e3edcac62c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a391f022-7a85-4124-805b-03d9200f42e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c31cdbe-29f3-4bc3-ad1b-69483c9def38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546201d9-29ca-4fd6-aa71-f79404190f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3ab4321-6877-4633-960d-e2a504b0600e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4accc451-8347-4e23-9698-8f27e596de83",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6212fbc3-1fa4-47db-a014-2dab611c01b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f29c4f-88e1-4160-919e-8247158dfdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888aa4e5-f481-4fe1-b1ce-7f479d8903ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf477f5c-6e85-4eff-aed2-c9ef2aacba4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f35ffe8-288c-41a7-8dc8-ac69ee441f12",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b07432-8edb-4600-b785-168373ab224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c16fac-89c5-4270-a990-b6b302d0a7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b85328-15f5-41c1-a3ac-eba758cf156e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60a06773-e6bc-4304-875f-5bda90e653ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4ecf4b-59c6-47a2-8463-39a0eaba07d8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15dd13c-7061-4ae0-8c63-6c307ebe4944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb93fb5c-38fe-4148-aff3-1a2e9e826d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a189f90-95b3-4e70-a5e6-801159b331b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33da17ef-dfc9-46ce-bad3-d838291dafd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aacefe-34fe-4d53-b643-2cd0ef2f00ea",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4872ca89-25e4-4bec-899f-5b3c65bd0e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeec054d-a2c5-483e-a901-3122639a5de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db9d4ca-b1fa-450f-b95f-769cffdb015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b186380-29ba-41b4-a288-d9d85067681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1fe6f0-4363-4d28-b036-a5f2c8c29ec3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07eb8151-34be-443f-905d-9dcf3d026e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262daed1-a288-47ab-bf08-e3bacf48c3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b07b3e3-db38-4691-947d-17e7d2230da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8425db8-f60b-4939-b461-c858c1c97f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74319d21-f51c-44f8-92c9-c1aa98d58e0a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43513bf-8bc4-46d7-bd39-1c66b5128084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b10048-b84b-45c7-b93f-1ddd36481c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cdbd6e-59bd-4205-a9d1-7de88e62919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b60a25-2ad8-4026-b152-34c45061978a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d4dfaf-5c82-4200-ac73-426005d76308",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c10617-3cd9-4158-8ead-53d31619ba36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1744239-0cce-46d3-bd53-8f00b8e1ae31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32d1a57-806b-4242-9334-e185d14c5539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b024214-b703-4f64-b780-3b7131062a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c37981-5fbe-49f9-bd10-cb1591fefdf7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1aa3f7-1b58-413d-bab6-a47f06c3b79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0c4df5-d34e-48a4-bf99-8291e1d554bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a503b0a9-031e-4a8f-abb0-1d286eb9bef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "088be74c-643f-4fc8-a14c-ddab15167291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42cd5b6-a300-45f7-9262-a3af3063dd4e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cfcbce-ecc4-4b01-a396-9d67e147938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f616870-6ef5-4d91-98a6-1f98c5abb292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47076c0d-a549-4075-a253-e6404332b510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "269f9a4e-8fd2-4338-b35d-4cde5458514b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7202176-185e-48e4-b720-2eb8a1855fc6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4147f352-ec68-4034-8f15-ae52fc53d354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c31f61-815b-4a73-98c6-b02f3320e92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa99331-2e91-43b5-a386-6b2967999476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39fe8d8d-fbf2-4faa-8cc2-0af386c01751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07f79c6-cfff-43cc-af86-11c56bcea3a4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9a67be-b8cf-4765-bdcb-1468fee70d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2dbbe6f-cca6-4ea0-b370-0250641ffbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961c7f84-f165-4549-9fa5-6de2fa2adec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5efcbad0-c4dd-4ee2-b1ca-aca502a407c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770cff94-9486-4787-9e9b-f633644c5cc3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960ca482-29a0-410a-a035-a0c396bcdea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb5ef1e-9777-466e-a9c3-baa8903e28de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7bde03-46ea-40e6-bbfb-61d0a6341490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbd622b-c58c-4f6f-8232-f7e9647e249f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a446fda2-836b-4bb7-ba47-a71f148084dc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb1c395-fd36-4e72-8a7c-8f6bb0406a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78c3f60-78c5-41f0-a7fe-2841cb4db2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9168e54a-1c50-4d5b-9be8-b6319512a9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10756b40-425b-4f10-a362-8d631b30a150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eba4e73-8db3-4677-a130-1db002c9cb98",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae36c947-e5b1-43ac-9e8a-b4fa2f5b67bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2e3097-5a75-4256-a389-188ae796688b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae873da-b8db-4806-80cc-ef019acab15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "785a5e50-5ab9-4b2f-b6be-3c955c59c6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d887f1-5205-449b-bd6d-f2dc41c2bacf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063cbd9d-4d34-4ff8-b3f1-14fa3f0332e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10ae09f-e085-424e-ade1-7e6505d1ea1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022abd3d-8111-4a5e-8736-598c16a2eed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cde93b6-62ae-492b-a222-7a3f16c4898e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb68ef3e-10cd-4a58-ae1b-06f6bc3e1983",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf4e091-2221-4fe9-8b3c-1e53c49fae2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44521d68-3936-4db4-8752-397b7f01aa4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2821244e-8d95-4718-ab1d-9d922490eb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3c701b-3b9a-45dd-912e-7d4847deff84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383e289a-028b-497b-91be-de7e7a5374d5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78a8193-7655-4aad-8e6d-4a43fbef89ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab59e87-41e8-4cb8-afc7-f7b5cde52d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6d24ec-4302-42a0-bd83-7305dac105eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "badaf5a5-02f6-4d6c-9027-544d104219f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8cc928-4064-4a41-aad6-a2152321d8e7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e9bfbe-449e-4c2c-8c1a-ec088cdf17db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd2127e-947b-4cbb-8717-c39866d65352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e04898-fa05-4f0e-8596-186f42b653cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "622169d5-ea23-49a8-92c7-1a358e70decd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58fbb8c-60ee-4b13-9416-c827c0143f3e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d50877-2241-4b7c-8a42-f151b38da68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcd128c-0667-4c17-a453-71263967006e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84760ee-8de3-4ac3-945e-574e1afb6f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a060344-5008-4afa-877f-37a95afdd7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b0b0b7-aecc-4f35-ac99-d977a1f99ba3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf67149-bb88-430c-8822-2eac00ddc9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2f2a66-f678-4a77-9397-32262d8d9ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549b67aa-6063-4ffb-ac43-d1df47d5549e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da7782f-42b3-441d-8e35-d87904602c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29188906-6683-4bfa-abaa-a0fff756eec2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785a060d-4d69-4ce4-a495-47454b4865cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3103f8d8-ac0a-4888-a8a4-6a6ac05cd1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3172f6b2-64d6-47fd-86f1-2faad799d21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1688a3d-eb1c-44c2-93da-3ed58b67b2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384b9322-f725-4d70-bc60-c8422deed603",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4371bc7d-1436-4742-b694-cba31d6ed8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50cfb76-e7c0-4465-903c-9a9cd3c903f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281dbd48-9d79-4cdd-9bad-638358b34449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7ec162-995b-4a94-a881-e4c078cb221e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996157a9-b88f-4efc-820e-c15f17aecca3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d3bb49-7b7a-47a7-9e58-e57512989360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a0aca-60cc-4140-8b57-5c2c7fcc32cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e378be-97f3-4392-bc72-4401c5ba38ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ca42de-0ee8-49e1-9f9f-4abe46c22c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaaf8c9-8843-4e60-8cda-13b59f93916c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d90ee4-fe25-4885-81da-a5b7538cb671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96024c9f-ec99-48d6-8550-0aa2edb7f03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717dd4bd-8fce-4180-b82c-5a82532af340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e60f1fc-2f2e-41e7-8ca5-848a3887d1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c88d597-684b-4dfa-9e38-edd51103e5a6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e9a68b-59be-46f0-9e6f-f5c6a1a71291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55356494-b1d7-4333-96a4-065c17bbe947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc59394a-47cd-49a5-98d7-6f62803a292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a925103-bfa1-4e05-ad3e-bcbad4c263bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccccfbb-e271-4bc2-a4f2-16e5eed79a8e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0da7273-e929-4566-b20d-622b18e64d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda19094-284d-4a0d-aa15-d77d0ea3905d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e287e6c5-9a15-4285-82b5-ab5788d0d671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57ea45a8-476a-4d51-aa8b-7b9c827e6631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74c16be-af45-4eff-aa25-853dcc99a04d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027108f4-8b29-4c76-abc5-4c1bc82b3c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d63251-7769-423c-ad7d-0f4db1058cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe208749-3df9-45e5-b393-1c657b6dada4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "923c7115-02f7-46a0-b2b1-bdacb9c8c76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cf6c06-075e-4823-ac3a-fd431ec36e23",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbace29-806e-4339-a5cf-45071d9716d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bb142a-f7bd-420d-a26a-2d855fdde68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e6f09f-9038-4848-9ceb-9c2dc9610ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b4a403-17ac-4cda-ab67-a30a223bb8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f42016b-d9bc-4a19-8bf9-5d81e2312444",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a689e7-421c-4ddd-986e-c6b2ccd7ed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea58ea4-b583-4944-81f0-737407473187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56788ee1-af65-4719-a682-e679f056e1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c00e796-3928-41b6-bf44-077a8ec466f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3c6707-c0d1-4cd3-a872-7dda00500422",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbda630-4b37-4520-b812-7c20bd9f820a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39d8f59-ebed-4ead-9ac3-eaa2a9887002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcce364-74ff-43a6-ac06-1d51d492b63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d142eda1-1e78-4286-9408-e3fa9a92841d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ad24ad-a8a1-4fbf-8ba3-492d30637013",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d63c27-8fc0-4e9c-bea1-ef1c2429a2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8506bdd0-3c3e-4daf-beee-3c05b6e099f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2fadb8-d785-4830-9b89-58e137d5e3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d73d36a-5a87-4156-877e-94429c4c5e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0297e649-9d17-4181-9ead-8f12315d1bbb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e48532a-66ce-432b-a37e-3cb6bb99e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89aaa068-fb7c-4807-8b0f-e3d2bbadc264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13494bc-86d1-4b7c-8b8a-3ac4dca2b6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd8dbf1-5324-4d50-a3e8-52a18144d7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8cbd97-343a-4ecc-b459-5db3cd785f07",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874fcc86-dad4-47ae-8b2f-8f2c244a8e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b41386-f5c5-4e1b-9819-5cf21d9e10da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c435b63-cb31-42e1-af8b-c8a84239fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb277cef-b8a4-475c-9b91-f62a1f92bbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787e847e-e74a-4389-888a-2146301c0283",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467abd2d-6aa3-4407-82fe-cdf5ab105d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84579e4-515c-485b-aef7-e08e127dbb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4018e58-8c53-42ae-955f-fac043afc6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11f7d359-153d-4dc1-b464-2f52cdf7ffe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f01ea0-8753-42e3-898e-c39737bd15db",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92eb157e-c2a9-4603-9b22-be9e09889983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b689e1d0-2fa5-4c8a-b3b8-f0a0c439b6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c39b420-1e74-4bda-ad0d-b3a74c35fe31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66bfb419-0ec7-44b8-8f32-d3450c5f2151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2243a631-8f7c-4f9e-b58d-06e893d55e53",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1982dae1-89d4-4964-beb8-d0c4a3c2d149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2940d78-a3cb-4330-951f-d3432581ac65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d492ff-a4fe-4629-9184-1e1d0cd42fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f03a86-d91b-4a0c-85a5-15179c1c1b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276aa3fe-54ad-4e12-9192-3dddf9f59575",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873f4c92-aea1-4fa2-a861-cde23132dac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e82795-3acb-43e6-8ccb-8aaa0d47fb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83f4dbc-6b0c-4cfd-aeaf-db862e2085db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e43ae1f-4e98-4501-b1e0-35084708507e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6453b51-bd50-413e-88f9-76fc875f2cd2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc02a481-4d9e-4bd4-8e2f-fea86a35a788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855a8433-fdc2-46a4-a1c7-7f88d388071c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b6136b-0c19-4c72-ad3b-eb14c44981d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4e63d9-81e5-4570-bded-c69a5217be2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c5477d-41c9-4640-bb07-005c62f6c3ff",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4662fc6-8e2a-489e-b4e0-96a5bd36e1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d6d57a-1665-4393-9d51-bccc257ef532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870d3f48-396c-4341-8ae4-16e4edb37b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a788f3f9-181f-44ea-bbaf-b611f3017946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc95279-ed08-4f69-815c-69f1ae141e72",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983d9de6-121d-48e3-a97b-95aec5171695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dd5d3b-0200-4b41-b01c-9d6a90912719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373a6488-1002-4388-92e5-b9530011c5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17bf95e9-6538-4ed9-8e9e-fd0de581e808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e87e8a-e512-42fa-855d-64f7b7cfce8f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e2b540-e8fb-43a4-9568-a5561e185cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e465e115-0a19-4c46-ba66-ea6f34a6211d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9009ef27-837d-44e7-a565-d654effc9f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "296f0827-d47d-4215-971d-f838b452e91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b17e58-0519-41fe-bbce-3f0aed36af23",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240593ce-8084-477c-977c-f7ab99d59b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a47f2c7-6f35-4c0a-b24c-31c7849e94c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927b6778-508d-4bba-a04d-2d39a20f4550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8158605-45a3-4cb7-865c-c64529951f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f814bd76-b8dc-455b-8d8b-be282ef4a20f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ee4e15-e49f-4e44-a234-38da84ae22f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acd1cdd-79b6-42a3-a37b-01a6c0cc5169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2892da-c178-4f79-a83a-1dcf4e84ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f864ce8-26c1-42a8-8686-aba5fb50232a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd6fe4b-a184-4efc-831e-d989a16234cd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f205929a-6bcc-4a2d-8411-8d8f5390c268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799f932a-0ca4-4249-b30b-80cca6cbd3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5025e001-06fe-40e2-bca3-dcfe2a0dd81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f23e372b-204d-4bf9-9620-a75e07529fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7815d1-8582-4ff2-bcc4-ad84ce355e03",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89fff39-e36d-401e-9ef5-baa7bf8a6301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09876c9f-1759-4a47-9362-647a4e1c0885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2d6e6a-2a1d-4bf9-8c9a-f2fd9901e11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "28659a31-d646-40d1-ab7b-e5fb4f7b9674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5134efce-a671-424e-9c0a-d9cdde6d18bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc20f77-1c36-4d49-94c4-f71d80f2134d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f27aec-cb02-46db-9b44-cf2e6dc0f444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ec0ad6-19ae-45d3-9eeb-97f72dddadb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a9f73a-94c1-48b3-a25b-86366696db53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5389ce22-fe4d-4fc5-94e7-bc46a050999c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcac0cf4-3e22-460a-8ac1-4b3cccc9073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2938ea9-9d84-4999-8423-9db402340a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a84922-0e63-4dee-9d80-544107f95b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "61100dbf-ab3b-4d11-b37d-ba93f28669c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9280023-432d-401b-bd26-e6fe648fcdc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f4dd6a-c73b-4c66-a8f1-1f01315c6e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6661766-ffca-4bea-b149-6f09c570de28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2325ff-c1cb-423a-b877-fe789f87ca3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4abdd71-e29d-4a94-abec-41dd8fe3ae9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9060de68-0637-47aa-8542-c8902fa715e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37187563-2932-4541-a838-c58b657c8d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1990ff99-64f3-476b-b38a-27bc4da5c351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b418139-b578-4ed1-a2b1-20b1d5a17ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c398749-04d0-4554-8f04-c53cfe4ce99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02063691-d6f8-4437-9da8-d9fc814ef886",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a0450f-90a5-466f-b88d-3243e962d55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eaf8cab-c42b-46f5-9442-0a4ecccf4575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf73b7f4-043a-4556-b171-4129c680e5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a22a3957-d45d-4afc-85ed-2dd73f39df6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f8eb03-ccb2-48ee-b429-9c45ab7a767e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cbc6f0-594a-4dba-a09e-fd0a0817bb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8db248-6595-4c53-9666-92e492c2dbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baf555b-1bb3-4574-bdfc-0f2ea7331e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fdbe51-c939-4e3d-81f3-cc81e5399eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05bec27-24e5-4f00-9be2-6b2a4fb630fd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d04d8d-bed1-470f-85b3-9870d972de5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7f95e6-7dc8-4f99-8f87-ecf847c4001c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6eaf73-9cd6-4eb5-930c-053b5c0a0134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebdf244-2868-418b-8198-7de847d0c233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee5c820-0371-482f-b61b-7a256f0f553f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71134da1-be64-4c3e-9f83-c16b7411402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb1b52e-32fb-4e3a-8060-b8c1401433b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af422b1-3622-4a51-b598-d0219957465d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c966f1-a2bf-4b58-a4e6-788827fbdfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c7f9c6-057b-4b68-8742-fc9ebd4ebc3c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9eb9d9-133f-4703-8a6e-68a6295d35d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff0e003-5fac-41a8-99a2-67471577f936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406c9abd-68f0-4b39-bd72-6699568c7768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0089db8e-c8f8-45b9-9f7f-6d3d1b3dd895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabb14fd-16dc-4f75-b2f6-e457a92b0718",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aa0db1-38ae-4f32-a422-b01092ed846f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5dfc7b-da1d-4ceb-a0c6-c90b7e81ed56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdf91c8-fa47-4ce6-a87c-fdf53aa1aa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae4f55a-cf82-4840-aebe-1518c8bddc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91f93ee-eaec-4e44-9d94-0d2ae7441e3e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a1a2f7-7628-4f36-a497-13a9baa18c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c48725-60e1-4fb1-a78d-2af23e690a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c9911e-3c41-48a0-b5d1-08689dd022d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b7c1ca-cc9f-46d3-b8e6-26e0b93518e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa486aa7-8d42-46c9-9607-9bf25ecbd6e6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53511d01-6ce2-4971-a5da-855d5d40634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56f3876-d62a-467d-a146-d8dbc20bb4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03de8bf3-c389-4b8d-96e0-84e5acbccadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a88a5b5-db3d-45a9-a315-a1e086e6622b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1657e82-8a8f-4fba-9701-96ee62a7204e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd7a4db-5c48-4ddd-b647-c79053632df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8a21b3-de77-4417-b1f5-b41829d8137a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729c90a9-bf29-41b0-9a03-c7dc30d7bcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e92c664-52ee-4c24-9db5-658c3a1d7cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0384a35-72f7-4330-af51-fd930480ad6c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6d15b0-b013-4352-b6f5-c0430766015f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e35bbe-a527-4640-a5cc-d90d7e792442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86c4dcf-ae45-4a1a-9701-ceaf00d2a079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11714e14-7049-4232-a01b-37c5bdfab19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa2cd15-8d6b-4cd4-85ce-853a5a084c68",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6638dcfd-102d-471d-a0d6-96788f0a0281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faddcad5-6d14-42ef-9a7d-3cfd0f8afcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebd2dcd-1d2c-4b42-9891-390eac918412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb9af44-3e4b-4616-aa9b-ae75ca98b4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c65b3f2-79ca-4621-9600-8368f61d6776",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c998a8-41ea-4796-96a6-a61ccd6de798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be698143-1045-491f-b566-83bd08dd03f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9686c611-576d-431e-a798-8a8d84ef2833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fddd8aa-e33d-4dc7-8c81-31cc894045df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aae4862-e138-4c5c-b4aa-5e61dba1c5ce",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db23aac-8546-427e-9392-7917f686d697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a057ac4-f28f-428b-b6e8-4c2889f050d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c304dc76-e0c3-4201-b683-4bfe14c2518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87c91742-99da-45fe-9bfc-f4fb8a3393ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e24cce-119a-49b8-b8f3-15bc1f40bff4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb50c177-df1f-4015-9116-dd9d5e4157b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2654049-3bc9-4f57-a083-dbee4c85c429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec2f869-969d-4beb-8eb4-6f4f9a4d2954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e7b743-404d-4672-9376-551fe2c2588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20db1c6c-a3c7-476a-a7c1-52d6ac30e0af",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679ca5df-18d7-4f39-94bc-cf1bc4765790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fe9bb1-496d-402b-97cb-1a148a4e3905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b58242b-7249-46ec-8601-8919c06c39ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2944999e-c348-49dd-95b2-81bfc7e07b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32e120a-6881-4466-9434-c2fc94e0bf91",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838860de-67ff-4a1c-a6ba-df11308d54b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113498fd-7499-481b-b9bc-685ae443a6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53feebff-df94-4f64-aec1-3a6cac419518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7887c28-47fa-4a68-833d-6d4e1b4dc64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f869035-620a-4538-80f8-765bc4cbecf5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f6559f-cee1-4077-a149-0755c1722e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f8de76-0ba5-4e20-8c24-4fb4b6b70e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b939faf1-8117-4b35-8150-98d77bc93878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1424b20-fafc-4d19-b07a-2568e13553b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0982fd-0a6a-4e38-b591-0ae938ce38ac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3eb5b8-1c4d-45e4-bd76-8b1482e3cc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0be8db9-9d2e-42aa-9c74-3a73eb9894c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5aa266-5e49-4073-ad41-6324d9e382f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ead2853f-3066-4d58-9721-df8399ae38e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f6b5be-7723-4930-98c4-0c3ed496c5ed",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf33a7c-737b-4959-995f-26a413cb8ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c19a013-0f28-4234-89e2-421811ca4e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a843dd44-2a43-4750-90a3-b42c74e85260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62e7b09e-dbbb-4b2f-b6bd-c1fdc2b4bd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2222cf-f54a-4abb-8cb1-0208526e3fc7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a818e7-3c86-4b12-9a84-378fde88302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7585e99b-61a1-449c-9d02-e98bb9485f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4ac399-89cc-44ab-9b4e-94b6cda93f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f6367e-e5b4-413f-83ab-e18d37dfa568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5447f29e-5ead-475a-bae6-a66fe8cd03bc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b4dfbf-0465-4f56-a49f-b81ac86e1952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c140d9-1907-4c44-9e09-89aa78c4696a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8475517d-d29f-49ad-ae63-68c3564c5df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d7b784-bc5d-4b53-98a9-09b4b6fd1b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23911a56-46bc-42a3-a0e3-8a0edddc81af",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa983d6-b367-4fb5-a55a-6b5d643d617d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717e77e7-cab8-4304-a66c-f6602127242e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb66ee6-bcf2-46c4-bb13-e15989d5e94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c75b39-4d53-4e8c-85b0-9b4a6d3faf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8e7940-b893-4afa-aac0-a5914bfd0b61",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee2cf0d-fcd1-4412-af27-fd75d56c13b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b71640-4cf4-4f78-aea9-e9ee2937791c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182ce961-6929-437a-9659-729054ca8357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25092481-4393-47c0-8f88-c8c0636d8df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05b507b-c7a1-4c4c-82d0-5af2323f89e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9061b2b-b979-4595-88c5-dfbf2b33476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676cf180-c353-479f-b3fc-08965c6cb6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e474ee49-5ce9-4dc0-8b5f-193eace47bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cf0c1c-643c-4fe5-8c03-b48d5600fe61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c32e26c-0a85-47bf-8e28-80dd7a8377c0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1e74d7-66c5-4960-9fff-a5d016c99b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ad412f-f6b9-4547-a9e2-d47c31532f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3630c95c-7bf7-4f66-b66d-b15adc7656c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0325bba9-ccca-437b-8851-2587b44cb803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3b895d-5fbd-4466-a4c7-ea5cf5b70034",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b5e968-aa26-4ea7-890b-007a98493f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730651ee-0a11-4e53-8ce0-cfb98f4e881e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01f6b59-b896-429c-a19e-83d5b3b4d797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2115c95a-da8e-4c50-a335-1f2b69af8669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e1336f-9c0f-485e-b8bc-7b5fa3e2b067",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f136b82-df95-4c3f-9bc3-dbb8bfdcaed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d7fdee-dbd3-4b81-8fb4-819a7e69dcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3887d43d-b3fa-4a45-9d9c-3a30d0768c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4cb3cb-e193-4219-8189-03a64ed1a99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b06dce-774f-4dd8-bb08-4540d1d9330d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff21640-bcb3-4c17-a308-c6cf2b5f4e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f16c90-ccd8-4be5-a55c-ee982ef94bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6834fa-b163-4132-a6d5-08c26a0fb954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "52236176-73f1-4e40-a772-1b88c2b648fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdfe37f-f11c-47b3-8a42-edbe034cd597",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f59360e-286a-40e2-a60f-cd27fe9955f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f43276-6163-4475-9f0a-e72cd8cda609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb61d6a-0779-47c8-8b37-16f1cbdd85e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eae741b-bdce-4dfc-b6fc-98688a071ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfb8af2-3288-4b83-a366-46189b6ef463",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4befc8-4cb8-46e6-809f-6df8145729c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734d03ac-073b-421a-bf49-d291aa0c785c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c14b005-c1d1-426e-9303-79feb0521688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be3eb07-b5b9-4d6f-924d-6a0b7e93bc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd98f33-24be-4c12-b20e-7e07bafd5055",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af0c1a7-b022-405f-a655-280f12446056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d919e8bc-5131-44c7-9dab-f33bdc8f1ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3025d1-2061-4e5f-beeb-0a2c8edb994f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "df17c2ce-4634-4259-af84-def551ec9393"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3e7c41a-a172-4a3c-81ec-9686b2e897bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9994a8a4-0472-4add-b23b-a812ee3c2fab",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94685827-5f26-43a6-acc9-4f75f3bd8dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43a9fe07-e785-4fbd-b1e5-85b1b85af849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f64a379-d71e-4745-acca-2076fc799c46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2cc0b3a-74fa-4951-9983-919e4563fe90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aebeaeb6-b368-4ea7-9042-82b8553f7849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5909d457-8029-4093-8414-6c48dfc3b44b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e029935-1ab1-448d-a4d5-829fa1acb4a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f7d1c8b-7c78-408d-8f49-932caa5ac196"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ddb3d104-ae54-4125-b900-04d9181a0690",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "470f1b74-14a7-429e-8304-1c8b7c49e32a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "52d83d96-03cd-4464-8d66-735ea1cabf89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9908a0a7-f094-4bc0-a6d8-fcb79c04bae6"
                }
              }
            ]
          },
          {
            "id": "53ba0475-e460-4e78-9554-3c78faf2b53e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1f2177c-cf51-40fc-bcf6-7615be3f27a7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d522760f-0447-457c-acea-693d8ad54e9f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007debb1-940b-4cf6-9731-335647e4a79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "802dfc9c-5f3d-4583-8735-e20f83b28601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1687db88-9ea3-43fe-83d4-00b2e5fc00db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ca8964-d558-4144-b8d8-ad0a55bf6c90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c11c4fc6-6513-4f61-ad47-70e15807007a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8001e171-16d9-43d4-8ac3-f7fa0b3c21e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c717edde-ccb6-40a8-aa9b-a5cffdea5da1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f70dc3f5-cdfa-49e2-8b3e-11d45485d625",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9b87788-7953-4444-8416-49881968f2f0"
                    }
                  }
                ]
              },
              {
                "id": "ed432c14-c6da-49b2-9f5a-3320fcb38092",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee601e72-db23-4f19-8abc-bd30d52362ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56d5ebb6-8ee8-4b7e-9cd6-17f9ce0169e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1330e25-e7cc-46d0-b706-6ba667d26bd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bdc7cb8-9fda-4228-b7bf-e6b2abd28249"
                    }
                  }
                ]
              },
              {
                "id": "9ca7ef56-5176-431f-ad47-f575e6925117",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4383efb-5e91-4307-87b4-b9e216251b51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02a4ebfb-3061-44f5-b2e9-bef2b0c3e5d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4931eadf-c11e-4132-94a8-baad98b269f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "648aafb1-792b-4f0a-859f-78f0acf611a2"
                    }
                  }
                ]
              },
              {
                "id": "14e47ca9-ae2a-4c71-acbe-8c3e4ebaafd9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f637fc11-51c5-48a0-b821-800c0b30e42e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f86c3c02-c92d-44d7-ba1d-ecd329eded00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb0b7db7-f749-4f98-8b85-72f3da1f5471",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c4a7882f-835a-48f8-8794-a9ab3bcb7f80"
                    }
                  }
                ]
              },
              {
                "id": "2a594f3c-3efd-44a4-93e3-d99cbd8aca21",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50a8377d-b220-46dc-a1e4-b93eb2224353",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2013c15c-08d3-48e3-a2f0-6bbe4446e960"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83d72c4c-25c4-4b14-b51c-f1cb29594906",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fc29b9dc-3873-473b-8bea-1381febdeec4"
                    }
                  }
                ]
              },
              {
                "id": "572d04c7-e856-46b3-a331-dcf92538f8fc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aab81286-7fac-494a-a628-bff3a622768c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3de6f511-1845-4525-84ca-3eb6b4483769"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "370b63c6-001c-4974-a19a-1d74f121c815",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20147192-589b-41f9-a13c-1c9dd0e1d23b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9077168f-f474-4c78-ac73-f724a6fccf59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "310c61f7-ce59-443b-b9a2-7570a080d786"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "70ad9550-8778-4f7b-b446-b20f34c176ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce3dc35c-b668-412a-b89a-77eeb89e4da6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c9b5fc1-ff49-4021-836a-6d701a8ea210",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0a1b820e-362d-4663-a339-689074e0aa4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d0d6587-5fd5-40a3-b719-a42a73cf93e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70080d5d-0dc9-482f-bd1e-edceb6cb7c70"
            }
          }
        ]
      },
      {
        "id": "12340715-2cb4-4bdd-b33c-2aede1a9253a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "11a92f72-fe45-426f-83ec-e5a19ead0ca9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "277dc72d-5a24-4b5a-acd3-ca7236ccf709",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a384d4c1-0c72-4215-98a0-2a8af8aabf87",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f884dc-d55c-4434-a6ca-c7547cfbac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9c9eb1-60b4-4353-8805-7dcfe63ad312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5b7ba8-ec71-4496-971a-66e1f7482d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd98e75-7f08-4bbb-bd7f-14b68cd0df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e571005-b36d-4c1f-a52c-3b01d8c87dd8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced577bb-80c9-47a3-bd14-fe33410e7a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26a8f15-6e16-4513-9266-62e9ec4883d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bcbcaa-3bed-4aba-a99e-a6ecd3131bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fa367c-8032-4979-aed6-9938dcd730cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8f7d1c-8386-4b1b-a46b-57e52c795872",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b002f79-28d0-4658-b413-d076bce4d497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efa74cb-8e90-42f6-ac05-e22f727daae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0e9a30-cd06-4368-b02b-a1d99441bd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "226dd5fe-c2a8-4791-b052-615c77c15f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3a0145-abd5-4fa7-9708-5a018d176765",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166c4799-131c-4189-9a98-cb6c9b136caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcfcd7d-4bde-4715-87eb-cb5c82b64567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bf147a-37e9-48f6-9095-61ad5caf2a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d5f7a8-1bfd-4927-97f8-7607d98e2af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbc54f2-2798-46c3-927a-d274b7a966d2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b58914a-a7a4-4328-b4b7-d8733e1a9276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b62346d-b9ce-4a3f-9a04-3c555c55f90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1410629-b4c5-4e57-aa61-f02672c9abd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4dcceb-89e2-43a6-9ff6-afe930d41e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e876ff9e-c250-4943-a8f6-a8a89d7d0b7e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4ee41a-4067-45bd-868f-52777d0ff383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2364330-ecf8-4d76-9a25-d8bfa8c87ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa7c787-23b5-4505-9b12-7e3a10c792c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1520537c-98aa-4c79-a2d6-f5eaed78013c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf2cc28-bfad-4de1-b4a7-111014fbe72a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359df916-0cd8-417a-a1ab-a257ea5902fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462d1ecc-a5e9-4c92-82fd-32ce98d83879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e4eacb-7c8d-40b4-92e9-225defd4f50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6f2ff3-c912-49c2-9c17-c1d9ca733e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade5522b-ade4-45f3-a743-2f19f2ce5939",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b861b135-1619-4d64-a2e8-b01005bf4e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44443e84-8536-4edc-a951-666a0ae9e2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ab7d71-cf83-43a0-87b9-007634e996bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7db31693-5ae3-4ec9-8f61-8855146e459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eaf98f-abe0-4f8a-a7a7-947b01ab9577",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d45e4b5-cdd1-4d47-8cb7-df27ebb58504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdc7b6b-338d-495c-966a-da71b971da26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97ad14-5f9d-4a62-96f9-1346dc703439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd22f37a-ec5d-41b8-88e2-7ac4f19130ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112a7473-33f3-4f65-8513-a060ac8ebc10",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffa2fb1-4a76-4a6c-8783-882ad4365ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8ab70a-5bf6-4ea0-92ec-548f02b51ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d509d8-8a62-4502-b75e-dd00e84df8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a3df90-346a-4682-9fdf-46b466dd5fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be476a76-bbd0-4ac0-8b48-f7856a811fb4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e35652-9da7-4f48-b020-a9f7c690d08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13434c98-04a4-4fbd-be1f-d0e68ff74726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894b367b-055f-47ba-bce8-c721166e7bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "95087765-e9ce-4e87-bdcd-0180ef50aa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3b5846-d16a-4638-a736-abff34186974",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362f6e8b-62b5-4995-83c0-a9216b34f5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d978ab28-06bb-4b72-ab60-396289f244b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cf3013-f0b9-4c0d-afe5-0c7b3d6ea03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9903c2-062f-44ff-946d-39dc708153bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e63e8f-9b41-471c-b045-37f040b6ab49",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced85601-93c9-4f6e-ad87-787c1062533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfb8ff7-5dff-4f24-aa84-5da0024c2fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b106f7-5f36-4690-a65e-6f46f1e640a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e1003b-207e-4094-a0d5-c6a14e3c3a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc547d80-f847-49e3-8fef-5d4d2bbebaa6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617bf92f-07a8-4420-af38-546034f6f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae6f206-e374-4f22-b81a-ec28280675d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e7857a-60df-42e7-98b9-138a930ced06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3025043-01fa-41cc-9f1d-85027f9f790e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617c3004-24a0-42a2-ad21-81c04f1f715d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2220e10c-f0e3-40bc-8d8b-dda2d4ac40f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c146eb-1b39-4273-bc4c-f6b57f071b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2594d9b9-aec4-49e9-9e82-3faf0aabd51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e5f7cf-2ea6-44bf-9c86-3cdab780d269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c78b67-f9cf-4448-bee8-6c7ce00c557a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9187724-602b-45cc-8fb0-68512e08e353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3dfe48-24d2-41a1-88aa-ef4d8c4c6a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df959eba-1038-48e5-901d-7d6656124cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "227f2098-f66b-4999-9f35-b6e304bfb40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ae36b2-62fd-44b2-9e74-c0b6dae2a8e2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56329129-042a-4489-8b0b-1411d8a98e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7530a6a5-ce6c-48c2-a713-5d830556aca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972fa221-eaaa-48fc-a932-48123eac0810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "85976406-10bf-4ffd-b89f-ff94a91a3fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc28734-67db-4fe3-a0b5-4ac1af143ef1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952e6a5a-ada2-4286-92b6-55f9030c8868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19efc8ea-048a-4754-9180-0e6a76c5f67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394b1140-1240-4600-8d71-b487d7804fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7f8753-f0a5-4c27-9f4b-1e7c50dc912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c19516-a37d-4290-8214-36da466778a5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4f67a4-690a-46b3-943e-89513dd6dd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ebc47d-9fe2-4231-894f-5defc3713086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f41255-cb27-4124-ad25-dff49234842a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad70eee-b3d3-4143-84d4-f0c746f14728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dfa95c-f921-46b0-bc0e-4ca7ff305cfc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25316178-7f74-487f-9a15-2c85c63a568b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e5660b-1204-4272-85e8-f10f1e657046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c077a229-3556-4c1d-ab47-5449c6dd2939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09bd69e1-a497-4176-b5d6-dfe92398f674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2200de29-20d6-4c70-9c98-c12fbeed83c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556eb895-6761-4521-96c4-feb5fe8c5f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332fe850-0b98-4d0e-84d0-60c6e66ee9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e13c4ab-d1f9-4897-a1bc-c35b4a1390e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "023f5729-31a2-40fa-b7cc-4b6f5a73d2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5561c20-b917-4c8a-9ca8-a595bd4acfeb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ede18-cd7c-41fb-b077-d7a37bd7e252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad4170f-f4fb-43d9-924e-606e89868219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e18159-89e2-4e09-9f67-fddd05ea1ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "878031f7-6e08-42b7-8b38-e9e82328b33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2722d838-73c8-4969-a554-ed86d5050e70",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f6cc49-9160-4d99-9279-afa62dddf0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831e49d7-a609-4917-a518-8b8847d0cd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3b382b-d13b-4337-b73a-2547a4dfc95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b052b39c-1163-441a-ac36-bdeae9ad4ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93825428-7cf5-49db-937e-55f5854092a6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4feef15-6a02-4da8-9a0e-76773b8d0d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de2e16f-67f2-4ddd-ad2a-33f37a9c7cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a170c4d-72dc-4779-b6a3-d27e1ab8d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31d7e40-ee80-4b32-b193-3627c3216d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee16e86-cb39-4c30-9a40-9a815c144d92",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d093e4-7e67-4505-a293-a27036b944ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f706ae-3d11-4bd6-ad8a-b1ca2171d052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6f01dd-8eb2-4fde-a6c4-af6a7ffbea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "553c75c2-ea56-4663-84d4-ce47fb37a96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101e60eb-e9a8-4230-9f1c-531ba793499a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d408d1c-c208-4d80-bf1f-ac1e058e89df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e6a6d3-4a54-4973-8565-b0fda607d4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca2db33-ee99-4529-be86-fb5e19d445b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c15dcb6-a8fa-49ab-a6e6-e92aecad8fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfada4ed-d378-444b-b66f-f0ab061dd020",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec69770-fe9a-41d3-8099-7708ec5f8a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb2328a-d41e-4838-b0af-c88fbdbd466d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9896e6-854b-4a1e-8ebc-6e52ca9addad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73e1f457-8035-4ff4-b4c9-86865008784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced1f5f4-48ad-4c14-9242-ce17529409a7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daba3a9-70b6-4bc3-b2c5-f474d22285e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e76df4-3c76-4e4d-9178-5d1b38388de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6141f6a5-d45c-4c1d-b62b-48384fcbf0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e99136-4f02-4cf4-90f9-96eaaef84210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a693fbb-fe7a-409e-8597-f54e372df725",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda674fb-d000-4af4-8977-ae43f8f4dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90a3cef-bb99-4d8b-ba00-3e5d06fdd1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9504d76-035f-4f1a-aa22-d5d147134ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8540baaf-6ecb-4e34-8601-d7ec6084e2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ef6685-023d-4f88-833d-00fb7e8c2d84",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff1fb71-57c3-4b75-9d6d-fd181e07d59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd95f38-c676-4c74-a41f-29f301dd1aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048aa9a7-7de3-48ac-928f-be59fab31a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58bd4fc-4d2c-4e1b-9de0-afa28a064d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95ec841-2f2c-446e-81c0-c38ea098e4ea",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b06bb63-4491-4f7d-a4f3-bfaa7bfdce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ac71bd-538b-4b71-9e32-1e230d0098cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62abcd8f-7f41-401f-96a2-a651e174e464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed9c426-215e-48f7-8152-d19d8bfc4862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456c5be7-843e-4885-aaac-6ab615adbb45",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e1d654-5888-40a9-b377-9b320c5f8d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6724d46-a65e-4c93-a4e5-8644ce9726b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ae302b-4b30-489b-80b4-40fdc0eacad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cea108-694b-46ca-87a2-d47f34fbe5a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14309d81-0e02-4d8a-a33d-6d6a0ae645a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de320e37-9271-43fb-99d7-6b022cb88e2f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3164f7-d78b-477f-8347-9f0363061f8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "03da18fd-40bb-446c-8050-27a52b0437b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3979869a-78e7-468a-a333-8f0cd9d7adb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90cb67bb-5301-4902-b073-082cde2def29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db08e40e-3155-4d11-938e-6edc079add03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eb3fff4-83c3-4b7c-9105-6b2ecca0b13b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c5cb14e-efba-44ef-80da-e05d81ba8568",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41113b67-8613-491f-923f-641846cb7a50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a0a693e-3656-4628-8967-3f131feff238",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b62860be-d5bf-4b8a-a067-00cbfaa9058e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b984bd9-66d3-48d1-90ed-f20e4e583cae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd5b98bb-1531-44c3-bc85-edd9d13a7041"
            }
          }
        ]
      },
      {
        "id": "f4bf8082-b5ce-472c-99d6-c2a3e0de6fc4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "187b6db3-cfc4-404d-ac38-5010ebde5d24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dbb262c-9fc4-4181-90bb-e6f7f824c81c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a215e186-24a8-44c0-887d-991ebff2bcc4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8b502f-27b6-4cfb-a02c-67941ecc54f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bb55b1-e030-4e84-b5e4-b60ed28bd5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a452b65-856c-4ded-b11c-99242267d006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bd27f0-a055-4b45-8389-db9639138794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889a6180-1e44-47e4-aefd-51c68cae85ad",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137de62d-ff88-4e6f-a3fd-67d0e00d0a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7f4485-b871-4b93-9229-f17d03cadc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022f49ff-f7fa-4fbd-89dd-ada1e4417f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f70b81-cf63-4d75-9ac9-4efbe4fb3a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b21b52-7cfd-4fe0-a44d-1397a8667308",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36295f0d-8bd2-4b50-8321-71b2c8a2c0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fc819a-fa26-4d83-84ef-fcca99c1ab8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c301e191-cd95-4898-9a28-b11b8be20888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76819837-85d3-4d12-b034-b0d43f480f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc1551f-5324-4557-a640-24fc7b113956",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9373983-ff1a-4228-82e3-6eaa42cc174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410785a1-7f38-4d23-ad7e-def1184d988d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726704bb-195a-474c-8f34-f496812a7923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "974d042c-3455-4e2d-95f6-2fe15a81d818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56fe58c-77d1-4687-bbd4-4958be1590df",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7857951d-6239-43ac-bcc0-d5cfa62f4625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6230ce2c-02ad-4ec8-8083-153f169c104f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddb5152-5f00-432a-a154-54778476ae32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be7c2fb-ae30-4872-bfa8-9f527152a666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85952ebb-18e9-48e6-8afe-116ac34a3b41",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645db45d-6f10-456c-a239-41d7f7ff5ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d56740-e565-489b-a245-b9cd13d336e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46909884-e156-42b4-abd0-c9caf6a8250b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdc73ae-ad94-4f77-a6e8-8083b889dab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e967698-9cd1-4334-be9a-98d51f02468e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafea46f-3bbd-4d01-8d02-63ce96bd14a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544e9f1c-3933-481f-9004-692ee6daf805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b708c30c-e710-4544-8f20-6e2f1abd862d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee37e8bc-d4fe-433a-af9f-47dad9980318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4732b181-9b22-4a09-bfff-d6c916f32fa0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c748e46e-ff2b-4c79-bb2c-c04d9f255abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8255bc6-3233-4720-bf65-56bce1c59dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba6b3fb-cb12-46ef-a127-fd2de6ee6185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a4d8d5-cb36-4976-afc5-d472f957d5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe3b2df-3d29-4a47-8f00-2c40c897ff4e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2d0424-dbd9-46ad-8d6c-b77c341cea08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd00c64-b212-4fd0-a6fd-7d241aef948b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eafba6b-fc97-4280-82b6-9950b035f25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3873ddec-f45e-40ba-ac1f-06fecaa9f941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be824f6-41cd-40ac-9d7e-3edaf7ef69d4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869584e3-4da8-4a54-8308-d28384d1c13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fab41f-4e10-4ed2-81a1-016eb59cacd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f59694-7780-44ed-83f1-c9d1dfcf6f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eddfd51-50f5-4555-8861-b1fb3f2e6bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c4acc7-6ee0-4dc0-b05a-30e2d27c6c80",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a465f4-1537-4541-9c50-ea2625dcf1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377d1ec6-2471-4a19-8a22-3582934eb7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab3e01a-f783-4a83-8b5d-649f916ce0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "546fe63e-3f0a-4035-b542-4c6d71d5db46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ed711c-b400-419d-bf30-b3ce63b16b0a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d09d3d-55d8-44ec-989c-6ec6e81b1df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9926f1-ebe6-40a3-8388-841ddd165d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095480a7-921d-4e0d-85b2-2cd17074b897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0851ca49-9c83-4e93-b62e-eee5e4379441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f887a6a2-904b-47b9-bab7-908616efad94",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cc776f-a731-407c-8970-5b742ea0be4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fc4cc0-2c5d-4f6c-bffe-5bc290de11e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae06cb22-4894-4e39-8f85-2839b260222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1151f8b8-cb33-4017-b854-5c44ef84457d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5eb44e-987b-45d1-b859-3e2b9015c96e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce019958-4f05-4967-a3c7-8ac202c7a303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3d7398-6f5e-4dc8-a783-301a64e79325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52d05b3-583c-4b9c-87a2-320ac01d7790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f059117e-a46d-486d-97bc-2649527c660a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0eb656-924e-4203-be07-081010841c25",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d103fe40-deb2-45e0-9ca6-c32a459e0a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601f0b33-16ea-4188-9ef3-96200f52c9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8585458-3342-43f4-9384-84e07286402e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1002ef9-fcf1-40b2-b97b-64b8329e1138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0393364-27d8-4c05-b478-3c1918941e55",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2ad0a8-950f-41c6-bd01-0da7d2b9def1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee00830-537e-4139-8662-d62935aead79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19e96a0-bb75-4ab4-9663-8b31f70ba9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1746a805-2491-464e-a264-7212f2c219f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cadaff4-c3b7-4bb8-a9ed-5a1695e8bd9e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde9a580-35ce-47d7-a2b7-2ac8dcc9d4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898ff11f-2362-45da-8e37-99d3f1f3b677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91ad397-4ca0-475a-a1da-297aa77d4ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bec55ea2-fa10-4c79-8e6c-aad9bd4f04d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482b846e-6083-4dee-b00d-c9c87ba08a6d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033378a7-9992-49f4-890e-f4f545e0fda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac4b640-5466-4513-9e8a-33c1b7f2bcd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6d105a-6725-40b5-939d-fa4acc07d216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f56dd4-2faa-496e-b282-cb04f9aa8efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603b74e1-f6cd-49d0-a426-47a392d39b9e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d2854c-be96-424c-bbbc-2cd2796b6f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f94f664-2a58-4c39-9d6b-81cbcb9f4894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db75673a-11f6-4261-8660-49ba52302f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc25f97-4caa-4435-ac5b-6d2b6209583c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46075aa2-9c83-4848-86db-41e101117296",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2656b438-accd-4c7f-bf7b-b12235233bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ba7ede-02b2-40da-a501-df1fca3e959c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25672298-1939-41ab-8847-7dfcb3460efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ba5db6-24ff-42c9-85fe-bedd0b7cf090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4449137-ecf9-47f4-80d9-5baf111b0ca2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ded9ad8-ae0a-4611-8a90-d483425e3d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29531cb6-b772-4d5d-9328-3c338b21e108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ba895f-85f6-43a0-ae9f-7cf5673f9298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bc7d7c-a50d-4a75-9d2d-386bdc834f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e758e1ef-602e-4049-a529-89fa6765ad01",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb88cab9-8bf8-42f8-b2f3-6b127dea1b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7917a12-9796-416a-bbfb-bab32022818b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee727b8c-5016-4d41-a6ad-639066c5e1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c32f69-ddfc-484a-ae53-ca9abcfdfced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b2c8c4-e8cc-4cc6-8be0-645f2c49768e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a274ed-a028-43d4-94bf-8a5de6ab256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26ca40f-da19-45ed-86d9-10c6f82fceec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb6ef07-278b-4426-923d-3c9b1e60d897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed646460-fdef-4935-9ab7-f609711b6054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cd4278-c192-4212-9aab-19046aca1ec7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d751f98d-d8fe-472e-a86e-01e13b21ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ed36de-73c7-45e4-9f6e-efb0bf83af57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ab0fd5-9239-46e2-976e-55b13c1ea4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0705f92d-f899-42c3-9a66-d02a619a9b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03042c9b-c36e-4cdd-97bf-92e0e44d099f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761c945b-2aba-42e3-90c3-9974626b305d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414639d3-e10f-456a-8486-dc72fc51786e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cc767a-1835-4265-9b86-dbf989d527b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a169e0-33c3-4a62-bcff-26c7ddb1ad15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea69547-cd42-4b93-99fc-1c8c2f1528ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a26df0c-6eb1-4d0b-8a3c-32a32ade09a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c6e693-13ce-4144-b670-ead1c1e5ea6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f728c681-ea19-489c-94f8-6c02b11ca441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72906f66-2425-40a0-987c-9125ed6d996a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f9155b-fc35-4463-bb00-d7548ff25bcf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe6ccb7-54c0-412a-9116-01abc3be0867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73811738-0412-472d-8a3e-790476458ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34f6a82-95a8-427e-875e-f885b535e285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c2a1e4-9b27-4541-b185-f647c5c7739f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d271660c-f5ee-4175-81a7-0d3fb9297b8e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493d42e9-158a-44ed-ba01-951d28873f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132e7f44-9178-4d6b-9a07-6c08815e0d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b75782-a52a-46ad-8195-ddddb90ba073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be86cb2-72f5-47ae-bda1-014294a4e8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494b34f4-55c8-420a-a034-cb94249a9b13",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8963b0fd-9fea-4592-b301-8d767d07160f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c38d2b-6eb3-48ec-83c3-c937e658a165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be406adc-1322-4b78-9cdd-7005e0a6b491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb83135a-e809-4a6d-94ec-14ef119ae86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e650b2-60ac-49c8-97aa-9e62fc36d1d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0724cd25-4253-4381-8145-b5cb72cb5c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07185e74-6696-4436-8cb9-0806e0d4cc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cb6281-f0b8-45e4-a4ca-4707d1854f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c3a7bf-8adb-46d7-873d-ce82dd8b8b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01ac784-bcfe-4416-a228-9e3ef3500f71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d919a92d-0db3-42a7-b0df-7fadaaad2a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66e5fe4-9126-479a-9843-10c65f0fb995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d431a2-820d-4470-8aa4-527fb264843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed12ee1-8e5d-4a7c-bc56-df1ef9f3bba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb80c1-2fe4-4c02-9479-ecacb62497d9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8f23ea-9c1e-41a5-bc9a-af75ac50bebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bf44c7-51a7-42a2-9d59-3fbc2f2a7e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596c0f1a-b403-42fd-a5cd-6be6443ef58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0825e1a0-3f49-48e1-8baa-cbdb27d74d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4533bd83-476b-4eb2-82ba-895512889ce8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f4d80f-2a70-4466-931b-410537ffd7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aad8970-e087-4521-8fa1-8bea9c0b16a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e7874f-30e2-4ddd-80ac-c0396e0293a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ac0535-1646-4867-a040-ab44d956ce2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b6d5a5-48da-4901-82f3-ef8f732fc190",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c600e361-cdbf-4400-85d2-921989752185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db5347c-83eb-4d27-ad2f-3212f36ff1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13419631-170d-48e3-86b9-066559372aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9388ff-fb9e-4f67-84fc-28f798693211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f69171-879e-449f-9b4c-94cf87a3d4c8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a50f07-4641-4999-ae93-b6405246f28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b45541a-5d15-44c3-8256-575c9d617e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc44c44-c37f-480f-b955-44309747cb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35297317-f3fd-4a95-a4b3-edc1b6d9b56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e5a198-da1e-4716-b70d-68ce4c899feb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a59818-93dc-402e-911c-6de4efaa3e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c358f429-0f1f-42e6-8c0e-04a510b61d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba09f2d-4a52-4cde-9cba-48edff2cfaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a00405f-9101-4e66-8ad7-a3efcf7d3257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4005f216-2093-4c40-bc01-f475926766b1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea21618e-edc8-4be4-b4c4-84f51bcf5737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c00370-17eb-4787-95c6-65b1d4923275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faef86f8-48d0-4b27-8968-864d45889581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83c34df6-78c4-4d9e-badc-0a4fed70efb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6797e144-a300-4241-9adc-4a68228aaee1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f42d7bc-2363-4bf2-8f51-5b46ad7f4153",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20067afe-4e80-4d0f-a09c-ce97e21745ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "484fe37c-8243-4832-a8de-15a9889fb944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c84ee51-8cfb-45ef-a864-455ffc966a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a0106b9-0db3-4264-8a57-8d225a4dac4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9053d901-1975-4dd2-8742-073c552f8af6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7a6943b-eee7-4b03-b3e7-74d93bb1d5b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88cc2506-7bbd-4622-aa6a-0dd83dbb3f0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2bb122d-bd5e-4de8-aa69-6da6b4edfd58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "264f6990-ee02-4f31-a276-031b859f8bcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "930ead22-bae9-485b-b7d9-8a62642de258"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42c56dd7-310b-4c4c-9f49-73e5f23f4bf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c908e8b2-398f-4628-b942-0ee571443a60"
            }
          }
        ]
      },
      {
        "id": "4a25abd9-b4c3-45b3-856f-96579cc8d0fe",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0b31de53-8f3c-4cbc-9fd0-8fbff9fd29cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3d27ae4-5482-41a1-a607-d8b4372ad570",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "60e35913-8009-4a9e-b640-17c86a1fc933",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4863d363-4095-4d7f-bf0d-cd8d68dcaa41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d09c5eb-c890-4e88-a382-36790468dbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40f98d5-2454-4d18-a365-5655783c59bd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384f4278-a1cd-44d7-80d7-1ed413cdd230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23b149a-55d3-41fc-9906-5ab673e498d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffd995b-232e-4691-a659-6f7ef9c6931b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d41ea6b-fa6c-4643-9b87-2c69ab1b1dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f987816f-516a-47ec-b6b0-7085cb0cc7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855b454a-a008-4bc1-8261-b7939799d2c1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf28964d-37bb-403e-97c5-20ca529eb666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f14cc07-bee1-41f8-8b85-da5c71186fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6026050-5f7b-4da4-bd01-f0f8902824e0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ff339f-a4a1-4a95-a127-27e5b56b4a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d7fbf5-585a-42e7-a770-51d9675fc902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a636f6-0b41-4614-acc9-a064d1c86710",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc52ac2-5777-4c1a-a9a3-5229ee1ec0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793b9663-0138-427d-b22f-21672314c489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127a2e86-e5b9-4704-9dad-8120e075b444",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908b0e1a-23ab-4f6f-a8ab-c2e2306e7a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9169ce00-961e-4e52-8e0a-7ad3deafc26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71835de-91ee-456e-be0b-a2ca21b56d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9024c40-ff9e-4e7d-ba8d-2bc6d5ab5100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3972bf4f-8fe2-484e-ab27-ddc6d46ae015",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed48a93-14d8-4d5d-a431-1e2e40fa96d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34485e46-f886-4fd4-8593-b9cf75e4c955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a2480b-cc42-4b06-8136-775a00636398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7753703-e625-453a-a4f4-3c515ad3421c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb2a212-e21b-43b8-ba79-3f7479808904",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbac974-1f4c-4a91-9d7b-28fb266a7117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb22cea-a023-4577-af2c-594d2821fe41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c55c11-db04-4432-9f48-afd61de828a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d25158-05c2-4bb7-acfa-19e53fcf2eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac34bb3-35e2-447c-a94c-f0ac5d209bac",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545defc3-8f33-4d48-8226-c21d8f4459c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de8ad56-1146-40bf-90e7-759fc791fabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0518881-7f98-41e4-ade5-4627529dce88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6501e9-8eae-4675-8a5c-b7bbc909a651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60dd291-59d6-453e-9404-e33dfcbab3c5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93d72bb-01d1-45f0-aba4-437aa7f9a4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021209f5-ed78-443f-8f75-8f98cb00c4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9629dfb2-86bf-4f73-a18d-b819f0c98ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdd7409-2555-48bd-b46a-aa3ac67850a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51350ed5-3f69-41f8-abab-f718c4850a92",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bba0a12-11ba-40b9-b677-2dbe2d811f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7dd5752-e728-402b-810f-388e78414d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b444cdc1-2bc4-4ecb-a742-918cf58ecfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9306309-56eb-487a-bdf5-f434569e590e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb07a3b-687f-4099-ac6e-fc4ceec7d533",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c003726a-d842-4793-ad0d-f34775b29ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffeba5e5-6470-487b-8da4-7938bbe54599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0492e9b-c8ec-40fd-ad5a-3b56e797d012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b53d84e-ee3e-4e21-8724-3554a78edbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131cd40d-4ea2-4c76-802c-066c55d826e3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a002c5a4-1c04-4364-b60a-f26f9fc10f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f4d78d-c5db-4468-b13a-767fb4fe2da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8522f3aa-21f9-4616-9ab0-693ff325731d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9db2f5-1bcb-4ea9-97c6-a301f59390f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f578c2a9-a6e8-4651-89b3-b3f130945db2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a90055-a0c2-4e27-a02f-64b26f7dedf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c34507-6b29-4996-b28a-8d72730e8523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080c8bb4-a689-4eb8-9e10-d98c83e10d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7267590d-c089-42ab-ba5e-115859883397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb15a820-93ee-4d4d-82b9-c4a623a5298b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d11342-f1d1-4059-b1b6-7db447c59e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88477b63-c4c9-4eda-8a85-966df60e0fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9c1d5-420f-4292-b8d7-454d9b004978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a683e38b-f190-44c4-8858-b99baa19f5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ba9ed2-52bb-42f9-9f86-520335ff7cb7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a54ea19-0a63-425a-aa16-9612efab3630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c66750-6181-4f16-816f-9ef52796eb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2838a7-2185-4ae8-85c3-4cd5eaa87487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa1299b-772e-4406-a445-9e44c0d208e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe823acd-1670-45f9-a830-f3edf590ead9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944cd92e-b095-4e2f-8f59-9ddd57087486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8252cc6-9734-47c2-a864-9d693b7a04d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fda283-90d5-41fb-b122-4fb84307a3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df29b147-ece2-4e5f-8f34-fa9184873e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2ed3a1-dcfe-432a-9694-c56d713310b0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4c0ce8-d0d2-4960-8cd2-9fe2995c8163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2324ee1a-c05f-4608-b673-b5b289157f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035a4a84-6e22-438a-89a7-0dcd28afaffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f2e37d-a312-43cf-be71-19a6e027658b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090f8b0e-a445-4b27-b512-63095c966be3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030bb4b2-b8ef-4e06-a33e-08866948461e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c69b759-b931-4cbc-aa0d-24c88c69819c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28778172-60fb-4f2a-aa62-30782c540a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5772103d-3ad4-4f43-8577-afbedd7b1791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd211869-bc6e-4513-bfea-03a429c23834",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a663c373-4639-475c-9e57-d6e060d3830d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fd60af-b398-46c5-bfed-fe6e7dbd0918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd3a80e-6dfc-4588-8b4c-8409e5e8121b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82df232-c261-4b08-aaad-01aaa9501a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb4930b-ff60-40ce-9526-22227888b2d6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503c345e-f2bf-4abc-958d-042ea25cf8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e346a0-f317-46ae-8259-c6fd727a3753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad84565c-dd6d-4dec-9ddb-01376b906b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b71fe7d-6f47-44f0-9b72-2aa80b6145c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edcf0ee-2725-41be-bf1c-b0dbba64f8fa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebd31bd-7601-4305-afde-4ade89b96227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8c0be7-68ba-460a-ab94-da978c5fc41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041d6380-748b-43eb-8a1d-e38afa4f1b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef761ab6-3af5-49f9-b5ed-c3db91abfe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e283c389-6dfd-4fa2-9833-9118c201ec40",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c765523-4ff2-400b-b905-a7a29fb3d74d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c9cd41-7feb-4999-8f0e-8527bfd32842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd009cc4-eb3f-4494-84cf-390ae305c2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ce9da2-bb0a-4eb4-97dc-293f7e4141ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd86b10-5e78-4dbe-a27c-06acfd4324ce",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85243efe-c857-4d69-9577-fb606bab87d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d18e959-c2e0-4665-a774-345bb4ca4fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114e0321-735c-4c8a-b949-faba994838c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5425aa-3180-4b68-a72a-6676fd9a59f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb49c86-b4ca-4e46-a6a6-e4fd83546a91",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443ee5c4-06b8-49e3-85af-1ac311c4c59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4f1d2a-a3d1-48f3-94ab-431b7e3b391f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ae9ae6-3986-4f02-a68d-8f8c9f9e0e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ed776e-0d4b-4d5a-8f5f-498fede4483c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f198f4-ea99-41ed-b5c7-75cfb3908357",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5a1e21-f344-4ba6-9204-85e13100dda2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beacdf13-210b-4a22-97ba-06900d3b1cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20df1db-fd2a-4e2f-a878-5fd429a9c565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4125d0b9-72df-4346-8125-da7561d4b0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e600a34-474a-49fa-ade9-448ca988b53c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93ff2db-78d7-4664-9dba-88aee71a26ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7ba98e-5467-4b44-b6c2-507ef4470a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3347af3f-830b-4023-b6f5-dd7aa824e1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5632694c-45ab-41d3-9cb1-90fa243d7a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1daf92a-18d7-425d-ad1a-a7ab49a99aef",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0270037-cf5b-47ee-b3b4-dfd1ef339c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64f53e2-d7a7-469e-99a8-a1f46b23eb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f758b7ad-b4d3-4390-9688-450f3198be2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed978c9-6ebb-46a1-95ee-7cf316e7f1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee015741-d74d-4793-92eb-e66fd50f0269",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660a93ad-7390-4e2a-b180-7cce4f647922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad8624f-b9a4-4976-9107-994e10ba08f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fd772c-d9d5-4ffa-99b4-bc4dc98d6438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ce5419-b7f0-48f9-958b-48ceaa35e757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628805b3-4fe3-499c-a00c-4dd68cafd0e2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a645eef2-218e-4923-91c0-a2af4896b055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7642336-de16-476b-85d0-5aa6b7f44233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806fcd83-8c37-4dfe-8913-3c1096a6b543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bad965a-a15c-4720-8342-8b75c6271132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e489acd-123a-4676-86eb-81fcfde018f1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0ffa63-2a3b-40bd-9181-7a96698182a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e31f221-5d3b-4f7a-bc69-a4f984206db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63114a1d-ae67-4d58-8c2e-2e5fed3d5ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eccfd3f-0462-4f77-a398-6afd8f97b569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685751c0-5cdb-4c57-b276-3d40c30f08a6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c81d5f-b97c-40d9-a1f0-d5290f253f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeac609d-6b24-4c66-b0a5-8f310384b817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f06853-2f47-4d83-8789-23b642ac4c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6174ddb8-a668-436f-8fa5-b1cfebff5d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5cbebe-9ac6-409a-bcc1-a7fc9e634b1e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a2581c-256d-46de-b39c-ad8df406e539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a2ba870-1132-47da-9eba-6f793d0e72a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dd9298-29ae-4ef8-a8d1-9ad024052620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03348f8a-fcd5-4db2-8e13-4e7d4a69dbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92be8e79-17e5-4506-b81e-91337b22877a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd7e7d1-75ae-4e3c-8d99-a9e3379d0b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349bb020-32d0-473b-83b9-5a76de12e785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9726ffd6-75c8-4081-a878-ac26439d90aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8830878-18dc-4eba-b95f-d8e6d81c3c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e4211d-117d-4363-9ca7-dda46e6baa79",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcc284d-0580-45de-af21-e0e0a3133ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f5b564-3db3-4efe-a5fb-9cb6478ac599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6f9e82-282b-49c1-89f8-d058647d2c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d654b3-da32-4f9f-be41-1530ddf1f711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1861d358-9b32-4e04-94d5-c891183c957d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be76e3ce-05d5-4102-acdc-7102c1d75a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17951483-3646-42fe-a703-1b1a47aa4a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c5c30a-b9e5-48b7-96f5-3f62e5890422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faa3fa7-6d1b-4d33-8a25-dd93c586a3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e340595c-8c79-4e1c-9335-710dec919bc2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f33486f-a3a6-43da-8237-bbcf4248c224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66af23fa-4479-441b-b079-be166a74895c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14053a35-0701-4b6e-8e61-c250d815f245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18e8891-1dd4-4514-9e70-a918409d1ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6ec8f5-ce58-4232-ac2b-36c205df122b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8b14e4-a9a1-403b-9716-918026cdf54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c712e7-46f7-4fee-a42f-0a3cdf05d44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46469121-3e64-4512-aa4e-f82acbfb38e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f05a62a-dcde-4a6f-96d3-4d638b014872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf100c2-8d3b-4210-a271-03817fe362c2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3ba5ea-4556-4edc-b7ea-e9ce4a81d16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8b7045-80a4-4507-9e3c-a4e20444b82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa01ca0-4ef0-4b33-bb76-9a200d647d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cc344e-d84b-4d10-a2da-7c5196094c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b548328-6ece-4a9d-a6d0-30b398bd5aa0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab05683f-afed-4273-9793-350b8eb2ddb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011b0e22-e030-42d3-afe4-2cda182df08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ad6bb6-6afa-48bf-abe4-310491aaa9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a0b6e2-dfc6-439a-948c-f4500203d749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918149dc-3051-4ad0-ae30-4cac4bc819bb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbae1ad-473e-4138-b294-ea4ce1c56b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec28a9b-117a-4889-badd-a4f50e18ef96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cfd6b7-cc5b-424a-94a1-38b2f7dfa3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a47c84-b1b6-489f-a4ee-b00897e8709d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c87478f-57e6-48df-8762-61c6f96159fa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ed1a6a-e5d0-4c31-9b1c-3d1fc905fae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a51df0-4e9a-4a51-9865-333ea416bb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e0dd2-ebc7-4cb1-813e-32bb287e7922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691965f6-b6ee-4354-a2ce-d567537d4853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cce770a-7f17-49c8-af8e-4d770cf59ce7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d03ea62-5dd3-4fba-85a7-4bd57e02e7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c176b3-39aa-48ab-b77e-725045354877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b23cab2-a9ae-4e26-88f0-ba99a6741ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3273503-ce64-4860-b8cf-9171b9c1cf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc9287-1226-4770-95bf-bdba85ba24ed",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b90e090-33a2-4f57-9094-ebab2e19224b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8bd8b1-f150-4acd-bbb4-7e93d5d5306c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175fc809-006b-4957-b571-213751988c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f1daa1-7c85-41e5-83ff-beacd9f40316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70022c5f-e6a8-4b8b-8f79-a2bea889013a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccc52f5-a1b1-48ae-83cb-c53f8a3e0d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d6d955-e233-42ad-ac47-957f6a1c8fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0848f81-3768-44a8-96ab-6b0fd9678aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d61dbd-cdff-403f-8afb-f60c24011ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ce0766-5462-4028-b81a-fd82be41bcda",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a818d6a1-444c-4635-9562-99b17f3d8ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223f0086-64fb-4b50-b66b-37f03539d0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88707123-1b65-42cd-a542-47783d0b1038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbcf3f2-a8b5-434d-a6f7-24b762e8932c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635d318e-1f91-4f6f-b940-e8fb8723216a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9654e6-41fe-49e8-9129-82c084624632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d651f87-dbb5-4ff7-b5c2-6dc2621aec97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3b9077-0cf9-436a-b87e-046a8d75cf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b7d0cd-c024-4dec-8866-ffc7571bd9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fa349b-2481-4331-b464-121f8d3850d8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa4dd49-c01c-496c-84f3-dc412e51d311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c129e01-164d-42d8-a9bf-398acc6fc714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4480cb-b462-4f90-bf6a-58b3c31fa149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e6e49a-0a8c-4304-aadf-d42745c06a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549a9628-f81a-4d04-9210-a9819bfcb640",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2bc76b-b677-4812-81df-6af26d454b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8d557c-8302-4859-aaa1-e634e124ee8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2378205-dedc-49d6-8157-e13334056afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9c1e12-c6d5-42cc-9fde-1272779c14a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376f88a8-c678-4708-ae50-83a9e0a70dab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0da03f-de21-4585-967a-dfdebe3edb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474e332e-a6a2-4128-ac0e-209ea8465305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b886499-6408-419e-877f-3af84be400b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b07dfd1-56a7-46e5-a15e-1cfbfee1f688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f1dbf7-4ff9-4b8a-b74f-83673a6ce814",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb2c3dd-d55e-4c6b-baaf-263742cb2c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9d89df-9e11-4e3c-bd22-2723beaa2e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd948a5-80dd-410c-b3ef-3deb4e36bd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e606110-568c-486f-b593-d0aea67b9d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dbd4ec-dc3e-4059-989a-f09edad3ecf3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aa6966-33c2-43cd-a535-c2f99ca7501f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66a2394-a6a1-4df6-9995-ab5b18fa218c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8fe355-a4df-4164-b125-464345f79a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1590276d-cc39-4c4f-84bc-5268ad3a6a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cab58d8-d21a-47aa-ae22-5f45b35d548d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164f7165-e094-47c9-9b0f-62fdf2881142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7ab2f2-7229-4fa6-af42-c63db0ff923a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921d8907-d6c9-4e08-abaa-e4a37d20d361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce2eb06-1581-4477-a7f9-0096b9c44537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd92522a-64c4-43dc-b177-af4a85f69659",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec95eac-3038-4f76-94fc-eae6dfcfa2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c17877-1179-499c-974f-417c2505b851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3122b7-efb6-4bab-87b0-b13d843b096b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f7c4fc-44aa-491e-8686-2a5b7b03e436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34c4e9d-24e0-4634-8a98-783cf452fb25",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e9223b-47a0-41b8-88c3-03a135e85190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a148379-c4a8-46e5-8b20-779516feb5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5fde2e-a1e2-4c5d-ae25-11ec810566db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dee657-6ba9-415b-9832-be955d2cff23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0dd32e-8c88-4477-a56f-5d54a35f18cb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfc61f5-002f-4610-a1e9-977773696332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1109a531-1451-4be3-84fd-c3fee7d651e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409a585f-d17c-4da5-9470-8a423981a144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430cf0a8-b23f-41a2-aad7-ad1dbc865865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a71472-2612-4ce6-bb49-f5a3c92d26d5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd68608-961c-4d49-b0fa-d3651a0aa261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca32c222-083e-4f4b-82a4-94a075334151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150834e-b40a-4594-adcb-da2f3cd2f9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7125c901-1238-434d-8fe9-9a4e45d490e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b553e73c-6d90-4125-b02c-c54b6cafa52c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714ee756-adb7-4419-894e-5ead88ef26bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f67c9b-d21a-4e13-b3c3-cccda55c40bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c7cbbb-88dd-409e-9278-a1031adbff1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b127a183-3ba7-402a-a784-1ac11b752274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951d327b-2a58-4606-981c-43b9985be0b4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ad2999-8979-4e26-a492-419d254ed2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f55dea2-e23b-4e79-98f7-ccd49a7ea863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614a6170-a731-47d7-8d87-d4a46db3f19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57be307c-f56e-4762-a45a-8ddac14e3694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff6caf7-90eb-4062-80e3-35a9851030f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5175b0c5-f7ce-4340-81a7-d07660a36f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57b6578-376f-46cc-9f56-2dc477e8edb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80d1efc-4d84-4f21-a930-dacf9a7465af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bbd746-c2ec-430f-ae74-d3efb3fe04db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2571c03a-c5cb-495a-9041-153611bd3267",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a00dab9-d74a-4742-9edb-6e7b623c0772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a3c12a-8a8e-4474-96a3-3130313c82f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6cf334-f055-433a-bbb0-4ec663093666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e367a22e-9ed0-445d-ad85-70e9ffff2227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c5cad8-4b53-4f54-b18b-4e98d160bd93",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee5de98-0fe5-4de9-86a9-9b4a7071f296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13ccc91-bd25-4757-b03c-d219834307cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea662b5-d0e4-4b5b-a156-bd1714ea3a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2aa0e5-ec38-4c2b-a489-1ffc40bbd6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73823a5c-8b5e-4279-b822-a4536c1959d1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5df5cd7-42b4-45bb-84b6-0d1cd906fedd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c891c37a-05d8-4064-9545-4834c533f918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb23832-ee91-468c-8318-c5ea5f6c6e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7a3d98-9018-42e9-bb3f-a84edabad0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22adc017-6de9-48cd-bbab-fcda65b2ce4b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db2d5b6-a065-45c3-ade1-da88eb743f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfd0582-db9f-4c1a-be97-20b1a8888a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02ef71b-b157-4cef-b1e2-48991d9a696e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372d77a4-3b14-496f-a456-35ff980efc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9452a4ac-4e95-4e49-b0b0-8aae8772fc50",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c037d2b0-53e5-4618-b1aa-de1f04f9a541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b06eed-5bcd-49a0-8ba5-560afd358b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5961343b-54e0-4980-97dc-01f24d0463c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cb3f7e-514d-4514-9c09-6872d1a962d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511466ec-f70e-48e9-88af-74c8933228aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e593281c-a256-407a-b4b3-62355b14960f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "643f3a40-4618-49ce-9908-556365e39c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b494d9e5-6329-48c1-9e02-c6283bdd4573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c0814b-224a-4eb2-b4d6-d1d99bbaff87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70505c57-c620-4020-9bb3-1c6028b6c78d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3908c3c7-aa4b-488e-8a89-bc53d3a00d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad80d3a5-9863-421e-b607-16d07fdd55b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6699caeb-23d0-4956-98f7-08f8154c7b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76033b5-ab1c-4e41-9125-9b6b731f9d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f4c33a-6ce7-46e4-803e-a9c96c6e1860",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334b7045-2339-480c-bc65-21d98f9b3462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64a5625-a2e1-45b0-9c00-cbf324b4a917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b64c90e-40ee-4c02-8700-8be7ce691e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1065f82-f437-4ca4-9275-a82d7813c7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da664a65-5f41-4de7-a4e0-7932df73c897",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3938c671-5750-4c42-8a08-aba6bcd7246c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "341ca49b-0687-4120-bad3-a8f2e41471e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68b5b6f-8185-4836-b974-896fcc20afd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5589c97-d700-4423-aa4b-3809639c4c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7b75ff-7d6e-4d2c-818e-384754693230",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7627bf-704b-4635-8786-9df3500ccaea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b011a3-fb01-47e4-be65-fe7b3b0e2371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77777bef-5cb5-4c1a-9cee-578aa4461480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c2873e-d1a3-4431-ac4e-239073c12fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e51792-5fa0-49cf-8bf4-18807ec76d2c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5cff43-06b5-4695-ab3c-7cfdab1d669e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd80f53-6ae5-4efa-bd03-0ecbcd7024b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8394864-3cfe-45c0-bd75-95faafad32d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2940e6a-1ba1-43b3-88ad-83dde5cb09d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb84583b-f092-4306-9eb9-7a60049ac016",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ecf341-7d2e-485f-9d4a-2a673661b8b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59652c3-a3b4-430c-816d-4d9fb1890732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bbd012-b316-453d-8a49-2dce54190e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9e4847-6699-48ec-95c8-1fea720ee71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4e561f-2081-4449-ae9f-2da074e3c4a0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80e2d31-8fab-475f-9f19-ef65572c8979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7623d18-3089-4b8a-a0bf-7a7144151968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ee4644-c690-4f70-9256-7e3a11924df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710365f4-41e7-46c9-8033-61ebe6107287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec5df90-e892-45ea-ac25-7717deef8abf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546c72bf-dfe9-40cf-9749-13b12bfc6dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e2c7e2-5560-49a2-88e2-4e23659ec6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2513dce3-5097-486e-bb03-2388740023e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b4f1d4-f8b2-4a42-97bb-fc10011956d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b8cc5a-e4d9-449d-bc96-ca164422940a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25821989-51ad-4a86-8ee1-9567350e562d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e134526-8c1b-46e1-9c1c-16fa18c835e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a979755-9f2b-43cb-b518-6a0248f491bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c311d4-6fef-4237-97bd-cfdd83ddd3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed33a61e-b2d5-47bb-9dc9-2e1006fb8ed0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e7ae04-3784-4c25-b960-d496c9031e27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459d7908-7bcd-4995-ae1b-89d10997097d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a4eb1a-1e4a-4c9b-bfe0-ddad29f0d13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d141f3-467f-4516-92a1-cfc7d38e6b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f58f9e9-af44-44d2-8e7e-b337a245df3c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1caf7386-1c6e-4481-bd25-a6825cf18698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28fc0f26-57e7-4d04-92db-af9743af0c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9875ae4f-1c37-413b-8325-a7b5c8669828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c47d81-4594-4b87-86df-bc07be9e6dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f59e9e-ebe6-4706-bd48-a68e93f80313",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5942909-852a-43f6-b481-ad531f9ed29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba336a2-b11b-4741-bc67-522baefa6ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bcdee9-5dbb-45da-a832-0ab2a196b76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54a6005-4529-4ae0-820a-edbc79a8d900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449594ac-276d-48bc-bc3d-e96a201e034a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a67f5ec-a499-437b-a7bb-b6d6d049029c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98fd77c9-dfd2-4dcc-a967-391b9a993585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b26c63f-c19b-4500-a3d5-f180738a9d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9982a42f-f633-4725-a47d-3967bb8d1c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbcc027-d2d9-4ff8-bbd7-4d47fe9759a8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7806e507-e8ee-4bbc-9b93-ffc2fbd85a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9140a263-0fd1-4ab1-853e-3e48a5ba1dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ceaff6-7bfe-49e8-98ab-437d20f8fc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383859c3-b6b8-4d38-b22c-e8d0a66c9f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd9ef69-993c-428c-8d7e-3f967e292e24",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c0f4cc-53d2-4b58-9194-707f3a5a4a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf12941-3ebf-48ee-8820-32c4b6c70f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add02318-f09e-41f1-af97-0a08587aa194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8cef42-7389-4382-b5e5-0a908ecd239c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698e631c-2497-4453-8655-2bd5899217e4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14cebcc-7967-49a7-80cd-1d46124c90bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa0124c-79b1-4d77-9b14-1302b07bb32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2af6869-c1b7-4bce-94a8-dc73af04d13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c17bdcf-880e-43c6-9ba9-163aff86e669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d33fbbb-8037-403c-91b0-86e34d47556d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e9949e-7def-4e19-be6e-f071eedcdbe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd68314d-5240-41ec-a754-30bbaef44695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e618e10b-7184-49a2-9ab9-3c815807207d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30abf9b2-943c-4ef7-b22a-bf7dd4f6b284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a6813a-c629-493e-8b0a-d95189a39207",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490e4309-61fd-4150-ae2c-d05130ef353c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac56e5d-eee3-4fea-940c-97e4a09c6ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386a1743-4c4b-4b9b-827f-c12ba26bf670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd80311-f55f-49bd-a1f1-eb58b53d68d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd38435f-7a16-4569-89d6-b7a3c09028ee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a9458b-ffd4-4223-a73a-cfa8cb88ea67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72657e73-efeb-4a26-bd16-b1f7f3317b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b98eca-af55-4430-8274-e1223333a028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e353bef6-8b48-43be-a561-ffd255c2b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d3294a-ea19-44be-ae58-5882e5670e6a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9686f800-3e21-47f0-8915-b23b95a2b323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651322f2-5314-4e06-9f8a-be710765fd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1f3db7-fc01-49bb-ac86-c4d1b021dfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bb4ce4-bc5b-4552-b8b6-cbb56ca1fbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae39640-cdb6-4c7b-bf3e-05eee6f45834",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92771db4-cfec-4629-8317-1c1bb5ae5f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362b9b03-bad7-4950-b615-8577c96b8e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ce2460-9c4b-4035-8199-f13b8ddd62e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3272737-afd0-46ae-b814-2288dda27b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4499ec41-a452-4604-b531-b436f4518595",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f466347-3831-4bf1-a0b4-38b97b349d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a062e79b-079c-4e12-859e-f15848cf6243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4af0e04-d3bd-4b30-a079-b1d6ee2dd4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c265a3-f650-400b-a3a6-ab32882a2fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb3ba7c-e00e-492d-beea-360a21264bd3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ee9b77-96b4-432d-a911-877689c5ad40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e21706-36bc-4cb1-9723-e8e80344cf84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e38940a-d66e-4edb-8b12-5bf1671c8e14",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f30e2c9-9926-4282-aadf-0ea5d6dc32b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe9e9a1-bccc-4c4d-a4b0-41e025e076c6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9c937a-360e-4fc5-9d5a-786cc773df54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449d3751-668e-4839-b231-c27c9f215228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b756ac-b60b-44c3-b42c-4386437bbaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96711e7-e11f-4e07-adce-df9d9b27f590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649caa15-ef4d-4483-87a5-1bf5244040c3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4436bc-b0ec-44e2-84f9-8dfec74ed067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb73e890-db73-4a67-848b-2df84b553168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e882ac5-1de2-4f9f-bd23-1d9b277bc629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fd6b33-aa47-4832-9c5b-7c555ecff54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117d0a3c-4ff5-44ea-bfca-88a4b9eaff02",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d948e42-3500-4ab1-a640-d971f9b588a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0084a57a-b1ff-4776-b1a0-cef14774fbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee5b7b9-b4f5-4abc-a7e5-8cecc982ed97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8232c2-7fb1-4263-8d04-fad8978fc86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb2b712-f00a-40ae-82b2-a2a92f091f1c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265ef532-9dda-4f16-bcea-20cfe0c3c434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a87e97c-ae3c-4a35-ad32-3cd3220485ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8b9eff-869b-4170-ab62-98edb8e96c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c010ea-4d58-4054-bf23-5c266481f732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848b621f-815a-4190-9932-8dd8f66be6b0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7aa20a-539a-4424-9c3f-df3d2ec29f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66449e7-fefd-49a2-baaf-a72f84fe6d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df289eb-028e-4217-b4cd-62ad9f4d0eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513685ae-87ca-4be6-808d-43f32fff6417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9cb82e-3cb9-4953-bfe2-9a762798fd8b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdf9a26-07f7-4dca-8c11-65d3797fd418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe00cda-bd8d-416e-b4cb-e6a1f826f4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5661c9a8-d120-4c21-89c9-5a6438dc78f9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cc2919-9f9b-47c4-acc8-593c5f328af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d80e57-62bd-4515-b1f3-abf3a02a1f8f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71745f92-7fa8-4ce3-b432-896ac2439a86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da1ee30-8b25-4b40-8195-37a9c5a967d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc48864d-cbd7-41ef-b339-0f0e53bf1fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63e7c9f-1b98-46e6-bd5d-28a3abd0e451"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68d61b2b-2609-4486-8e17-b77fd5d1d2e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cc84d46-5bc9-49d8-8268-5b70c71305f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbe2557f-9bc6-42b2-80eb-0e97c57a23c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffe2197e-7549-4c22-aba0-634c65180d0e"
                    }
                  }
                ]
              },
              {
                "id": "e5af377c-9eda-4a07-94c1-eec4346b919f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f6d02b4-2464-4461-999a-b6ecbe29fd8e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47e2d9f-3c72-4a7f-81a6-bba62e044b4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cb5fdcf6-5968-4526-adc4-da23ba2ca28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee45d19b-ad04-42be-b1ad-d895ffcdc2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce03339c-1bc4-4a9f-8184-79ec19993de1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2898ba5a-c585-4033-bafb-e50863c76cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c450ed5-3adf-458c-b09c-3d8611de0272"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf40492e-8916-40d6-aeac-71b9278c4c96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e5f8978-13cb-4a38-96dd-5179931cabec"
                    }
                  }
                ]
              },
              {
                "id": "47ee81ca-92ec-4db3-aa51-c1b46a6991c8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9d4ba5a5-57a4-4dc0-8421-7022a74bc378",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6534334-f424-4497-a4c6-a0b74f46f96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2cb9813e-d780-4103-8ee6-562ea81fc040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc42933c-83e6-4502-9729-592077e2ec0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fc8301-1425-4fba-9ee0-b78a1b40cff9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "30d49524-ad35-4a99-bf11-6501fd1c7f49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "640efbff-3c07-4cd4-badb-3768e987c6d5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64c650a1-6fcd-4f27-ae5f-0f63b010cf39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "33544150-97e9-4a3a-88dd-21a7c91b4614"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad4d0b39-7182-42fe-a993-cfbce8dd6b0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a5f4c00-6f5a-41f9-9d20-be94b3835142"
                    }
                  }
                ]
              },
              {
                "id": "6f526aed-199a-4de7-bcb5-0e00d42d06ae",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eae01cc-4dff-42ba-9e99-92fe65a64488",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a32c5812-2575-40e4-82fd-0982d7a9cacd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85e75ec4-1a4b-4bca-99b0-d9d63f6d6535",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28ccbddf-e745-4150-95da-8c2c32df56c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0acaac48-d50e-435a-a858-54ca0f6f0dd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "59b8e1ec-38b9-4fc5-bc93-34244445a5fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5c6d8ec-017b-49fe-a931-d55151a8fdc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3587e26f-01c2-4faf-99bb-9dc0d0600aa5"
            }
          }
        ]
      },
      {
        "id": "30fa8013-50a5-407e-8727-c4bdf443280e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "24736f96-79ca-42ba-bcb5-a64b0701cbc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e24d6739-005d-42da-a26f-2b4d44e7b983",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "016f25fb-43ee-4f32-926a-fb6ba532a984",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de0c489-f34f-4946-859c-0aaf0b48d562",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "89d5b291-84b6-42a1-97f0-0b0a41b31d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f757c6f-aae6-4f7f-a90c-cbf41dda43c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aa48e4d-ce74-4183-892c-19f7b7e8c507"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3dc5e75-1942-4278-82c9-67d8641e7717",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4fce735-ec2b-457c-9a07-2094a90561b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d898fdc-6349-44bd-983e-78468d4fd95b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1259c0e-e4e8-4170-a6c5-e6ad18a64737"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d65e6fd9-01db-4e0f-a014-71ff7ec7d657",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bb873bbb-f783-46a8-a77f-9bcd5ca62959"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e2f0259-b133-4198-ab1d-fd30801cec0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e76478a5-4bde-4f30-aa64-83c11d5b4d56"
            }
          }
        ]
      },
      {
        "id": "241ee19c-f7ed-4608-9dd5-46e1f04d130a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "36b5bc8e-7167-4263-be86-4d7e4fbaa982",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb392bde-35db-4e41-a93f-11ca2842bd39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b6654b6-141a-4c20-9b33-39820d298035",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a018de7c-52d1-4891-bd92-31c3cf1baeaf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeceb346-14c1-475e-81f1-059b77eacadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a3ed83-a83e-4ffc-b84d-40ced2463027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96128dba-078a-4287-8f79-958ca823a775"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f3f276a-4064-4414-8ebe-5f5edffaafe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39164be3-c916-4200-bd0e-9fccc14f191a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e1b1ad7-3acb-45b1-a365-09e0454da72c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c89d5656-dc3a-4c3d-98a4-720a03d1c3d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe99c195-70d7-4a5b-a7eb-fca92c86fc8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2348b280-df98-485e-beca-77ff63381820"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee6ff963-f47d-41c9-b8c7-16f0b7a22135",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "039487be-c032-4ad0-b30f-c93496c94166"
            }
          }
        ]
      },
      {
        "id": "f8ba208b-ae8b-4d7e-98fc-733e144a71dc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7e2f4cc7-ba5d-4e00-aeeb-db7cd11eba08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8510b97f-c2ca-448c-b112-a5822fb80965",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64fc55af-4ffb-47ce-b5e7-77bed05e5a40",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cdde98-51a0-4cb7-a66f-36ec904ab5d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6450a8e5-541e-4d32-9ab9-94b2e606b78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5563e888-549e-44cf-a043-ff50e962ca21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f198b91-622a-4a86-9468-087e0a9cc46a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72efc91a-34ec-46c6-bbac-43058b01f87e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77ea53d4-b770-4d2b-ac47-8743731a2758"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3b4bb45-6b09-4c33-a215-ca10266ed5f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c03a0f2-4c31-4c64-b259-c6d053151a23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "243c023d-af31-4470-9a81-b7217cf12137",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cdc70234-6125-444f-bef5-69038d571666"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac486818-ec38-4e6a-aea0-f21ca38f00ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "839297a4-c410-47ad-9547-66dfddbca863"
            }
          }
        ]
      },
      {
        "id": "50614192-cc07-4c0a-a3f2-4697b612c87f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e66be74c-fda5-4e37-b8c0-868674ca36a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5aca667-50c0-4026-92fd-ac033c9dfedc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5d919c67-2b0e-476d-9734-dcc8e10effd4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dc0e974-f6ad-4d6b-8048-950159709ad0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "717c341c-a932-45f7-a59c-70f1751f8f4f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.80350877192983,
      "responseMin": 6,
      "responseMax": 8216,
      "responseSd": 546.3110193033364,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711672460377,
      "completed": 1711672503962
    },
    "executions": [
      {
        "id": "866ca7a0-3b98-4bda-80f8-447426aef512",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "79cd960e-561d-40ee-a9ce-4c947a52b007",
          "httpRequestId": "bb16b930-ae08-43c4-a83e-4531676b5cbd"
        },
        "item": {
          "id": "866ca7a0-3b98-4bda-80f8-447426aef512",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6e8dc789-5a46-430b-bccd-7fa045c400ef",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "0435a59e-9106-437b-9133-d97814eefc4c",
        "cursor": {
          "ref": "8344c9e1-aeac-40e8-94b0-f8b41e8a7b41",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b112a775-ad32-43c2-9834-41557f1cbf0b"
        },
        "item": {
          "id": "0435a59e-9106-437b-9133-d97814eefc4c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "18633a57-4c3c-49ff-98b5-c90f92ec9de9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "97985f85-4796-4b43-8820-e09f6f65c62a",
        "cursor": {
          "ref": "ba81ef11-75e7-45e2-92c2-f929ec8823d3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1c12842b-1546-425b-a0ff-76d7e94218e3"
        },
        "item": {
          "id": "97985f85-4796-4b43-8820-e09f6f65c62a",
          "name": "did_json"
        },
        "response": {
          "id": "5e8369b7-184f-4ecc-9b5c-dbe7e26708cd",
          "status": "OK",
          "code": 200,
          "responseTime": 265,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1baef0d-b4b9-4f65-b003-0ab6d084c559",
        "cursor": {
          "ref": "ff0c8146-1c06-4af2-8052-c8e2b5ee1b3c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d83da439-6262-4fc2-b71e-48d98c0cdc5c"
        },
        "item": {
          "id": "a1baef0d-b4b9-4f65-b003-0ab6d084c559",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ba0352b-1477-4d78-9266-44898675a51c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 509,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1baef0d-b4b9-4f65-b003-0ab6d084c559",
        "cursor": {
          "ref": "ff0c8146-1c06-4af2-8052-c8e2b5ee1b3c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d83da439-6262-4fc2-b71e-48d98c0cdc5c"
        },
        "item": {
          "id": "a1baef0d-b4b9-4f65-b003-0ab6d084c559",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ba0352b-1477-4d78-9266-44898675a51c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 509,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ecef19-c3ed-4cdf-93c2-0b22be019ea3",
        "cursor": {
          "ref": "fa15f588-8fe6-475d-b560-9ba922e65861",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a14b2993-7ac7-4964-8d68-7074c8d5a14c"
        },
        "item": {
          "id": "e3ecef19-c3ed-4cdf-93c2-0b22be019ea3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d41f20ec-7308-4677-b617-5ebe5b047188",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a029d2ec-ee13-4206-a3ac-5e65efe1a19d",
        "cursor": {
          "ref": "27fface9-6591-48b5-a78a-40af487638bd",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9eeed38-db59-4b37-93ae-2d2ee4cd13a8"
        },
        "item": {
          "id": "a029d2ec-ee13-4206-a3ac-5e65efe1a19d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e9b18a27-a60c-42b2-9403-1f6da9c77b4f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffce3dac-453f-419c-9d93-95facf78ae37",
        "cursor": {
          "ref": "3c308b07-1b73-4639-82ba-26e5830d8de7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f4160f1b-6e75-4410-b0b6-8b6ee8893009"
        },
        "item": {
          "id": "ffce3dac-453f-419c-9d93-95facf78ae37",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "608e65bf-b717-4f14-b63e-52ca7d7f1a41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb048000-290d-4a03-9f7d-4a4260631b5f",
        "cursor": {
          "ref": "0f90f59d-a972-41f5-bb0d-3e9a8044328f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fa2fd806-f99f-4f44-bf86-33864044c130"
        },
        "item": {
          "id": "cb048000-290d-4a03-9f7d-4a4260631b5f",
          "name": "identifiers"
        },
        "response": {
          "id": "0e64ef27-a6f8-4cba-a2c6-4f13e58f75a0",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694acfb8-0a28-4378-9111-f0fe2a9294b0",
        "cursor": {
          "ref": "7feb12c8-0a3c-41ef-9dce-9c849e17de20",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8ee0c21f-c1c0-4d70-b1b3-6d9445b6e965"
        },
        "item": {
          "id": "694acfb8-0a28-4378-9111-f0fe2a9294b0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "73c8a291-e9c3-49dc-873e-b660fb5e70f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bab339f-1590-415a-aa5c-ae9f71a547c7",
        "cursor": {
          "ref": "f283ab5f-b1d6-49a1-b1bd-4ec82f72f685",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6464acd4-3b9a-4255-ad41-f6114a9dbba2"
        },
        "item": {
          "id": "9bab339f-1590-415a-aa5c-ae9f71a547c7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f3948aff-18c3-46d4-8689-f145611f6d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56187045-5e6c-4e24-9c40-25c4ef9533cd",
        "cursor": {
          "ref": "2a1e4b64-74bd-436b-b346-10d312244519",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ec9c5649-602e-4cbe-8fc4-6944c68de3cd"
        },
        "item": {
          "id": "56187045-5e6c-4e24-9c40-25c4ef9533cd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b73cc3b1-3596-4f85-923e-228b49cff76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de55b09-dea3-4830-8cb0-e874cf6a4df2",
        "cursor": {
          "ref": "22dcefad-fe92-436e-853b-9f963e7e9aaa",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b8d152e7-d5af-4677-abb0-e69e5f6e71d6"
        },
        "item": {
          "id": "3de55b09-dea3-4830-8cb0-e874cf6a4df2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e06f55ef-02c4-4723-b852-f2a3bfe15923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab96534-adf4-4d84-8f16-d803e1d7e7fd",
        "cursor": {
          "ref": "f91d5d15-d230-4162-8941-aaad8b1afd46",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "456b2c0a-913a-43b7-a380-21438c751e7d"
        },
        "item": {
          "id": "0ab96534-adf4-4d84-8f16-d803e1d7e7fd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4528de3d-1387-4690-8000-0fd849f99068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46eaba14-621a-4009-9b3c-e3e17a9b45c5",
        "cursor": {
          "ref": "ad399f68-dade-4123-8e4c-1d5e0bf27e13",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "63447f3a-1584-4ec8-8506-d807d15286c8"
        },
        "item": {
          "id": "46eaba14-621a-4009-9b3c-e3e17a9b45c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4ec1f4e5-86d6-40b0-86b9-f54d6e3b8106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e393df72-2f24-4544-9962-a29245383d79",
        "cursor": {
          "ref": "d6c2b8e7-0b24-4a8e-bcb5-c006bc3f8637",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f94b3cc4-6ae6-4ddc-bd75-48d1f7a08754"
        },
        "item": {
          "id": "e393df72-2f24-4544-9962-a29245383d79",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ce5d2d9f-9c08-459e-9d76-21b2150dd8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b96270-ced7-4dd4-a127-6ef30dccf5e0",
        "cursor": {
          "ref": "a0950b01-4588-40e3-bd3c-966fdd98fa41",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "67f74f53-255a-44a9-812e-38b170493ce5"
        },
        "item": {
          "id": "29b96270-ced7-4dd4-a127-6ef30dccf5e0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a4813d4f-e043-48ed-94d3-f10ec3f41f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7cd4c7-d0e7-44c2-bb87-2ac9104e98a3",
        "cursor": {
          "ref": "fb628e65-15d8-47cb-a0bf-fc9202cec3bf",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "94693251-ed59-4f7c-a59f-1530e2ddbc8c"
        },
        "item": {
          "id": "cc7cd4c7-d0e7-44c2-bb87-2ac9104e98a3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "07efb608-d31f-4685-802e-690daf2d082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373cd290-0363-47e6-9002-1bbac83af0b1",
        "cursor": {
          "ref": "56a3e2d6-7674-450f-92ce-1e328e798733",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ab42656e-0a02-4e76-978d-ee8ee5f58506"
        },
        "item": {
          "id": "373cd290-0363-47e6-9002-1bbac83af0b1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "593ef54f-0de4-4457-a851-ab7053568186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c384bd-d7bb-47cb-a708-489d2896c9d9",
        "cursor": {
          "ref": "ee81a562-3256-4788-90b9-9dffe33b48e6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "de5c22f1-58bf-454c-a1f9-31ac728e2bde"
        },
        "item": {
          "id": "56c384bd-d7bb-47cb-a708-489d2896c9d9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "53c74392-c592-4cf8-9cec-8f7288b33c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f4ec46-b1a6-4566-89ff-05e3edcac62c",
        "cursor": {
          "ref": "d17cbd1e-15a2-413b-990b-4b50f643d7b9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0f8baf45-7983-4042-8f2e-a5202d290e83"
        },
        "item": {
          "id": "93f4ec46-b1a6-4566-89ff-05e3edcac62c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8ec9393e-0f37-4994-8f7e-8e64f21596ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4accc451-8347-4e23-9698-8f27e596de83",
        "cursor": {
          "ref": "15ad7e1a-abc6-4bb9-bd58-fad80129793c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b686732c-6f67-4996-9d7c-426fc095a8ee"
        },
        "item": {
          "id": "4accc451-8347-4e23-9698-8f27e596de83",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3055232c-58d8-4765-954e-4c1aa229dae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f35ffe8-288c-41a7-8dc8-ac69ee441f12",
        "cursor": {
          "ref": "0a1ee48b-83f1-435b-a517-b5777cfc751e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bb641e0f-3965-4bd6-9d1a-725201c93cf0"
        },
        "item": {
          "id": "4f35ffe8-288c-41a7-8dc8-ac69ee441f12",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "36336f0b-b91f-4ad7-a29e-a67e7810252e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4ecf4b-59c6-47a2-8463-39a0eaba07d8",
        "cursor": {
          "ref": "e2b9e1e8-dd20-4544-bb5f-b418037d0b44",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b175c747-62ec-48c2-a953-c50122e3d17d"
        },
        "item": {
          "id": "3b4ecf4b-59c6-47a2-8463-39a0eaba07d8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a95f3717-01af-4ad8-9560-30ec7bd746d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aacefe-34fe-4d53-b643-2cd0ef2f00ea",
        "cursor": {
          "ref": "62b25721-d1df-49fd-bde3-1d60d1afafac",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10f52f9a-6489-4111-9c8c-cd887433a953"
        },
        "item": {
          "id": "60aacefe-34fe-4d53-b643-2cd0ef2f00ea",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1a19646f-4ddf-4c1c-a046-1c5869a4b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1fe6f0-4363-4d28-b036-a5f2c8c29ec3",
        "cursor": {
          "ref": "3ac81dd3-90fc-4ad5-b918-db63425568c7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "20bbf0c7-d544-45f4-b72d-2d7bc762fff0"
        },
        "item": {
          "id": "0c1fe6f0-4363-4d28-b036-a5f2c8c29ec3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e882102b-98d4-427c-9b55-5259b81f5440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74319d21-f51c-44f8-92c9-c1aa98d58e0a",
        "cursor": {
          "ref": "34152e6b-8035-4a1f-b6b1-80c1e689ed63",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b7d4f1f2-0def-47e7-b279-ff771fd7e930"
        },
        "item": {
          "id": "74319d21-f51c-44f8-92c9-c1aa98d58e0a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e1f368a9-db44-47d8-9792-84394328d062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d4dfaf-5c82-4200-ac73-426005d76308",
        "cursor": {
          "ref": "5d4d7791-55ae-4ec9-b664-767df6f9fff7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bc019a58-2b9a-4708-bd45-c33b5e25a0e1"
        },
        "item": {
          "id": "49d4dfaf-5c82-4200-ac73-426005d76308",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c1b4b64e-fd71-45a1-b50d-90f3c9287cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c37981-5fbe-49f9-bd10-cb1591fefdf7",
        "cursor": {
          "ref": "8be44335-e276-4c33-ab38-26f1928911ee",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "34e9a681-8b2a-4f21-b8b6-4974efd0a7ee"
        },
        "item": {
          "id": "c7c37981-5fbe-49f9-bd10-cb1591fefdf7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c1c84c3b-bdfb-4b5b-b628-136a5d597dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42cd5b6-a300-45f7-9262-a3af3063dd4e",
        "cursor": {
          "ref": "9fcdb23d-70f1-4afc-8197-2b9b530afd1d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "caf3e007-acd2-4941-be52-9cae8cb3b018"
        },
        "item": {
          "id": "f42cd5b6-a300-45f7-9262-a3af3063dd4e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6cb657c1-4a95-42f0-bb02-ac0711554bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7202176-185e-48e4-b720-2eb8a1855fc6",
        "cursor": {
          "ref": "61799696-f9a5-423f-9059-f3d68d02fae2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e832fc17-e020-412b-8c2a-12a8aeea74cf"
        },
        "item": {
          "id": "d7202176-185e-48e4-b720-2eb8a1855fc6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "69da09d8-9a51-4d7a-b960-8c55c3b6db31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07f79c6-cfff-43cc-af86-11c56bcea3a4",
        "cursor": {
          "ref": "26cc1666-df4b-4d90-a4b3-b684e72b83ca",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1935e324-9287-4a9c-ab52-f02bf4880879"
        },
        "item": {
          "id": "b07f79c6-cfff-43cc-af86-11c56bcea3a4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c8b4aff4-44c8-4c72-bd21-d051c3bdd893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770cff94-9486-4787-9e9b-f633644c5cc3",
        "cursor": {
          "ref": "454b851f-87be-474e-8012-4771ba5fe4be",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0a278a50-93d9-4bb0-b820-8a69ce2c07fc"
        },
        "item": {
          "id": "770cff94-9486-4787-9e9b-f633644c5cc3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ce79a4aa-ae6f-4f8a-a6ef-f794eda3af3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a446fda2-836b-4bb7-ba47-a71f148084dc",
        "cursor": {
          "ref": "3c0f6bf0-586b-464f-8a0b-8a31815d1c04",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "347fbfb1-5a8f-47c5-81b3-3896621d1f47"
        },
        "item": {
          "id": "a446fda2-836b-4bb7-ba47-a71f148084dc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e610cbe9-267e-4631-ade4-fd3d930db5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eba4e73-8db3-4677-a130-1db002c9cb98",
        "cursor": {
          "ref": "5c54c8d1-6a25-49e4-87bd-eefe899041fd",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "12913853-fdf9-4c07-bd21-f09d9534c227"
        },
        "item": {
          "id": "6eba4e73-8db3-4677-a130-1db002c9cb98",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5ac34f61-ae88-454b-b269-ad3e475f0819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d887f1-5205-449b-bd6d-f2dc41c2bacf",
        "cursor": {
          "ref": "4c82a3e7-f401-44f6-bf08-5df481da3371",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d03b1e91-ca9b-4d30-a065-2957bd4f5115"
        },
        "item": {
          "id": "39d887f1-5205-449b-bd6d-f2dc41c2bacf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c6ac4801-38f8-4e5d-a4f4-a85d1fa7849b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb68ef3e-10cd-4a58-ae1b-06f6bc3e1983",
        "cursor": {
          "ref": "6e46fff3-81cc-4360-892f-e5e4d1c4247f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5a4c981e-212d-4684-8383-2b3dcba0c8b9"
        },
        "item": {
          "id": "bb68ef3e-10cd-4a58-ae1b-06f6bc3e1983",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b39247aa-7ab7-40b8-8b98-3bce0b4be31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383e289a-028b-497b-91be-de7e7a5374d5",
        "cursor": {
          "ref": "829dfca6-4874-4fe9-872c-60db93e256ee",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3a21d80e-3b88-4ccf-9fe2-fd257f034515"
        },
        "item": {
          "id": "383e289a-028b-497b-91be-de7e7a5374d5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8dd00449-720b-47b4-98ef-7fe52b77d7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8cc928-4064-4a41-aad6-a2152321d8e7",
        "cursor": {
          "ref": "287b5712-155e-444e-9009-ebea3709df5f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4020faad-ae4f-4a31-92ee-9a06e4d27bc0"
        },
        "item": {
          "id": "1e8cc928-4064-4a41-aad6-a2152321d8e7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2275455f-b668-4868-9cd2-f7494b654bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58fbb8c-60ee-4b13-9416-c827c0143f3e",
        "cursor": {
          "ref": "b28fda40-f21c-419f-ac65-c888b21ac5f6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c77be41a-840d-4f41-bb58-30649da0a9f7"
        },
        "item": {
          "id": "e58fbb8c-60ee-4b13-9416-c827c0143f3e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "23ea828e-7646-4778-a5d8-8f2d60c7aa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b0b0b7-aecc-4f35-ac99-d977a1f99ba3",
        "cursor": {
          "ref": "d94c3588-486f-4b83-9351-318f1f8ce0df",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f7568991-86b0-4506-b8d7-62392f363312"
        },
        "item": {
          "id": "07b0b0b7-aecc-4f35-ac99-d977a1f99ba3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6330a2cc-e8cf-4c2c-8799-9596bf3ddb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29188906-6683-4bfa-abaa-a0fff756eec2",
        "cursor": {
          "ref": "2e1a9479-7f74-4ab3-b949-c93b6debd3bd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eef4c0eb-0fe4-417f-888a-4f393ed35733"
        },
        "item": {
          "id": "29188906-6683-4bfa-abaa-a0fff756eec2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3393815b-c22f-4092-97be-d758357541aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384b9322-f725-4d70-bc60-c8422deed603",
        "cursor": {
          "ref": "168a3ed1-6807-4407-9c12-e99639a89e71",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0430ca6f-d13f-4c85-98a8-e553da47c254"
        },
        "item": {
          "id": "384b9322-f725-4d70-bc60-c8422deed603",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ed63e1c4-87bf-4b13-aa44-bd2340d6a9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996157a9-b88f-4efc-820e-c15f17aecca3",
        "cursor": {
          "ref": "98ad5924-1bae-480c-a73a-2ff5e77caf5f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b097791d-66b9-4617-903c-f946a1f8b967"
        },
        "item": {
          "id": "996157a9-b88f-4efc-820e-c15f17aecca3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a03d34de-7337-4813-bfb4-db708702d55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaaf8c9-8843-4e60-8cda-13b59f93916c",
        "cursor": {
          "ref": "f951bedf-c2ec-4730-809f-8bfe9b121614",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e3d41725-0dee-438b-8048-dcd824e90fb2"
        },
        "item": {
          "id": "daaaf8c9-8843-4e60-8cda-13b59f93916c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "877356fe-b783-461d-aa84-f15db6940c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c88d597-684b-4dfa-9e38-edd51103e5a6",
        "cursor": {
          "ref": "eb15a1c7-8796-4f88-b218-818e8ae26207",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a1885587-5a93-4092-9b37-b826898dc3d1"
        },
        "item": {
          "id": "2c88d597-684b-4dfa-9e38-edd51103e5a6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4f71386f-4dad-4bd7-a9c3-e1c408f0c56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccccfbb-e271-4bc2-a4f2-16e5eed79a8e",
        "cursor": {
          "ref": "8d255830-a1ab-43fc-90e6-a181579eb32f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6cb5b973-970f-468a-af99-4d34859a5b39"
        },
        "item": {
          "id": "bccccfbb-e271-4bc2-a4f2-16e5eed79a8e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "acdb768e-3b57-4507-aef4-7cfd40c05e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74c16be-af45-4eff-aa25-853dcc99a04d",
        "cursor": {
          "ref": "ad23d825-50df-4a7e-8599-15f57d758440",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "42e6cbc2-8f33-494d-8c98-76775266327c"
        },
        "item": {
          "id": "d74c16be-af45-4eff-aa25-853dcc99a04d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "32d7135a-a036-456f-9e39-0a2d5918234b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cf6c06-075e-4823-ac3a-fd431ec36e23",
        "cursor": {
          "ref": "1556e5aa-399c-4d4c-89ca-26a5e5007dce",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "420a1885-0efa-4c0c-97a9-262132c88b75"
        },
        "item": {
          "id": "b2cf6c06-075e-4823-ac3a-fd431ec36e23",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3f1da871-f312-4268-be4b-c4e52fe18d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f42016b-d9bc-4a19-8bf9-5d81e2312444",
        "cursor": {
          "ref": "e24db86f-685b-4a81-a63e-71797884323e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "56a39621-d2ab-4e57-a6b1-be4bacd382f6"
        },
        "item": {
          "id": "2f42016b-d9bc-4a19-8bf9-5d81e2312444",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fb0c39de-8df3-4488-bc0a-7d0947dd5f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3c6707-c0d1-4cd3-a872-7dda00500422",
        "cursor": {
          "ref": "d8348558-ad81-48fe-be7f-ca05fe03e3e2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "90fa3cb9-c727-4e82-b88a-4fe84aa0706e"
        },
        "item": {
          "id": "1c3c6707-c0d1-4cd3-a872-7dda00500422",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e3d331f9-7384-411e-ac02-6b60d652fe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ad24ad-a8a1-4fbf-8ba3-492d30637013",
        "cursor": {
          "ref": "8eab1689-3632-49e6-96fa-c00aaaf2ff65",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c75cc66c-a0bf-48be-8f08-6ddcbab789cf"
        },
        "item": {
          "id": "57ad24ad-a8a1-4fbf-8ba3-492d30637013",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4e553e57-66c3-4023-8114-a48a169c0b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0297e649-9d17-4181-9ead-8f12315d1bbb",
        "cursor": {
          "ref": "e7e0bec2-6330-4e5d-9778-b9d1d2e8a506",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a65ec289-c2ac-4b7c-b067-de699b31df4b"
        },
        "item": {
          "id": "0297e649-9d17-4181-9ead-8f12315d1bbb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2b28c899-e66b-4094-bdfd-f632a90c4bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8cbd97-343a-4ecc-b459-5db3cd785f07",
        "cursor": {
          "ref": "828d6dca-088f-4232-b33b-b5d5faab6f28",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cfa3a7fe-8125-4acd-addb-c68b08dcafef"
        },
        "item": {
          "id": "db8cbd97-343a-4ecc-b459-5db3cd785f07",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "542a7a1d-164f-430b-8d53-41db708b3f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787e847e-e74a-4389-888a-2146301c0283",
        "cursor": {
          "ref": "32c8f84c-309d-4cc7-a981-b328aeeac1c1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6a8dab03-9ac0-4822-9547-57a3481d719b"
        },
        "item": {
          "id": "787e847e-e74a-4389-888a-2146301c0283",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "51c0931d-37a0-46c0-8652-519f1f1f7f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f01ea0-8753-42e3-898e-c39737bd15db",
        "cursor": {
          "ref": "acc364ea-e108-4a61-8fc4-ed2cc5a0eb31",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "64ba9dee-a80b-4ac1-9762-f0290f67115b"
        },
        "item": {
          "id": "75f01ea0-8753-42e3-898e-c39737bd15db",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0ed09e4d-3e82-429a-8582-c654a13016e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2243a631-8f7c-4f9e-b58d-06e893d55e53",
        "cursor": {
          "ref": "67f1981b-2598-4f84-8f51-948f2c6baf52",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6221b702-e98a-4cb2-b9b1-4122e73d10bb"
        },
        "item": {
          "id": "2243a631-8f7c-4f9e-b58d-06e893d55e53",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "06f03cd7-b531-4081-9f97-75c82ab0a32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276aa3fe-54ad-4e12-9192-3dddf9f59575",
        "cursor": {
          "ref": "9d30b125-6423-4577-9eb8-2bf0dbd41122",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9297027d-8b99-46d0-8b6d-a6b78a231a84"
        },
        "item": {
          "id": "276aa3fe-54ad-4e12-9192-3dddf9f59575",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d3c963b6-d1ef-4b72-9088-411743914164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6453b51-bd50-413e-88f9-76fc875f2cd2",
        "cursor": {
          "ref": "cc4ffea3-5c9c-40e7-b7c4-a85933aaefe5",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f731841f-5e53-40c1-87a3-8ce7a054c1fb"
        },
        "item": {
          "id": "e6453b51-bd50-413e-88f9-76fc875f2cd2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "142e9c81-d064-4428-87dc-c70185c6c015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c5477d-41c9-4640-bb07-005c62f6c3ff",
        "cursor": {
          "ref": "9103f6ca-f238-446b-a714-8a0990d4473c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2d0a6f1b-454c-4cbc-9bd4-7c072f7f703f"
        },
        "item": {
          "id": "12c5477d-41c9-4640-bb07-005c62f6c3ff",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dc505e9e-88c9-49a8-ba75-2a1e833cceb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc95279-ed08-4f69-815c-69f1ae141e72",
        "cursor": {
          "ref": "2b0132b1-0312-4d9a-a959-980f684c41da",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "37bb3c10-0555-4d58-81d5-ccf98890632e"
        },
        "item": {
          "id": "cdc95279-ed08-4f69-815c-69f1ae141e72",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f1c9b4a2-cdff-45e8-83d1-96a8e4562d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e87e8a-e512-42fa-855d-64f7b7cfce8f",
        "cursor": {
          "ref": "dd3eebc9-b975-4293-81e7-d16523a9b83c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "20e7224d-0924-4444-a41c-296fceefd02e"
        },
        "item": {
          "id": "09e87e8a-e512-42fa-855d-64f7b7cfce8f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d7316c7b-a3c4-4e94-8990-75264929c33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b17e58-0519-41fe-bbce-3f0aed36af23",
        "cursor": {
          "ref": "25e49dc8-850b-4fee-b821-007174680949",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f07bda01-6e72-4512-b17b-dc671ba6fc03"
        },
        "item": {
          "id": "91b17e58-0519-41fe-bbce-3f0aed36af23",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a94fbc36-963a-4d84-854e-c968cb7ed43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f814bd76-b8dc-455b-8d8b-be282ef4a20f",
        "cursor": {
          "ref": "c249f0e5-c197-4d07-aa44-a76c2ae921f6",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b97c20cd-90f6-431b-8672-78648cd07810"
        },
        "item": {
          "id": "f814bd76-b8dc-455b-8d8b-be282ef4a20f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c7d53d54-335c-44c4-bfd7-2e47d76798d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd6fe4b-a184-4efc-831e-d989a16234cd",
        "cursor": {
          "ref": "3d24d400-539c-4ca3-b9b0-096f95085a25",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f408abea-2bf1-47ef-a92f-a55ce937be99"
        },
        "item": {
          "id": "9cd6fe4b-a184-4efc-831e-d989a16234cd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "575b9bad-b825-4391-9992-b0b5a6ea8963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7815d1-8582-4ff2-bcc4-ad84ce355e03",
        "cursor": {
          "ref": "2b26c535-cdf6-4867-a2d8-40f8c5ad7fc9",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e5f3c474-3445-48b1-9570-62dda7fbc1b3"
        },
        "item": {
          "id": "ed7815d1-8582-4ff2-bcc4-ad84ce355e03",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "95a41b02-2f42-4db3-b689-51c4b5ea0e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5134efce-a671-424e-9c0a-d9cdde6d18bd",
        "cursor": {
          "ref": "b47e7463-2dd1-4481-8722-1261c036ec01",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d96abe4e-2271-4545-b70d-8ac2d3a926f0"
        },
        "item": {
          "id": "5134efce-a671-424e-9c0a-d9cdde6d18bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ee3cbc4c-de6b-40f0-b405-aaeaf105d783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5389ce22-fe4d-4fc5-94e7-bc46a050999c",
        "cursor": {
          "ref": "37b072f9-20fa-43f9-a8f0-7c9a1e62740a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c011ed61-4d03-44eb-b2e9-0c8e5fae2e46"
        },
        "item": {
          "id": "5389ce22-fe4d-4fc5-94e7-bc46a050999c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b7da137d-90e3-46bd-86cd-dba98253be2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9280023-432d-401b-bd26-e6fe648fcdc3",
        "cursor": {
          "ref": "56373485-5d3f-4003-9a77-e2287955dc9f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9b7f98ef-f3f3-4787-860e-ae002cad6835"
        },
        "item": {
          "id": "c9280023-432d-401b-bd26-e6fe648fcdc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6b97e8ef-cbcc-4c1f-b63c-1aa0ec6b8f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9060de68-0637-47aa-8542-c8902fa715e0",
        "cursor": {
          "ref": "a4130b10-cfe1-4f87-b5a4-8eae0c0202c0",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fd4eb6dd-1a81-483c-8a45-41469c6f4638"
        },
        "item": {
          "id": "9060de68-0637-47aa-8542-c8902fa715e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6bb4da20-7ed0-4804-8708-0ad373f76164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02063691-d6f8-4437-9da8-d9fc814ef886",
        "cursor": {
          "ref": "7a3f107e-a38e-437b-8c25-6f1d96e2c232",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e1c804e0-fe8c-4a3a-8026-0dcbd0935255"
        },
        "item": {
          "id": "02063691-d6f8-4437-9da8-d9fc814ef886",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "96829797-7363-4e3e-a3e4-679e8282eb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f8eb03-ccb2-48ee-b429-9c45ab7a767e",
        "cursor": {
          "ref": "2bceeea9-7f97-48e7-b3a4-25f554340eb0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "06fd43df-08f7-4bcf-a268-27b8db6e98b7"
        },
        "item": {
          "id": "77f8eb03-ccb2-48ee-b429-9c45ab7a767e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "068cdfe1-114c-44dc-917f-bc5fe8a58032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05bec27-24e5-4f00-9be2-6b2a4fb630fd",
        "cursor": {
          "ref": "6ebce756-2c11-4cba-9b4b-040a492d80f4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "716a4270-11ed-4315-9688-fb551bc8f3a3"
        },
        "item": {
          "id": "a05bec27-24e5-4f00-9be2-6b2a4fb630fd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "acd8f918-7555-444a-a8b8-e9638720e0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee5c820-0371-482f-b61b-7a256f0f553f",
        "cursor": {
          "ref": "c2dee5f5-cc83-4897-9a09-20d801be27fb",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cd8a34e1-99c8-4128-ad69-c8f436bc0cde"
        },
        "item": {
          "id": "eee5c820-0371-482f-b61b-7a256f0f553f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b7f89f09-68e6-4869-833c-347eb5ccc7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c7f9c6-057b-4b68-8742-fc9ebd4ebc3c",
        "cursor": {
          "ref": "7d1ba267-5c57-4b10-842f-9bcbe0fd4290",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e7d49ba4-c1eb-4357-a6ee-80caf1a5b079"
        },
        "item": {
          "id": "28c7f9c6-057b-4b68-8742-fc9ebd4ebc3c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0015799c-da2b-4d6a-8299-8a5c4a7e7eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabb14fd-16dc-4f75-b2f6-e457a92b0718",
        "cursor": {
          "ref": "f1d03700-bbd8-4770-a97f-492e73ba5838",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b5cce607-4c16-423e-8902-507bf4b39c68"
        },
        "item": {
          "id": "eabb14fd-16dc-4f75-b2f6-e457a92b0718",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "865761e5-9ac3-4d94-8c52-7a0f4f8381bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91f93ee-eaec-4e44-9d94-0d2ae7441e3e",
        "cursor": {
          "ref": "7dac0531-0033-44b9-8672-0c3a54c197db",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a7c448b0-e48c-4e87-a179-21ad7a32432b"
        },
        "item": {
          "id": "d91f93ee-eaec-4e44-9d94-0d2ae7441e3e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2da583c-28fb-4a27-aa26-30af22028c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa486aa7-8d42-46c9-9607-9bf25ecbd6e6",
        "cursor": {
          "ref": "09123f75-3999-4a0c-b1a6-db448749d80c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f4a6bf0c-9204-42b2-85bb-3ebd3b710df3"
        },
        "item": {
          "id": "aa486aa7-8d42-46c9-9607-9bf25ecbd6e6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "eef13fc1-a657-40ef-8995-75a8c8f63b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1657e82-8a8f-4fba-9701-96ee62a7204e",
        "cursor": {
          "ref": "31a19917-eab7-4524-ad98-e163b3605a83",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c4de2d63-6fdb-4e88-9033-19423f5ad509"
        },
        "item": {
          "id": "a1657e82-8a8f-4fba-9701-96ee62a7204e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "93c35c89-0c92-4794-a505-776db2c69abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0384a35-72f7-4330-af51-fd930480ad6c",
        "cursor": {
          "ref": "97b75e81-a8c5-424e-904d-c9b622388cac",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0e5efa7e-ae6b-448f-9ec8-cd3f98d71137"
        },
        "item": {
          "id": "d0384a35-72f7-4330-af51-fd930480ad6c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "08cf7eaa-2a80-4ba3-85f9-ab70d0092446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa2cd15-8d6b-4cd4-85ce-853a5a084c68",
        "cursor": {
          "ref": "f61b95d8-e6f1-470f-8350-13d13581884c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8ab713a9-5809-4dd5-830b-7212dfd8f10e"
        },
        "item": {
          "id": "5aa2cd15-8d6b-4cd4-85ce-853a5a084c68",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9f40f0a0-7269-4bab-997f-d7903ad3d9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c65b3f2-79ca-4621-9600-8368f61d6776",
        "cursor": {
          "ref": "b19a42c3-c1e4-419c-a4ae-e7aa7092d520",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cdbcbc0d-02ed-4baa-95a3-ff447d023196"
        },
        "item": {
          "id": "0c65b3f2-79ca-4621-9600-8368f61d6776",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c377aa12-6beb-4d3a-b52f-793e44daa2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aae4862-e138-4c5c-b4aa-5e61dba1c5ce",
        "cursor": {
          "ref": "d15f0b9d-ed78-46f8-a21a-31f33e34f4f8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aa737ef2-e742-411b-89a7-6fe33cdb5bb3"
        },
        "item": {
          "id": "5aae4862-e138-4c5c-b4aa-5e61dba1c5ce",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "35d532e7-a9ef-4591-8325-7c2ee45526fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e24cce-119a-49b8-b8f3-15bc1f40bff4",
        "cursor": {
          "ref": "432116af-2f92-4a69-9fbe-e13c1c97b8a2",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ee030fd0-d18f-4c80-bfa9-7664fa8490ab"
        },
        "item": {
          "id": "12e24cce-119a-49b8-b8f3-15bc1f40bff4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5b94b986-9b16-4cf3-9cdb-75ee9c10abde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20db1c6c-a3c7-476a-a7c1-52d6ac30e0af",
        "cursor": {
          "ref": "0861f555-6f02-4071-aaec-26176778d82f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c3247bae-59d1-42b7-a6d9-cd87f057b62d"
        },
        "item": {
          "id": "20db1c6c-a3c7-476a-a7c1-52d6ac30e0af",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5f2231bb-5b6f-49d9-a18a-40d3f59e60a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32e120a-6881-4466-9434-c2fc94e0bf91",
        "cursor": {
          "ref": "63d57df3-fa78-4d57-9dc9-9ddea76e7af5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "82493b31-aade-404c-afe8-229a774a2d7d"
        },
        "item": {
          "id": "c32e120a-6881-4466-9434-c2fc94e0bf91",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9d9a077c-1b9a-44b6-8361-a0cf9d2fb177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f869035-620a-4538-80f8-765bc4cbecf5",
        "cursor": {
          "ref": "5233cdd7-9048-4fd9-850f-c1910bc20531",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "35eade84-c49a-4e38-af43-f068b8cf92b4"
        },
        "item": {
          "id": "8f869035-620a-4538-80f8-765bc4cbecf5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f7b7babc-baee-4799-a7f4-f5e3c78c0812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0982fd-0a6a-4e38-b591-0ae938ce38ac",
        "cursor": {
          "ref": "896c5482-b18f-41ec-9aa0-5a854029bc5b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e788ad30-1702-4109-9003-cbede154d8c2"
        },
        "item": {
          "id": "bf0982fd-0a6a-4e38-b591-0ae938ce38ac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6b17edbd-3f03-460a-b062-149fe48985df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f6b5be-7723-4930-98c4-0c3ed496c5ed",
        "cursor": {
          "ref": "d80aa17f-9cb1-4c23-88e2-225a89959090",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "971e99c6-11da-4407-9475-c65745c8c9c2"
        },
        "item": {
          "id": "09f6b5be-7723-4930-98c4-0c3ed496c5ed",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cb4c06e2-a0bb-4ca7-8096-b04ffeea14a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2222cf-f54a-4abb-8cb1-0208526e3fc7",
        "cursor": {
          "ref": "80448fa3-0d8a-463d-89d6-858227458770",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "147c8a9d-fe02-40f7-b723-2c21774adcf9"
        },
        "item": {
          "id": "4c2222cf-f54a-4abb-8cb1-0208526e3fc7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "36e10f0d-245e-441a-86fd-4bbe7eeb1f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5447f29e-5ead-475a-bae6-a66fe8cd03bc",
        "cursor": {
          "ref": "5712a178-3e65-42c6-bf1f-9a7c0f2c2027",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "06ad06e9-8e41-4608-a193-28a2209ba7e2"
        },
        "item": {
          "id": "5447f29e-5ead-475a-bae6-a66fe8cd03bc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "84848bac-0b1a-4408-93a3-dd0d49f4e02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23911a56-46bc-42a3-a0e3-8a0edddc81af",
        "cursor": {
          "ref": "587936b6-8073-4731-a609-2f6ddef7257d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1f3cb206-764a-46ee-8c09-aa0faab8d1a0"
        },
        "item": {
          "id": "23911a56-46bc-42a3-a0e3-8a0edddc81af",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b77ed8dc-372f-467b-bb52-1517b2445328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8e7940-b893-4afa-aac0-a5914bfd0b61",
        "cursor": {
          "ref": "b91d6ba9-c1ac-4274-9b70-7c3019dc6822",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f3d7a312-e183-4887-a59b-7053e20e4850"
        },
        "item": {
          "id": "7b8e7940-b893-4afa-aac0-a5914bfd0b61",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "08b37a99-c957-4f22-be29-82c52e878c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05b507b-c7a1-4c4c-82d0-5af2323f89e7",
        "cursor": {
          "ref": "6453b53e-3b6a-4083-88c7-7bc03c8c9cff",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8686c3e3-03e8-4d7c-b341-7692417bddee"
        },
        "item": {
          "id": "f05b507b-c7a1-4c4c-82d0-5af2323f89e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2c5edeca-ce83-491e-a910-a5178f862bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c32e26c-0a85-47bf-8e28-80dd7a8377c0",
        "cursor": {
          "ref": "18ff6b22-bcdf-4452-9c4c-8d7dd5bece8c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6ba76b89-d480-41fc-a3b1-e7d311bd37e7"
        },
        "item": {
          "id": "8c32e26c-0a85-47bf-8e28-80dd7a8377c0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "25b3dbf6-6bf5-4ca6-b9f8-f77e4f2fd084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3b895d-5fbd-4466-a4c7-ea5cf5b70034",
        "cursor": {
          "ref": "28d7f6ef-96ca-4f67-b2a7-cca36b878222",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "eaf84ec8-ad0d-4827-a42f-d6c17a82812f"
        },
        "item": {
          "id": "db3b895d-5fbd-4466-a4c7-ea5cf5b70034",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e62bdcad-8a07-4e16-97b5-47766c925603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e1336f-9c0f-485e-b8bc-7b5fa3e2b067",
        "cursor": {
          "ref": "dfeef381-8362-492c-9b7e-7e7f512a90e5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "72108ffd-70fa-4178-9e20-ffa872651d9e"
        },
        "item": {
          "id": "79e1336f-9c0f-485e-b8bc-7b5fa3e2b067",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2553738a-044a-42c8-8727-7d1bb0367755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b06dce-774f-4dd8-bb08-4540d1d9330d",
        "cursor": {
          "ref": "54e52dc2-0811-470c-b350-9843a86142e0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4de41160-4b34-4a0e-a4a4-395fcd76ab8c"
        },
        "item": {
          "id": "e0b06dce-774f-4dd8-bb08-4540d1d9330d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "335bd677-29cf-423b-8ef1-e6ea3ffcac69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdfe37f-f11c-47b3-8a42-edbe034cd597",
        "cursor": {
          "ref": "60993c59-f24c-4d71-be9c-6ef8bfc2d1dc",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "41a3dc3d-9060-4c90-a80b-d5863385c194"
        },
        "item": {
          "id": "5bdfe37f-f11c-47b3-8a42-edbe034cd597",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8843b3f4-c9eb-403c-9999-3ce6242023e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfb8af2-3288-4b83-a366-46189b6ef463",
        "cursor": {
          "ref": "eedb4279-d3e4-42da-8f2c-aee08046b3f8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6cae9cb3-a9fd-4e12-8f53-334ad07309f0"
        },
        "item": {
          "id": "bdfb8af2-3288-4b83-a366-46189b6ef463",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f7784dd3-01d9-4328-9762-cb52dd35828c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd98f33-24be-4c12-b20e-7e07bafd5055",
        "cursor": {
          "ref": "a2d1397d-7e04-4937-b667-65ec06eabd1c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b018b179-5706-4418-aec7-315dd3ce895f"
        },
        "item": {
          "id": "9fd98f33-24be-4c12-b20e-7e07bafd5055",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fae74b4f-fb90-4141-8f1e-b6f5b89a7694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9994a8a4-0472-4add-b23b-a812ee3c2fab",
        "cursor": {
          "ref": "e35ae3f5-748c-4fac-be2d-65a8f05b3194",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2011b087-a748-469a-bb49-78390bc15558"
        },
        "item": {
          "id": "9994a8a4-0472-4add-b23b-a812ee3c2fab",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bda4d882-47cd-4cc8-bafa-4ea6a575101a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d522760f-0447-457c-acea-693d8ad54e9f",
        "cursor": {
          "ref": "83e67686-5340-492e-8864-5106df6d3a67",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e335f45b-6ea1-400e-b9da-f9fe754691cc"
        },
        "item": {
          "id": "d522760f-0447-457c-acea-693d8ad54e9f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "38a0bec8-6ddb-4576-9651-afe6c054f2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c11c4fc6-6513-4f61-ad47-70e15807007a",
        "cursor": {
          "ref": "776a8557-9890-45d3-8f9e-cb6424cfb950",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6e0917ad-3a5e-4401-9a91-f0e959dc7d46"
        },
        "item": {
          "id": "c11c4fc6-6513-4f61-ad47-70e15807007a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "53f748c3-ce0b-48b5-b2b5-a516a6a33270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ed432c14-c6da-49b2-9f5a-3320fcb38092",
        "cursor": {
          "ref": "1fdb0815-473d-4c15-ad79-4ea3ab37ea94",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bc7b14db-214c-4ded-ac72-386c2120c3e5"
        },
        "item": {
          "id": "ed432c14-c6da-49b2-9f5a-3320fcb38092",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "20de4ac2-02d5-4523-a1fa-e6824d1edc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9ca7ef56-5176-431f-ad47-f575e6925117",
        "cursor": {
          "ref": "654f8db8-fda2-4768-a273-79f7ea6cee2f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "90a8eeac-3f5e-4e61-b160-d31f9165a5d2"
        },
        "item": {
          "id": "9ca7ef56-5176-431f-ad47-f575e6925117",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "79a45858-b29b-4c5c-b45a-37c31a5ecc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "14e47ca9-ae2a-4c71-acbe-8c3e4ebaafd9",
        "cursor": {
          "ref": "d83b909b-890e-464c-a35d-e3083db7fcf7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "86a26426-e7c2-4d0f-8dec-74276b1e5b3c"
        },
        "item": {
          "id": "14e47ca9-ae2a-4c71-acbe-8c3e4ebaafd9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5bab2161-d06e-41f1-ae91-62b92fb5c5af",
          "status": "Created",
          "code": 201,
          "responseTime": 8216,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a594f3c-3efd-44a4-93e3-d99cbd8aca21",
        "cursor": {
          "ref": "c3206212-db47-4035-9ecb-44740b5f0d58",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bede3d3d-db8a-47fa-b760-bb29557e973f"
        },
        "item": {
          "id": "2a594f3c-3efd-44a4-93e3-d99cbd8aca21",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "df2ad713-517a-4965-a38d-8160426ac644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "572d04c7-e856-46b3-a331-dcf92538f8fc",
        "cursor": {
          "ref": "719bf6fe-261a-402c-b4ae-60600c1cdde0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b42964f6-d894-4efb-aadf-3bb0a5908398"
        },
        "item": {
          "id": "572d04c7-e856-46b3-a331-dcf92538f8fc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4418d5b5-ebd5-471e-bb76-312d7d024192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a384d4c1-0c72-4215-98a0-2a8af8aabf87",
        "cursor": {
          "ref": "fd5a32e3-91b4-4331-90b9-a7096ad823a2",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2d5c624e-a2e5-480a-ae10-ff7050582cbb"
        },
        "item": {
          "id": "a384d4c1-0c72-4215-98a0-2a8af8aabf87",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1137478a-3e42-497b-9cee-1eb50674f0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e571005-b36d-4c1f-a52c-3b01d8c87dd8",
        "cursor": {
          "ref": "6a5dbedb-dc57-4dc5-8fb6-29d359a6b465",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "424500ef-795f-46ef-9175-a17d7a3fd8c3"
        },
        "item": {
          "id": "0e571005-b36d-4c1f-a52c-3b01d8c87dd8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15920b1c-3308-42df-8d5f-84f59af49843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8f7d1c-8386-4b1b-a46b-57e52c795872",
        "cursor": {
          "ref": "b2df84ae-279c-49ab-b65d-4bdb8e21af18",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c0f802df-0782-40b9-9784-36659f788bbd"
        },
        "item": {
          "id": "3b8f7d1c-8386-4b1b-a46b-57e52c795872",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cdaefd15-33da-4b7f-bad1-f3701f44dd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3a0145-abd5-4fa7-9708-5a018d176765",
        "cursor": {
          "ref": "a2e1c627-698b-4f7a-815e-acecd4554db6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f7b3f878-32f8-4328-935f-96855143d90a"
        },
        "item": {
          "id": "bc3a0145-abd5-4fa7-9708-5a018d176765",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "24959981-25c5-45c0-ae59-bf6cd32182f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbc54f2-2798-46c3-927a-d274b7a966d2",
        "cursor": {
          "ref": "c00a0656-928b-48ab-8510-a10a51614ac8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "74b3bc64-f91b-47f0-ab32-e768226e00d1"
        },
        "item": {
          "id": "5fbc54f2-2798-46c3-927a-d274b7a966d2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fd69f2f8-ff18-4032-9579-9b6a4a15f877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e876ff9e-c250-4943-a8f6-a8a89d7d0b7e",
        "cursor": {
          "ref": "59da8c8d-0166-4904-9924-414eca83d571",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c4442def-b273-46ee-9b1f-13ca05dac4f5"
        },
        "item": {
          "id": "e876ff9e-c250-4943-a8f6-a8a89d7d0b7e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "070c1547-dd81-4316-b22e-af22a6d8c83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf2cc28-bfad-4de1-b4a7-111014fbe72a",
        "cursor": {
          "ref": "1b82241a-fa90-4ec8-809f-3ee989d13bce",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ae03a744-6401-4dd7-9862-167c04ef1bdf"
        },
        "item": {
          "id": "1cf2cc28-bfad-4de1-b4a7-111014fbe72a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6643e856-5807-483c-a959-e39d9805bfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade5522b-ade4-45f3-a743-2f19f2ce5939",
        "cursor": {
          "ref": "19d9281b-90b1-49cd-85cf-5428c3d67736",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a4e1e5ac-fc79-4730-8420-009f333ed740"
        },
        "item": {
          "id": "ade5522b-ade4-45f3-a743-2f19f2ce5939",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "64b503c3-b478-4998-8f19-bce807e01adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eaf98f-abe0-4f8a-a7a7-947b01ab9577",
        "cursor": {
          "ref": "dadd6771-5225-4cce-96e1-f5c76b2b2488",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7cc459a8-6d87-413c-9953-18891934907d"
        },
        "item": {
          "id": "49eaf98f-abe0-4f8a-a7a7-947b01ab9577",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d390150-b2c5-45a9-973b-09e0bc0abe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112a7473-33f3-4f65-8513-a060ac8ebc10",
        "cursor": {
          "ref": "033e8bec-a7f9-47e6-a57c-b92f9a98cdb2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e3dc40ad-6ef4-4eb9-8a99-de3580ebe1a6"
        },
        "item": {
          "id": "112a7473-33f3-4f65-8513-a060ac8ebc10",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c875e692-31e2-4f8f-8999-523620364746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be476a76-bbd0-4ac0-8b48-f7856a811fb4",
        "cursor": {
          "ref": "e19e7830-246d-415d-bc11-8455ded44d26",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3780ffe9-58ed-4d73-a4d0-fda0e360b83e"
        },
        "item": {
          "id": "be476a76-bbd0-4ac0-8b48-f7856a811fb4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a0d17b02-2b3b-4ec0-a1db-1e25384ba642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3b5846-d16a-4638-a736-abff34186974",
        "cursor": {
          "ref": "c558d1b5-12c9-4ab1-b766-47bcce69f8e1",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "57bd2cb2-5c20-4b36-8b07-2eee91c77032"
        },
        "item": {
          "id": "ac3b5846-d16a-4638-a736-abff34186974",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a7d0cdec-9af2-4fb4-80d9-95d078ab31c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e63e8f-9b41-471c-b045-37f040b6ab49",
        "cursor": {
          "ref": "1e9638b3-8cba-4f15-b64a-18fd4bd8c1b6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "77b307a9-c437-4593-9a73-17376972bbd9"
        },
        "item": {
          "id": "29e63e8f-9b41-471c-b045-37f040b6ab49",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "33e0e44b-4aa8-42e7-85f4-96e30e3d0715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc547d80-f847-49e3-8fef-5d4d2bbebaa6",
        "cursor": {
          "ref": "7b62a02f-f089-4fb8-8a25-dfd8fda1e229",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ea4ab3fa-11a0-478e-ac5c-37c6e2ec9e5f"
        },
        "item": {
          "id": "fc547d80-f847-49e3-8fef-5d4d2bbebaa6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ce0af936-b9a1-4e97-981a-2741cade9511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617c3004-24a0-42a2-ad21-81c04f1f715d",
        "cursor": {
          "ref": "ca9f09e0-26de-42ea-b1c2-c60e553e0a84",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5909c929-9a3c-4911-a811-e44aa837653f"
        },
        "item": {
          "id": "617c3004-24a0-42a2-ad21-81c04f1f715d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ab6cba9d-e506-4a01-9206-47ff1191147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c78b67-f9cf-4448-bee8-6c7ce00c557a",
        "cursor": {
          "ref": "b9f152fb-b6c5-44c7-baba-0c9e58d25018",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "13da74c2-f5ea-4ff4-80e5-ebbf26d00000"
        },
        "item": {
          "id": "80c78b67-f9cf-4448-bee8-6c7ce00c557a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f372d09-d78e-4ab3-91f7-9e288ac3a849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae36b2-62fd-44b2-9e74-c0b6dae2a8e2",
        "cursor": {
          "ref": "2a871a42-9416-4305-921f-f1c14c1beb7a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c8468c99-758a-4db8-ae78-38eac643a4ac"
        },
        "item": {
          "id": "20ae36b2-62fd-44b2-9e74-c0b6dae2a8e2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e2ed6fa9-2e2a-41c9-8f16-075b43816899",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7cc28734-67db-4fe3-a0b5-4ac1af143ef1",
        "cursor": {
          "ref": "912a57ae-c348-4d64-a1cf-0a2496ce7891",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3ee3b05c-b7d0-48b6-b205-3788588b3b0b"
        },
        "item": {
          "id": "7cc28734-67db-4fe3-a0b5-4ac1af143ef1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d0e0f2a2-a62f-4084-80a1-ed6ec93f3889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c19516-a37d-4290-8214-36da466778a5",
        "cursor": {
          "ref": "7f06df3b-ede9-4509-95bc-a3de27e07589",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "479e3536-3f27-4d43-8df3-9f8699aec548"
        },
        "item": {
          "id": "94c19516-a37d-4290-8214-36da466778a5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d0c52e24-0e7a-45ea-9956-d8b82e52cfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dfa95c-f921-46b0-bc0e-4ca7ff305cfc",
        "cursor": {
          "ref": "585ab669-a58f-4e9f-9df6-76a16cf08864",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9b277e01-f5bc-4e74-ae91-1be5e6e53481"
        },
        "item": {
          "id": "00dfa95c-f921-46b0-bc0e-4ca7ff305cfc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "415c7abb-f531-4e7c-a439-68e02dc97403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2200de29-20d6-4c70-9c98-c12fbeed83c1",
        "cursor": {
          "ref": "f8d1d6fd-8c41-4a67-ae07-504ec0a6da7e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "17c7017b-257b-4352-bc43-ae2fc03c0feb"
        },
        "item": {
          "id": "2200de29-20d6-4c70-9c98-c12fbeed83c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "90b7fbde-973b-4adf-8183-9b6cd12b10f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5561c20-b917-4c8a-9ca8-a595bd4acfeb",
        "cursor": {
          "ref": "573475d7-2d24-4c1c-afb1-9e197b854a35",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2152c115-1d63-47fa-b17f-59c041ead02c"
        },
        "item": {
          "id": "b5561c20-b917-4c8a-9ca8-a595bd4acfeb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "165d7b97-c459-4577-bc46-22e7a07ac333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2722d838-73c8-4969-a554-ed86d5050e70",
        "cursor": {
          "ref": "57b0ca83-7546-42eb-afbf-5a7e5802c321",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d9eb3aab-a89d-4986-aea5-1349dadea1d4"
        },
        "item": {
          "id": "2722d838-73c8-4969-a554-ed86d5050e70",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "99573d68-7997-4bd4-91a4-a631ef8cd556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93825428-7cf5-49db-937e-55f5854092a6",
        "cursor": {
          "ref": "a8f9d037-f517-482a-8464-5d29ea88ece8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "72788ec9-9c9a-48de-974d-d9ab97432273"
        },
        "item": {
          "id": "93825428-7cf5-49db-937e-55f5854092a6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ce35e566-132e-4557-8516-aa4dba552828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee16e86-cb39-4c30-9a40-9a815c144d92",
        "cursor": {
          "ref": "b2ccbcbc-ab47-43b6-b38c-574409ee9c57",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c76628b7-7802-49d3-b9f5-4ab3461caaf5"
        },
        "item": {
          "id": "6ee16e86-cb39-4c30-9a40-9a815c144d92",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "88d6256e-0de1-4cfa-9717-f5593d589172",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "101e60eb-e9a8-4230-9f1c-531ba793499a",
        "cursor": {
          "ref": "d696a57e-4522-4fb8-a108-c4e04ce5e7b8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b9774461-74c1-46bf-9b20-66c41b3f2ab6"
        },
        "item": {
          "id": "101e60eb-e9a8-4230-9f1c-531ba793499a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d63984cd-1087-492c-9374-5e919e8ede68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfada4ed-d378-444b-b66f-f0ab061dd020",
        "cursor": {
          "ref": "86b1a066-ae16-44e4-97cc-7ada2d6efb85",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "24afe67b-be56-42e4-934d-f857dd747b79"
        },
        "item": {
          "id": "cfada4ed-d378-444b-b66f-f0ab061dd020",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5e8dedfd-a385-4e84-a654-63b7171d10e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced1f5f4-48ad-4c14-9242-ce17529409a7",
        "cursor": {
          "ref": "8d848897-9fd2-49d6-b6e3-f222a332103a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cf32797b-3704-42ad-a46e-67c80316d832"
        },
        "item": {
          "id": "ced1f5f4-48ad-4c14-9242-ce17529409a7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "deebdc06-03dd-4d32-9569-589a4fb0d688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a693fbb-fe7a-409e-8597-f54e372df725",
        "cursor": {
          "ref": "6f0d33e7-5895-4404-ba98-cddbe8b86bc1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f1025e99-2f76-4ca3-bd4b-e60abbb43c53"
        },
        "item": {
          "id": "7a693fbb-fe7a-409e-8597-f54e372df725",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "831b3714-2c9a-4980-b4b8-4d36e1608bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ef6685-023d-4f88-833d-00fb7e8c2d84",
        "cursor": {
          "ref": "3136f948-1756-4ba2-8855-d49389cbf008",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "818c2eb4-05be-46ad-9df3-51ce5472edd9"
        },
        "item": {
          "id": "a1ef6685-023d-4f88-833d-00fb7e8c2d84",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b4b419d-7860-43fb-b964-052908ad0b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95ec841-2f2c-446e-81c0-c38ea098e4ea",
        "cursor": {
          "ref": "274376fa-347e-4bc0-bb28-051dc3a63ee8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4335119b-cef5-4e6a-b2d2-e68bcf9f0a95"
        },
        "item": {
          "id": "f95ec841-2f2c-446e-81c0-c38ea098e4ea",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "728792da-4c79-40cc-be61-9b21f596ec9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456c5be7-843e-4885-aaac-6ab615adbb45",
        "cursor": {
          "ref": "7ef28439-aae2-40af-9680-e1d47d9e52df",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "46c642b7-67e6-4e5c-9bdb-9b8fc148dcb7"
        },
        "item": {
          "id": "456c5be7-843e-4885-aaac-6ab615adbb45",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dfc289aa-82e5-4454-89ff-321ec2af31f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 128,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "de320e37-9271-43fb-99d7-6b022cb88e2f",
        "cursor": {
          "ref": "3a4791cf-1524-4b77-9788-2bf98e5b16c7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f8795a49-78a6-419d-8f3a-ed54f768a38e"
        },
        "item": {
          "id": "de320e37-9271-43fb-99d7-6b022cb88e2f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "183ac505-4c79-48b4-ab60-dc578817edd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a215e186-24a8-44c0-887d-991ebff2bcc4",
        "cursor": {
          "ref": "f7b5ed61-e96e-4531-87ec-4c820b6163d4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8157c467-de7a-440c-bccd-e01e452671e9"
        },
        "item": {
          "id": "a215e186-24a8-44c0-887d-991ebff2bcc4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "52057148-a4ce-4d5e-8ac0-836abe263e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889a6180-1e44-47e4-aefd-51c68cae85ad",
        "cursor": {
          "ref": "91dae1ec-0d0f-4094-8f15-dc8c3b8c978a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "024d5a73-a262-4f18-aafe-20aceefa2a9e"
        },
        "item": {
          "id": "889a6180-1e44-47e4-aefd-51c68cae85ad",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8ff83eb5-026f-4aa3-8fd7-4c6fb7a4242f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b21b52-7cfd-4fe0-a44d-1397a8667308",
        "cursor": {
          "ref": "f79fde0d-fc2f-41b7-bb0e-3ff6d48291ac",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3c8a0a83-c1d3-40bd-b45b-87e168d8f313"
        },
        "item": {
          "id": "e6b21b52-7cfd-4fe0-a44d-1397a8667308",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93427768-0b0c-4a00-a45d-bd85f7c09a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc1551f-5324-4557-a640-24fc7b113956",
        "cursor": {
          "ref": "370a1ef2-b855-481e-8faf-bf135b1b243d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "89e42c59-8fed-47d7-b6e5-e7e13aa09897"
        },
        "item": {
          "id": "cdc1551f-5324-4557-a640-24fc7b113956",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "af125593-9567-4590-a4ef-225dadaa4186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56fe58c-77d1-4687-bbd4-4958be1590df",
        "cursor": {
          "ref": "94b9b288-d74c-40a4-85f2-53e474e76b21",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f11a5a20-2b75-41d7-8697-23dff46c2e3f"
        },
        "item": {
          "id": "b56fe58c-77d1-4687-bbd4-4958be1590df",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f39c2c19-e968-4e94-a5de-dc61934fb39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85952ebb-18e9-48e6-8afe-116ac34a3b41",
        "cursor": {
          "ref": "b1b967e5-1ada-4d52-b186-9ef0363d9cbd",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b6c7e61d-5bd4-4533-8787-7f4b3e464b9b"
        },
        "item": {
          "id": "85952ebb-18e9-48e6-8afe-116ac34a3b41",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "33325771-45b4-4f94-8134-515b527a42af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e967698-9cd1-4334-be9a-98d51f02468e",
        "cursor": {
          "ref": "5791dcda-2988-4604-8b8a-bbe9731ba8b3",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eb25d917-1b69-4ee3-8ffe-590f4b029768"
        },
        "item": {
          "id": "8e967698-9cd1-4334-be9a-98d51f02468e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c56326af-e9f2-43e5-8253-6ecda0b457f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4732b181-9b22-4a09-bfff-d6c916f32fa0",
        "cursor": {
          "ref": "a3f14b78-cbb2-475e-8c2f-c441f7baf27c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "005cc790-2008-4766-a7ff-4439c5c3a089"
        },
        "item": {
          "id": "4732b181-9b22-4a09-bfff-d6c916f32fa0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "280f71b2-2dd9-4187-9a3b-cbbe26e0393f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe3b2df-3d29-4a47-8f00-2c40c897ff4e",
        "cursor": {
          "ref": "0d00869a-33e1-484c-8494-8c84be4163f5",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eda629ea-8306-440f-8dff-cf1553f44913"
        },
        "item": {
          "id": "7fe3b2df-3d29-4a47-8f00-2c40c897ff4e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "de6ee1e9-6f85-4209-b520-a02585be45e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be824f6-41cd-40ac-9d7e-3edaf7ef69d4",
        "cursor": {
          "ref": "153ebb3a-4215-4e2e-81e9-e15cf371c572",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8aecadb7-5fa4-4aed-9d9b-f55830e05e7f"
        },
        "item": {
          "id": "3be824f6-41cd-40ac-9d7e-3edaf7ef69d4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "311f9b23-bda2-4315-af2a-e470eba7dfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c4acc7-6ee0-4dc0-b05a-30e2d27c6c80",
        "cursor": {
          "ref": "0464b228-62c2-4e9f-922e-c2c10bfac49a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aee45b51-2c37-44a5-8853-8c560484f234"
        },
        "item": {
          "id": "54c4acc7-6ee0-4dc0-b05a-30e2d27c6c80",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f91a776e-e1aa-446d-aea9-1863583ee5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ed711c-b400-419d-bf30-b3ce63b16b0a",
        "cursor": {
          "ref": "734c2034-5d5f-4ade-aaaf-d6ced6fa4c0d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a816d8ea-28bd-4a35-931b-2f92a941fb87"
        },
        "item": {
          "id": "f5ed711c-b400-419d-bf30-b3ce63b16b0a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "05fddb53-774e-4520-aa1a-0bcd8140d30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f887a6a2-904b-47b9-bab7-908616efad94",
        "cursor": {
          "ref": "9116d992-eab0-4a97-83c1-c80fc06cc3f5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "de50c389-bce8-46bb-b1c6-b3d7826133b1"
        },
        "item": {
          "id": "f887a6a2-904b-47b9-bab7-908616efad94",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a2d3ccc0-85ad-4675-8c76-c08c991cf768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5eb44e-987b-45d1-b859-3e2b9015c96e",
        "cursor": {
          "ref": "d5820fd8-869b-464d-bf2e-05351a849e04",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7313d645-9a83-4b46-b9d6-d3cba155f1cb"
        },
        "item": {
          "id": "ea5eb44e-987b-45d1-b859-3e2b9015c96e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "83d0d60e-a8db-4840-9658-4c22f904aae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0eb656-924e-4203-be07-081010841c25",
        "cursor": {
          "ref": "0dc4888a-1ccd-4bbe-aa2b-6975e537d210",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "df2281e2-de8f-4267-a780-87567ce9905d"
        },
        "item": {
          "id": "fb0eb656-924e-4203-be07-081010841c25",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ddf512e7-faab-4aff-a8cd-0cf7e6c64b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0393364-27d8-4c05-b478-3c1918941e55",
        "cursor": {
          "ref": "51b1a5cc-f676-4949-a326-05d76c41c096",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e7704a8f-a7f4-450f-8af3-52c134ed79e4"
        },
        "item": {
          "id": "d0393364-27d8-4c05-b478-3c1918941e55",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2e06d0ab-bfeb-4cfe-8143-8e38a4915eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cadaff4-c3b7-4bb8-a9ed-5a1695e8bd9e",
        "cursor": {
          "ref": "3e048009-e073-4123-a03d-017911e4ec4b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3b8342af-b18f-46e5-bbec-f0f3b153e978"
        },
        "item": {
          "id": "0cadaff4-c3b7-4bb8-a9ed-5a1695e8bd9e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f0c47da-1a4b-40f8-9b12-c9f13eadff84",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "482b846e-6083-4dee-b00d-c9c87ba08a6d",
        "cursor": {
          "ref": "fb1d789c-7053-47c7-8f25-180a15ee1061",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "61d5359a-a334-4a9d-abf8-9c3f98cc29eb"
        },
        "item": {
          "id": "482b846e-6083-4dee-b00d-c9c87ba08a6d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "017f5e1b-f948-4868-b200-f86ad22d5650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603b74e1-f6cd-49d0-a426-47a392d39b9e",
        "cursor": {
          "ref": "abd466b7-0d0f-4b96-a998-af06551fd7d7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "23f683df-1d4a-4de2-8cbc-13e5b1656157"
        },
        "item": {
          "id": "603b74e1-f6cd-49d0-a426-47a392d39b9e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc52fd39-3833-474c-9ac4-3e72a42c7c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46075aa2-9c83-4848-86db-41e101117296",
        "cursor": {
          "ref": "2aa2812d-e003-4c86-97bc-88f81c1519a2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "885f7bb9-dd50-441d-9edf-de033287fed3"
        },
        "item": {
          "id": "46075aa2-9c83-4848-86db-41e101117296",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "be890590-0aeb-4504-91a7-5b59db09b8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4449137-ecf9-47f4-80d9-5baf111b0ca2",
        "cursor": {
          "ref": "b871b4f1-88d2-4cfb-9c95-1789d70033b8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "93e0a016-277b-4309-be0d-296c35c0991b"
        },
        "item": {
          "id": "a4449137-ecf9-47f4-80d9-5baf111b0ca2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a6f0d45-4640-4769-a30d-f7e19737f7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e758e1ef-602e-4049-a529-89fa6765ad01",
        "cursor": {
          "ref": "e0d6703f-ee69-45a6-bef5-aeb6de3b408c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a43421a6-aa58-460f-8000-f65f901e522b"
        },
        "item": {
          "id": "e758e1ef-602e-4049-a529-89fa6765ad01",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ddd6fc8b-6938-4509-91ec-a94535615988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b2c8c4-e8cc-4cc6-8be0-645f2c49768e",
        "cursor": {
          "ref": "109b6b52-d8f3-44db-a4b6-4bdd8bdff74d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8f0c7517-b80f-4574-b9aa-e37af00a2232"
        },
        "item": {
          "id": "34b2c8c4-e8cc-4cc6-8be0-645f2c49768e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dcf453e7-a749-45a1-b85c-204ad021e87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cd4278-c192-4212-9aab-19046aca1ec7",
        "cursor": {
          "ref": "de7160ee-ed32-4676-a11f-fa829fdc1281",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b747e375-e9b2-4a6b-84f6-411ad58f7883"
        },
        "item": {
          "id": "e3cd4278-c192-4212-9aab-19046aca1ec7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f9434bf2-bfea-4f26-8e78-fdc44140ea1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03042c9b-c36e-4cdd-97bf-92e0e44d099f",
        "cursor": {
          "ref": "aac75c8e-c5f2-44ae-880e-0b638579fc98",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "998b212d-4321-43b6-8608-70a47c54c2f5"
        },
        "item": {
          "id": "03042c9b-c36e-4cdd-97bf-92e0e44d099f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8169856f-b9a1-45ca-b25b-373eb574ee1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "dea69547-cd42-4b93-99fc-1c8c2f1528ba",
        "cursor": {
          "ref": "8e7e01b2-9820-4f5f-84f0-1a1fe048741a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "703d8803-11ee-4ef5-b1fa-6cea25a5a35a"
        },
        "item": {
          "id": "dea69547-cd42-4b93-99fc-1c8c2f1528ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "13d1c860-7ab9-4c59-bca9-0f535dd1ca32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f9155b-fc35-4463-bb00-d7548ff25bcf",
        "cursor": {
          "ref": "a119ec7a-eba5-467c-b46a-942d81016423",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "57ea6707-c7ac-43b6-83ec-552d7be5d4cc"
        },
        "item": {
          "id": "53f9155b-fc35-4463-bb00-d7548ff25bcf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "40820619-ab57-4fc8-ac12-61b794a8f236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d271660c-f5ee-4175-81a7-0d3fb9297b8e",
        "cursor": {
          "ref": "80268d6e-4de9-444a-8a3a-6c2cdebdc567",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cefdc5b1-c619-4efa-8a8f-4efa6d01b8bd"
        },
        "item": {
          "id": "d271660c-f5ee-4175-81a7-0d3fb9297b8e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "40ea9884-e15c-4587-b60b-75eb9dcfccdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494b34f4-55c8-420a-a034-cb94249a9b13",
        "cursor": {
          "ref": "a4c316e2-0f84-43ac-a7b9-07f65f992d77",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "90ffdf83-3d0c-4db0-bedc-729fb186ca31"
        },
        "item": {
          "id": "494b34f4-55c8-420a-a034-cb94249a9b13",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "20a0c511-5847-4568-ada4-b961dbcb7a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e650b2-60ac-49c8-97aa-9e62fc36d1d2",
        "cursor": {
          "ref": "c5de7443-d389-4cf2-8008-b541d02ad9e0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2ebf031a-961f-4875-88ff-274c75820209"
        },
        "item": {
          "id": "91e650b2-60ac-49c8-97aa-9e62fc36d1d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "388af14d-cfd7-421d-a7c5-d63201f14f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01ac784-bcfe-4416-a228-9e3ef3500f71",
        "cursor": {
          "ref": "44667af7-b1ae-40a6-991d-eb9bb3d7a242",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "481c10f9-0964-4540-93b5-19454b4721b6"
        },
        "item": {
          "id": "b01ac784-bcfe-4416-a228-9e3ef3500f71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f636f1b0-c240-412a-b68e-fd0e18ea3386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb80c1-2fe4-4c02-9479-ecacb62497d9",
        "cursor": {
          "ref": "7083b3b0-a8e6-4e8a-8ba8-251ba37ecbbe",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a1b7c412-09eb-422f-8bc2-d9f24ac8ffd4"
        },
        "item": {
          "id": "c1bb80c1-2fe4-4c02-9479-ecacb62497d9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "790e5fc7-cfb7-47c8-bd47-302a9060cf81",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "4533bd83-476b-4eb2-82ba-895512889ce8",
        "cursor": {
          "ref": "e655604b-3a2c-4643-9020-4ea7aaaea9d8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3dcb5a03-5b46-4069-8e29-381c4f23ae85"
        },
        "item": {
          "id": "4533bd83-476b-4eb2-82ba-895512889ce8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4af1ec34-273e-407a-9eb9-e7d0655d716d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "20b6d5a5-48da-4901-82f3-ef8f732fc190",
        "cursor": {
          "ref": "54c0f6aa-66b7-49b5-b3f5-0248368db905",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2e3fb006-70cf-4463-8045-937310913bf3"
        },
        "item": {
          "id": "20b6d5a5-48da-4901-82f3-ef8f732fc190",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0b0a52cf-b52e-4045-bd14-bc6592affcdf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "93f69171-879e-449f-9b4c-94cf87a3d4c8",
        "cursor": {
          "ref": "829f10e1-3b9f-485d-9ecd-25ac732963a6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4f7c9948-71a0-47c2-b905-2c161c8b3c97"
        },
        "item": {
          "id": "93f69171-879e-449f-9b4c-94cf87a3d4c8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "371ea73c-02fe-48fa-aeb7-5f3cee7d4d18",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "56e5a198-da1e-4716-b70d-68ce4c899feb",
        "cursor": {
          "ref": "96deb942-ce3b-4a64-aff9-75bce8d67824",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "928f1086-b664-4217-ab5e-470bfc46ea0e"
        },
        "item": {
          "id": "56e5a198-da1e-4716-b70d-68ce4c899feb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b5066fd5-d797-4d82-a224-15c74c369e3e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "4005f216-2093-4c40-bc01-f475926766b1",
        "cursor": {
          "ref": "975cd7da-258d-4f16-a5a2-975f12b57747",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "59f36b6b-76d5-481e-87b4-f55bdf81ce22"
        },
        "item": {
          "id": "4005f216-2093-4c40-bc01-f475926766b1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a0853361-e60b-4563-87ac-e94471c7e415",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "6f42d7bc-2363-4bf2-8f51-5b46ad7f4153",
        "cursor": {
          "ref": "ba1585f9-40f4-4331-83e7-a0d9aeee0534",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fbc5f37d-125a-4ab4-a003-3d379208b931"
        },
        "item": {
          "id": "6f42d7bc-2363-4bf2-8f51-5b46ad7f4153",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5c449b4d-cd61-4c64-801a-10b164f56c22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e35913-8009-4a9e-b640-17c86a1fc933",
        "cursor": {
          "ref": "1fc22f64-550b-4763-9229-bb3f59b5ed4a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b8d69535-4a9f-49a5-bfe8-30c0d26b979c"
        },
        "item": {
          "id": "60e35913-8009-4a9e-b640-17c86a1fc933",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "de0ecf53-7ac2-4755-8c9c-e4e17f09939d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40f98d5-2454-4d18-a365-5655783c59bd",
        "cursor": {
          "ref": "5ddd4c06-41bd-49ee-9ea5-a122ed1869bf",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4918e6e7-13f7-4599-a589-e341791acbee"
        },
        "item": {
          "id": "f40f98d5-2454-4d18-a365-5655783c59bd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b59ae00a-9d4e-4f94-a97c-2c0491693afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffd995b-232e-4691-a659-6f7ef9c6931b",
        "cursor": {
          "ref": "fbbeaa4b-8803-48e2-a0be-ca7aeba1115f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7dda315d-2c87-4b39-a5ea-c4e5434146d3"
        },
        "item": {
          "id": "4ffd995b-232e-4691-a659-6f7ef9c6931b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3663e66d-7823-4ce9-a4fe-12a34236a31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855b454a-a008-4bc1-8261-b7939799d2c1",
        "cursor": {
          "ref": "990048f1-74ef-4055-98d4-6bad2673a31e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e47e864f-c995-4dab-a6f8-0132f8bde1c3"
        },
        "item": {
          "id": "855b454a-a008-4bc1-8261-b7939799d2c1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c63781ae-b5a4-49c2-bf31-4e6ae478fa16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6026050-5f7b-4da4-bd01-f0f8902824e0",
        "cursor": {
          "ref": "5f1c3089-264d-4e97-83d9-1d5e08d78a87",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "52f505c5-f68e-4bd0-ba20-b8825a6d5d16"
        },
        "item": {
          "id": "e6026050-5f7b-4da4-bd01-f0f8902824e0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8b197683-5218-484e-bae6-8362da6948df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a636f6-0b41-4614-acc9-a064d1c86710",
        "cursor": {
          "ref": "2f890fb6-d283-4570-ae3b-dbebd0a89723",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "20028e4e-7c5a-41e6-b971-6767704b7199"
        },
        "item": {
          "id": "b5a636f6-0b41-4614-acc9-a064d1c86710",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "28f93fdd-4e7d-4242-892d-f12be28610bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127a2e86-e5b9-4704-9dad-8120e075b444",
        "cursor": {
          "ref": "809023e0-c064-46e0-9fa7-53577ee0becd",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1a2a3465-c11b-46fd-917c-411782daa3e3"
        },
        "item": {
          "id": "127a2e86-e5b9-4704-9dad-8120e075b444",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "421f45a8-15f0-44f6-8a12-8247a6e0def7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3972bf4f-8fe2-484e-ab27-ddc6d46ae015",
        "cursor": {
          "ref": "5af7ae96-503a-497e-ad23-cc82406103c0",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9751e10f-0f84-46e5-b3b0-24735aa6e925"
        },
        "item": {
          "id": "3972bf4f-8fe2-484e-ab27-ddc6d46ae015",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ad95bfc0-33f2-4e5c-9ae7-5944c518ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb2a212-e21b-43b8-ba79-3f7479808904",
        "cursor": {
          "ref": "880c8ceb-1185-40f4-a7a0-6da258e074bf",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7abda5ab-d56f-4825-b44d-11538e0c9ffb"
        },
        "item": {
          "id": "8cb2a212-e21b-43b8-ba79-3f7479808904",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c5711527-5e5f-4f97-8a47-f75741e6013e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac34bb3-35e2-447c-a94c-f0ac5d209bac",
        "cursor": {
          "ref": "9cc6cc9e-2628-4611-86ba-fe7c5bff30bf",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "24567424-a94f-4805-8c87-e1d94efac53e"
        },
        "item": {
          "id": "dac34bb3-35e2-447c-a94c-f0ac5d209bac",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9a67e951-834e-46ec-9324-e35db05ad20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60dd291-59d6-453e-9404-e33dfcbab3c5",
        "cursor": {
          "ref": "3ce14710-5a37-46cc-a820-e45f35dbde0c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4a37abc1-0208-4f01-9c9b-d7666d302b6c"
        },
        "item": {
          "id": "b60dd291-59d6-453e-9404-e33dfcbab3c5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c3ee7339-3e12-46dc-b766-714c7a7a79d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51350ed5-3f69-41f8-abab-f718c4850a92",
        "cursor": {
          "ref": "068c30ed-4493-4bcc-ab5d-69cf394fb806",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f1073a33-ef7a-4d1e-8d80-1806c4c640d1"
        },
        "item": {
          "id": "51350ed5-3f69-41f8-abab-f718c4850a92",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fa934e94-d415-4582-b5f6-1aa3429239bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb07a3b-687f-4099-ac6e-fc4ceec7d533",
        "cursor": {
          "ref": "81b3e975-2b4d-496d-82ae-76b95e72c19c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "362456b1-3ff3-4ca1-a2d2-01e326f9b42a"
        },
        "item": {
          "id": "0fb07a3b-687f-4099-ac6e-fc4ceec7d533",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b39746f5-cc19-40dd-adb3-a7e57dc4f08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131cd40d-4ea2-4c76-802c-066c55d826e3",
        "cursor": {
          "ref": "dfe70d4e-a07f-40e6-9b08-f7982a22c299",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "747cccfc-90b6-4ae8-b08a-72ca822ff046"
        },
        "item": {
          "id": "131cd40d-4ea2-4c76-802c-066c55d826e3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "60ae3001-c955-4dfc-b315-12c33f0dfaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f578c2a9-a6e8-4651-89b3-b3f130945db2",
        "cursor": {
          "ref": "c4163553-c1fc-4454-a502-a2a3fc5886aa",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ca569c35-0c8f-4248-b4d4-cb21bb91fa6f"
        },
        "item": {
          "id": "f578c2a9-a6e8-4651-89b3-b3f130945db2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3cd0e4c6-5d24-48bb-977c-1eae8a15a56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb15a820-93ee-4d4d-82b9-c4a623a5298b",
        "cursor": {
          "ref": "56c6080c-6204-4f4a-bf2e-e03ffa99f37e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3a0d24a2-2b01-4215-ab55-2774ed140f65"
        },
        "item": {
          "id": "fb15a820-93ee-4d4d-82b9-c4a623a5298b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1ac30153-d754-457b-97ae-f6755c50d580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ba9ed2-52bb-42f9-9f86-520335ff7cb7",
        "cursor": {
          "ref": "110cc4f4-217b-45cb-9cf2-d4701fffd592",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e4be89e1-851f-4a77-99c6-e02c850f0afe"
        },
        "item": {
          "id": "00ba9ed2-52bb-42f9-9f86-520335ff7cb7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7ff8b0e8-247f-4655-b99e-679439481950",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "fe823acd-1670-45f9-a830-f3edf590ead9",
        "cursor": {
          "ref": "8ae5023d-5054-4023-9435-e3e6e52b48a0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "37616c43-a1c1-43c4-87dd-6f6e558a1342"
        },
        "item": {
          "id": "fe823acd-1670-45f9-a830-f3edf590ead9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b987c0a3-c9c5-4021-b3c4-bb892d506056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2ed3a1-dcfe-432a-9694-c56d713310b0",
        "cursor": {
          "ref": "84e16c58-7b15-41ff-a24f-527908acd1f4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "18480c68-6085-4dc2-81f6-5dc88c625918"
        },
        "item": {
          "id": "fb2ed3a1-dcfe-432a-9694-c56d713310b0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "40a3cda8-e29d-4c43-97da-98d30b19a2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090f8b0e-a445-4b27-b512-63095c966be3",
        "cursor": {
          "ref": "c88002c1-597d-4929-8862-a55b8e035d03",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c863a0ed-3543-4f09-b3f3-199e970ceff5"
        },
        "item": {
          "id": "090f8b0e-a445-4b27-b512-63095c966be3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "76832551-aae7-47d9-846b-3715a9bc7fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd211869-bc6e-4513-bfea-03a429c23834",
        "cursor": {
          "ref": "d9bfc2b8-ec43-44b8-9eaf-f2841da8c3eb",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c39d7b4e-67d8-4e0c-9090-39db0dadad03"
        },
        "item": {
          "id": "dd211869-bc6e-4513-bfea-03a429c23834",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "965cbffb-5446-481a-8b52-c97fce096287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb4930b-ff60-40ce-9526-22227888b2d6",
        "cursor": {
          "ref": "e346e178-2147-4ad7-b15d-3afab8f1a025",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d33fdb0c-da99-423c-8431-80f63f5b6233"
        },
        "item": {
          "id": "5fb4930b-ff60-40ce-9526-22227888b2d6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c66e92f9-bf77-4c4d-a741-4b0a33b19dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edcf0ee-2725-41be-bf1c-b0dbba64f8fa",
        "cursor": {
          "ref": "7b733ca0-887b-45cc-9224-87ebfd141976",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6827993c-1f13-45ea-b3e0-536436bf429e"
        },
        "item": {
          "id": "1edcf0ee-2725-41be-bf1c-b0dbba64f8fa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d1fb54c8-818c-4ea3-9137-d4f5a8177a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e283c389-6dfd-4fa2-9833-9118c201ec40",
        "cursor": {
          "ref": "6c061c24-6216-48b3-a5df-f1db82db5604",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d77e990d-6740-4818-85ef-4f433356209a"
        },
        "item": {
          "id": "e283c389-6dfd-4fa2-9833-9118c201ec40",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "77f33d0d-4806-4e51-8cb1-8aa64b4deab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd86b10-5e78-4dbe-a27c-06acfd4324ce",
        "cursor": {
          "ref": "34bbcd62-d323-434e-881d-17621d5dc6b7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bc525526-a1a1-415c-8f21-3453383d123e"
        },
        "item": {
          "id": "8dd86b10-5e78-4dbe-a27c-06acfd4324ce",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f1cdd680-5762-4f6a-9953-2c4016ff38ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb49c86-b4ca-4e46-a6a6-e4fd83546a91",
        "cursor": {
          "ref": "ac0fae15-7428-496a-8a53-2a47f3a0c45f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f35bcbe7-8603-40ac-8f73-fb4a0a84fc6e"
        },
        "item": {
          "id": "6bb49c86-b4ca-4e46-a6a6-e4fd83546a91",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2c9ed46b-3eab-41cb-8558-acd2a64944a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f198f4-ea99-41ed-b5c7-75cfb3908357",
        "cursor": {
          "ref": "dcb307b8-00fb-42bd-9747-75d7cd9244fa",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ad92ed3b-a685-4dd5-97d6-0b0b32a93486"
        },
        "item": {
          "id": "74f198f4-ea99-41ed-b5c7-75cfb3908357",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d61df12-6c36-47b3-82ea-4af5a9f93305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e600a34-474a-49fa-ade9-448ca988b53c",
        "cursor": {
          "ref": "951b00b0-54a4-4a31-86ed-b1eb87408816",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "79cb1fa0-e06e-448d-a20b-fb0fb70c5716"
        },
        "item": {
          "id": "6e600a34-474a-49fa-ade9-448ca988b53c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "278a0ddc-ebb9-4d42-bc75-ff756c85f703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1daf92a-18d7-425d-ad1a-a7ab49a99aef",
        "cursor": {
          "ref": "a3c94ddb-a4e8-4ea8-ba4b-a48f7689aa95",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "65094826-d89e-43c5-ad98-e28f81358c9d"
        },
        "item": {
          "id": "b1daf92a-18d7-425d-ad1a-a7ab49a99aef",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4abcf906-5c3c-4cfa-a68e-fb34f5420b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee015741-d74d-4793-92eb-e66fd50f0269",
        "cursor": {
          "ref": "19762197-1f5a-4dbf-9ffb-6892d6349f5f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e05e2f51-b6ad-413f-863d-1efe0747b543"
        },
        "item": {
          "id": "ee015741-d74d-4793-92eb-e66fd50f0269",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0ff7ed48-9e79-4701-a23b-936df254e4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628805b3-4fe3-499c-a00c-4dd68cafd0e2",
        "cursor": {
          "ref": "6bfdf319-5fc1-4e95-ade3-90a34342b9ee",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c56f5237-536a-4603-9718-735498cc0cd5"
        },
        "item": {
          "id": "628805b3-4fe3-499c-a00c-4dd68cafd0e2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d3c6d100-771d-41b0-a5ed-4b174983f21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e489acd-123a-4676-86eb-81fcfde018f1",
        "cursor": {
          "ref": "55b7c139-6288-4a0b-a5b7-01b91120d70e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3ca934a7-bc85-4f83-af72-5871216fb4ef"
        },
        "item": {
          "id": "3e489acd-123a-4676-86eb-81fcfde018f1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "094414c4-04c6-4c82-892e-7d23bb76c175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685751c0-5cdb-4c57-b276-3d40c30f08a6",
        "cursor": {
          "ref": "59f7f17a-3635-41d5-98a6-9795034e33a5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3dd2f118-61b6-47fe-9946-e304e93aa530"
        },
        "item": {
          "id": "685751c0-5cdb-4c57-b276-3d40c30f08a6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d4cf4d05-7b06-4a48-8338-7e74f921595f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5cbebe-9ac6-409a-bcc1-a7fc9e634b1e",
        "cursor": {
          "ref": "ca60467f-b974-4a45-90e7-3e2403db1f25",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "00d65fbe-e117-4d13-9e55-bcfd6d73eb9a"
        },
        "item": {
          "id": "2f5cbebe-9ac6-409a-bcc1-a7fc9e634b1e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "be8a5cb4-6708-40aa-944a-0befaf14923e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92be8e79-17e5-4506-b81e-91337b22877a",
        "cursor": {
          "ref": "c62dcdee-e903-452c-934f-4df3980aa820",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ba8a5f39-b12e-4138-b269-41038400c4b5"
        },
        "item": {
          "id": "92be8e79-17e5-4506-b81e-91337b22877a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4372395e-bb91-4cd7-a06c-98a492969df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e4211d-117d-4363-9ca7-dda46e6baa79",
        "cursor": {
          "ref": "4363124a-2e87-4d2f-84ef-a916bb774c51",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0b4c1c66-cdb7-45c8-b50a-3a298b85f2d8"
        },
        "item": {
          "id": "31e4211d-117d-4363-9ca7-dda46e6baa79",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "14a0922a-5629-42f5-88f8-d2a260bf4938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1861d358-9b32-4e04-94d5-c891183c957d",
        "cursor": {
          "ref": "f925b9e8-7198-427c-9198-684319458bae",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ed652351-5b12-4524-95af-80a3533ef03e"
        },
        "item": {
          "id": "1861d358-9b32-4e04-94d5-c891183c957d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "968ea485-44a5-4327-b6a2-8cf13a8fe647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e340595c-8c79-4e1c-9335-710dec919bc2",
        "cursor": {
          "ref": "826a3ddd-479f-4aea-b1c7-2b63eb24679e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "748a1ca3-c185-4208-b681-0cb2aaa700f9"
        },
        "item": {
          "id": "e340595c-8c79-4e1c-9335-710dec919bc2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7408e886-9eb4-4260-898e-7ef2118707dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6ec8f5-ce58-4232-ac2b-36c205df122b",
        "cursor": {
          "ref": "660c7bb1-ed99-4f49-89cf-509c1099f7f9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dce4c967-ea2d-468e-8e93-135be6f77f8c"
        },
        "item": {
          "id": "7d6ec8f5-ce58-4232-ac2b-36c205df122b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5de38cdc-38a5-4ddd-8547-bc7ba778f49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf100c2-8d3b-4210-a271-03817fe362c2",
        "cursor": {
          "ref": "568b0b80-7b84-40f0-8f9c-e0ab30696e19",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "80d87839-c63a-4039-9a10-ec3ed183a298"
        },
        "item": {
          "id": "faf100c2-8d3b-4210-a271-03817fe362c2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "41424f21-e57a-4e3b-a7e8-4f2494746635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b548328-6ece-4a9d-a6d0-30b398bd5aa0",
        "cursor": {
          "ref": "0ed1038b-ce0f-4b62-92bd-f8b9872a0186",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9638c941-5ec5-420e-b4c8-267dd9b6356c"
        },
        "item": {
          "id": "5b548328-6ece-4a9d-a6d0-30b398bd5aa0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4e7eeec1-516c-4d70-aa25-ead8a00508bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918149dc-3051-4ad0-ae30-4cac4bc819bb",
        "cursor": {
          "ref": "7fb67d6f-4659-41c8-8cf9-92a995481f84",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a172bfa9-8d95-4400-98d9-b0929b1cd1b9"
        },
        "item": {
          "id": "918149dc-3051-4ad0-ae30-4cac4bc819bb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7d0d78dd-bec8-4185-b092-ace8b1874f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c87478f-57e6-48df-8762-61c6f96159fa",
        "cursor": {
          "ref": "7df4e06e-d64f-4fdc-9f40-3f2ca088330b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "04c3ae73-0400-4919-b607-59f4316ea34b"
        },
        "item": {
          "id": "1c87478f-57e6-48df-8762-61c6f96159fa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dc124f7c-9589-4fdc-8a1e-da36413fffd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cce770a-7f17-49c8-af8e-4d770cf59ce7",
        "cursor": {
          "ref": "f870a893-6d8f-4de2-ad7a-2289543139f5",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3e15be6f-f199-4b77-95ab-1f8c0349848f"
        },
        "item": {
          "id": "1cce770a-7f17-49c8-af8e-4d770cf59ce7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1f48b07b-962d-40cd-962d-0cc2ec67d2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc9287-1226-4770-95bf-bdba85ba24ed",
        "cursor": {
          "ref": "ba749f91-8795-459c-afd8-a141f223801f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d913c4d8-5f13-44e0-b35a-de683d268cf4"
        },
        "item": {
          "id": "94bc9287-1226-4770-95bf-bdba85ba24ed",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fb44d252-c62c-477b-9a58-5d5527698bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70022c5f-e6a8-4b8b-8f79-a2bea889013a",
        "cursor": {
          "ref": "fc3946b1-856e-4e45-a727-3a1943d97ef5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7b84a67d-606d-4424-afad-8f005f9391f7"
        },
        "item": {
          "id": "70022c5f-e6a8-4b8b-8f79-a2bea889013a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "994f579c-f9e8-480a-bfbc-507f02b62f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ce0766-5462-4028-b81a-fd82be41bcda",
        "cursor": {
          "ref": "103fa22f-8776-41e7-9eb1-c998baa1408e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1852be85-976c-44cd-946d-8f1782ca1a62"
        },
        "item": {
          "id": "f7ce0766-5462-4028-b81a-fd82be41bcda",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "49976b20-0542-4ad8-8f46-ac35df60aeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635d318e-1f91-4f6f-b940-e8fb8723216a",
        "cursor": {
          "ref": "74722e7a-74dd-4a11-bde1-0fee5f729d42",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1266fc22-0801-4afd-ae1e-9009f01bcf27"
        },
        "item": {
          "id": "635d318e-1f91-4f6f-b940-e8fb8723216a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "97c84a8a-3ece-4b99-bb03-e2c25c7f5d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fa349b-2481-4331-b464-121f8d3850d8",
        "cursor": {
          "ref": "5519206d-d60f-4d3d-9107-a662513a3a12",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "411c58a5-8ffe-48a6-887c-49736cf00239"
        },
        "item": {
          "id": "41fa349b-2481-4331-b464-121f8d3850d8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ea9acb0f-3020-492e-af8f-46dcbde631ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549a9628-f81a-4d04-9210-a9819bfcb640",
        "cursor": {
          "ref": "dc655f21-336c-439c-bcef-13319fa63d65",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b26d7be0-8dc0-41f3-8673-47085105a300"
        },
        "item": {
          "id": "549a9628-f81a-4d04-9210-a9819bfcb640",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0dcaf7c0-552e-4f52-bebc-a39ea607e5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376f88a8-c678-4708-ae50-83a9e0a70dab",
        "cursor": {
          "ref": "21f411b9-d124-4510-ae9c-9e7cefd58670",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e36f43f2-ce43-4a23-ba96-dfb5ed4d41bd"
        },
        "item": {
          "id": "376f88a8-c678-4708-ae50-83a9e0a70dab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ab614487-e798-432f-9907-22bf4368438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f1dbf7-4ff9-4b8a-b74f-83673a6ce814",
        "cursor": {
          "ref": "4c7e406b-a949-4b80-9eb9-579d4cffb8d3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8e081f9c-39f5-45c6-b7b9-87decb9cf3da"
        },
        "item": {
          "id": "24f1dbf7-4ff9-4b8a-b74f-83673a6ce814",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0b948298-9402-44fa-8114-822e2ba83d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dbd4ec-dc3e-4059-989a-f09edad3ecf3",
        "cursor": {
          "ref": "c25afcc0-0b43-42bf-9a8b-744953138a41",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "295ca9fc-0613-43c2-a4cc-7495caafec47"
        },
        "item": {
          "id": "85dbd4ec-dc3e-4059-989a-f09edad3ecf3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "77fd335b-740c-4260-b09b-acea8477077c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cab58d8-d21a-47aa-ae22-5f45b35d548d",
        "cursor": {
          "ref": "06dd5d5c-f2ae-4b09-8666-0b8b3f163b4b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f54f93e7-967f-47a0-9f19-6aa5d4ec0978"
        },
        "item": {
          "id": "1cab58d8-d21a-47aa-ae22-5f45b35d548d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2de294b2-fe07-4121-af1f-79cf5a1b648a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd92522a-64c4-43dc-b177-af4a85f69659",
        "cursor": {
          "ref": "ccdda022-1f2d-4f4e-be59-6fa1c0511555",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "08967af7-1e0b-4358-8290-2124927c2cdb"
        },
        "item": {
          "id": "bd92522a-64c4-43dc-b177-af4a85f69659",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "539566e8-ad94-41c3-9c3c-7b7671c5f722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34c4e9d-24e0-4634-8a98-783cf452fb25",
        "cursor": {
          "ref": "25f8ebd8-9049-4e26-bbe2-4a1d6dc13373",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "005aa9cd-16fc-4842-9b6f-47e109609661"
        },
        "item": {
          "id": "a34c4e9d-24e0-4634-8a98-783cf452fb25",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0dda8f54-9e29-496a-b4ae-7e89ca1afa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0dd32e-8c88-4477-a56f-5d54a35f18cb",
        "cursor": {
          "ref": "95987891-7dc7-48fa-a4f9-148505276052",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0ffaaf3e-28b2-4433-b119-71d8b29f8437"
        },
        "item": {
          "id": "dc0dd32e-8c88-4477-a56f-5d54a35f18cb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "00a26f2e-a720-459e-9503-dfd61dfd4b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a71472-2612-4ce6-bb49-f5a3c92d26d5",
        "cursor": {
          "ref": "16200484-e06e-4b80-9bdb-b2c94d1e7513",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5904c32f-8cbf-4b3c-9404-b4ede99cc069"
        },
        "item": {
          "id": "72a71472-2612-4ce6-bb49-f5a3c92d26d5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c143f7d3-1315-43aa-979b-7494a9ff65ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b553e73c-6d90-4125-b02c-c54b6cafa52c",
        "cursor": {
          "ref": "9e4f38c7-19b6-4800-aa23-c87a16e67702",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b16b84c6-fc4f-4834-8047-a47e04a4f91a"
        },
        "item": {
          "id": "b553e73c-6d90-4125-b02c-c54b6cafa52c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3239ffdc-acd0-4c36-931d-09fdc4574661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951d327b-2a58-4606-981c-43b9985be0b4",
        "cursor": {
          "ref": "52cc18db-09e9-47a2-86c3-a2ebde2e57e0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bd82891a-a82d-4fc0-a498-6e2b4b816d82"
        },
        "item": {
          "id": "951d327b-2a58-4606-981c-43b9985be0b4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "45ad82fb-6d4c-42c4-87de-0bc5f58cd6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff6caf7-90eb-4062-80e3-35a9851030f2",
        "cursor": {
          "ref": "3bc594cc-edc6-41d1-98fb-c2aea2449e6b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "46f8affc-8a0b-4db2-afd6-316998eaa998"
        },
        "item": {
          "id": "2ff6caf7-90eb-4062-80e3-35a9851030f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "caf8ee53-56f3-46b1-9f6f-71547a249105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2571c03a-c5cb-495a-9041-153611bd3267",
        "cursor": {
          "ref": "966dc8de-62a9-42f1-ab22-7d8ad6eb3293",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d0b85899-3860-41dd-955c-a9ebc402cb58"
        },
        "item": {
          "id": "2571c03a-c5cb-495a-9041-153611bd3267",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "37e5f496-549f-4e97-a682-0f992070ebc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c5cad8-4b53-4f54-b18b-4e98d160bd93",
        "cursor": {
          "ref": "5c9ce750-141a-4371-872c-f98c694b55b5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "166c6df4-9c81-479a-9db0-ead178f62f43"
        },
        "item": {
          "id": "d3c5cad8-4b53-4f54-b18b-4e98d160bd93",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9878b138-56c7-40ce-8b00-e7d87e7c3335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73823a5c-8b5e-4279-b822-a4536c1959d1",
        "cursor": {
          "ref": "29c9e20d-b24b-4c08-bee1-fc05ab58e471",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4e112e79-91b9-4b83-bacf-4b73ee290d43"
        },
        "item": {
          "id": "73823a5c-8b5e-4279-b822-a4536c1959d1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e62ff893-cdb8-491c-9da8-b5262ab7f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22adc017-6de9-48cd-bbab-fcda65b2ce4b",
        "cursor": {
          "ref": "c01ee5c2-56a2-4743-896c-15722c37dc70",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8f97b84c-e327-4ce9-a3ed-71c3d981c7ff"
        },
        "item": {
          "id": "22adc017-6de9-48cd-bbab-fcda65b2ce4b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a3f6b427-2ea5-4bad-beae-23a0cbf934de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9452a4ac-4e95-4e49-b0b0-8aae8772fc50",
        "cursor": {
          "ref": "b7b102db-de22-42ed-8bda-c03f518756d1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d57bb867-2cef-48a1-bc57-588c627384ad"
        },
        "item": {
          "id": "9452a4ac-4e95-4e49-b0b0-8aae8772fc50",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2087d2b7-5c2f-4804-94ef-877b5d7c83be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511466ec-f70e-48e9-88af-74c8933228aa",
        "cursor": {
          "ref": "b970eada-828b-4387-91bf-3209e3152f3d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "07678153-d905-4004-85d9-e9161c32dd66"
        },
        "item": {
          "id": "511466ec-f70e-48e9-88af-74c8933228aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bd832e93-194f-4601-ace5-251af1334ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70505c57-c620-4020-9bb3-1c6028b6c78d",
        "cursor": {
          "ref": "02af1d3e-7b45-4158-ae7a-36c4afd17790",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "39e4cb60-cc36-4f31-8a02-e675c2ad8f34"
        },
        "item": {
          "id": "70505c57-c620-4020-9bb3-1c6028b6c78d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "18387f27-a87d-4c9a-a5d6-f764772da088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f4c33a-6ce7-46e4-803e-a9c96c6e1860",
        "cursor": {
          "ref": "d679a546-65d4-4766-a7ad-764d21bb4b8a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2aa87b56-2341-4653-860e-ef2674b8fd4e"
        },
        "item": {
          "id": "61f4c33a-6ce7-46e4-803e-a9c96c6e1860",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1214d24c-9524-4569-9c08-c436d2910a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da664a65-5f41-4de7-a4e0-7932df73c897",
        "cursor": {
          "ref": "972dd92f-7e92-4472-9faa-8cc8742cba8e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b6ed52c9-8fef-451e-98ce-81019dedc69a"
        },
        "item": {
          "id": "da664a65-5f41-4de7-a4e0-7932df73c897",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f232fd5c-478d-4562-b331-a26bcd7d25e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7b75ff-7d6e-4d2c-818e-384754693230",
        "cursor": {
          "ref": "49b71ecb-69c9-4eff-9b34-64d2ceebf7a7",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9f77535e-2c99-4f28-9018-d42563f1d6b6"
        },
        "item": {
          "id": "be7b75ff-7d6e-4d2c-818e-384754693230",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "02796e7f-8c28-4634-94a9-2f3eb7d2e2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e51792-5fa0-49cf-8bf4-18807ec76d2c",
        "cursor": {
          "ref": "ccdc792e-a1d7-4726-b517-ae5c28a3aedf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "58105b73-dfad-4569-b450-4293becfcfe0"
        },
        "item": {
          "id": "07e51792-5fa0-49cf-8bf4-18807ec76d2c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "40ff74c7-fce3-4afd-aa73-ab041bb95557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb84583b-f092-4306-9eb9-7a60049ac016",
        "cursor": {
          "ref": "6f3ecfda-0a2e-4164-9f8f-ba023a3e9461",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dd53df1a-35c3-40a6-9ca8-389e6cc17f2d"
        },
        "item": {
          "id": "cb84583b-f092-4306-9eb9-7a60049ac016",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8e518a80-89e2-41db-a182-d9b3709b91f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4e561f-2081-4449-ae9f-2da074e3c4a0",
        "cursor": {
          "ref": "2c1f2f98-4d05-44fe-ba10-6850a01e533a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3c133c09-3431-44cf-ae45-2115706bc2ba"
        },
        "item": {
          "id": "ab4e561f-2081-4449-ae9f-2da074e3c4a0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6da074ba-1ccf-408d-8acc-fd2653c9c606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec5df90-e892-45ea-ac25-7717deef8abf",
        "cursor": {
          "ref": "b8b8fa2d-e088-46e7-8643-dacb8878d99c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "109e9fe2-a4bd-4139-8e3c-e9b63ee0669e"
        },
        "item": {
          "id": "4ec5df90-e892-45ea-ac25-7717deef8abf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c6c6a2da-c57f-4a8a-92fc-c284b47eab66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b8cc5a-e4d9-449d-bc96-ca164422940a",
        "cursor": {
          "ref": "a1095545-7ed9-403a-9635-2d8aaba2d515",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "64ed3b4e-a9fd-44f1-b468-71fb2f1d8e2c"
        },
        "item": {
          "id": "51b8cc5a-e4d9-449d-bc96-ca164422940a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c2cc6851-d484-4b64-8865-32dabe3f0e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed33a61e-b2d5-47bb-9dc9-2e1006fb8ed0",
        "cursor": {
          "ref": "e10eb00a-02c3-4a82-94b6-4bb8c87a9e91",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f5efb8d6-5d6f-47c2-bcb4-7a6564c34840"
        },
        "item": {
          "id": "ed33a61e-b2d5-47bb-9dc9-2e1006fb8ed0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "143ff079-e860-4969-a4ab-4cae6aa3b2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f58f9e9-af44-44d2-8e7e-b337a245df3c",
        "cursor": {
          "ref": "e0ced209-faff-4600-838a-36fb41fc50f8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "917b0bce-77ad-4579-8cc1-373fb9f9a4af"
        },
        "item": {
          "id": "4f58f9e9-af44-44d2-8e7e-b337a245df3c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fdc4af00-b5ef-4b3d-8e6c-a1ae88e56d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f59e9e-ebe6-4706-bd48-a68e93f80313",
        "cursor": {
          "ref": "73b7f5ba-d443-40e5-9e68-438e0d6e2ae4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "af800afd-a98a-4716-a55c-6f43a8f8f08b"
        },
        "item": {
          "id": "b1f59e9e-ebe6-4706-bd48-a68e93f80313",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "94bc40c0-5211-41f2-942a-b504a99fc143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449594ac-276d-48bc-bc3d-e96a201e034a",
        "cursor": {
          "ref": "68e80597-ae0d-4d2d-a517-82df5abdb65d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "59d0244b-84b8-4fc9-8d33-f95ed27ec8c2"
        },
        "item": {
          "id": "449594ac-276d-48bc-bc3d-e96a201e034a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8061bf39-e27d-426f-b850-4243ea83b7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbcc027-d2d9-4ff8-bbd7-4d47fe9759a8",
        "cursor": {
          "ref": "586aba5b-c711-4592-a03c-290c90a289f0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f14a84ea-879f-43f8-9ab7-e4406093b242"
        },
        "item": {
          "id": "3fbcc027-d2d9-4ff8-bbd7-4d47fe9759a8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aea3eb6e-2719-4b98-ad0b-befc06cb40eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd9ef69-993c-428c-8d7e-3f967e292e24",
        "cursor": {
          "ref": "b11d78a9-3a9d-4951-801d-c3cdc03a1939",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f11431f8-b3c3-4210-a3d7-93ee6d03e89c"
        },
        "item": {
          "id": "1fd9ef69-993c-428c-8d7e-3f967e292e24",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "81ccf16b-3f75-4226-8658-3b3bf60edf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698e631c-2497-4453-8655-2bd5899217e4",
        "cursor": {
          "ref": "9c4057b0-7a6d-454c-9d93-8113b13e238e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9716101a-b5cd-4c6d-bc80-ab6e5a19f1f7"
        },
        "item": {
          "id": "698e631c-2497-4453-8655-2bd5899217e4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5e5020f9-5fdf-47fa-9b2b-05ccb3ff8e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d33fbbb-8037-403c-91b0-86e34d47556d",
        "cursor": {
          "ref": "48792f03-b8eb-4085-94aa-b81ba067dfae",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7a8f6c7d-a625-46a4-abe4-df2a63949c13"
        },
        "item": {
          "id": "5d33fbbb-8037-403c-91b0-86e34d47556d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a006e7b6-898c-46cd-ab75-0efad46937dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a6813a-c629-493e-8b0a-d95189a39207",
        "cursor": {
          "ref": "f1598bd7-4ba2-4dcb-b810-2b559d297dfe",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2f7507c2-8b68-4f6e-b1aa-31217445d0e6"
        },
        "item": {
          "id": "e0a6813a-c629-493e-8b0a-d95189a39207",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5da9338d-9be6-4894-8863-d251fb3fbceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd38435f-7a16-4569-89d6-b7a3c09028ee",
        "cursor": {
          "ref": "b4d1c55c-6cc1-4d4b-8228-0f6c5863178d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ecf80c51-7a3d-4e90-950f-6c5a26969f83"
        },
        "item": {
          "id": "fd38435f-7a16-4569-89d6-b7a3c09028ee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0c86b795-0f00-43f1-a241-6b5147dbe742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d3294a-ea19-44be-ae58-5882e5670e6a",
        "cursor": {
          "ref": "6e63e024-8141-44f6-a31a-c4f2812a14d3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d05fdc8a-0350-49b2-90bc-622fa2bf241c"
        },
        "item": {
          "id": "15d3294a-ea19-44be-ae58-5882e5670e6a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6a071171-fe03-4aa9-a8a6-0347ab740a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae39640-cdb6-4c7b-bf3e-05eee6f45834",
        "cursor": {
          "ref": "2c225073-90e1-4dfe-b464-f9cc72f35675",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "86100260-401c-4bcb-bb55-2d24e2d439ea"
        },
        "item": {
          "id": "5ae39640-cdb6-4c7b-bf3e-05eee6f45834",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4d65c193-b0ef-4c44-9b6c-e88b93103795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4499ec41-a452-4604-b531-b436f4518595",
        "cursor": {
          "ref": "eb82e953-fd81-4537-9b25-6d698ccaacf6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "293fcdc5-f5a8-435e-b20f-068239fa23f4"
        },
        "item": {
          "id": "4499ec41-a452-4604-b531-b436f4518595",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3f5b4b78-0493-4210-829a-d99eebeb177e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb3ba7c-e00e-492d-beea-360a21264bd3",
        "cursor": {
          "ref": "72371bc2-a689-4766-b1d7-cfbd33cc59ec",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "308decb8-065e-423f-a695-e33940964d05"
        },
        "item": {
          "id": "9bb3ba7c-e00e-492d-beea-360a21264bd3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c303c8fe-63d8-499d-9747-14ecd22a32fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe9e9a1-bccc-4c4d-a4b0-41e025e076c6",
        "cursor": {
          "ref": "8ac8b7be-1dff-480a-9f62-4d0d7bfe9dcc",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "aa61dc0e-b3b6-460e-949e-6e692774310a"
        },
        "item": {
          "id": "3fe9e9a1-bccc-4c4d-a4b0-41e025e076c6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "661fb106-f149-4f91-9494-da2bff3e5382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649caa15-ef4d-4483-87a5-1bf5244040c3",
        "cursor": {
          "ref": "7bf629ca-f793-48e3-a13c-2adc4d9ca0b0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7d3ffbd5-a701-4f07-8367-d8161ab72e20"
        },
        "item": {
          "id": "649caa15-ef4d-4483-87a5-1bf5244040c3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7e859d09-e9db-4fdc-8d58-f4c31b3fc123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117d0a3c-4ff5-44ea-bfca-88a4b9eaff02",
        "cursor": {
          "ref": "faad1dcf-ee93-4fec-9dce-d68aeabf001d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e7cc1321-48d7-410f-8fa2-aa9cb9c41522"
        },
        "item": {
          "id": "117d0a3c-4ff5-44ea-bfca-88a4b9eaff02",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "de880769-f1fc-4e55-9515-17f99b3d54b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb2b712-f00a-40ae-82b2-a2a92f091f1c",
        "cursor": {
          "ref": "ac2e5f3b-7533-4556-99ae-6b512ac211b0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4ed00a2b-6460-436b-acf3-05235dd06f4a"
        },
        "item": {
          "id": "ceb2b712-f00a-40ae-82b2-a2a92f091f1c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ac7f8e9a-f757-4f3d-90be-39346b9c561f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848b621f-815a-4190-9932-8dd8f66be6b0",
        "cursor": {
          "ref": "010f75be-990f-4304-8cc5-155616a3162a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "892e4979-aa38-4248-a287-c1196a5ac4b1"
        },
        "item": {
          "id": "848b621f-815a-4190-9932-8dd8f66be6b0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "429f22df-753c-45eb-bffd-4ac18444750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9cb82e-3cb9-4953-bfe2-9a762798fd8b",
        "cursor": {
          "ref": "9ffb9160-8009-4da1-ad30-00cf141cbb5f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d3d0f97b-6781-4528-97f2-a56964e48ebf"
        },
        "item": {
          "id": "ef9cb82e-3cb9-4953-bfe2-9a762798fd8b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c812cfe2-9a1e-4a0b-bd43-085ef9ef6f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d80e57-62bd-4515-b1f3-abf3a02a1f8f",
        "cursor": {
          "ref": "b3ead6cf-656c-42ef-ab47-bdc15a244812",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "29f3995c-3235-4c9e-b8ad-c94d0642d75c"
        },
        "item": {
          "id": "02d80e57-62bd-4515-b1f3-abf3a02a1f8f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2118b6e0-69ff-4659-b201-4bdfb39ce74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6d02b4-2464-4461-999a-b6ecbe29fd8e",
        "cursor": {
          "ref": "907d7911-eb21-465b-b429-6f2408207946",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "28f59b78-0358-4c0f-8668-1be6bffabcbc"
        },
        "item": {
          "id": "9f6d02b4-2464-4461-999a-b6ecbe29fd8e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "52a7ffcb-86e9-4fc4-85a1-7bbd3ef050dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4ba5a5-57a4-4dc0-8421-7022a74bc378",
        "cursor": {
          "ref": "9bc86b50-6709-4bb7-9929-3f93c871c8a3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "46bd87f7-5e5f-4b44-be6d-413e4557c369"
        },
        "item": {
          "id": "9d4ba5a5-57a4-4dc0-8421-7022a74bc378",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6d4b2f2c-f1fc-4f4b-b49d-2228445735a3",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "640efbff-3c07-4cd4-badb-3768e987c6d5",
        "cursor": {
          "ref": "d387bf13-525c-485e-9b9c-5f0d3e0385ba",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fc74b465-546e-4901-b5ee-2e2aa4db5947"
        },
        "item": {
          "id": "640efbff-3c07-4cd4-badb-3768e987c6d5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dc664931-e7a7-4f28-abab-9253bb629e30",
          "status": "OK",
          "code": 200,
          "responseTime": 2449,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f526aed-199a-4de7-bcb5-0e00d42d06ae",
        "cursor": {
          "ref": "11520f50-9edd-4687-8a4c-3834bbc63446",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "df824448-209f-47a4-adc2-1f3163de8025"
        },
        "item": {
          "id": "6f526aed-199a-4de7-bcb5-0e00d42d06ae",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bba7ebfd-0892-4840-8e7c-67bf2272d1ff",
          "status": "OK",
          "code": 200,
          "responseTime": 3652,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "016f25fb-43ee-4f32-926a-fb6ba532a984",
        "cursor": {
          "ref": "fb3a70d1-6dbf-45b4-9948-7f485e4b9855",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fcb335f2-6047-4b92-bf48-c0891aa89dde"
        },
        "item": {
          "id": "016f25fb-43ee-4f32-926a-fb6ba532a984",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "089af9de-2c08-48af-b64d-78152f77f17b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016f25fb-43ee-4f32-926a-fb6ba532a984",
        "cursor": {
          "ref": "fb3a70d1-6dbf-45b4-9948-7f485e4b9855",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fcb335f2-6047-4b92-bf48-c0891aa89dde"
        },
        "item": {
          "id": "016f25fb-43ee-4f32-926a-fb6ba532a984",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "089af9de-2c08-48af-b64d-78152f77f17b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6654b6-141a-4c20-9b33-39820d298035",
        "cursor": {
          "ref": "cbff3ca2-a444-4b15-81ee-98e01819fcfa",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "89315591-0c1d-4a18-ae8a-1f7c24b77aee"
        },
        "item": {
          "id": "1b6654b6-141a-4c20-9b33-39820d298035",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1cf25322-7238-4613-a7d4-57bac0bdebae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fc55af-4ffb-47ce-b5e7-77bed05e5a40",
        "cursor": {
          "ref": "518ebc33-82d5-461c-bb61-2f4237ab7758",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b6006731-4995-4220-9533-e80e6efdb898"
        },
        "item": {
          "id": "64fc55af-4ffb-47ce-b5e7-77bed05e5a40",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3c8d1a20-8c5c-441b-bd4e-ad17f41dff1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}