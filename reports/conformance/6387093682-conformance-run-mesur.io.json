{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cf28df40-cdde-4664-871a-d7b54b6ebd9d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1b695b94-d59a-40b6-a3fb-8317bbaa8c13",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09d0f3f3-d944-4a88-a18a-4df51fe03763",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cfec0589-4ae6-408c-b391-76b836257836"
                }
              }
            ]
          },
          {
            "id": "617cee2b-0a74-4595-9a40-b974ef03424f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16d73e15-c96e-47d7-817e-c4aa0e466a48",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "902659eb-a577-43fe-8613-5073b6bc30a2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6438973f-0d81-429c-a787-4de39eee733b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "57d57616-05f0-4f1d-902a-f3b08a81b167",
            "name": "Positive Testing",
            "item": [
              {
                "id": "225956d6-606f-4a59-bac0-8f490986f5b1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86dd43aa-24ab-4527-8ca0-4e968d920ed8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "604b9f48-4c76-42ad-b927-ae335a44d81b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eae065c1-d232-47b9-97be-fde96a56665b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "708c4b9d-214c-47ac-99e7-f671c88f14f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99807402-1b99-4a36-a09f-1a7981e9ff85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97d2b52a-009f-4f10-a736-5f195bab9f43"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d49525a-b6e6-4f14-96c6-fddc41822cb4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6b48b457-4380-4722-9112-dcd16ce66798"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d9d262b-e1a9-4e9d-98e0-8fc398a8daf7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbce9886-5685-4745-bc34-57a234270030"
            }
          }
        ]
      },
      {
        "id": "88ae6da4-7f04-4def-a439-b4b7ed36cd49",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c05a097d-14c9-4227-9160-1ef5b6360fe6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d04a76f-7748-45c1-8b80-053055e64d56",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a3f96ae-914e-4927-b739-7ba41b5e50cc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b66096c-b435-4455-bae1-22c38289b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "228d8f85-5d9b-4974-89b0-b6a02c0b30a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69c348e-e4a3-4350-bc34-82e2c4a3ea81",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac7cceb-4267-4a2c-a913-2830a990d6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fea58099-06de-4650-8a52-cf85432772ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4e00fa-82c7-4a39-9c88-0dda6e48e5f9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2d3731-5f45-40e0-a667-c9485029a861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f606f2b3-9061-4155-824b-78cb737f9b72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce9bf0ac-4813-4050-9240-1d7ff09e9b65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45c48cee-d29a-4697-97be-d67dcdf17f09",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa280c8-51b1-470d-af79-e60ba4508921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b6a8a3a-e882-4543-8f95-2ef4d87fc425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8246c7ec-aabe-46ab-8b54-eef9a41cca03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a49344-2263-4dd0-a815-a7656f62746e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "12cf14ba-155d-4a11-b036-a51283f0eddb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb53a05e-fe2e-4af2-b62a-f8b7dc85607a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06a49229-ed00-4040-b5c3-270a78630360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8fedb413-ea66-494a-b8d0-4b57abfe5d52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88e38c8d-a1e7-4b41-8c4b-1478d4964fe6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "752dd828-b666-42e9-b7b2-71badc2b8a17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab3dd194-2ae9-438a-8b97-718fe88d46cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2228e5d6-ff74-4a6a-af27-9442cc616790"
            }
          }
        ]
      },
      {
        "id": "22e393c7-c410-44a0-a8f3-5900030987e7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dd29a490-48aa-4af7-bf36-0a21a9f85c81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa36e2c8-3c76-4e89-9558-9ff1a4e5e9e0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eed9b5ca-3803-40a9-acfd-08beeeadc0d1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79859f4-ecd8-49a1-af34-d7b4c7eeac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb25909-0c61-44f9-8301-a9b2f0c108ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165c05c5-3835-4db9-9d09-9df83710b22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec0c2692-b8eb-4b36-a657-75e16af8d8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9719db7f-b6e3-4edc-bae0-f21d954fac35",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6717bde-4cc0-45d3-98a9-f11cb70d2aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783abfde-edfd-4e62-9c43-74ede53443de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65de29e8-1dbd-4ea3-a822-90e4d80594e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce953667-7d4d-4f8e-a7f8-5ba677a92761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d32c3a6-7e51-42bf-9c42-2da85cd06a04",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5077ce4a-1a9f-4f73-ab4b-ae1c6aef97ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06aaf9f4-75ff-4961-91b9-955c632f5eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a33171d-d973-4e6e-9dca-82284ef9beae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4df7fb14-bcca-4569-9bde-238e3878131b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06197df6-273a-4829-8019-a87de70384ce",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e602fc5-57ba-420e-a52c-4a4e7c04aad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b30127-1a13-41f5-be4f-b98c83ea4e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c93ed2f-65ad-4e67-906d-488f27589898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb7a3f55-2a22-4d4e-9dec-0967759e1ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75484033-3b66-4039-a045-e236206dbd42",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c0c637-5ddf-45ac-8cbd-60a2de190abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add3c86e-a28a-4779-a3c9-3c845325a7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c880c95-5a4a-44cd-a470-0c173bb0f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69af147f-f2b7-41c9-b157-8eec5e2a06a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fc9405-7ff1-4caf-9367-c5a66dae7444",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a84f6f-c913-4199-9d8b-48ba3f48470e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f78ca25-54c5-4909-92b3-3ae0d628f5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4b2cfc-7647-465f-8ca4-d11579ca7974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d99c64b-4f0a-47dc-ba1d-7ed4ae56da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767d0520-df30-4262-8694-b68a03473a81",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3b49f1-8e99-44d8-8bba-2a99733ddb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296d3063-084c-42c2-a440-9c3d1d2ffe0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5435231f-7874-496d-a45a-c45aaa76ae72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e132e25-26e1-4029-ba95-e8045dea9629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4f8999-85f7-47ea-b450-f9fee0eb7454",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cef26d-5add-405c-a30e-3f75f14ebf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49336ac9-b562-4428-8ed3-bd8a5e474e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef15da6-b3aa-4d5f-ad90-39c77e63e032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fe63a97-a7bb-4a0d-b46f-4d39977cb107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66e0e12-d5ff-4d7f-b0b0-9f1190d3fd86",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e22d2ba-88a0-46bd-86fc-6b5ae1e5498a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ada0cb-8b5c-454c-90c0-f27499d04b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e328d900-e719-4e63-aa85-3148a98528a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f135a13-f9ab-4be9-b80e-e04138f5e4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1b96fc-2927-4d57-abbe-29e69d33b0ec",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e611c72c-0008-4340-b1cd-29adf7cc1694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1d8d45-e78d-487e-a475-6472ce530139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871bc596-f93b-4732-8861-6c775cd3261e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "251d287e-5b0a-4744-bd18-05a2ef587172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3173a8d9-21bb-4874-852b-1a72fed7788e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840ce714-4324-4afd-9ba0-7275b0b344f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6c39ef-c76a-485f-8fe3-d80cc4d87687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012f47b5-9f6f-4f87-8b5f-4ef451e2087c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66a5aef0-d302-469b-a499-2ee42da1ac7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db895f3-d148-4374-9864-cc455c37a3c5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2644b7f9-fddf-428e-9a0d-fcaaeac8cc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b59227-7c2f-4437-927d-b55cba6ac105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3844124c-3840-4cf2-b5ed-2908620de863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "260425d8-e9f2-4b20-a41d-54d2c6abcacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00e328c-45f0-4f4d-9eb8-13ca15324a55",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f22fbfd-61ef-4e53-8985-30ecb3110125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c672f90-6c76-485f-bf8d-75de768f3975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13aa48d2-b84f-475b-8974-30f15b6863c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93f83599-3c4d-48f1-be94-568f6090eb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a3f01d-3d92-401b-acad-253b08eb3344",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4f09ec-9d8b-4de7-a026-b1872ea83446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258c7c52-ec94-433b-964b-d14b73e3251d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c92e15-2c3e-40b6-b32b-399b7f1ed5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50473586-97cf-4d12-8a04-a24d0167c96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1dd132-a03e-474b-ba6f-b70ae1adf379",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61773cfa-6757-4c1b-bc04-caa147140df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db8508c-00b3-4980-91cd-6c282b87595c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d907c7-2e1c-49b9-9c95-a8c545978685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec0e283a-9edf-4050-9aa1-aaca30e5b2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53207f7-4df1-4fe8-a30d-b1cbaeef8bc1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210ec8f9-acfb-4706-8482-ad38275a5300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07bd91b-4b60-4288-9c89-200800d50518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafd15f5-f238-4c16-9b02-41e1f5ac0daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0de95f4e-dba9-485e-b46b-64e14ec271de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a29541-c61e-4feb-a78e-7cad70e8a3d2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d756041-2474-4fb2-ad49-f424b29f089a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f66d1f-3b86-49b0-9aa8-b600920d06a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095d0d9e-70b2-4ae7-b165-9ec8974a4d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4f28532-7553-4c5a-98e4-f3dd4c4bee0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ee9ea1-467e-4369-9f28-2aab64244a0a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d2d605-5ffa-4bbe-9683-11d7584e1d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d667e07-4a84-46f0-a434-3130e4d8408a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ad6b9-9dcf-4cab-9563-0ec65a120a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87b4cb1-6aed-4d50-8032-2c3335ad40f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7048ac6d-4ca4-44a3-9e7e-b40ed153b0d6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7cae1c-9b7c-4dea-85ee-2eff51b3382c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef2dfb8-a12c-4358-8b65-9702e033ad64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4752bff-2306-42f1-82e9-3e5908f8a585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "993be9bc-38c7-4ee2-8d6c-9448e2548ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1509def1-c11a-46f8-be21-1b58c4148e1d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e448e3-ab03-44c0-a185-4381a95c68e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fce6d6f-48aa-4236-8912-1695db204f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b855d1-6af6-429b-b118-8a281b1f15da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb975ae-db6c-4fc5-a34c-237e2ce5cf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd37bd06-173f-48fe-aaa3-657a36d8bcf6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb9bbbe-9480-4465-a075-094c98492a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b826d3-0bc7-4b6f-986d-0b3f8ba8d86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b6ff37-c665-4f10-9dbc-260eda2b937a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07a307a8-e515-4263-a79c-bf7406172c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43587779-4664-4462-9dba-5313bd2b3d65",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37c24b4-6c3a-4806-9636-bcaa2cc9a6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cd098b-f41e-43e3-bc99-e2db3a9cf153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8b132f-a221-4e80-9686-2e7fc4400214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02767fe3-a1fc-4e73-93a4-8d83c44093ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32a8bfd-af20-468d-b3e7-af4bdc3e9da9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247b029d-0b81-495e-b59f-fdb9fa699a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac73442e-4170-4028-929e-8f2225e47162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d434fc3c-52d9-4edf-b17d-22a474f08b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3037ede-0894-463c-be39-f7d2a9cc1944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b830d1-ebd5-4a20-b1b9-1b3bb455f298",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6e811b-afa5-4187-b0cf-451c3cc98d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c59a630-2458-45d3-8ca9-c1d7d5e31d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e61075-9511-46c6-b144-b650c4f1559a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0946d4-f9aa-41c3-aff7-3f0a9464b486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dcf7fc-2c63-4c9b-8656-cb51ec8aaf96",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487aeeb7-92bb-46e4-8fc7-e0e036409c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2377151e-beb5-40d2-ae79-bf115fef3ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d716dfe-4011-4b61-8e51-81b648b0588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0af1c7-33f1-46b5-b097-ae6ce09999ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119d9ab3-1b51-4260-8ab4-6586cf3f07ff",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d4a3ea-e20d-44b5-8d8a-2b700688c2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e1f77c-0059-4404-bf1c-2c9cba8df533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e98575-61c5-4d48-8a89-91fd287dae52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae1e72f-6ac4-4b5d-a123-5a520476b834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6e63b8-94e3-4bde-a33b-677f2eaf6275",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34e4a97-cad4-4084-8af2-51cf5cc9c294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98f356e-3ef1-408c-84b3-da29457821c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71fd987-dd59-4944-a331-e0f47052efe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a835b4e0-29d7-4288-b7aa-167ebd65bf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4bb7a3-5527-473c-adfa-faa3ddf88067",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472d1e04-b9e6-49ef-b4a3-d7fc5cebf733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7e5336-efc7-4e92-b0d8-6868927a8ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99a9186-12c6-47aa-b1ef-af0cadb2a74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71266a45-96fd-4e25-9265-2b54c78ede87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d551d1-fefd-4064-9c19-e0081bf4ab8d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfada85-3d6c-4a14-b008-5924acc3bb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc783a2a-5fdf-48da-8409-72d795c7ed9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66ba9e3-68ed-4d83-9645-e500469f1923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d75ca09-364f-4f3d-9b32-5515ee9fb8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85355510-ab26-478b-a9f5-120526623507",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b9f7ed-3da2-4ea2-8305-4f6a243fe8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57360e0d-44f1-4b47-a59e-d25d1174f54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9c9a4a-b6a4-4bf7-98f9-f257e458193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8115492d-764c-447f-9d1f-207da8d9972c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab29ff17-d6a0-44a5-9d20-81491726f4a4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae38d0-cd4c-473c-97db-784d3feae8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20e2d73-97c3-4ef6-a93d-6fa92c18c20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2f3ecc-f204-48c8-9d9e-093cc8c77266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c791c564-9552-4d55-90de-c9443a1888a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625e27e5-e2ad-489b-aa40-b09314594016",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce355e89-0239-4d47-9553-6767757f1547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7d2a37-622c-4b8d-982d-44229c730cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13325dc5-25a2-4ef6-a3a3-bb3f474d404e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a9aa7f-ab7f-400f-8400-d525996ed051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27611cba-b666-4bc5-8b55-0b1ae57fb65c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a1ef6d-fc12-49ca-a93a-709f4139280b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e406d729-874d-4768-9c83-b300d2a3542c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a1cd92-aa84-4af9-b2ce-2927ae46bf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e9ffc1-2fa4-4287-be0c-7a5d63460750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c53dd5b-937a-4170-ad65-a2684fd5f463",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294dda6b-ea71-4a82-aa4c-f6c7894d2c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67eaa8c5-c04f-4f56-91c0-cd4af0026795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f633be-ecc9-4614-8f43-8d189cdbdd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e974a9e5-cf6d-47ab-bebb-0fb3f86d056a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231b6b74-ddd0-469f-9684-1a60321a16a3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e133bfc-4bc3-480f-b35a-4aefdbd6862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbc073c-52ef-402f-93f1-59ef4520601e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc75dc94-f031-4854-ac42-ba99769e3516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f616cf58-ac7e-4d23-9ae2-a232c3f9627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4265c352-a137-466f-a11c-a9db8e2b02ca",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437f74c2-1451-42de-8a1f-13e70141634c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79a0d508-e366-4da3-a073-ad4d9b5baa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95330030-e8a5-4a01-aff6-035ed23cb357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63972c99-661d-4713-8973-bdaf216b3a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c37c29-3afb-4f2d-a125-7225bf3338dc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9944608-269f-4b89-8cd3-b2a3f83200bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8354d1e8-bb77-4e95-9bff-a6deea66285e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4ea4db-3f44-4e51-ace8-7765777035f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a644cc92-6391-4553-8ec6-7125d4e0af1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84cdd1c-7a5e-43db-b4e9-d51baa53ad98",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573b1679-9c7b-4de4-ba94-06fe0f8e8d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e632236-c90c-4281-8f3a-ab38eda52c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f660de20-dbcd-4690-b6d7-ebeece4a7b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7109a12-d426-4a39-891b-d952304c0d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b8eae8-478e-425c-a625-d71316f4b7a3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d630c3-d219-4532-975b-016459621357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130c5b6b-50f2-4738-b6b1-67a4c9ef9c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486f60f0-2a85-4fe3-995b-df5f15efe8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b61d808a-e4a4-4fd8-89c1-be2b5f73b758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8044e641-4129-4f60-9526-3263ae7d90b7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e6c195-b864-464f-a03e-fde465922672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d06ada-749f-47b1-ab6f-70c9aa884449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c76b5da-fcdf-4c35-80fc-cc546ca2ad3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1bafc4-4666-4097-aa1a-8a64f14421f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d299ab-3407-454c-aa2c-fdcfdfa99f19",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4dc043-4660-4846-8ae7-f8a9f0f9e74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58735113-deca-4c0d-b6b7-495a6c2c94dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4cce1f-1a68-4c43-8d8b-60a7d290e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "002f0927-01ff-4c15-8602-58f0e6e91e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473faa25-7488-483a-b01b-fd34fc2d0bba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f39ebf7-aae7-4f19-8f08-493df40944cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d9fd41-2f60-4940-9325-ac1fd1a04629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bbae82-4417-4737-8fae-0819e5ab5668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d2e6cc-0a2e-4446-b61b-b82408f3e118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f2159a-a233-4770-a593-22f17fafcbbe",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a0ec48-60b3-40b6-8fc3-d0a272b34b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310196db-02d9-4c0e-8560-d123a4237883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53c5a4a-9a48-4602-875c-aa0163e9b4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fe6e02-0483-4382-9e8f-d1cea540061d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7e8f8e-b7a8-4599-862d-8c51b5d16f69",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb25306-8558-46f6-94f7-89279cc29e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c343503-bee2-4880-8e87-62fe1fe6b23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1b978d-953e-4bde-beae-41e75ca49799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3f7b5b-1a4b-44d6-93f4-9eeb0a53de0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a769a1ac-b385-48f5-9866-801cd1f55be9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb231f90-bc45-4867-beb8-9290cfdbcbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b67183-3b9c-41f4-a973-a65e41f18a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2548cebe-6f6c-4d5f-9822-25a63aa620a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "314aa08f-78de-407b-b442-def4675c24b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3100e115-e5c8-434d-9bf0-563db86be65b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3fed0f-d0c6-4d17-87b7-05fdaba6d58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361399a3-020b-4aab-b1ae-60b04e0f4a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d420b45-b682-4ec1-b506-2680c73e7f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3444c0-97cb-4a0d-ad83-974e5a3bf257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5817404-e0dc-427e-83de-272fc7011194",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a27f71-73fc-495c-9bd9-c6f625ee38de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677758e3-98ea-4d5d-9c5f-47d1a7f9742e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a27c519-fe8c-42e7-99f9-fda9bec2ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecc902e-003b-486e-b91b-66886aef4d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff5ecc3-c7df-4248-a41b-f801a60bf58c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd13e2e-49e4-4dff-bbab-0c304b5e49b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607f47db-4ff7-4a54-b4d7-e6863ca6e7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5ef371-55d4-459f-a90a-43c10d4b4738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7774a91c-1747-43b5-804f-f2331f663b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b062df4-5d08-4dec-a232-3a7c48449cf7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d1308f-c0a7-44e3-8e9d-409fefbaf34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb20c3f3-31ed-494e-b6ab-e52bece88237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75044b23-e854-48db-bd5d-4f8644ff7ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c479a513-72ff-48ed-9037-94e64229acd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600f1c20-d230-4c44-bb24-7b65f9cce8eb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2865e58c-36f8-4963-b49f-98bdcf4e950b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bd1887-020f-4b24-885c-6daf94486f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ceee62-8766-47b2-991a-1ef041bedcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90f49a1c-713c-47c3-a3fb-52f9dc2c9f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4b4d90-af33-4a33-af32-e030172d3ac0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354ce3a6-1940-452e-a3dc-297cf12889d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581274eb-f7d5-4096-9cb0-d587d8bb074c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df252e37-dde3-4b23-9f90-0596135d6b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d63508aa-0520-4e2c-ae5f-c05c214875b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ef0b95-6aac-4928-8cd9-8b88e7c67917",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceed1327-88ff-42ab-969b-50c89101287f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec8c071-0e75-4d42-8353-d913a74a11e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a95a0a-0fae-467c-8db4-743559694ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbd758c-53bf-47f2-bd3f-e3a4cfd4e4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1c5180-a523-4a63-b4c6-010f4c2a79da",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a808fdc1-d3c7-4c82-9bab-86cbe41c6431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7864bf30-0543-4678-a1ea-27c30e078922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfc5ef3-a661-4cc5-8243-d8bb14ce9811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df156dde-9051-4b7d-9846-19a132f0396f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e756bcc1-99da-4491-89d8-79bbc38bfedd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2c4fec-91b4-426e-8507-a4ca0f77dc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e8f66a-3613-4b17-8f12-977672f5a508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81794af-5548-4bc3-972e-e6a3dad9841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4873bb-92a5-466b-adb8-4e356ac2fb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6330a077-47bd-4b24-9855-3dbfbf0c97a4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a548435-aef8-4b97-a8cb-cc4739de7a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0bd0d8-f5a1-49cf-bac4-849373045282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37402cdb-87ef-453b-9b7d-491dc6f01647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f801a8c-4633-4aa5-b0a6-c26e2fc8e746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc7761d-24e1-418f-8ac1-bf05b8664066",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8464c0-f4da-4866-a427-daf6bce0f5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cfd316-b1cb-4adf-8972-5c54ca4cffaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ce3031-187c-484e-a598-0eddaa5b2e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e044d30a-4894-4eb5-9b8f-0626ca6aabcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bd629b-d621-4556-88f1-e180b4b9d48c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685b4306-06ce-4dc3-9176-3ba6023be47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3240b551-ae34-41a2-a7aa-0bbd9332d6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1f69c2-ed8a-4415-9c7f-df861f2ed5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b30d90fa-f5b0-4a0d-ac99-de79dc0fdad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16343a97-225d-4027-9ac1-e6b992b6bae0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f27feba-ff85-477a-a2c5-0b174584b1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb358a3-a32b-496c-b2bd-29b54a125f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac17260-59c2-452e-9623-6c1782d40f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81292102-bd50-4218-a13c-5e4c8e9556fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72669ad-35f1-4ded-b566-09e8bc447752",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af37a1de-60cc-49d1-af38-81db3ac90eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d32ec6-7466-4e1d-9a0f-41db64df1d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19942e54-d812-4606-929e-aba9b49e8267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96edc468-fe9b-48db-8d01-86393cfaaa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2ca951-0290-481a-8892-83ad4d18a0e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcd11f0-2a3c-4108-8bc4-bfb16d59bbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22bf493-c5c1-47d9-83ec-21ae4a065ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36143e22-7f1b-44b8-a2cb-e24f2c1211d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25d0625e-6f5f-4745-9009-a820478ca085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdde32ad-f59e-4ac2-b4d1-465bb3503816",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a04acee-d2ce-4b82-aace-e63b2b86d279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2a7ede-5824-4fd9-9eeb-d5e3854ee2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fc8338-0c2b-4889-85f7-4abcf11c9765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "55add5ee-6cea-4a48-9ed3-168b786018f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb63095-9b79-43ac-9acf-68c04bc5beac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531bc02c-31e4-4922-a2f8-e9a79d25cb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443d8dae-f535-4cba-8e53-e7aeff5caeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca89ff3f-801b-48e8-9940-39e7bfcf1b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d69ea1-2c57-48ea-adb6-0b73c6759f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3fd50a-5bbb-4a67-b07d-b44f970235f3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b9a09e-efc0-4b60-bccd-4fe735e5666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c6bbd6-121e-47d0-aca2-d6c7585daad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff28bc1-9232-4ea4-bf73-4a281ee8d103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db9b15b5-f6e4-40d1-931e-e0e6ac170830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17a8d71-9632-4dc9-a168-a381c1275c69",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4bd478-d550-4c54-a796-e347147da59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb9569b-32c5-401a-9148-0f6afee6a56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414fa269-fb39-40b9-945a-e7ca561b3016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eec8565-8b76-4c57-9bda-243065669e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede3cf00-ce3b-4849-a9d2-b53a8f798190",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc05721-1d03-4acd-9141-1f9e195c4189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85a709e-b793-4257-853c-a875b8c8412f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5550e53f-a6c7-4f48-8f85-b1b17796f1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b7c31a-cb9d-4e0d-a4f3-5feebf80b070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19716555-29d5-46b3-8054-0d6640ba72e7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a80c72-740c-4b37-b438-aef3cde83148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d90857a-2a70-4a82-8311-bf99c3ca703f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b60e57a-e0e2-4731-bf0e-47dfaa021054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db54e01-93b4-425c-bc44-9f1dcb1b906f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80c143b-988b-4ca2-96d3-c35f2e63e223",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246271df-5ef5-410b-ad82-09afebb71eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b785054f-1c99-4e7a-9b84-ecb94a8b6627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98cf743-b7ce-4ddc-8831-5d6b9e66b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dff1be2-d0dc-4671-88cc-3bba55a72e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef346ca0-8360-438e-a6c7-ccfc82c8fcd8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32e4fe9-11c6-463c-b1e7-65a19a8d686e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f235452b-4669-4d8c-9578-27340c5a4717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46373a08-d942-477f-b1e3-48037f79958c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a98ccc3-6798-41eb-89f1-4b5bb3be0e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033799f3-5421-4e7b-93bd-645471a7d91a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1714a3bd-3ee5-40bc-826c-c0d9d4157ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e35fd6-6162-4c30-ab5e-72a1e979cbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e112e5-5a61-4e2a-8f31-081a17c63599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14861e2-dafe-44cf-866c-6063d5894a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893d29a0-cf3c-49ce-ab19-fa0012422c1d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9536f13-adca-4ab4-a8cd-b668051920b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb827ad5-72e1-49db-ab99-f382bb58a9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030754a7-d734-49bb-a9d5-96c64d270197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6074ff-7044-4aa1-8f2b-9c2948756d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b730c81-9eeb-4a31-9237-ebcf4ed46b44",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc91800a-a745-468d-bc9c-831c727e6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01262e4-b1da-4ba9-9238-b9adceff6730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41015a95-39b0-405f-b21e-69e78335221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a2ec52-5ca4-4848-8ea9-9e4870c55f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcc4404-855a-4e8c-82c5-fc41522b3c6e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbf8bb4-0596-48ab-954d-d9f499dfcd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e92765-92e3-4175-bb7e-e2793fde868a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863dba49-6652-4352-81d5-aec0b06d58de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a23da9d-60d5-40c8-ab1e-514227c37659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6d948c-370a-47e0-bcae-9ff0eb9158ab",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d3fc37-5081-456f-a9bc-fe4698f4b078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec042584-0c17-4f21-afa2-c348e45ecb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac54454-247f-4b29-b34b-5c05f0a8f0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e3c96f-6874-49a6-bdf1-dc5cb19bc901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7aa123-40df-44bd-bde7-800d26c8afb5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5722e4-efb0-4355-a046-fca8e3aa37b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527ca9a8-924c-4a57-975a-161a09e53dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944c6c2f-2e39-4666-a0dc-dc65efbae009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e98f28-a49f-466e-a97e-ae3af852ce2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d79d49-8e72-4c0c-8b87-d9d00a1e89f9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e41449-a801-415d-af97-e9f374d15192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b08eba-eba3-4070-b1c1-aab9aba24786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e556c-f717-4722-b0cf-7b2bc413728f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "373fb219-a8c5-4362-b93f-86956c694696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f7c6a0-5361-4ab2-adf6-bc7893948201",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ead1d0-cbc5-49b0-980f-7b5a97d020ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6c6dd1-9e07-49cb-b0df-9b0ef42cac52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79120857-fd46-455b-aa78-f5dcb3dc35a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a65abaa-e80f-4a5b-972e-bd02180124f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3191a09-6e54-47da-8abc-da7082423b35",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a964da-7b14-4e3a-9637-f7206946e579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b360ba5-7ac0-4dc9-a9aa-542df781d9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730489aa-1efb-4d80-b582-73949a67833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fc5d49-9155-4ac0-af1e-cb70d3384ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f9bbc2-e505-4349-8610-f21cab46ba60",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcfb655-5669-4389-b921-da94b747521b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9968993-8a66-4327-ae76-f51077308bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbff8b92-f6b6-46de-912d-1e246b965273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80b42844-25ce-47d0-9f3d-c4b3f6af98b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787dd91b-3d17-4999-810f-fb6837ad3ff1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbac9167-dcf3-44d7-b595-3a1482ab4937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272162c8-d0a2-43c9-95c3-4b7500baa076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3905f43-291c-4b81-a8a3-5808e4f1bb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "202fa127-3845-4525-a7f8-62928d25d3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45307f53-a410-4b76-b443-09d14eda08a5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1a0e8e-fca5-4c12-8ee9-bb4208d25ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af70b7d6-b51a-4d32-83f1-136f6d0719e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454e45fa-369b-461d-9ad9-538c6eae28bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50052a62-e909-4536-8f0b-405d5988d013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceb1993-4f4a-4049-8f48-a8b3b7b8709c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e100b8-0c75-412c-a141-0046c7999826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e53dceb-a5ba-4003-8947-5f02b9c5230b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3652da5d-8703-444e-b34c-546d19f89714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0adbba9-2f15-4dfb-a727-9a85b6ee4d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365799b6-0b5f-45d1-9b9a-a127eba8c336",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24983a5d-601b-4076-82af-c18d8e0821de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7efadca-6290-466e-a695-7a8cba7285e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44896bdb-069c-4ce6-a74e-822d34554d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "900d0dee-865a-4c32-8a00-da5d2de741ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa5cd75-45d6-4c22-adf0-d5bf701e3298",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f693ed48-5d9a-48cc-9c8c-dedbccc65e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1eb2762-4c83-4440-b452-9fedd6b0a2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fb01b5-2003-4146-9964-13dcb39500a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9e5f66-a606-4dae-9a57-d85691ab4f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03700762-7bfa-488b-a039-ef1fc1570a52",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6326688c-01b2-4df5-a7c7-5c5e562783e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa61f43-47d1-4955-80b3-ea4808e98020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b51d76f-8328-4a30-a726-be77f680f05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ef7feb-218b-417f-91d5-77ccaff15f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40923a98-9e94-4c64-a20e-f42abe2234b1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf63e90-7c6a-4e96-968f-0d8713cc511d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ac2b9d-b293-4ed4-b73e-db2c69406da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e8ee8-809b-44dc-a4d8-199df67cab16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaa0b31-6cd2-4de4-b5de-27937464cfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caaa2e5-ed0f-482b-95fc-45c0ea678be7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94de4845-135e-4612-beb1-495727ae2c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb187c9-8c8c-47f4-9ff7-7546a36c494d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f6691e-13f6-43fd-8243-f7917a85a2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "234a1dad-1159-4958-b77f-411b68b1b432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7cac5f-3250-46ec-aaa5-3473402a74fd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1ab7d1-d5af-48e8-8e2b-a4b09f0282eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c23291-fdf8-479c-922b-c551ea708db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c501d53-cf87-42ed-a2c3-5475e0f25c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a77bf2d-12ae-408c-903f-192a6fd6b230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62793fca-92b9-4060-8db1-9a368bd7a2ef",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e22b37a-357c-48e3-9c79-b9f28a520982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc4f8f1-003c-42fe-b05f-95b924f103a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0502adc4-6b12-42dc-96dc-001f7f44dd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0d35f0-8fd6-4e96-bca0-63a5b7c7a082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba7523f-8483-4637-893f-79d4f2f79c93",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f20f4c-e5cd-426c-86fa-7289d8e2fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6783768-bac7-40ea-8c3c-9913c4ac99aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9841a8-6868-4349-9bdf-a0a7d8ec39ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee9979e-d40e-4b90-8265-8a0f49716afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4315796-7ef7-43c1-a5b1-05c1ea943d3f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4b3b03-78f8-46b9-bcd3-eb4a84303667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c1b686-551c-4591-91b2-b396843e141f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feae1da-77ec-4f2a-bb31-c8d2e438af36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77da02dd-715f-4676-b764-1c39ef7d957c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b4435c-9f1c-471a-a49f-f6bccc34663e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f342d1-01bc-47bb-8a5d-980d1c35d486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd75d4b-105c-47cc-bbae-8b061c55f1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e7cf55-eaa5-4c4a-a158-15f5ba04c0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9f1541-511b-4da0-9e73-e08cabfbd3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6cae95-a516-4a38-a60c-581e265cd7db",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982e6026-aea3-4dc3-9cf0-84caf57120a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bc72032f-9414-41bd-a77c-46f7ca6a20f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a109de-35d8-487c-acd4-4f20a86a3eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6570a541-fe61-474d-9739-221f99fd7f7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b666b740-7888-40f1-972b-266bc17c3373",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0787fa21-c0f2-44c0-ba85-460060cf4b22",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb163e3f-430d-4b58-9c2f-9cec23ec4686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68e57e4c-33a0-4dee-9214-bddc8546b3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f86aa96-d76a-428e-89cb-5fc101270744",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f7bde54-645b-469f-b8ff-0395ff92407d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddd45d70-6082-4a80-88b5-c12a7ab60a63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c28f62b3-3dfa-4638-aa5d-8fc6441b3c21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52afb298-f6ee-4392-aade-06476c42651c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a9a77fe-19ba-4db0-9698-c269dcf2b7fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c1047ab-6c36-448a-ac62-f2946aac74be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db85628d-da8e-4dfa-aa54-fd7812c67370"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd19ba3c-abaa-4030-9783-8536132922ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "034e2b48-f5dd-4082-9728-74f7a42f92cf"
                }
              }
            ]
          },
          {
            "id": "c0221eb0-9573-4720-ac8a-ae708d1c194f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "587fe259-a08b-4c48-9175-b5470a146c78",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f89fe38b-81fe-4401-844b-3a1f1d7d397a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5730cd50-a53b-4640-8091-8cb24a16308a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5161b450-38f1-41aa-a783-217870afa21f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f4127a2-8ee3-402a-8f10-6bc5d141d9f2"
                    }
                  }
                ]
              },
              {
                "id": "6a8bbf8a-8587-41b9-9715-3a1af29ca48f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc60851e-6615-413d-ae43-163f96a23b34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a539f2a-1e4d-491e-87c3-1f0cfa6893bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f0478a1-ec10-4479-a592-0121fadceff7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0aa7efaa-fc48-47d1-9573-dc6a00d37e46"
                    }
                  }
                ]
              },
              {
                "id": "30fd28e6-fa23-4560-b10b-8f5855ed8f1d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f253c69-cc23-4195-94c6-cd9b073dad33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df95a27f-4fb6-4ed5-82ce-67445d5d4745"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6aafb12f-add8-4e86-abfb-e6c49df844b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3978c53b-9006-42af-89a1-b27ca7d696ca"
                    }
                  }
                ]
              },
              {
                "id": "c57f95e6-b630-4f61-bc8b-9705787d194a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17f4c25f-e8be-4d32-93c7-dbc63b66e00f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b8fd49f-904c-4473-867a-a8f72901a23f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f973ef47-9f87-4653-aec7-8c5c73fbb154",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f5597f52-90c3-46f4-a7ec-9f39e3fca7dc"
                    }
                  }
                ]
              },
              {
                "id": "dbcc6e50-c809-4cb0-af0d-814043a9e343",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "037937b8-66ee-4866-9a2d-9d6b0641443e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51aed8c5-a411-4900-a891-569123dd10f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83ecb013-2261-4f33-812b-0948f5fc273f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a3a09902-960e-45bd-a58f-dd12edc639eb"
                    }
                  }
                ]
              },
              {
                "id": "82bbbf55-b2ac-4eda-96c7-da5549417f66",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1adeec9b-c2c7-4485-af5c-26686c0f8115",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "494d8366-d17e-4827-9c5b-6d86cfa2179a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a22c6ac4-2463-4522-91d6-53ee110fb6c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9e616ab-bf3c-46d3-8280-08c81ff7a815"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72456c32-4c03-49b9-9343-accb6c9f16d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9f676b1-053a-47e6-99da-0c93facc8583"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0ed87be-48f5-410b-8a21-3ca4e9b7d362",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac14e046-7c85-472c-9bc5-98bdd24a9247"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d9174a9-af8a-4a2e-9007-14940f19a4b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4ac52c39-d232-4636-9fbe-780985b70659"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc092522-2280-46db-a774-268c1bad7428",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b58d520-e6dc-42f3-8ab9-fe6cfc86e037"
            }
          }
        ]
      },
      {
        "id": "1dd39467-c790-462d-b3da-10ebbc7c3ed3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a9be934f-d259-4f01-88cc-4a5b0bb794fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e92b6e0a-b765-42b0-a727-20f942e732f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "905ea6c4-c795-4480-9a42-9b3a1ff236a8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb26e0f3-765b-4553-a10f-136f49a2f190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d2f292-1729-4e75-b2bd-3ec484ff0b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1172df2b-f9cb-4c1e-9420-c15f9dedec64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b1a303-20bc-4e5f-8371-9746454e9935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112b2d03-46d6-488c-ab50-8c7434e794be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1ca23c-2f40-4379-a199-9f6f0dd49c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ecd03e-1c60-480d-91e5-29304e343cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d357db3-4fe6-447b-891b-c4f31a950459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2285fe-cf79-44e2-a629-63d60853ff35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928ddeb2-9b7e-44d4-b43d-973aad5e0711",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580e6fbd-b81e-467c-a91e-40f81751abc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb76bc81-4822-42bf-8c9c-e5f85b3a33be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72db7b76-c397-4d61-8503-fc03a4d2cf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a706a638-b028-4a18-9044-8309fd93938d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53c72de-3832-4bb9-8613-70a5c704e22e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed999463-9a36-48bb-a461-b02b4ec46915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159d4cbd-e5d2-41af-9c9c-7e77fc76be15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8923507d-50c9-45d4-b042-1b67b5494190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f959ef7-f61c-40fb-9879-c48c55a17a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfd0880-f73c-4e5a-a2b2-278e01291652",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afcfcba-dc6b-40ef-b944-c4310f6f0e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8351456c-b486-4653-904a-4fb1ddbc0d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da98b6e-fb8b-47ec-8224-a1027ebad81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1ab6e6-d2fb-48c1-bb2b-6ef4f8462ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2f5d82-7f99-4ba9-b22a-a4ab9480db90",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805fbadb-deeb-4525-a140-2298a32d3acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8b82ba-22d9-4396-9818-2079d2d436a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30b7ebf-ea9b-4e01-90b7-8f97b1feb66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00c1e7b3-d69e-4981-b518-b8ff46ff48e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf2e052-1c10-45ce-873d-d868de2467b6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79515e98-166f-4f63-a164-b3a5ff0be794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154e3053-c4cd-4237-a9e4-7a3f661ee51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da7858c-92ec-4757-a106-865d1ed2cd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0502a94-5600-4d8c-98e5-36e01a74bb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09e605d-a259-425d-9435-0f2d6a615fa5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f3201e-9e0f-44d9-bbdc-d7844ab1ba44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ff2dfa-16b5-4084-998a-6d049fbb9c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86c4793-1d93-4380-9af6-7bce92cc84d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7ff6f5-3ecb-4225-a9d3-7758e0f87caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8af009b-2912-4bf1-9232-51f83ee0b9a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e965e7f-283e-45b1-9542-d36eb17fe439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f389b570-b773-42ec-bdc6-40679afc8083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a00bc0e-7b01-4142-960a-cd61d9455bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de8fc4c9-c7b3-4c4e-90ed-02d571a97ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bcada5-5cb0-4446-a9b6-4ff987018068",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204cad2a-9537-40ee-89bc-cca83d39975b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e131a8a1-dad8-412c-8612-9ea6da00192d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fbf73a-b09c-45cc-99b3-834600e4b44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd0edd9-bed2-49e4-8909-bc069a406912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5800e6f-a26e-4c04-8776-15a3fd637aa6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d829c03-7da8-4e38-8e36-7f84aff5d92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3d016f-37c6-41bd-87ea-57c17b65b7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9a67cf-12f4-49bd-842a-adbb3c35f4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "80c52340-57d8-4c2e-968e-8b99cd75b616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6692b265-7c90-4b70-919d-9a4bceec1b8a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e37547a-7eff-43b7-b597-73506d564fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48d796b-628f-4b75-bdba-0564af55e41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8282741-0c60-4b73-8096-4794d9c6c5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ce3de3-447c-4bc5-9898-0343deb851af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255a4810-3d7c-4b87-945e-418b6fbe19bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f067c5-0fa4-402b-b426-ead5763f08b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913237d7-2898-46a5-981d-6536ea0c7fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f5d9c1-ffb3-4b14-95f7-669717e49211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d62f28e-45f6-4dc1-9aeb-b452fc761e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168443ed-8905-42bc-82b5-4a1cb4ffbfae",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e40f43-6cc2-4627-827e-a24578233880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c77268-cdd6-4fee-b5af-55498cd40e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30892045-2d7f-4ea4-865b-6bb6fe6036f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8401342c-5cb6-4834-94fe-c88126ab6083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1ea912-a1dd-4b90-8cfd-122f395dfd15",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7079b7-85ea-46c0-9abc-40cc614adadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09a0d14-c0ba-4582-bc2c-b5659eb40546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10899e83-ffc5-47f0-8b78-0ccd439f6fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15d795a-1df4-4225-afd4-6b956dc7e996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676261f2-c704-4538-9a80-e0c2a6012219",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d668b92-703c-4165-945e-7fe9d5578a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e458121-6957-41af-8016-b3f891f6dcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64806b25-d3b4-41dd-ae2f-c26eda0580a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3e940a-6966-498e-8ddf-a2cdefc1c1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefbb0b8-dea0-4cd5-b4bc-e286686acd3e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b645368-2920-40ff-819f-18b6b1472fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55178433-19ca-46e0-a441-4c61de95422f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db05514-6dd8-4879-a24b-cb64e4814f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b58e22f2-6b93-4631-94a1-9cb50f5d3914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3eece6d-ed2a-4143-8aea-227c08f4278e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e962b995-1096-461e-afb0-bfd9a6548aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe951eaf-aa61-4a43-814a-9564cd27e9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bb1ebd-5ab6-470c-825c-ca63d8d4c850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcb8ec0-db72-4323-a504-e0a19f04f218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e512e1f2-c161-4909-a88f-f47a459392b2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302f0438-fa15-4c61-9103-c47ab004936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbae2912-d9ef-4a07-8799-e6d04a1fa4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8bcae0-1696-425b-9d4e-56fa95f5c796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "393f55f2-bbce-42a4-bddc-e17e8da3c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0f3e24-5b0b-40dc-b0ed-0094fb10b0e3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd770594-1d2d-4d1d-b34e-2fee377535ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3833e703-6707-44e1-a02e-3bdb3f91b560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b493295c-4f33-4da7-aaa3-3fd7e56531a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96310917-9ecd-4332-9504-53ba18b4cce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d3e93b-7951-43c5-a026-3e1544cdf28b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9b8412-a88a-4ebc-a655-90412ba6d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058dd361-265d-488c-b93b-92334b591a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d749cb-05d5-4615-a3fc-c1b7edf8c498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcafaf7-d51b-4cf8-b034-031f38b5bc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7a53c7-8bff-4f7c-8f56-f276b599114f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be6f281-b834-429e-bfd0-952560020f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f966691-771a-48c5-83f0-cd309b81b57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f48423b-17cb-4844-8206-a5d5588fff8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e2c06c-49a8-4c4f-8e1d-97babe271e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3832d62a-7621-490e-a849-2430b97ef289",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2abf25e-9d05-4d1f-ace1-6e2fce2743cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e444c29-7b13-4fcf-b9d2-ef91d3ea460a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec200e0-1e94-4899-96fd-903efd97adbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deeba076-e848-4d45-b16f-f5c53e4514f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dde0eef-0d90-4346-8c10-0bedd3867856",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9b8d23-4cb4-4ab2-a772-7a165d9526e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1dc3966-d03f-4217-829c-0f5c0f19eb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6633aa74-03c8-4b82-a18b-db9668aa42e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ddd36b-1074-4464-945b-802c95185a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849c031b-0bc5-4251-97d7-662c807b1a00",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f2bb16-6b10-4b6e-ac1d-a0aeb965349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68593bab-fbcf-462b-8b9c-c7c7eda968fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a64abe1-5329-408e-90d4-2b981eee23fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e3902d-e06a-4b49-8679-1de13c03bc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf57594-0dac-45ad-9753-d113dbb28ef8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f601f9e-7702-4e35-8457-3759e7fa669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea3cf49-c281-44d4-b87f-ad17193628f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ec04a3-f4d3-4731-bd1e-c15a824be06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41358637-19b7-481e-a1d1-253583805289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ab889e-f8ad-4d0f-b754-78d45b62847f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c132c74-50c0-4d74-bfc0-205408135f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614f5c9f-2b70-4c21-80ea-f28478c16478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7363c41b-39e1-4cdb-9c3f-5982577100c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab245a8-8084-453c-8acf-4ff4e1f1fb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6410ce7f-c0a8-411c-b158-a3ce56a77179",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ef0965-b5c2-4854-86f1-c13b6d70f792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd75bfe9-8cf1-4080-a466-12dcc306d0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64899672-6518-4254-ade8-d523644a7c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee55164b-acb7-41c9-8b85-a427840da736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9356678-d37b-4ac9-add5-66a8f7932638",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776696e2-3651-4841-b22e-b9372c09a24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14bc8de-44f0-4f5c-9745-cee973d05f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f791f64b-c1f7-4f7d-bb30-ab20bfc48ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b22fdd4-f44a-4e7a-9952-2a31fe284110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7726c4-4228-4f1b-af4f-82898bbcff5b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ba81a8-b960-44c2-ae2f-1fa573310dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa49cfd-e12f-45fd-93b5-7ab2a60b822a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1db453-1550-4e37-b988-3e26f80ea200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "837b52c0-efa5-4d86-959c-2a5713825eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c6609f-3347-41f6-9808-61e4e8b4e26f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ed6059-ea15-44ff-ae85-98073e00f8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10078a2-385e-4729-aa67-27dd5262ae0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3835636-70c9-4cb8-9a85-b08e952f218a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b80d1a-a5d3-429a-b012-d16ac77a7c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9338ff-b170-4582-828f-d48f0a71283e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc0df78-be32-451a-bcf6-7199af431f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce14f65-c30c-4f4c-804e-e9c71ad9045f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884f0a6a-1a13-4ecc-af96-b67b00bf9ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfedecba-1484-4728-8125-96faf707a22f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "efe9c23e-e916-4511-b9ad-3c70f3cbe980",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "926b8731-3138-4077-af1a-efbea299b31f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7be5acc-3eba-45ef-bd25-37f34a66f01e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "50e78058-c365-419c-809d-5ea54647f92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcc8230-fb7d-4dd3-b6c4-653c26be1b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6cf22c3-d735-4d3d-a2f8-f65afb035b7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1076cab6-a420-4df5-924a-b7e92471be1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aac34948-380c-47a3-a45e-04290e57307c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09d8221c-b41c-4641-bb00-a8141b1f51a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06a143d5-5803-42b0-9d0f-7d9e043266aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7db8a556-e2a2-4067-9cad-8a654bb79270",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f145215c-b56b-4c21-9ac1-436c481386bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e4a019e-6c44-4d9a-a8bf-ae7c595f7d91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10b5aa70-7b4f-4492-8e00-9c9f484993c6"
            }
          }
        ]
      },
      {
        "id": "a5e1ab46-299c-4aac-917c-0c1a7232d58c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3556a1ee-1ff5-42d5-8bc8-a02d793f43da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ab4d40b-902e-4bb5-a448-4c927bd696e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "69c4a3eb-f654-468d-8cc3-40b9ca4b96c4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e464ce-46a9-4fd4-9e44-659eadc3d68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82af38b4-7fe7-4932-91df-c25f475fbcfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e67bfc3-5b96-45fe-8a14-ed34cc144f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa23e24-bdf1-4c85-8ab6-6548a39135d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4359835-2136-469d-951a-01c30a7dffe1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4044f87e-a618-40d8-8a0a-2015f2be7b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e413e2-aab4-4695-a32b-4b39c38d9cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3e5b2a-68d9-488e-a6f6-ab2e16ebcdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa855ff-d2e4-455b-8bb7-17373533cdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9c1319-a918-4e17-93a4-b8e4057c8ab2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1efce78-86e5-44bd-a686-b21a28714599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5550d2-7935-4e47-ba22-f6bc7a668fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d717ea6c-2f28-4048-98da-0f586b860cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf6d093-2a5e-49d1-9012-9fb9ee2d1d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26f2a98-6cb7-4751-9aa9-a84a81b6757d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cf9f46-7b9e-4cff-b24e-14ad5faa1891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a38a5a-0127-4a08-971c-4fa720a10581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9340099f-c524-4c30-8baa-345eb8e83dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c05ca5-a15d-4b0b-b78c-829a1175371c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f745fa2-ba33-4d32-a1c0-3e293c72b363",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699e23a0-2173-44c0-acfd-ed116a9f1228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09423d6b-0fad-4d54-a25e-8d8405a09f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41624196-a49b-43e2-9a15-fea18d6302a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5303aab2-ff1f-4c90-842e-f6e25a5c83aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad988f4-5541-4307-8502-92b9aa6c3bbf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d9b8ae-7dd7-419d-b70a-81c42bb197e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d50fd9-7704-40f4-8b72-e948953030c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d8cf7a-c840-4542-94c5-1961de959b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "882b1472-c0cd-4dea-bd1a-ccecf6278b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504fca22-0e9a-41ea-9c1b-bd487ef154a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26408fcd-d69b-4ce3-8396-d54abd601fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63aba4d-4b47-4c54-90d7-d3d10c2ad5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6527c4a0-c8c1-43b6-badb-a5317569b001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a60393-a7c5-4f36-99de-fa209e703848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b6b045-b9b5-4712-9745-2464f07b00e9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cff83d-a6ae-4f61-87cd-e9007ce42884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7db2a6-9ca4-4776-b471-235978603e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c173dd-c1fa-4160-9928-4a1c84abced6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53dce7ae-7f8c-480a-adcb-7cac39d265de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63150ac7-5c79-4066-ab8d-6e895ade1d2f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681ea18d-6c36-47b3-98ed-09c907b26b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bcbe07-6009-47ea-bc21-1e5479d16df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb2e23c-797a-469a-8e2a-ff2849dea7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10bc7c8b-1232-497b-ad75-37241ed815b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51344798-9893-44fa-b34d-1a8552d8e663",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c715afb7-37b1-4cf3-b083-d59d3522b5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff4fad0-d20a-4267-8a6a-ad4c44c29c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504f2733-9d27-4086-8ccf-9847fc109582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e538cf4-84d8-4476-8bd3-61c728ccbc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc708e4a-c16b-428d-97de-ec5212841f5a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebc6317-c94d-48a8-ac0b-ed85d4618fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521ecbff-f7f8-40e3-9d63-21a8e482a20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e77ac6-0d90-413f-83b9-736b580becc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf8b923-e2fc-41ab-9495-c06c1bd46b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70da3d4d-9086-4023-8f2b-f00b19609447",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a38749f-cdca-4fe1-8084-55202a1c1cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7443f41c-e1d9-4e89-aa47-1394bc912f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b23c2e-bf95-490f-aafa-22d0e90f68ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "454e64d2-315f-4cb6-b062-a40c60ff5871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fd76f0-65ef-4bbb-ac6d-0012e8bef664",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be37d87f-4a5e-45e0-ba49-a73f6931512c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a9edcf-1602-4ada-8963-19dd7c045e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f78ef18-ab2d-45d6-a553-cf550558974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6114c708-00bc-4e17-ada8-5dae9f770161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01e585f-a204-4dd9-b41a-ccc412e3ee1e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26d7657-f1c9-4cf5-a42e-0aa5c6eb36fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1963a584-33fa-4ed5-9735-2ae72f19a877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c712f46-b753-432b-9772-0a7cc10e13dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf68c068-36f2-4c7f-866c-e0ac7f65631d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1b86c7-075f-4c03-936d-0ae4832638e2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ade238f-5dba-43c7-8956-23d6141d5abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0885cd64-0846-4d04-8806-da660029487b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0f127d-c3ff-4998-95a1-0bc44b9abd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7e986b-4979-4320-93d3-8f272a182780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ec51ae-c17c-45c0-ad3f-2192909fabf6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e117f4-f813-4737-b64b-10927074d170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd48274-1d71-4ba0-8c05-b9477c86b135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f2723b-3881-4d6f-bf7e-1b04efd6e5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e61579-b26c-4c56-ae5e-11fe5fd5a5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bb316d-66f0-4308-843c-9846b82db8b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83b9e60-2ee1-4147-9d9d-6d76b8fcf0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4e4378-75cf-47a1-b46a-4d668ee478af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fd0229-925e-4f5a-afaf-08b3089ff434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff97b74-a143-40ce-9ae3-11d634c8d59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df8440e-74f6-4bfb-a68c-809879096311",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664f36f6-d7dc-4223-aa49-8f7ed51d0096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c89e6a-3d0a-4fed-98fd-af2df65f9d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77ad290-5f60-4f0c-90a2-56e670d4932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3f9c6d-95ff-4b87-a366-5c05e3d13ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c2991e-0e43-4e69-8599-08f73ee1b940",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47b4c97-ea32-4b62-a298-28f811cce23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefaba0a-c04e-476b-a5a1-c250abe33443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1887bb9d-30d1-46fd-8fa3-e75b7515d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfe6c52-8448-481e-ac67-b8136edec68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1529cd9-435e-4b0f-9cdc-0067e14a30c4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a80be22-4d40-4422-adcc-e3b743b76ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7ed6de-7e62-4134-95b3-7221d8b995a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575a7807-36fd-4ba3-9694-0950bbc52c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76fb5028-b67d-4c3c-a6b2-4af9e80b5920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa14b9f2-30d1-4c3b-ae8a-aa2cda4c1426",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef9ccdc-b0dd-45a2-b0a5-5b8cdcae4680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634f72ab-2b39-4174-ae1e-498646e43e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de00215e-4e75-42b3-bd3c-531807d57312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3d215b-6759-4614-a2c7-dc936d3862ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d02187b-cf3e-4ae4-a765-a01638784067",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f256f30-a51e-412c-ac1f-f5c2ed7a6f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cad47b-079e-4131-b024-be51d60c2c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0991cef8-35fb-4da5-89b8-8b228b88eeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9481fe2e-3b42-4eda-941d-b81603ec7ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8269f81b-e3d1-40d8-94ba-2e7130b708d9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1e1a1e-baa8-4b0d-b5cc-b6b2705f2f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30655dfb-f803-4506-902b-56ee71559e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398a162d-6366-4a1b-be70-0355c7206240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3fd7b3-d9a8-40d9-9724-2651ca4d3351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d7550d-101b-41ca-b812-a68a038452dc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f9ae93-4f9c-43a9-bf6f-9cd11d661103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd29f0d2-8248-4024-a70d-0532c07d8e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a1e260-d70d-48b9-8fa5-f9022dfec734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49506902-e8bb-49bc-8871-c09ac3faca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbd7b41-44de-41e0-9b00-0c9acd3d5750",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2126f596-4ae4-425b-b6d1-de5da62cf92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4b604e-3946-4820-9c1a-3b2976eb2686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baa5ddb-1075-48ad-ba93-1d7fa4d7c03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "424af097-b955-4d62-b8bd-2c404355ea26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33aea955-e2e3-4d32-86e9-78c88ef6fa84",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3a91b4-4817-42e7-8ec1-3d10af18d95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed87a381-71c4-4b9b-b334-1a49424632da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc0aaac-ffe1-439f-9cde-2b5d81f45583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "136f1e1b-74cd-4426-a2e6-380c13e18894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c6c06f-23bf-4f56-b055-e13965208d14",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16641b7-c067-4293-b982-49b7f8cfa662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3dea08-2efa-40c7-b0f0-8032fe7f4800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8615827-bf72-4776-b296-53636b8f4916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2abf8a-5b4c-4dc3-9a58-4528865e8a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea220eaa-1515-4521-b225-5032d406c76f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03529d9-bec3-46ee-8b28-4cc5d2d3c563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe7453f-2d49-4f41-9516-79a2865aac89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5816b3-935b-4e86-8e13-5b31de3c3616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38e2760-5233-4102-9fac-c8241aa58aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a245e2cd-8c51-4bcd-9f83-840e8c0ce861",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf28a37-162d-4a87-ab77-a0d9a15aa8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e034529-04a4-430d-9c05-8b51a480ef92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3697fd-ff1e-4936-8902-4f15ff468588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "553c2c64-c618-46b4-9259-746dc7b4ff74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4b8828-2c19-4c2e-8a5a-cb0df034ccb6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec70374-9f08-4489-8595-e547b6d09db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae22c75-0056-4d6c-9db5-9b850578b53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152bc3b0-3434-4100-b46a-9779baeb4348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8ac41b-13d9-446e-9a46-9a7195d48a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8747fd7-6712-4c53-808c-866b4cc9f534",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe3cf4e-661c-42a8-9715-1403b37603be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67abbe1-9501-4223-965b-51adacab8463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3783037a-8baa-4bf5-9a2d-d7089a03ba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf842ffd-3f16-46ad-b034-00ae4b06d544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d0f008-4120-4f04-be27-326234f20a6c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03165f10-ee97-4a96-ba21-21c23e98edd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2bd8c1-1440-43da-94be-7d8f12590cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc36d3d-e424-4cb5-8364-4f456807a0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7a000b-5b7e-41cf-afbd-0c079c84d64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b8e0ff-dd24-469e-aa27-c207e8ec53bd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0ed53-ed0c-42eb-a5ef-9f730cab3ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde9e094-9239-4918-8bc9-0e4a77e00a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1721844e-5c25-4e0d-9820-039177e5382c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f2f4c4-5482-426b-abb9-8ebd3921b7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076df4e5-bff1-45ae-a92f-8f2dccce3a81",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe62e5da-c139-4d35-9c65-919129f65c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03976e4-b845-4a0e-b0d7-bd1c61f92e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbd9cd0-80d5-4b4a-852a-ad3445fc78bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b62825-86a2-4787-8d46-2e513574e311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d34bc0-11c6-4332-a995-c0535bcd7712",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ee6c1c-9306-4d53-b8e4-56f590e7523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f510c1af-4ed2-4647-a071-816439cb8491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6d12ca-c5e8-4dd7-99e8-13eb4beeff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2726aae-c75c-4b42-a0a9-e8311a3139aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9e503c-4b37-41b1-a7a6-739b9d3c1b66",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae587150-40a0-4709-95b1-753f4b42efda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b2ec9a-8733-4f87-a429-dbcd441ec14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85bdc71-df1b-48b2-a170-6533b17d8d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "529afd04-e20b-43ff-b6b6-ab136d681cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5edf413-4031-4d12-b947-f0566bc78308",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7db2ed-209f-4c74-938a-77500c6f3db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718161d1-886a-4c16-82d5-50ff5c9c3584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2f6c35-bea6-47ee-99e1-747ef8e8a085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbb8304-be02-4cf6-b116-5bdec4975738"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac9ff978-b433-468b-9a31-4b454f00f65a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e987b49-3217-4db9-9639-a880df9a555a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8246235-6f59-401f-963e-f123f64be4bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "070fe8c1-5f1c-4ac1-a4c3-9f07ae7d63ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6896485-7301-40fc-8794-ea061938132e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ce64a03-b7c5-4413-841a-3ef89809a2e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6ec1265-6a42-416f-9a5f-9258381aadb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3538de8c-c7e9-4df9-bc37-448d2c92d6b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa8999ed-a0e1-4237-8158-68c22eecdd11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3059cb3f-1acd-4ddd-8fbf-d7c704ee03ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38d27885-2997-428a-8274-977c9437fbb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d84b0f80-21c4-45cb-a553-b1c5d7e789cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7da5d6b-218f-4920-84a2-a15b6b1eb6ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97881c38-ef57-4819-9acf-986c4f5ef226"
            }
          }
        ]
      },
      {
        "id": "bb7ab36c-9784-48ba-a9ae-3ecb1629758f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5a2aaff9-aa5f-4ddb-95f5-d8c90aed2902",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0fe3425-10e8-4a0f-b572-0514573e5b04",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "12afb8da-dc9a-48af-85e4-a6bd49a31da5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4077616-3311-4440-8941-4308e698dba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e71c9bf-b46e-4082-8568-f5d5356011ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f2b86f-7828-4078-ac7b-6f09b7944376",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9965d64d-5215-457c-bf43-2ba21fcfdc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe9bdda-87d4-4a85-abbf-847111123fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53b1fb3-cb2b-4a0e-b160-7989e20d9c2b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2eae8f2-672a-4706-9c20-bbdaa20dc3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f2add3-989a-4288-867d-39e3f12f34cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53118de-3075-4e43-a929-6df8f4455bb4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045e51a4-d179-42aa-9cb8-8915377db3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbb71fd-27ff-4101-9fa4-da9b442923c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c3ef5a-903e-40e7-8bdf-13ecc8c22a2f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5e8e6d-d583-4dc4-96d1-caa8ed9817a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b0ef96-61ca-4e25-beb2-1a11b0bff7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330e2cef-f04b-4e3f-8736-214c124bede2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14123a3-c379-4621-8a04-e2145b210f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6587cf8-7f8a-43a7-8307-0851db82ddf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadc582d-217f-48d5-9e98-b6258bb312f5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f1087f-f5ab-409b-9930-28a9bff80483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8caf8d4-6668-43b9-a877-f05e7b73b23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25e92c7-0823-4c99-8960-8db888d385d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540ef1fa-87ab-4dd7-8597-5f474a7dd585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ee3abf-653e-4807-b100-55ca74fd4572",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a56bdb6-9007-40ba-93a0-cad61a81335d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f629353d-9433-4c10-bc43-d905e939011a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705e57bf-f41c-47ba-9c68-c72598066ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d3462d-ec84-445d-bee5-8266c23b5265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09066193-59d0-438e-919a-088a593e592a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9549fb5-b0cf-4f17-80c8-e9fa032fb19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ce56da-e6db-4f4f-9bde-95cae8e9cef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7c9d45-8991-4e06-98c0-d56584623e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f2799f-6536-4b3f-94af-9bab4a580923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc99c47f-d00e-4735-9815-4fd474e1903d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6b4cc9-241e-46c5-8008-f98566d549b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7906ec86-8437-4ecc-943a-68e1be4ddb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea3bf66-cef0-4ef3-8191-9782cd830560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015b454b-5f4c-4496-a3d9-7a833ea25f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c46852-96ff-4334-9593-bc21b7ce4d05",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bac1d7-fb39-4000-9e94-fd5ad54738dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95713800-6a28-47b8-86a1-fad7198cb899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18359e80-2e36-4db2-ac96-c23512c12fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4077d4fd-e8cb-4846-9cfb-47075f1fda13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4141b7bf-2844-4cd2-a496-62889db3e9e4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b4671a-5171-46dc-adaa-def7a04b0716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2132584a-b0e1-462b-afaa-33131dc09bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48c2fcd-9d1c-49e1-99a9-27a918736817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dccfcf3-ae45-483a-b2f1-3026eee70420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64684591-c0c9-4c66-a66a-23d1cff0fd06",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15ee16b-7a02-4d47-bd48-52f8ef43a312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80868dc8-7035-4e51-be36-6b5be837496b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c2a4ec-7bc1-4be9-8e02-4e22d5bc6585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc07dfa-5d05-4137-bff1-f253ddcc470e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee063442-daeb-4ded-ab0e-f2f04c0b978e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f449be-4b22-4870-a773-e568e8ff62db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ea476c-a53b-4499-a597-4d79a58f98d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4b6669-d53b-4bff-a75d-f2699d51a99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d304799-2570-498a-b76d-904aa6f9f1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56d29c0-7f47-48b2-b777-2feb7385c8f2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e85322-3352-4ce0-9fd5-c3e898ed9cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df628ec3-0010-4560-b69a-ba7d753c5916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7a913f-a7f6-4fc6-81bf-fb03a0d74313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f840db-ca99-4870-b884-d49b775ee5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d91de6-7089-4d30-9ded-5361c030bb57",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a84cb2-eca7-4fdf-8d5a-6cddc2b946b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9746074-8cec-464f-a187-e3e03ffcf975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fb7bcd-3d51-444e-af99-d4874e633eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5039999-28cd-4c66-84a0-9930d2383409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88e994b-07f0-421a-998e-73a86f3007cc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f307cc-596d-402c-ab4f-cc7d52e929cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff2ef8f-8a6c-4930-af8b-bc2c8f784ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fe982c-684e-48b3-9ade-b182d26b667d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd2b5ef-064f-41ed-b01d-138d87fcda04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354f5f66-1bf7-4be8-b32b-f54651222b43",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe83a4e-698f-48a4-bff4-c796b12709ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3591831e-c8ea-4858-8482-68124fbf5bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12761b33-3189-4960-9e8e-b8451985d87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e88a77e-109b-45f8-ac55-ea2baf1ee8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a255968b-ff5b-4c26-aa02-c01b8fa97baf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9fec79-46dd-43eb-813f-ed1e59bf16a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d13fd2-ddb6-4961-9966-39b8c27c23fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7ca024-f1fa-4053-a1e3-b19d7e049b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d74e965-e9b1-405f-a026-16f889c1f062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19502970-bd08-4897-9d7a-2c1b11e53500",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b9edb7-5762-4ebc-a550-b9278f459723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3972f423-428f-4a71-a151-deddee7b8cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cce9684-f9ee-4814-87cb-5c417a283051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9cb1ba-747c-4d50-89ba-410662155cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcbd8fc-b877-4744-9970-4c422c171093",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efdbd9c-0b02-4308-9928-ca3dee4105f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18f2011-dd23-4a84-b0f6-7934c01b3a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5118f4c-78be-498d-b606-4c110f4dd31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0488575-8504-46e3-821f-1be114bc1599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813f0305-0bb5-4f92-a3ff-42ab8d219124",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48c540c-d5f1-47e3-82fd-accedad356d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ff3d20-9708-49d5-9d4c-38c65c5aa086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa3d907-1d2d-491e-b48a-c3579631bafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04bf3da-e3c6-4919-b9d1-e30f52b4ccc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5565550-225f-43ed-849c-c15b9831e9f6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cd4517-ddff-479b-a891-6b9730426053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572ddf8c-7a91-46e5-a2f1-e828d1612e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b926c9b5-d103-4323-b00f-48a714f7e6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61cc9e1-790a-4e33-a458-55be7f13bd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069d228b-8146-4059-9638-aa3a0682aed1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed282f7-b06d-4d5c-a6fb-12e544fb1fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b86df55-a2aa-4b05-9117-539f837709eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb91606-c834-43e8-a9a6-1e51b5d1689b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd38890a-e982-466f-b39f-1f5400504b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e358495b-b58b-4a12-8a88-921809858363",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905ba595-31b1-4aab-b7c6-9a83dad029fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927acce4-01e9-44d7-8d31-79c0a50d3452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b47be1-db3a-435c-8d2d-11e05f0f5dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeeae4ae-aae4-4e09-8b8f-de8714c1177c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51d3db9-7d24-4f0f-ab0c-f59c74649fec",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648eb141-70de-4a88-91f2-1e97a07f54fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ebee7d6-3d44-49e6-a74e-67703d23519e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338a07c1-1647-46a3-a020-96ab55643c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b65fb0-8dc5-4863-b850-b1dda2fd00d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb81b8e0-a720-4c83-8d95-bbe23d5238e5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa8eb77-9908-4ec9-82f3-57175ded8a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ade081-884e-4ddd-b149-f730c55c2053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b0685d-8966-43dd-9841-e3cfccacea88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74827850-af64-4f2a-a541-c2d5bba284ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4778694-fea1-49e6-b313-ba89f484f9f6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864d10d9-65d8-4a29-93b8-6d7b54999b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6346e729-febc-42b5-817c-64936de7ba3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c765e7d-3291-40ca-aa5d-93b944f03838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3de5d7-fe3e-4c72-ab6c-4cebaa16c911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23de538b-7733-473c-964a-72ee1ba2302f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abaa597-ecad-44c7-9317-d4bcda817bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f2c1a4-42ae-4e8f-9a4b-e1bd7f33c4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658a4f9a-c6a6-4d11-b3df-6c5a11d1255c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db6bdb0-fa8d-4b70-add0-5fde87189757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e9231f-ca4c-4486-882a-fbad92748ec9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a17bcd2-7593-45bd-b83b-db51252e7879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75be81a3-6ecd-452c-a992-4a78b388a884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e309204a-8c5b-4aa7-bc14-d34a027c413d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501a7e5b-7c6c-4fd6-bd89-a2c93847dbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa9914e-da69-44a6-8357-669fe2cbeb4e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467b1d99-b719-449d-b654-614cb2e9ec41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71102c97-ef9c-49a4-9f4b-d888fae163b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a007a19-4c1b-4fbc-88f3-573a38c0de04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2f1081-3ee1-4e18-af97-4339ec6078e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e39f75-0f3a-4f3c-9e27-d14756348cfb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e4ee88-af36-412a-a6f1-4104919d6db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b059a381-06d4-44f2-ba5e-96a765706d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f45bfa9-0c6d-4bf6-b3c5-581bfc58815c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1942c8-0e7f-41e4-b597-bf47fb22179a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5f6d6f-0335-487f-997d-d82eb9b0e86d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9974002e-a80a-4329-b853-d0c6f2bd987a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11a5803-ed6a-4b27-ab3b-c69b064f0b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db63fa25-20b3-4d80-9802-a629a301f4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf1d172-5e61-4629-ba06-6f2c3d6bd229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0b2b88-494e-4256-b987-115fb15b30c4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5a85af-988b-4601-8525-e3ae75e4a914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49da2c39-20cb-4d8b-aa76-c93232393972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ce1e60-b5e0-43ae-8c41-565acc1d5b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2942a6d3-e3af-4500-a387-61b2d41be22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cede1e-c4c7-4ff2-9b65-9eed25b1d3f0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d59762d-7ef0-476a-8ca4-c3ff637f2658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b869c04c-ca02-4cfb-897c-23ef8a920553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07eba3d4-2342-46e4-b385-d749a31144f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb676ef3-1ff1-49fa-a6ec-625cb384e42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb387dbe-1e59-4399-bf46-cb62d7486a84",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7cc226-2d54-4592-bd06-b4b9d9339111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc26b402-4691-41e8-8589-7790583bdbcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd850d8-8813-4e46-8b8a-c1f62e03082c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a420a0-8a45-4d6d-b0d4-a53932842238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aefc16-1b37-4b81-ab5b-4b622fe89990",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249bf475-b4a5-4d35-b603-1b8173c020f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171e531e-1235-4d2d-943f-78b0edc51be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c748f58d-b2e5-46f2-8404-081f21b37817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43cb348-c6a0-4f72-acbf-0e2681744189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b8e1ba-1da5-480e-b782-8a22adff546a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f5ab26-7537-41e8-a8cf-19a5175544bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d74b31d-64a9-4f26-870c-d8a8353e57da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ba589f-2427-4e7f-9abc-bf15cd8b0f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d7cb7f-c174-4f91-bbec-bec1447e8c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36919dc-2cc2-401b-b38f-f8f731c260b1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a792e356-e099-436f-9e1b-e9b7bb386925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95c5b37-7dbd-4882-b641-7a673d7d36c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5089ddcb-f211-47ff-a88b-d134cc2e038d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50941e6-feba-4c5d-b055-7a0f354121e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3669f926-fce3-4127-b793-d402fce8503e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e17a6-32f6-4057-b807-ab3e53b72f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa494bf-0471-41d6-8df4-1e6d2f844716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e99f9fd-4aa5-4b03-9fe1-b4172d5178df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbbcc18-85e6-4678-9786-2fdd0ea327eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b729c24-d732-4fb7-aa0e-7ce170c4d1e2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42c21fb-e79c-4343-af06-75906703f8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5460c6-f713-43a2-b753-c80cc3adcf7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e5dbbd-98c4-4f1d-bf40-279230b0de67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb59609-c7a8-44f3-8e3b-4e4ee55dd87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2a5a4b-3848-42e5-82d8-4b3e82de1fd3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f019f1-baaf-4e49-808f-1f52f07cd350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172da371-c1bb-4c8c-9194-a534ac002312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2fa839-9b56-4953-8fce-4e68d28ce5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa94fd27-7e29-4112-b03f-b61aa65d7bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36df53ed-0f60-4def-81aa-291d5fc43c08",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2aacd4-0c9a-4d0d-8fe2-68ac32bf7c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05262c62-edc6-4018-aaa6-375079db5a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef6cf5-d738-4e75-b3ca-06a054e0804b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa0f9a3-87f8-4055-a8a0-204088c516a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9b7e96-30b9-4394-9629-c166433dc4fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d2da74-06f1-4375-96db-a968d16bf590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69948d93-eea2-4d06-a0ab-1e4a1acb4573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483d3c49-fde2-4cae-a18e-a96fb1b0c800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acf76ca-5c13-41a5-b596-0f7c2476fa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5ba865-c254-4ef6-9eeb-b672ccd7a665",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095bfeed-2be6-4493-848a-f69203d911c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e950048-659a-457b-9ff0-e5ea0a1d4ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f90f51-3e65-4960-90c3-a7370dcc24df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44554663-4773-4775-9ccf-78196d2507dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b27677-1e45-4e95-9005-474fbf8729d1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf1bd1a-8264-4cf7-830b-2c1c011619ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21415945-0cd8-4f35-93ac-6590850e3a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13982042-971f-43ca-aa32-d133d184d396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bba9739-2f13-4c05-b062-4d9a8d97122f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fd9ecd-daa3-429b-9daa-cbc0ad66625d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe45642-9460-413b-8d4f-14b33dea3eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a27355-bf3d-46f6-9af8-99e2b5ad4d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2014ca-7ac8-4e9b-8307-39403577aa62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6850326-08c0-498f-90f3-2b08bc81d9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b0ee77-cb81-4493-9b96-f68f6f424963",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a902d9f-5349-4f44-b7dd-d2b68953b790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f4abd2-1cde-45be-8ec7-97640a06a538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739cf230-e94b-4301-9ce8-086911c6c3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9c786f-11f4-4fa6-86bd-f852ac2b577d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51b09d8-d6b6-4475-816c-d70284c57301",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d1ecf7-f7fd-44b0-9bb0-3c4fbd9c60e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cb40b3-e151-4821-941d-59e3b40e46db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8864f5eb-17ed-4c18-8a16-8940fb623297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dde3d84-34a5-4369-86f5-407bad7e7cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3712deb-fa4a-4284-857d-caa661f7e3a1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c353ce1e-b8cb-4f13-9a43-d214583ae695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80e24af-0508-4608-ab70-b0cd21428fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ac07c5-c416-47ff-a9cb-db2829b27c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac1a818-57f4-4910-a54f-3d805b24518b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b71ccbd-8a47-453a-a1ec-5a5c905d147f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec427def-1bb3-43ae-98e6-31687f9483b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d149387-83fd-4b42-9514-98b7fd147fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7a3ee9-997f-4f1d-85dd-f132f6437e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf92d5d-8c29-4e5c-a0a9-f48f6a7a492a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a82d84-54cf-4a03-bde6-ba3fbe4453e7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbd1ad2-9fcc-494e-99b5-14ba6a5470ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2982a539-4843-4fc4-93e1-d09556f0257a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bfd8bd-b5be-4245-97a9-68b58e52d317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e983fcf-eff0-42f9-ac23-a48d3f04f02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1eaad9-2911-4f31-81bc-306ace3530c6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412e5f38-ea2e-4701-bc20-2f8176c0973d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10a0280-e604-4049-97ac-33d7a6d302af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44700bd-3868-4d3a-9cd8-f900074b7e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05784a42-a5d0-4ae2-b70f-9d8536457d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a34ace-a352-4dcf-a913-eacf7764cad4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d52b85-81f8-4b0e-b4d2-4fcf49fab9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b183eb35-793c-4dc3-bd2d-85f2411b5552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffe84fb-cfff-4b3f-94d0-61cb800dcfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d529bb-f837-4ed6-b057-42f042724a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68e4f76-32c8-4a30-947f-ee018e2cd7be",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a380ddaf-d014-4a0b-b1ad-8b9a6d596375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f164791-666c-4a8c-8250-801e97a53efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f735051d-8a9e-4a3c-b465-1d6d03f530ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd1e678-825b-457b-b87a-c0f9374ef6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896e26d7-81f5-4b83-9d34-6620632ef39a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97fc6e6-9fb0-4d21-bd82-f895eb9e8107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf9e1d4-a4ee-4723-ab19-5fa6397ea40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81441b1c-c99e-4807-929b-e8ce63a6bcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f879e7bb-13ea-407f-9f6d-3c6b6aa13ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ed5804-6991-42eb-b5b8-898d14632db0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d3ad00-be95-46ed-98c0-a59c9ab7385a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b4b02d-47a1-4dad-8a87-de4c76b85d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a70ec4a-9302-44c9-953c-8842aa8829c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08483578-963a-4c17-8198-1bc1de8c2a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8787853c-629f-4813-b46a-eaf1d34c0298",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c75216a-70d8-4fa8-ae73-bc5fa7629819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262d9396-649e-4f7c-9bd7-59ea8b6f63f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baa43c5-b502-4612-938b-4b6bfcba024d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003446a2-00bb-4993-8cc3-8df2d099a894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377ce781-3964-4e92-866c-c4417613afe0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e829aa2b-91eb-44ed-9bae-20814ce19fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055fcbb1-00d1-46eb-9003-0ff9b3f91586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc78984-9e55-4a34-9205-854bb274c4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52f335e-2b10-4e08-8437-3703a7b220ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a08cc2-9253-4f51-89db-181f566055f7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f199e7f-911c-40c1-9ff0-3939c52d06ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adeeb480-42f5-479f-b443-0c1cd9b96605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b333a372-a94e-4955-a824-617d9643ae2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922a669f-3113-4a26-a3ef-eadf61dd09c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98570dd0-d4ef-4aa0-b57a-a96dd1c3e92e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc11791-528b-415f-b74a-d60cabd91c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091f5659-1f59-495d-a97b-56ae67fc668b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286578e4-f4ad-48d9-ac4e-772b00715d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9b8007-02ea-43e9-b0a7-f61c5817f097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb682274-3974-4a92-9298-f7b1fdba7994",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80777222-0f87-4f38-8ec1-21bf09501735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85467534-417a-42f2-8469-64677f8df452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7a0b22-e523-4646-82e3-fd5e3853a101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d17412a-b7ab-490d-9470-460e6f0c1388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210ef056-8d69-44e3-839b-341c2e4a4d6a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3ef073-9859-43f0-88cc-9ef14802d625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117e6e3a-ed36-4004-8439-ba34b2e3f612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90080fd-9d0e-4f1d-8550-701be0cab137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39eda898-3368-418a-a478-f8242e25384d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7524704-79a1-49d1-9902-a20f6b407ca8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e643eb-0987-40db-b036-ce41ca9a4fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "826a480f-645a-4362-b964-194c462dd1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307667d2-e059-4be3-89e0-8575bf1ec757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd87f37-bea5-4b03-b855-7f077a33483b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a771637-dae3-4246-a988-603b5b812d35",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6883b1-9a2d-408e-a2e9-0d34f4abfa77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "071bfa55-4eeb-468d-8742-0de7db39de46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa6b4ad-cc08-43d9-b9a7-70a15b61189d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fc4857-9eee-40cc-adba-bffe69304b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80576db-e3ff-47ef-a48d-7995ec549acf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccc23e3-7085-4440-a4d0-54b6c313ff59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf3aa93-4585-40b1-b467-e5d75de77d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf7bc5c-8e22-4b79-b50a-2a34cba2df6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0987759-4d86-4312-b244-375d73235d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167cf5c3-b8c0-40f1-959e-1ff9e146e1e4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1484dae1-51ff-4b33-8c22-1be08b1cb4ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a75d135-889f-4c1d-bd6a-029269a71ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083dc5b5-c2dc-4d94-b61e-d54b601a0952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab1abce-8818-440e-b785-dfdd5365bc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ba4814-e85e-470d-9282-c200b71cf687",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05667656-381c-42e0-a93a-621ceaeecbe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b9e1844-738d-4f0a-b97a-5591dbd59407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b55d63-268e-4f16-a161-08fb7c415f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e5f3aa-c238-4eb3-9767-b5418d3ec807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0be47c-0436-437e-95d0-70c7b15437ad",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5a3c3d-277e-4ee7-8776-c131b949b4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c0c501c-07ce-4b3f-8ece-a601bdd3685c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54618a5f-2d6e-401a-a279-2b528e5c7f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c901b5-55b2-454f-8679-dee6995b504d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927ffe42-4367-4d74-b583-0a577beb8dac",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32576aff-0afd-4f8c-93f2-233675d3c082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7575bd5-e067-4e37-a8e4-b48831cfe097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2f979f-5515-46f2-9385-538deaf9b1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4546cc2c-f3f1-4df9-a36c-65b3b1564020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c494574d-139f-4daa-97cc-ff7114fd67bd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e21ef08-4bf2-454f-9f4a-c79e9e3b535a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c2e8616-92e7-4051-8cac-433939ba37df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1512ace7-bb55-4f6f-85f7-f07b1371eeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e119dcb7-aa3e-4ec0-8bc2-d3b598ee30d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25df605-c4e2-4003-8d75-12b125a12abc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106f0867-4289-4113-ad76-e16329b66f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad79cb43-7a9c-4731-b145-eb99827bcdb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c187a6-e392-4d72-aeb0-fea3314f2e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c49d404-a1cb-4d40-bd94-71bd3e2db2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b8c891-89d8-46ab-8684-809368eb76f3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5083629-4b01-46c1-84b0-2d5728552f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ce67fb-e217-4459-b1e9-a2cdb7e8df6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc66284f-0346-4521-ad9c-9cb875479cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fe8f19-97fa-4505-b122-87d5babfa683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69be2f0c-1f48-4d80-9b21-1c924296b05b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5cc237-d5fd-409e-a725-091835ec809a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ab07d8-d21e-46c8-a611-37872b29d3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4562b3-8dab-4a3f-9aaa-45c410cbb532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6e41a4-fd76-4c39-a34a-c8a14a7590bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2026850b-2f0a-4cc5-b4c6-5a48ff58b2ab",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118616aa-6410-423c-ba56-f7d5d57d95d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a147b8d-9d28-4715-b119-3226306c3372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fe7787-0e8c-4494-841f-5166ccbf68e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce210f42-74e5-4dba-b7ae-fd247a1a2d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c1ce9c-cab2-4158-8d19-0d89879761df",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74ec7b2-1208-4f9c-80d3-5ef748ec779e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9c760d-e732-4611-9308-074a59166a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdc2612-c5b9-42c1-bbcf-0ec5cbc0b5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfe8fd8-e0a4-42de-8f98-3157e0ca43c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62840c3f-d456-490d-822f-318e44e76423",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbaa341-a6a1-4675-9656-2176429326e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1033a65-794a-46ec-9219-25d32b9afc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c09251-3712-4ec6-967f-64ceabfc1f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea3a9d9-74af-4fbc-a638-6ba33a68767f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dbed92-022a-43d2-8454-9531f808fd2d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1f0d30-cb4c-4119-a37a-578600be7feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9ed7b4-2011-405d-84e5-6fe0b12d1657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed08e94a-a361-4f4f-94cf-78b764bf3c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9f3693-cb1e-4dc4-aa3a-f94e2705d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d5754f-a215-4f2b-a15f-e9e2fd38e70c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b6a22b-277e-4d49-b96e-5c3e35194688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf1dc30-b1c0-45ac-a99e-3b689cfac46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b299113-54b7-4c9d-b87e-2727e1efb5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e827a4-b7f2-44d5-a626-e8072aaea6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d839d41-5257-4d12-8d24-b7715dd8f15c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb56322a-ed47-4a95-b26d-e47ab6903f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8f99b92-a8af-426b-82f1-34bcfdee8ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d5dfe-5bc1-4832-a2df-9c571349d59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65567910-bdf6-4627-88d0-5c1225d79c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99479bbd-6bcf-4362-b894-f7c620d8f038",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b8425d-68ff-48e8-aeb1-6eec2d88b56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "692b7557-4866-42e0-a615-54e9ff60c0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9228e65f-a831-4000-b04c-b5d8c91600e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8889498-e0c5-4c12-ba53-f4ce21e020b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fdd1d9-24c1-455d-98de-d80580f891cd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5332a3c-e74d-4cd6-a8bb-7694bc0f8cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54c0ff5-1bca-423b-be9e-4377c8520d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a195430-da4a-4d0f-b319-e775ce8e1d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4beb0fb7-f97f-4de5-ac7b-46d809c2b613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0cfb8a-4f76-4ec0-8bc3-153d21ce3360",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f533d1e-0aa7-410c-8dbe-7f4122fc77c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5699d9b1-c689-4ff7-8d75-3155f68d17ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf14e7b-02a2-4e63-89e1-966657c5a845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa40f22-5115-4b57-953e-32228bb34767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2f3624-ded1-4aec-a70c-e78d696fd219",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e82d50-3729-468c-8387-158359b2182a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c95cb63-c03f-4a7c-a649-86dd2ca7f4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bef61da-8b1d-42e8-a862-925bb20de2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fc3774-98a7-4ad0-ab78-6cb30c767104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fb33ef-9a6b-450e-9a03-8ab90c6c1e6a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d76890a-b6b9-4708-ae6f-529fa23f57da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01df1a0f-d946-4c86-a02b-39182827688b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaeb685-9a9a-4966-933e-02739d4c54d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050dd189-0ee2-44a4-be0b-9e87b0e91e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6e2665-337f-4d77-bcfa-b6cd94af3300",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae571d19-4c61-4d70-a863-d992e35fbaeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc2b9c2-22f9-48b8-9d8c-af5dc870ed3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767511b9-a26f-4c65-899f-7feba3cf9b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009e755a-5e78-482a-ba49-b357eaed205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdcaa9b-8264-4e8c-b0a4-bbd96f7e3087",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21abc5fd-7e1e-45dc-b6b2-8f4733192500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd825f00-b855-47f5-9cdc-b3f5735eafe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d59c5be-7788-4e36-80e7-5b93924a686d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edf386b-91ba-4810-95cf-83467651be9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3b9449-5363-496f-ac6a-efceec7d6681",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552f0155-4396-473e-8c7e-8405ee1fcfad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6051ac-045d-4e10-9967-7dbd26a23253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b369b5-bb3c-4794-a766-6396b51c9dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870c9da5-1267-4da9-b238-625655b21362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d0c5f1-01df-4c06-8619-a02c2cfe2f08",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f1ee6d-7334-4347-b573-24fd478b5084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d3fc5f-c269-4257-b6ba-d265f32b6e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26eba2ae-205b-4c2c-af0b-d4b6b1ff08b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77f5736-f0a4-4491-a400-71d78735971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7494096d-fa2b-4062-a21b-bd849ca29e34",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88412fa4-e62c-48f1-814a-0ab53dfc0eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1801329d-f5bf-48ae-bc0f-796a7dc54045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0640e1-2660-42b8-bebf-b738f83b2dcb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c9021d-9414-4bfb-b443-ad1c83d49868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6bca77-b53b-4e7e-8688-e8f1c9dbba89",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de79174c-79d7-4b53-8cc1-b75632dffc10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3ef2a6-2f36-49e9-9618-d64b46af22f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea7579d-d0f6-4dd4-83cf-638a6a6fa80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c142d07-3029-47f4-b573-dbf558f3a4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa3a34b-1a73-41bb-a36b-dfdc3d5615a0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a7aae8-4395-4f63-91fa-a0cc6828e4c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838d7c60-852c-429b-9f2e-46f773e77a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0899f63a-9be0-44b5-aa63-bdbe70df59cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dfe1bf-e084-45a6-8514-d159c377ad4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d9316f-aa08-4cfb-af92-6032e54fe354",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e755ad78-36d0-47e7-b394-993b5ed9e77f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "124e56f9-8d26-490a-abb5-e87cb58e8d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feba1d4-d21e-435f-9a74-d106b5289e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8087d1b2-a753-4e00-a7bb-98c2a5081a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289869f9-5110-4102-a92d-d3a44171a08f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f42382-fe85-4bda-9fb0-ab0d6943e3bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e1539c-927c-42b3-a583-e6a84e96e409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b91315-82e6-449b-8479-14ae4c07bec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d8b7a5-aea1-48d1-aab8-4fab30b41450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb24148-3472-4b8f-9d25-8d212bee6c9d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28281032-e171-4ade-b3b7-3d6a86489c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1fb80db-71ae-4a0a-9f21-60a4fc6546a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7404fcfe-38dd-4615-bf05-31a054c20074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33d1ac6-1d79-40cc-b6b0-50ec262a4a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849d28d8-33bb-40e5-b812-850fcccc29e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ae00ec-65ff-4d27-b577-d7156367c6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd9a0bd-124f-47dc-87fb-a60a2b74ba43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f5a59a-677a-41d0-ac03-395078ade8e6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5a866b-ec17-4f49-8664-b87e6d29f12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c99e3f-2bde-4190-9e1a-1b311b05624e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34820f9d-3a2e-45f5-9e97-89e3bc977550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c077cf6-453b-46f8-b1e7-c5e24f10fef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a9885c-5775-459a-ab0f-d406eaa8ae62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28ba59d-095a-4891-a626-45d82c0f4c47"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e515fe71-6bd5-4708-adbf-830c66ae4a6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee50cfe0-9ba9-43fb-9d79-5fec54e48b31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "234fe1b5-ac5d-4cd6-8ac2-52aca5812890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d0369ce-f6aa-477e-ab1f-2fe4b9394395"
                    }
                  }
                ]
              },
              {
                "id": "277193e1-dfa7-4aac-ad81-a0c2c109c628",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47360cb4-5200-469c-a162-5a99099ffcec",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7da451-4301-4dab-86e9-c3f25444a1ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a1e137b1-1135-4627-9c86-40de4ad81acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f19cdd1-dfde-42ed-b78d-fa3b7a7e94b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d2efbe7-2295-46e5-96f9-1a5ce3c332f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84b5970f-0459-4497-a20c-a33e91b03f6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c5f988a-8510-406a-b02c-49c092a8430f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c530960e-a056-4beb-9c48-149847348572",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4575077f-34cd-415c-8c67-a284ea3b1b14"
                    }
                  }
                ]
              },
              {
                "id": "3889ecb6-9908-4f32-a8a6-3ae7724e5d2d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da52a159-67be-48ec-ab70-e9ad87196309",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28a264a-f4b5-45fe-8af0-63fd9fc7b788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e748167f-2a06-4d09-89a9-ef22f8cb1d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e421fa30-0fe7-41df-976a-3348d029419c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39f8712-014d-4ecf-8ad0-c776b93a64c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa8b9ac5-552b-40b2-b43e-735d41ba5aab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a6038d8-121a-4ed7-83b5-4b1c0d767de2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4321f261-8b97-4cd1-a27f-077c544b1f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0adacbd6-c125-4815-89a9-14b69c64a414"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81635574-53d0-4243-abb2-ca662cbcc97c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e03765ec-cbc8-4104-b1fb-bf1b6a0d63e8"
                    }
                  }
                ]
              },
              {
                "id": "b7ee0bb8-ca20-49f2-ab3f-c8587926c087",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17d445fd-fd82-42e4-b507-c3849f96d609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1b672adf-4517-4a99-98e9-d92d3957370f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6460d8a4-280c-4c70-8194-fcd96462445b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d01184d-0511-4771-a862-b2c5ed954ae6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9289379b-8801-476f-b822-b3f7cd8e42ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0d4a1365-739c-4fe6-92d2-cc5864635606"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "131beb2e-ecad-441e-8e60-243bcb417561",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fd74be0-f619-4a9e-adea-b2cf4703a8fc"
            }
          }
        ]
      },
      {
        "id": "b12af713-cd4d-47a7-b464-f635b1d96da3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9694ae70-4a22-4bfa-a6a7-d600b4b4ecca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b958d0e-cd1c-4dcf-952a-e785a188212a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2c881d9-c5eb-4505-beb6-a041b2f59e91",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a33254-294c-4ef4-af75-faa43f719b1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c3117b58-7308-4659-b702-0a8d557fddac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b481ef-c5d4-4c13-896f-c1648fa89245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73d4de0d-980e-42b5-8ae7-9bd1981a2dcf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63641f28-64d4-4df4-b220-e1179696e149",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9e31ef8-b69f-4926-bd8a-b830c3e95cbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8393fac-5697-45fe-bd11-7fdc9bc92dd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d4c0cb8-afe0-49a3-be05-39de18295773"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39cc415a-e1eb-4f77-918e-ecc51c739f40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1499cf34-421c-4348-a983-be2788c91bee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2ca4ccc-dd0f-487f-a981-0fb73567186d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "474c6bb6-5aaa-4a1d-b733-d8e9661fc249"
            }
          }
        ]
      },
      {
        "id": "1c46c79f-69f4-4251-bb1b-40ee1a45a11f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c88fe015-ba79-47a7-a3d7-569e83c58764",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60fe7fd5-219f-47b0-ab64-38ca8740c500",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52f18a0c-cf2d-4bc0-bda1-740c63b7237c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd5272d-12ce-41d2-a5ec-130aae933380",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46d6488f-006c-4322-a9ab-e2cb4701fccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803840f0-9c5f-4cf5-a201-5ef209489c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07b0bee5-e321-4876-acbb-606ad255b8a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dbf5b19-f00c-42de-9a3f-80e227ac61f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdc74668-36d8-4d0b-a7f2-22d0d65110ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "888016cb-dedf-4044-ad0a-c632f88d18e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88903120-70f4-440e-aa3c-39543e95d73b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21c2d536-9642-4b21-a887-4a2f7884e884",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21b40513-1196-4497-9a22-f129b6eb8734"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1aaba22-a057-46b2-9e91-3bf154459579",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dee123a6-c2b1-4e38-ba47-105fe76db0d9"
            }
          }
        ]
      },
      {
        "id": "b357c6e5-6af2-44e3-ae31-f46cd2232f73",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e5133589-14fb-4f51-a336-d09e4c70de93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "045603da-584d-4619-8ef8-5bff5a79a594",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3aaaace-48b0-4798-b444-7c83f24c30cd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319cafa0-91c5-4ba1-8e3e-c24b427f2fb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb08d060-fad5-485f-97c5-f9df4306b0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9fb786-25bf-4d5c-9a56-60d8186da8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5b5fe8f-7477-4ae4-b33b-0755b8d388e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9a2141a-6a79-4ccf-8b16-861f79cb6489",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efa6fb99-8b68-4deb-a293-81f3a36743bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cefcb38-e59e-4048-87ff-5784dc51a8fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e66ad786-5378-42cb-b869-05ef106c7378"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19c97ca3-1ffe-4bb3-ada7-9e7cc36350e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e73cc7a-d983-4850-8a81-320c337e6edf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a836700c-968e-46fb-9db5-6b9dcc1bf876",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "592df88b-fcd2-478a-9dd6-1beb22d5ef67"
            }
          }
        ]
      },
      {
        "id": "db571d47-361d-47f3-8827-e37f74afa716",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ef13b62-51c5-4460-a908-1e7584fa0763",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb715c6a-bd6d-45d7-8111-ab430a8c73c1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "65d8cfd8-1f87-43a8-b3d8-e23d3a4bebd1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "319d8c6c-26be-4cfd-a602-8dfd664b7aeb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0e4e4c9-8f1e-478d-8647-d1d02426a862",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.707746478873243,
      "responseMin": 6,
      "responseMax": 490,
      "responseSd": 32.62542120810313,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696293229915,
      "completed": 1696293245312
    },
    "executions": [
      {
        "id": "1b695b94-d59a-40b6-a3fb-8317bbaa8c13",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22661079-4a15-47ab-812b-4e25a7b28fde",
          "httpRequestId": "e61481ec-a39f-49e6-b66f-eec139a21cc6"
        },
        "item": {
          "id": "1b695b94-d59a-40b6-a3fb-8317bbaa8c13",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "67ddff22-6521-4069-a715-f177f93622e1",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "617cee2b-0a74-4595-9a40-b974ef03424f",
        "cursor": {
          "ref": "5c2a4adb-a9a0-45c5-811b-24849179ecf1",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a97a65ef-2452-4a0c-a8f6-e701012e49ef"
        },
        "item": {
          "id": "617cee2b-0a74-4595-9a40-b974ef03424f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1bdb3829-c576-4e39-b6e4-b8661d945d8c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "225956d6-606f-4a59-bac0-8f490986f5b1",
        "cursor": {
          "ref": "b310cd3f-61d8-46b1-a78f-e999e3dd29fa",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "be270cb3-4d08-4779-a7af-0dc08c4e57c8"
        },
        "item": {
          "id": "225956d6-606f-4a59-bac0-8f490986f5b1",
          "name": "did_json"
        },
        "response": {
          "id": "2ea91b1a-06c8-4fb6-a6cc-9e5c0e2e93da",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3f96ae-914e-4927-b739-7ba41b5e50cc",
        "cursor": {
          "ref": "9f6f185a-a2ac-4e5a-b314-b1db945a0c86",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a47d8d47-f17d-4d07-a817-589bed9f5180"
        },
        "item": {
          "id": "7a3f96ae-914e-4927-b739-7ba41b5e50cc",
          "name": "did:invalid"
        },
        "response": {
          "id": "49bee105-1be1-41b6-8366-01516963ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3f96ae-914e-4927-b739-7ba41b5e50cc",
        "cursor": {
          "ref": "9f6f185a-a2ac-4e5a-b314-b1db945a0c86",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a47d8d47-f17d-4d07-a817-589bed9f5180"
        },
        "item": {
          "id": "7a3f96ae-914e-4927-b739-7ba41b5e50cc",
          "name": "did:invalid"
        },
        "response": {
          "id": "49bee105-1be1-41b6-8366-01516963ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69c348e-e4a3-4350-bc34-82e2c4a3ea81",
        "cursor": {
          "ref": "d48d2c75-4130-4186-aea7-72e0da2a2655",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "008faaca-546b-45f3-9a86-a4357645a1a7"
        },
        "item": {
          "id": "c69c348e-e4a3-4350-bc34-82e2c4a3ea81",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4e9e23a4-2b12-46d1-b9fe-5b7c4cbf94da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4e00fa-82c7-4a39-9c88-0dda6e48e5f9",
        "cursor": {
          "ref": "ff6d69c4-d4d8-4e16-9114-41755f810c82",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cd23211f-6af7-456c-a4ed-c931998f8fb8"
        },
        "item": {
          "id": "af4e00fa-82c7-4a39-9c88-0dda6e48e5f9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "35d2ab46-bd49-4afd-9377-60bb75710b63",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c48cee-d29a-4697-97be-d67dcdf17f09",
        "cursor": {
          "ref": "ff845b9f-5a4d-47d8-922f-f15afaf4f144",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f24255fb-fd45-4266-b0ec-42408c6f4c4d"
        },
        "item": {
          "id": "45c48cee-d29a-4697-97be-d67dcdf17f09",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ac93dd7a-c9df-4596-8740-d9df5fa5da59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb53a05e-fe2e-4af2-b62a-f8b7dc85607a",
        "cursor": {
          "ref": "d63c20ee-f1d4-4f57-9741-217416ceffa0",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3e88a57a-22f3-4801-b67d-602f43508812"
        },
        "item": {
          "id": "cb53a05e-fe2e-4af2-b62a-f8b7dc85607a",
          "name": "identifiers"
        },
        "response": {
          "id": "c89651fa-f1eb-44cd-b470-128eefdbe175",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed9b5ca-3803-40a9-acfd-08beeeadc0d1",
        "cursor": {
          "ref": "a398f213-5a5a-4f2a-b1dc-d259e31956e9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f85ef384-55de-4567-96e7-f9acfbced303"
        },
        "item": {
          "id": "eed9b5ca-3803-40a9-acfd-08beeeadc0d1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5f7ad0af-984f-471d-984b-5e86a5ba5aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9719db7f-b6e3-4edc-bae0-f21d954fac35",
        "cursor": {
          "ref": "c864e995-7772-47c9-971e-83600e8a6675",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba474ae0-73f6-4e77-a59a-a9bf912af557"
        },
        "item": {
          "id": "9719db7f-b6e3-4edc-bae0-f21d954fac35",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "581c5405-747c-47c7-948b-0b9ed0449b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d32c3a6-7e51-42bf-9c42-2da85cd06a04",
        "cursor": {
          "ref": "349c0d0b-1429-4f9a-8b3b-b7a397f3aa09",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "60cc410b-9a6d-4e48-b970-7b8b4845bd74"
        },
        "item": {
          "id": "5d32c3a6-7e51-42bf-9c42-2da85cd06a04",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "45b6596a-d608-4cbb-9e7a-0ce2076f5c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06197df6-273a-4829-8019-a87de70384ce",
        "cursor": {
          "ref": "e75a4e07-c1a2-4fe4-96d8-0c4d8341e69e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "750539f3-e75e-4654-83bb-ca9d05564e63"
        },
        "item": {
          "id": "06197df6-273a-4829-8019-a87de70384ce",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "69dca2fa-1262-4d48-a670-177fdbff99f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75484033-3b66-4039-a045-e236206dbd42",
        "cursor": {
          "ref": "25ed325e-bacf-482a-b196-ce2278980b57",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "603c4136-85fc-4c4f-97d7-8ba58c6fa938"
        },
        "item": {
          "id": "75484033-3b66-4039-a045-e236206dbd42",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7b674215-7deb-43a0-9736-0de6d7815f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fc9405-7ff1-4caf-9367-c5a66dae7444",
        "cursor": {
          "ref": "c63ab217-e7e0-46d5-a71f-24dc73af6dc6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8a914332-fa56-45cd-a7ff-749f58a97db7"
        },
        "item": {
          "id": "40fc9405-7ff1-4caf-9367-c5a66dae7444",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d8280e2a-a467-4c2b-a388-70378dff8abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767d0520-df30-4262-8694-b68a03473a81",
        "cursor": {
          "ref": "0570677e-c727-452c-83a1-e02e5d32644c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d13a36b6-6a65-448f-bbb1-aab099377fbd"
        },
        "item": {
          "id": "767d0520-df30-4262-8694-b68a03473a81",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fc5c7401-102d-4e9e-82b4-5c8745de7f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4f8999-85f7-47ea-b450-f9fee0eb7454",
        "cursor": {
          "ref": "822824e0-3969-4405-8314-12723995a22c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6dfb24de-ffbd-4742-9624-3a4e9f883cb8"
        },
        "item": {
          "id": "9c4f8999-85f7-47ea-b450-f9fee0eb7454",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "65877db6-a246-48af-95d3-e79e1d51be85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66e0e12-d5ff-4d7f-b0b0-9f1190d3fd86",
        "cursor": {
          "ref": "22311210-8539-46fc-abc2-99d19ab074e6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5910a123-7c9a-407b-89f2-29ecbb3c0965"
        },
        "item": {
          "id": "e66e0e12-d5ff-4d7f-b0b0-9f1190d3fd86",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "de4311ba-51e9-4faf-a676-2da700b41041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1b96fc-2927-4d57-abbe-29e69d33b0ec",
        "cursor": {
          "ref": "8d58a21a-74e5-4e94-81a3-5f8433f05c6f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "89c45a09-d09c-493e-917d-baceb3cafad9"
        },
        "item": {
          "id": "5f1b96fc-2927-4d57-abbe-29e69d33b0ec",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "df183b7b-5596-4893-acee-f183a6fe267d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3173a8d9-21bb-4874-852b-1a72fed7788e",
        "cursor": {
          "ref": "f270cbc2-2e19-44e2-8d6d-5ced02f6ff0a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c8b6dffd-bc72-4328-a9a3-39634afe7989"
        },
        "item": {
          "id": "3173a8d9-21bb-4874-852b-1a72fed7788e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "003e1b89-8c4f-4c31-82c5-8905546b8377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db895f3-d148-4374-9864-cc455c37a3c5",
        "cursor": {
          "ref": "1c202f66-2f2c-4dff-ab34-16921adae4e6",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "48714e22-679a-4410-a10d-1ede2eb79814"
        },
        "item": {
          "id": "2db895f3-d148-4374-9864-cc455c37a3c5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "975c0e41-72b0-4595-b02b-c862eab684ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00e328c-45f0-4f4d-9eb8-13ca15324a55",
        "cursor": {
          "ref": "d9b530af-4861-4e03-b106-c477fed5dacb",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "88c69e48-f73d-442d-af01-6aa96eb894d2"
        },
        "item": {
          "id": "a00e328c-45f0-4f4d-9eb8-13ca15324a55",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "512d1ff3-3bf3-4f01-acf4-db0d8b2eaace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a3f01d-3d92-401b-acad-253b08eb3344",
        "cursor": {
          "ref": "890032b9-e919-471c-a4f4-d5b7bd232e5f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "876d75c2-4097-4aee-a94e-9548bf58251d"
        },
        "item": {
          "id": "62a3f01d-3d92-401b-acad-253b08eb3344",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "df76864d-1b05-4665-990c-d9549283450a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1dd132-a03e-474b-ba6f-b70ae1adf379",
        "cursor": {
          "ref": "9831bec9-67f4-4819-b087-a14cf3d4ad7e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "88c4216f-33bf-48bf-b521-9d1be933f3c3"
        },
        "item": {
          "id": "fe1dd132-a03e-474b-ba6f-b70ae1adf379",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0059c61b-250c-4842-9006-5192a84cf6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53207f7-4df1-4fe8-a30d-b1cbaeef8bc1",
        "cursor": {
          "ref": "3a442338-2cc2-44dc-9951-65902f38df13",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2df1c700-1fc7-414f-87a7-789d7f7ef9b1"
        },
        "item": {
          "id": "f53207f7-4df1-4fe8-a30d-b1cbaeef8bc1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7f4b4cd6-aece-4d09-b1f0-7884f66cff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a29541-c61e-4feb-a78e-7cad70e8a3d2",
        "cursor": {
          "ref": "eae2a910-c81d-4338-8b90-1f9e9c4ee92d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "33091734-0606-4097-ab11-da9f21b66605"
        },
        "item": {
          "id": "66a29541-c61e-4feb-a78e-7cad70e8a3d2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1d1a1873-a5f7-49e5-b01f-31465566e838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ee9ea1-467e-4369-9f28-2aab64244a0a",
        "cursor": {
          "ref": "d1251930-33d4-4c21-82bd-6e4942d66855",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "76f594f1-6b4f-4f93-8432-be7530d1a22c"
        },
        "item": {
          "id": "46ee9ea1-467e-4369-9f28-2aab64244a0a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c71aca44-e952-4f0e-8497-39e226b7aa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7048ac6d-4ca4-44a3-9e7e-b40ed153b0d6",
        "cursor": {
          "ref": "1d836f5e-c15e-48ea-b8be-4bf2cf95a083",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b462c5a-dc04-4e76-ad31-6a4c16f45e37"
        },
        "item": {
          "id": "7048ac6d-4ca4-44a3-9e7e-b40ed153b0d6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b714349a-79c9-44c4-9892-99764f2eeaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1509def1-c11a-46f8-be21-1b58c4148e1d",
        "cursor": {
          "ref": "b59c86a1-4294-4064-ba3a-4d7356390a74",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5f072b14-551b-488e-b5f1-98bce78587b4"
        },
        "item": {
          "id": "1509def1-c11a-46f8-be21-1b58c4148e1d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "16df35ea-858f-456e-8e0a-73960ee66c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd37bd06-173f-48fe-aaa3-657a36d8bcf6",
        "cursor": {
          "ref": "179e7f34-89c7-4bef-8e13-f6b6aa7a907a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b3436e16-b016-43a3-a9ea-fa16ab71f368"
        },
        "item": {
          "id": "dd37bd06-173f-48fe-aaa3-657a36d8bcf6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "680cac95-b168-45dc-bc8a-4cf189190356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43587779-4664-4462-9dba-5313bd2b3d65",
        "cursor": {
          "ref": "75915432-920c-4a62-bfcf-fc4298f8d1d7",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "382c5de6-d8d2-4407-ba39-1817376d9cb0"
        },
        "item": {
          "id": "43587779-4664-4462-9dba-5313bd2b3d65",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6e370f7a-f96e-474d-b6de-6fe0739c06d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32a8bfd-af20-468d-b3e7-af4bdc3e9da9",
        "cursor": {
          "ref": "c675d880-4682-4275-b576-e807f90ed8b3",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d737467-e18f-4e25-baec-ebd457fe7db4"
        },
        "item": {
          "id": "b32a8bfd-af20-468d-b3e7-af4bdc3e9da9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1f99a844-2740-4df7-a10e-b1015dd4ebed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b830d1-ebd5-4a20-b1b9-1b3bb455f298",
        "cursor": {
          "ref": "8c51c89f-71d0-486c-94f8-6a0947ce3029",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "66491d58-150e-4111-9b31-841f96f0fd96"
        },
        "item": {
          "id": "e4b830d1-ebd5-4a20-b1b9-1b3bb455f298",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e70bd368-9bfe-4001-ba71-55b48bd254ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dcf7fc-2c63-4c9b-8656-cb51ec8aaf96",
        "cursor": {
          "ref": "904de054-251a-4ad8-bb64-e866070af708",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aaaed641-7725-4d78-8322-ea83fe5f51ff"
        },
        "item": {
          "id": "65dcf7fc-2c63-4c9b-8656-cb51ec8aaf96",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d4264223-52b4-4190-8453-e6bbc58ace60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d9ab3-1b51-4260-8ab4-6586cf3f07ff",
        "cursor": {
          "ref": "4fc30b45-2686-4722-84e3-84377d414770",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e39ccd70-9616-4247-bd38-e8b27410819b"
        },
        "item": {
          "id": "119d9ab3-1b51-4260-8ab4-6586cf3f07ff",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6ffb3902-610a-4b9a-848e-9c712753fde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e63b8-94e3-4bde-a33b-677f2eaf6275",
        "cursor": {
          "ref": "984724c7-b433-47cf-b64c-2fcbac101f1c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d851e0c8-d6f0-4ec2-8b5a-2f718510587a"
        },
        "item": {
          "id": "1c6e63b8-94e3-4bde-a33b-677f2eaf6275",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "be855014-6871-4f80-8f1e-e97aee6f579e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4bb7a3-5527-473c-adfa-faa3ddf88067",
        "cursor": {
          "ref": "82714b24-8a95-4c3a-a68f-248fbd0a7299",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d4f18591-c285-4dc6-bd71-80a79ea55380"
        },
        "item": {
          "id": "4c4bb7a3-5527-473c-adfa-faa3ddf88067",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6a9ab214-2ea2-4f25-8511-c25e7988d119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d551d1-fefd-4064-9c19-e0081bf4ab8d",
        "cursor": {
          "ref": "1204307c-9962-4c9a-bfd5-3caeb4073785",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f768b1b7-2ea3-4cc7-97c2-e80aeda9dbc5"
        },
        "item": {
          "id": "13d551d1-fefd-4064-9c19-e0081bf4ab8d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3da04246-c74c-4df4-bc44-16cf19b446b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85355510-ab26-478b-a9f5-120526623507",
        "cursor": {
          "ref": "a281db92-d934-4ff7-aca5-f6e6e3be2c2d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7787dcaf-1e64-4557-9207-dc07e7b0d64d"
        },
        "item": {
          "id": "85355510-ab26-478b-a9f5-120526623507",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "acd1cd2a-76e7-4af3-a121-701700e5ebe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab29ff17-d6a0-44a5-9d20-81491726f4a4",
        "cursor": {
          "ref": "8f9d4781-7d50-4b0a-8731-a6b8c135bdbc",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "21a11870-4931-45d5-bab8-cf41ae503ab1"
        },
        "item": {
          "id": "ab29ff17-d6a0-44a5-9d20-81491726f4a4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3d0b944d-7a94-43b4-af3b-21104ad181cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625e27e5-e2ad-489b-aa40-b09314594016",
        "cursor": {
          "ref": "0b8b323a-9cb6-40bf-9691-9160f19dca13",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "475ecf4e-7339-4348-81c4-a1cee721fdf9"
        },
        "item": {
          "id": "625e27e5-e2ad-489b-aa40-b09314594016",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b7feaa8-a3b7-4569-8fdd-69becbc9352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27611cba-b666-4bc5-8b55-0b1ae57fb65c",
        "cursor": {
          "ref": "433b9c9e-4e41-4834-b765-2f85660fb325",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "84c3650f-f4f2-4fa3-9d45-085562975c41"
        },
        "item": {
          "id": "27611cba-b666-4bc5-8b55-0b1ae57fb65c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b51e255d-82db-4226-95d9-faa1f07f5e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c53dd5b-937a-4170-ad65-a2684fd5f463",
        "cursor": {
          "ref": "ecc97976-c8c6-41cb-91ae-c98d73dd41c8",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8c41aec1-b32a-4e96-bbd6-d2dff51a554e"
        },
        "item": {
          "id": "9c53dd5b-937a-4170-ad65-a2684fd5f463",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "28c9cf2d-11b1-4811-9c66-e7e19cf8f1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231b6b74-ddd0-469f-9684-1a60321a16a3",
        "cursor": {
          "ref": "efe7decd-0f9d-41a3-a12e-e65639d8e0bb",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "56887a53-33d2-452c-bae8-0c87aeee0d7f"
        },
        "item": {
          "id": "231b6b74-ddd0-469f-9684-1a60321a16a3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "84da5f38-1cc9-417e-b9b2-3a81bb1725af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4265c352-a137-466f-a11c-a9db8e2b02ca",
        "cursor": {
          "ref": "6a4bea85-0aa8-4066-83c0-f1e6f8fdd24a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "076717af-ba69-4ecf-ae12-26c08ec1d16b"
        },
        "item": {
          "id": "4265c352-a137-466f-a11c-a9db8e2b02ca",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9ea05a51-9fef-4196-bb77-23af6e04c3ec",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c37c29-3afb-4f2d-a125-7225bf3338dc",
        "cursor": {
          "ref": "aab62bb6-f10b-438e-b0ec-5d592c2e4ae6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bd53a779-d923-4a00-9b60-a966057b4aa3"
        },
        "item": {
          "id": "12c37c29-3afb-4f2d-a125-7225bf3338dc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6d47fbbd-5e35-4c87-baa8-d9dc814604c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84cdd1c-7a5e-43db-b4e9-d51baa53ad98",
        "cursor": {
          "ref": "811be199-723d-48b7-950d-b3ad5feb8cb1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "28457498-9ecc-4439-bde9-69afdf6529ac"
        },
        "item": {
          "id": "f84cdd1c-7a5e-43db-b4e9-d51baa53ad98",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e90b6696-6cae-41b4-aaf9-fe7835e24ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b8eae8-478e-425c-a625-d71316f4b7a3",
        "cursor": {
          "ref": "39ba0bfc-0b18-4ef7-8d16-b7eb8bf47cb7",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "be49351e-4154-4c5d-ab9e-5ec487c2921a"
        },
        "item": {
          "id": "c1b8eae8-478e-425c-a625-d71316f4b7a3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d5676e75-d78a-4974-a4cb-018e9b44e9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8044e641-4129-4f60-9526-3263ae7d90b7",
        "cursor": {
          "ref": "1c0e4852-cbe8-4050-98ec-feef40a69ca7",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "251b8652-3218-4ec8-9dc7-b35288c668c1"
        },
        "item": {
          "id": "8044e641-4129-4f60-9526-3263ae7d90b7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6370c223-86e3-4371-b569-89a99c57405a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d299ab-3407-454c-aa2c-fdcfdfa99f19",
        "cursor": {
          "ref": "6d9ff34b-b884-4c10-a78e-df2617ac4732",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2c0fd83a-d81f-4df4-a29d-aeb18ec99c40"
        },
        "item": {
          "id": "00d299ab-3407-454c-aa2c-fdcfdfa99f19",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "71aae88e-f53d-4b36-8092-a5faca2a4a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473faa25-7488-483a-b01b-fd34fc2d0bba",
        "cursor": {
          "ref": "c480daf2-518a-4911-b471-52097fa2de4f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "513ae60c-1771-4351-8b57-7db486627b46"
        },
        "item": {
          "id": "473faa25-7488-483a-b01b-fd34fc2d0bba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1c679143-3520-4b0f-9f39-f7a1c55210f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f2159a-a233-4770-a593-22f17fafcbbe",
        "cursor": {
          "ref": "a3dbe0e1-d750-4084-a61a-391aea1952b4",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ead7b39a-d58e-4e50-814e-2b3f5363aafe"
        },
        "item": {
          "id": "a4f2159a-a233-4770-a593-22f17fafcbbe",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "86ccf56f-bee3-4485-8545-b201f06ab3c9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7e8f8e-b7a8-4599-862d-8c51b5d16f69",
        "cursor": {
          "ref": "445eeb7f-12ff-43e4-b4c4-aa4e9842a32b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "12bd0c6a-70e1-4e47-aded-54a1a7f10a87"
        },
        "item": {
          "id": "2a7e8f8e-b7a8-4599-862d-8c51b5d16f69",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8a3b6177-8f71-4e8f-9450-b07047d27ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a769a1ac-b385-48f5-9866-801cd1f55be9",
        "cursor": {
          "ref": "70d8d0f4-4fee-40ad-9329-ad583969f5eb",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f1c27d1-16d0-42bf-9884-c10673569573"
        },
        "item": {
          "id": "a769a1ac-b385-48f5-9866-801cd1f55be9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3422a165-302a-46a2-ac1b-0a8991773c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3100e115-e5c8-434d-9bf0-563db86be65b",
        "cursor": {
          "ref": "fd7b0618-e1d4-4bb2-94e5-f57dd35d6113",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1551de19-70e2-4094-9828-541ee4503f9a"
        },
        "item": {
          "id": "3100e115-e5c8-434d-9bf0-563db86be65b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5a0a1bb1-0eac-4ccd-90fe-772f93a77ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5817404-e0dc-427e-83de-272fc7011194",
        "cursor": {
          "ref": "e7863baa-294c-4121-ae59-e4b9388e7b07",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "57215f72-3033-42bb-a852-9535d8f3c5b3"
        },
        "item": {
          "id": "e5817404-e0dc-427e-83de-272fc7011194",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5bb846ac-d3d5-4130-9c62-5ba306fcbb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff5ecc3-c7df-4248-a41b-f801a60bf58c",
        "cursor": {
          "ref": "da3b55e8-9c95-48bf-9983-6d743d86c45d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d13eded6-a794-42c9-87da-73aaa39302cf"
        },
        "item": {
          "id": "fff5ecc3-c7df-4248-a41b-f801a60bf58c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "91a2c9d8-cc90-4908-ac4d-1f1330711a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b062df4-5d08-4dec-a232-3a7c48449cf7",
        "cursor": {
          "ref": "dbbbaef7-a7e3-4e90-b094-c1ba11901579",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "adb5f2ca-e75b-42bd-ad18-5c730f24c1a1"
        },
        "item": {
          "id": "4b062df4-5d08-4dec-a232-3a7c48449cf7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c0dfbf94-dac4-4471-aa76-5aacec0546d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600f1c20-d230-4c44-bb24-7b65f9cce8eb",
        "cursor": {
          "ref": "a90b7272-98e6-444c-be1c-fdd3ac9745c9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3b124ce6-c6dc-4d0c-9160-85c1f6c6acc8"
        },
        "item": {
          "id": "600f1c20-d230-4c44-bb24-7b65f9cce8eb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8b68a160-ef3f-4c96-a867-91c41dcfed57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4b4d90-af33-4a33-af32-e030172d3ac0",
        "cursor": {
          "ref": "9567e2e5-0025-4356-8ebb-eef856531674",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5b2e0949-d0b2-4810-acc5-7ea7cbd14543"
        },
        "item": {
          "id": "2d4b4d90-af33-4a33-af32-e030172d3ac0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "313d3917-ae54-4a07-b59b-30e47e8c85ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ef0b95-6aac-4928-8cd9-8b88e7c67917",
        "cursor": {
          "ref": "4efe320f-c10c-4f8c-88da-35dae6e9928d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "32390b99-057c-4523-a4bf-17dec9e1d2a8"
        },
        "item": {
          "id": "c1ef0b95-6aac-4928-8cd9-8b88e7c67917",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "340cf974-55be-4a90-a269-bf047537ed50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1c5180-a523-4a63-b4c6-010f4c2a79da",
        "cursor": {
          "ref": "4c7c6af5-984c-4ceb-8b1a-0cac345a3197",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3f7c8a97-6dfe-4e87-8d6e-9e399a972d9c"
        },
        "item": {
          "id": "ce1c5180-a523-4a63-b4c6-010f4c2a79da",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d555e321-7600-42f0-8893-659bb93752f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e756bcc1-99da-4491-89d8-79bbc38bfedd",
        "cursor": {
          "ref": "5319989f-a9d5-49c9-a3ac-a00a966e74cc",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e60dda07-193a-4ee9-bcf7-b1112fcee954"
        },
        "item": {
          "id": "e756bcc1-99da-4491-89d8-79bbc38bfedd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a10fb908-1d31-4e29-98aa-7ff37f6b57cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6330a077-47bd-4b24-9855-3dbfbf0c97a4",
        "cursor": {
          "ref": "29839ef4-0718-4719-8092-756b2522b9da",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9e9ec3c6-3fb2-4a72-a9e5-f90dd23e9f1a"
        },
        "item": {
          "id": "6330a077-47bd-4b24-9855-3dbfbf0c97a4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3b2f66a3-c73f-40fa-a965-071617e2d0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc7761d-24e1-418f-8ac1-bf05b8664066",
        "cursor": {
          "ref": "0d8eeb9b-dcf9-4e95-856c-816c33b3b1af",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "18ade757-53b2-4e8b-a766-f0ad186492a6"
        },
        "item": {
          "id": "3fc7761d-24e1-418f-8ac1-bf05b8664066",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6f84b984-f402-4cc0-86df-3938ebee5d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bd629b-d621-4556-88f1-e180b4b9d48c",
        "cursor": {
          "ref": "fcc70e28-c1a9-482e-9dbd-f5e3654c05dd",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3372519d-c775-4bfa-80b7-e242d3a1560c"
        },
        "item": {
          "id": "c1bd629b-d621-4556-88f1-e180b4b9d48c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3f223fdc-179e-42c6-ac26-250d8fa31271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16343a97-225d-4027-9ac1-e6b992b6bae0",
        "cursor": {
          "ref": "60b9b145-57f3-4408-8f03-dfad33004324",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5f915ac7-126e-4737-a0ba-c35c4eb2d1c7"
        },
        "item": {
          "id": "16343a97-225d-4027-9ac1-e6b992b6bae0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fbb2fa0e-805c-4bfa-b20d-c2dc7119a25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72669ad-35f1-4ded-b566-09e8bc447752",
        "cursor": {
          "ref": "745a40af-9a0a-4331-b011-568a10eb6cc9",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1d469b09-8a68-4f28-ab87-fb16f44af61a"
        },
        "item": {
          "id": "c72669ad-35f1-4ded-b566-09e8bc447752",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "366b2c92-c835-41a5-9585-44bcafe20e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2ca951-0290-481a-8892-83ad4d18a0e8",
        "cursor": {
          "ref": "f3a35231-4394-4631-a964-93bd69525b85",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "79d1d742-ba93-4fd5-a8f9-32032970f78b"
        },
        "item": {
          "id": "6a2ca951-0290-481a-8892-83ad4d18a0e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "82df25c9-de5f-45ee-b0ff-4271001e1b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdde32ad-f59e-4ac2-b4d1-465bb3503816",
        "cursor": {
          "ref": "cd04ab7c-09fb-4cc4-8ccd-58a2a67f6e09",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a76f1438-4f7a-4fc2-8d7a-c08912a97faa"
        },
        "item": {
          "id": "cdde32ad-f59e-4ac2-b4d1-465bb3503816",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8a338a4f-b46c-419c-a086-deea8f9eb96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb63095-9b79-43ac-9acf-68c04bc5beac",
        "cursor": {
          "ref": "14f46e30-8d0a-4860-b044-a1df374afb8f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6d74c61d-736e-4f54-b93c-39dfabe04239"
        },
        "item": {
          "id": "0eb63095-9b79-43ac-9acf-68c04bc5beac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f0544123-ae6f-4523-ba25-7e78a39ddb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3fd50a-5bbb-4a67-b07d-b44f970235f3",
        "cursor": {
          "ref": "6f545333-c06d-4062-ab9f-e30b7ea34e4e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "97ac28a8-ba9b-44b9-a8a8-19001e1d9492"
        },
        "item": {
          "id": "7c3fd50a-5bbb-4a67-b07d-b44f970235f3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4d134948-c105-4e57-9eb5-af8c96afb552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17a8d71-9632-4dc9-a168-a381c1275c69",
        "cursor": {
          "ref": "6c2b69aa-3f5f-494e-bf91-fcc5e2750e9b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4fa14cc0-1d46-4869-805f-89a98f7a76ef"
        },
        "item": {
          "id": "a17a8d71-9632-4dc9-a168-a381c1275c69",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2272f14e-aebf-41f7-938a-f748ca4a2574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede3cf00-ce3b-4849-a9d2-b53a8f798190",
        "cursor": {
          "ref": "1cda6662-4af7-4e1a-bf29-fcd96b3f6dd5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2605a031-e1e1-48e9-8473-18110923828b"
        },
        "item": {
          "id": "ede3cf00-ce3b-4849-a9d2-b53a8f798190",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "389d6813-250c-4824-821a-ba8bc3de5595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19716555-29d5-46b3-8054-0d6640ba72e7",
        "cursor": {
          "ref": "eec50d1b-d200-4069-80a5-dc20cf2d0f9a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6a4b7f06-b6fb-4ee0-9993-084e7445cc6a"
        },
        "item": {
          "id": "19716555-29d5-46b3-8054-0d6640ba72e7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1ea2a3f8-48d2-47a5-8c10-b8e58a33acc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80c143b-988b-4ca2-96d3-c35f2e63e223",
        "cursor": {
          "ref": "41438456-f599-4d31-9ef4-94161b2cbf5c",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6ec4731d-7ecd-4347-8304-163ff188a1e7"
        },
        "item": {
          "id": "e80c143b-988b-4ca2-96d3-c35f2e63e223",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e41cb5cf-9f92-4ce5-8558-4140bcfa2537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef346ca0-8360-438e-a6c7-ccfc82c8fcd8",
        "cursor": {
          "ref": "07b5313f-77a4-4dd5-9581-9387aaba1efa",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8a105948-ad7d-4558-b8fe-039dffbfbf71"
        },
        "item": {
          "id": "ef346ca0-8360-438e-a6c7-ccfc82c8fcd8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0610eae8-90f3-49e9-970a-e782f01f0ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033799f3-5421-4e7b-93bd-645471a7d91a",
        "cursor": {
          "ref": "64fef0a4-16fe-4c61-9833-717cfb5ced6e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3ad15f50-b7f8-401c-9b49-64f82e8a5be2"
        },
        "item": {
          "id": "033799f3-5421-4e7b-93bd-645471a7d91a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c1a224d4-2a2c-45eb-befb-bd272909c1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893d29a0-cf3c-49ce-ab19-fa0012422c1d",
        "cursor": {
          "ref": "1e51296c-bfef-48d8-b83a-d430200cb851",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5dcbfb19-e438-47ca-892d-fa7b63015da3"
        },
        "item": {
          "id": "893d29a0-cf3c-49ce-ab19-fa0012422c1d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c27590df-1707-4dfe-891b-bb42ddb71d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b730c81-9eeb-4a31-9237-ebcf4ed46b44",
        "cursor": {
          "ref": "e9da8bcd-8a06-401a-bbdf-08d3ff85e436",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bb4d24dd-4e61-4ba1-bc93-7d367db72b30"
        },
        "item": {
          "id": "4b730c81-9eeb-4a31-9237-ebcf4ed46b44",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e6b94e29-1211-4c11-85df-37807b909eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcc4404-855a-4e8c-82c5-fc41522b3c6e",
        "cursor": {
          "ref": "de2c4116-872c-4c85-94f1-b1cd4b75db34",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4d5bb331-ff52-47c3-9112-106caef537d4"
        },
        "item": {
          "id": "bbcc4404-855a-4e8c-82c5-fc41522b3c6e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a40b3ee1-2313-4efa-ad89-1ddaa7796ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6d948c-370a-47e0-bcae-9ff0eb9158ab",
        "cursor": {
          "ref": "e6cd9166-cd2e-4d4e-a34c-910046720912",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "25a98d67-6b2d-4120-b8ad-a57314b818e9"
        },
        "item": {
          "id": "da6d948c-370a-47e0-bcae-9ff0eb9158ab",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8ce96141-b55f-4c89-b937-1b8c8ad05fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7aa123-40df-44bd-bde7-800d26c8afb5",
        "cursor": {
          "ref": "275e6896-1784-4ae1-a986-9e6254904b72",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "359c330f-a8f9-4ded-aa2e-b5f689827eb5"
        },
        "item": {
          "id": "5e7aa123-40df-44bd-bde7-800d26c8afb5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9de5fd2a-2f81-4afc-9c4d-01555ee0ccde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d79d49-8e72-4c0c-8b87-d9d00a1e89f9",
        "cursor": {
          "ref": "4fdd3f9d-623b-40bd-a6cb-62a5e21c456e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a88c41a2-1226-404e-b78f-c95b9721bc56"
        },
        "item": {
          "id": "75d79d49-8e72-4c0c-8b87-d9d00a1e89f9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a453d4eb-d169-4a48-ad65-3cc5f05d7e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f7c6a0-5361-4ab2-adf6-bc7893948201",
        "cursor": {
          "ref": "b5a8901a-b32b-4985-bcd4-e103a83226a8",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "58e81339-a9af-440f-bd02-7dd785ce670c"
        },
        "item": {
          "id": "31f7c6a0-5361-4ab2-adf6-bc7893948201",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e02f707b-0f71-41c3-9cf1-fcf54f5d24a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3191a09-6e54-47da-8abc-da7082423b35",
        "cursor": {
          "ref": "650e18a2-641b-40a9-a5a6-3778a55eb957",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "00ed5551-f92d-4b15-ae8c-1f93c2e40854"
        },
        "item": {
          "id": "a3191a09-6e54-47da-8abc-da7082423b35",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ece6d066-95a8-466a-a5cf-ad3f8150d833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f9bbc2-e505-4349-8610-f21cab46ba60",
        "cursor": {
          "ref": "fc0aba4c-a56b-4b45-9494-83259551b76c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0cc59ed8-18c3-4e23-8c38-1a5f8054e57c"
        },
        "item": {
          "id": "37f9bbc2-e505-4349-8610-f21cab46ba60",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "98ea6765-a6f9-48e0-9754-f9a00f8a5f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787dd91b-3d17-4999-810f-fb6837ad3ff1",
        "cursor": {
          "ref": "54605d8f-b130-4c3e-b113-ac8119a4b71f",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "db121edc-80dc-4544-a563-bed8d9c7c7d9"
        },
        "item": {
          "id": "787dd91b-3d17-4999-810f-fb6837ad3ff1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5530df14-7b7c-4d92-9a21-e6af9dac50d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45307f53-a410-4b76-b443-09d14eda08a5",
        "cursor": {
          "ref": "351fa3db-85ad-48b3-9717-e095aa715578",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "23f721e2-306f-4c35-8bf8-fc45941db39a"
        },
        "item": {
          "id": "45307f53-a410-4b76-b443-09d14eda08a5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "28b55074-d4db-4bea-ad71-5ecc05edeaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceb1993-4f4a-4049-8f48-a8b3b7b8709c",
        "cursor": {
          "ref": "96c4d517-e777-4acc-b423-e51bb2dd0cdf",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4c9b2212-a04f-4c06-8ba5-aa710e5f09ac"
        },
        "item": {
          "id": "cceb1993-4f4a-4049-8f48-a8b3b7b8709c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "86858289-54d0-43ec-a798-9eaa129ec81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365799b6-0b5f-45d1-9b9a-a127eba8c336",
        "cursor": {
          "ref": "3141e82d-ceb8-4960-9d6c-111d4c0feb6e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "051ac2b3-66f8-4cae-8aa9-689178d9ce8e"
        },
        "item": {
          "id": "365799b6-0b5f-45d1-9b9a-a127eba8c336",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "882e9bbf-c33b-4b14-9051-a747d9e4ad79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa5cd75-45d6-4c22-adf0-d5bf701e3298",
        "cursor": {
          "ref": "2bf9de2c-5556-4005-9f61-541df5d34eda",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "38b7401e-9df6-48c1-b142-228da70c7467"
        },
        "item": {
          "id": "0aa5cd75-45d6-4c22-adf0-d5bf701e3298",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "208b80d3-150f-4c9d-9332-5af0499a9d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03700762-7bfa-488b-a039-ef1fc1570a52",
        "cursor": {
          "ref": "7f7e6c9b-ab74-48b0-882c-a9958107af9d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "991f8af8-1498-4105-8f2d-6955d1ffa907"
        },
        "item": {
          "id": "03700762-7bfa-488b-a039-ef1fc1570a52",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6f9e9b29-a2e6-4a60-be3f-15bfe3fd73a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40923a98-9e94-4c64-a20e-f42abe2234b1",
        "cursor": {
          "ref": "e92908b7-850b-4d39-a33f-c306ce51d3fd",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "42889da7-2b9a-4861-8617-bdddaf920a6f"
        },
        "item": {
          "id": "40923a98-9e94-4c64-a20e-f42abe2234b1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96321287-ad48-4387-ad9c-23fccd355b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caaa2e5-ed0f-482b-95fc-45c0ea678be7",
        "cursor": {
          "ref": "85e48839-7b5c-4493-a70b-c89f01abccdb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "52e44218-5207-4f53-9196-21f616265663"
        },
        "item": {
          "id": "2caaa2e5-ed0f-482b-95fc-45c0ea678be7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7984d5b4-23f6-43ce-97c5-dc70cbae5f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7cac5f-3250-46ec-aaa5-3473402a74fd",
        "cursor": {
          "ref": "e54a40f6-404a-48e2-b3fb-0bef769ae5c4",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ecbf0d16-d310-4cc6-b427-4d34be41f97b"
        },
        "item": {
          "id": "7c7cac5f-3250-46ec-aaa5-3473402a74fd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "18e657ee-663e-43e8-a7ac-8c74f5dc5337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62793fca-92b9-4060-8db1-9a368bd7a2ef",
        "cursor": {
          "ref": "30a8c09c-466d-4ad5-90b3-a8c5164b2efb",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d64ed9b3-c902-4969-b14f-b55b6781bd52"
        },
        "item": {
          "id": "62793fca-92b9-4060-8db1-9a368bd7a2ef",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "23c7042c-f072-4dbc-8512-48688fa8eb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba7523f-8483-4637-893f-79d4f2f79c93",
        "cursor": {
          "ref": "0aff6741-dd7c-4739-96a7-fb20054c205a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "67149b97-c144-4153-b5fd-51e22c9a953b"
        },
        "item": {
          "id": "2ba7523f-8483-4637-893f-79d4f2f79c93",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "42080958-ef3a-46b1-a17c-257ca92e96da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4315796-7ef7-43c1-a5b1-05c1ea943d3f",
        "cursor": {
          "ref": "a2d70825-d509-4a9c-a630-4887484407eb",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "548f09ac-ab28-4374-9663-2ffad5d6c5ab"
        },
        "item": {
          "id": "d4315796-7ef7-43c1-a5b1-05c1ea943d3f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "24b78328-dc00-4d3e-8507-9a6758045af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b4435c-9f1c-471a-a49f-f6bccc34663e",
        "cursor": {
          "ref": "afa18e85-e45f-4309-a88c-e81bd0404156",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "91c2e329-a42a-40a1-88a0-9c7f1a43a299"
        },
        "item": {
          "id": "77b4435c-9f1c-471a-a49f-f6bccc34663e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "15c098fa-6199-416d-9489-2d96630ab1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6cae95-a516-4a38-a60c-581e265cd7db",
        "cursor": {
          "ref": "f00f2192-cfb4-4e5f-b3c5-7cc3d645c578",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "feffaec1-af91-4918-9d91-7089684f7f0d"
        },
        "item": {
          "id": "6a6cae95-a516-4a38-a60c-581e265cd7db",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0b550038-3aae-4375-9357-ae65583bbb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0787fa21-c0f2-44c0-ba85-460060cf4b22",
        "cursor": {
          "ref": "822af317-e334-4164-981f-6e8fd3a1a244",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a794063b-4899-41bd-abc5-7ad4304f7533"
        },
        "item": {
          "id": "0787fa21-c0f2-44c0-ba85-460060cf4b22",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d39c34a0-55e8-4aed-997c-b97221af6744",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587fe259-a08b-4c48-9175-b5470a146c78",
        "cursor": {
          "ref": "e90b7aee-e40b-471d-a935-a41b8f640fa5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "45d4463d-4cb8-4dd0-bce9-1413bbf2c619"
        },
        "item": {
          "id": "587fe259-a08b-4c48-9175-b5470a146c78",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6f6ab52f-5818-4b50-ac51-a4ff99651597",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8bbf8a-8587-41b9-9715-3a1af29ca48f",
        "cursor": {
          "ref": "74ba3651-91b3-45fe-ba02-a2e05bf54109",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5386561a-a505-4ea5-bf5a-051f32d703c9"
        },
        "item": {
          "id": "6a8bbf8a-8587-41b9-9715-3a1af29ca48f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7c2bdf9d-8d5b-44bb-a401-6e4ef75a4939",
          "status": "Created",
          "code": 201,
          "responseTime": 254,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fd28e6-fa23-4560-b10b-8f5855ed8f1d",
        "cursor": {
          "ref": "46b84e8f-dd66-4fe9-8ccd-5773a638ed9f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "680f3e5c-d6a6-47a2-920b-1bd6195bff96"
        },
        "item": {
          "id": "30fd28e6-fa23-4560-b10b-8f5855ed8f1d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ae30c4a3-ebbc-456a-95aa-e356995e0ca7",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57f95e6-b630-4f61-bc8b-9705787d194a",
        "cursor": {
          "ref": "d4a4b393-bd7d-4450-8d85-08be1637e8f6",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a67be921-7eef-43ae-befe-d085b7044061"
        },
        "item": {
          "id": "c57f95e6-b630-4f61-bc8b-9705787d194a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d107c873-4e98-4434-9b7b-0d2ee9f7b39b",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcc6e50-c809-4cb0-af0d-814043a9e343",
        "cursor": {
          "ref": "e462c687-6dd4-464b-af71-2e3438dd7b65",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "23cfb044-e5d4-48c5-bd45-b81e69f54f96"
        },
        "item": {
          "id": "dbcc6e50-c809-4cb0-af0d-814043a9e343",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7c215603-debb-4ff4-9359-59ceebdaebda",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bbbf55-b2ac-4eda-96c7-da5549417f66",
        "cursor": {
          "ref": "169866c7-e3ad-4ecb-9c85-ae086b04a362",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "552b9011-7396-4fb3-b3a3-da229cb6c2a0"
        },
        "item": {
          "id": "82bbbf55-b2ac-4eda-96c7-da5549417f66",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1ad0bbfe-5165-4211-94de-930184cf331d",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905ea6c4-c795-4480-9a42-9b3a1ff236a8",
        "cursor": {
          "ref": "98f26601-74a1-4ef7-982d-120fb5df1891",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "070732a0-76bc-41e9-93a0-ae496ed1c1f0"
        },
        "item": {
          "id": "905ea6c4-c795-4480-9a42-9b3a1ff236a8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ab759248-fcbf-4d81-ab30-720ecf7d9c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112b2d03-46d6-488c-ab50-8c7434e794be",
        "cursor": {
          "ref": "c943a8bc-58e0-4874-9b3d-b532959c3168",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "02a757b2-8367-4111-91eb-aeff08f4a4b1"
        },
        "item": {
          "id": "112b2d03-46d6-488c-ab50-8c7434e794be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3f024c7f-5864-4b69-99f5-463ea4ead4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928ddeb2-9b7e-44d4-b43d-973aad5e0711",
        "cursor": {
          "ref": "3c1b75c5-14ab-4c04-9398-56ae86aca8b5",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dc8e8099-842c-4900-b8c2-e675f6f1d1eb"
        },
        "item": {
          "id": "928ddeb2-9b7e-44d4-b43d-973aad5e0711",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "149398cb-ee21-40c1-9840-974b0e79c034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53c72de-3832-4bb9-8613-70a5c704e22e",
        "cursor": {
          "ref": "13882c53-0da9-456c-9b98-3bc97351244e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a4dd675a-4ddf-450c-9499-cb40e8b7450a"
        },
        "item": {
          "id": "c53c72de-3832-4bb9-8613-70a5c704e22e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6e5f52e8-18ff-4992-9b08-bdd41939262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfd0880-f73c-4e5a-a2b2-278e01291652",
        "cursor": {
          "ref": "b1233b37-f6b4-484e-8b62-db1ecfe5ce01",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fc3ab783-f6d9-4fe3-bea6-54dbddffceee"
        },
        "item": {
          "id": "acfd0880-f73c-4e5a-a2b2-278e01291652",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cb2ae30d-29e1-42d7-96cf-c4e43a3e007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2f5d82-7f99-4ba9-b22a-a4ab9480db90",
        "cursor": {
          "ref": "03f8fe75-7686-4f23-815c-2a7232512bd5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f10ce5de-e0f8-4503-bd55-0bb0274ffbdd"
        },
        "item": {
          "id": "bd2f5d82-7f99-4ba9-b22a-a4ab9480db90",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0c2b348d-2213-4ee8-b548-1273db6d78a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf2e052-1c10-45ce-873d-d868de2467b6",
        "cursor": {
          "ref": "3ac54ebd-7476-4eb8-8bf8-355a80035661",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "967e26b3-7a92-4a38-8a26-5a6cb7b6ee07"
        },
        "item": {
          "id": "fcf2e052-1c10-45ce-873d-d868de2467b6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0c2b3949-2211-4782-8215-ccb18ebdcad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09e605d-a259-425d-9435-0f2d6a615fa5",
        "cursor": {
          "ref": "6ee3a6f8-43ab-486e-9786-671b2a8db681",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5032a3a2-610c-401f-8648-9d86e2beb318"
        },
        "item": {
          "id": "b09e605d-a259-425d-9435-0f2d6a615fa5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "54169e6d-af18-4d0e-926d-578e96faf665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8af009b-2912-4bf1-9232-51f83ee0b9a6",
        "cursor": {
          "ref": "e3296b83-f5cb-423b-aaae-1bf817832b42",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "97f8d964-cdef-41f7-b579-2a9184083cb8"
        },
        "item": {
          "id": "d8af009b-2912-4bf1-9232-51f83ee0b9a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "395ccd76-6f6a-4a14-a200-37f860fc96b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bcada5-5cb0-4446-a9b6-4ff987018068",
        "cursor": {
          "ref": "b8e91f06-7be8-4874-9cd5-3ad5e1b43696",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "66f94cb4-4cf6-4b73-8287-96b7b0cba1e5"
        },
        "item": {
          "id": "14bcada5-5cb0-4446-a9b6-4ff987018068",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a6f50ff1-9456-4791-92d3-cd832e476a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5800e6f-a26e-4c04-8776-15a3fd637aa6",
        "cursor": {
          "ref": "c7141919-b2a4-48cd-addc-cbe40ae77999",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "322ba347-5a1a-4ff0-a9dc-1b0f3c98e560"
        },
        "item": {
          "id": "f5800e6f-a26e-4c04-8776-15a3fd637aa6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce8d0335-3b78-483e-a213-12a3f3511835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6692b265-7c90-4b70-919d-9a4bceec1b8a",
        "cursor": {
          "ref": "ac2ea6ca-4ea0-404f-a710-66cc6943fc07",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "08f7dd11-4202-4dd9-9694-5e7d5228c5f5"
        },
        "item": {
          "id": "6692b265-7c90-4b70-919d-9a4bceec1b8a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5488269b-7e30-4423-a24c-361fce118c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255a4810-3d7c-4b87-945e-418b6fbe19bb",
        "cursor": {
          "ref": "6633b2f2-dc5c-44be-8387-39e9b92d0a5d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fddfc5a5-9904-4df3-a22f-afac7f7b00e6"
        },
        "item": {
          "id": "255a4810-3d7c-4b87-945e-418b6fbe19bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "688ad6a3-a3f1-4dfc-b3f0-b74cdf9c929b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168443ed-8905-42bc-82b5-4a1cb4ffbfae",
        "cursor": {
          "ref": "89220ff1-1e54-400e-b672-c138816553b6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "70eb2d32-3187-48e7-9470-8625e118a3b1"
        },
        "item": {
          "id": "168443ed-8905-42bc-82b5-4a1cb4ffbfae",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "79388528-1726-4127-a806-fbb3ea6620b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1ea912-a1dd-4b90-8cfd-122f395dfd15",
        "cursor": {
          "ref": "d030e93d-da0f-4d0d-a83d-7d249935050e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8df13c78-5419-4adc-94f9-74eba334bbe1"
        },
        "item": {
          "id": "ba1ea912-a1dd-4b90-8cfd-122f395dfd15",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d4d67854-e1e8-409a-a279-0dab3e3b6e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676261f2-c704-4538-9a80-e0c2a6012219",
        "cursor": {
          "ref": "a0212fcf-9a57-432c-8c9a-7543d040833e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9005424a-d249-4d2e-be1c-39795ba49a22"
        },
        "item": {
          "id": "676261f2-c704-4538-9a80-e0c2a6012219",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cb984a07-1b11-4812-bf1c-f1c8e03bfbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefbb0b8-dea0-4cd5-b4bc-e286686acd3e",
        "cursor": {
          "ref": "a92f6553-f379-4caa-9404-f75a97b9bd4d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8d88a7bb-a9f2-402a-96a2-881226cbaeee"
        },
        "item": {
          "id": "aefbb0b8-dea0-4cd5-b4bc-e286686acd3e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "37bb054c-0603-4ff8-8646-222a99677396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eece6d-ed2a-4143-8aea-227c08f4278e",
        "cursor": {
          "ref": "a7169b9e-0d79-45dd-bb3f-2d594e0a9b9c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dbcaa641-3c80-4673-8a7e-d26ffa269954"
        },
        "item": {
          "id": "c3eece6d-ed2a-4143-8aea-227c08f4278e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c0972697-2fff-4cd0-b834-05797d7356ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e512e1f2-c161-4909-a88f-f47a459392b2",
        "cursor": {
          "ref": "9a83b1bd-1dc0-4de2-a9d9-d69098028796",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "52645d5d-01b8-4aca-8f73-f36abc2f5e5d"
        },
        "item": {
          "id": "e512e1f2-c161-4909-a88f-f47a459392b2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "150e05f9-d693-4108-9779-3117d374addf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0f3e24-5b0b-40dc-b0ed-0094fb10b0e3",
        "cursor": {
          "ref": "2cceaf29-b404-4a5a-aa50-001428f8b0f0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "425f0626-cdc7-472f-bc05-c1d3824aca4f"
        },
        "item": {
          "id": "cf0f3e24-5b0b-40dc-b0ed-0094fb10b0e3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9ef776ab-178a-4cbf-81d9-8f54daeb8b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d3e93b-7951-43c5-a026-3e1544cdf28b",
        "cursor": {
          "ref": "7733f9ab-9ca4-44bd-aec8-35f0b24c350c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fbd540d0-f5d2-4651-9983-9ac2d2bf00ee"
        },
        "item": {
          "id": "18d3e93b-7951-43c5-a026-3e1544cdf28b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9cea8823-d325-4109-b0f2-653efac424b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7a53c7-8bff-4f7c-8f56-f276b599114f",
        "cursor": {
          "ref": "a6107c4a-f92f-4ec8-ac1b-2320d69220a9",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0125079d-0a4c-48d1-af38-6ffa9a6d7770"
        },
        "item": {
          "id": "2b7a53c7-8bff-4f7c-8f56-f276b599114f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fd629172-6bd3-47df-9c9c-1f4ac04b87ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3832d62a-7621-490e-a849-2430b97ef289",
        "cursor": {
          "ref": "7cf73fe0-81fb-4594-97e4-2065db3e07dd",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9793311f-c09e-4651-9acb-18b16b11fdc2"
        },
        "item": {
          "id": "3832d62a-7621-490e-a849-2430b97ef289",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eda70eca-fc53-4ddc-926e-2c5ad81c1cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dde0eef-0d90-4346-8c10-0bedd3867856",
        "cursor": {
          "ref": "6f959bf8-d204-4200-b901-9eaa7e285fe3",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "948b7e88-19a5-406e-82d6-86352a8bd45d"
        },
        "item": {
          "id": "5dde0eef-0d90-4346-8c10-0bedd3867856",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "259dc83f-a51b-4f64-b324-1286cee1cd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849c031b-0bc5-4251-97d7-662c807b1a00",
        "cursor": {
          "ref": "e2d805e9-0907-445c-995d-6cc67662561c",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a166b1e2-8cce-4a83-8909-f31355c93609"
        },
        "item": {
          "id": "849c031b-0bc5-4251-97d7-662c807b1a00",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fb9f55d7-a27b-4247-a9ae-613135b20eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf57594-0dac-45ad-9753-d113dbb28ef8",
        "cursor": {
          "ref": "140ff77b-8c45-4696-aec4-987cd6478220",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7efe140-a62d-4e8a-8c1a-3d207838db6b"
        },
        "item": {
          "id": "bcf57594-0dac-45ad-9753-d113dbb28ef8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "57f4c381-db91-4097-b78e-f04b8b09b665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ab889e-f8ad-4d0f-b754-78d45b62847f",
        "cursor": {
          "ref": "01d5e8e4-7473-42d7-b623-899e90f17917",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7bb71c7e-0563-48b2-8c81-b8ed6bb9f6c1"
        },
        "item": {
          "id": "07ab889e-f8ad-4d0f-b754-78d45b62847f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3383db14-358a-42e8-844b-12fec4799881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6410ce7f-c0a8-411c-b158-a3ce56a77179",
        "cursor": {
          "ref": "4716ec91-6e89-4679-bc4c-d7851712d2bc",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b44c40d2-06fb-4706-aecd-bdef9f90db1e"
        },
        "item": {
          "id": "6410ce7f-c0a8-411c-b158-a3ce56a77179",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "456ad666-d7bd-4da9-a4af-b555d254d222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9356678-d37b-4ac9-add5-66a8f7932638",
        "cursor": {
          "ref": "02a01147-15a7-4b77-817b-57252ddb38c3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "944e1798-2d13-4c7d-ae82-3436853d1e20"
        },
        "item": {
          "id": "e9356678-d37b-4ac9-add5-66a8f7932638",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "961a6d28-eb8b-4a89-8fb2-a52efb353735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7726c4-4228-4f1b-af4f-82898bbcff5b",
        "cursor": {
          "ref": "0072dcc3-f3f5-4e44-b35a-21b6434181c9",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3e99c30e-ff81-4a74-8c6d-08b10621e51b"
        },
        "item": {
          "id": "ff7726c4-4228-4f1b-af4f-82898bbcff5b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0862655b-8665-4e00-9584-3b016a504ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c6609f-3347-41f6-9808-61e4e8b4e26f",
        "cursor": {
          "ref": "aea327fe-8165-4279-bb77-814f4f697f94",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "653d384a-ab29-41bd-a8d7-d55903e72880"
        },
        "item": {
          "id": "e1c6609f-3347-41f6-9808-61e4e8b4e26f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1a17e166-6e3c-4205-b7f2-067a3914d332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9338ff-b170-4582-828f-d48f0a71283e",
        "cursor": {
          "ref": "762c3711-a9d3-4f08-b810-a0f4475359c0",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0ac77a24-b84c-46ae-ad37-6ab847ec8c77"
        },
        "item": {
          "id": "cc9338ff-b170-4582-828f-d48f0a71283e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dfea6968-e030-49d4-a564-64675755384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926b8731-3138-4077-af1a-efbea299b31f",
        "cursor": {
          "ref": "378655e1-e470-4657-b3ca-03ee13962d14",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5ca21b11-5828-4d02-9471-5251a287ca68"
        },
        "item": {
          "id": "926b8731-3138-4077-af1a-efbea299b31f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "50d1ffac-fcb5-4a1a-b366-6573df22607d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c4a3eb-f654-468d-8cc3-40b9ca4b96c4",
        "cursor": {
          "ref": "38ce71a6-b1c2-4a90-a98a-0b228b08125a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b5527722-6e96-41ce-95f0-b8f85dc2a914"
        },
        "item": {
          "id": "69c4a3eb-f654-468d-8cc3-40b9ca4b96c4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0a157582-0373-4377-bced-a5aa384e5bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4359835-2136-469d-951a-01c30a7dffe1",
        "cursor": {
          "ref": "e8a494db-3abc-4457-b844-0514578544a3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6c113fb7-47be-4b69-ba13-6db86c8a0963"
        },
        "item": {
          "id": "f4359835-2136-469d-951a-01c30a7dffe1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "df7b4ee8-dd73-4fa3-9b14-2411343459c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9c1319-a918-4e17-93a4-b8e4057c8ab2",
        "cursor": {
          "ref": "f26234b0-1b8b-4f0c-b549-f6fc682374cb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2425d821-a5a5-4666-9a4b-be96a6165788"
        },
        "item": {
          "id": "bc9c1319-a918-4e17-93a4-b8e4057c8ab2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5cc40783-df05-4c5e-8bac-5bc7f1115423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26f2a98-6cb7-4751-9aa9-a84a81b6757d",
        "cursor": {
          "ref": "fe9f69a9-8089-42e5-8496-a315730cf1f9",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fa64d7d9-c0cb-4912-99fb-b0f602d82028"
        },
        "item": {
          "id": "a26f2a98-6cb7-4751-9aa9-a84a81b6757d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7c05ef1b-0d1b-4103-b6ab-56fb51dbd473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f745fa2-ba33-4d32-a1c0-3e293c72b363",
        "cursor": {
          "ref": "3f608223-ef64-422e-9532-b3e0ffbbe520",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39495f05-44c6-4607-af15-c81aafef36d3"
        },
        "item": {
          "id": "2f745fa2-ba33-4d32-a1c0-3e293c72b363",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cd8be9c4-16a2-4281-8e19-10e387ff0a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad988f4-5541-4307-8502-92b9aa6c3bbf",
        "cursor": {
          "ref": "46961de7-3f34-4265-a83f-028f4aa10d8a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "08f89c21-30d9-48f6-ad18-669ad63ce5c1"
        },
        "item": {
          "id": "2ad988f4-5541-4307-8502-92b9aa6c3bbf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a2eb4d0b-1d7b-4841-a0f6-61ad6a341136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504fca22-0e9a-41ea-9c1b-bd487ef154a6",
        "cursor": {
          "ref": "be275369-06cb-473b-a34a-1f21575c16f7",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "acbc8d39-e7d9-4dfe-8b28-f17c2d927f16"
        },
        "item": {
          "id": "504fca22-0e9a-41ea-9c1b-bd487ef154a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e2595e1-c0c6-483b-bbfc-61bf23b9c897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b6b045-b9b5-4712-9745-2464f07b00e9",
        "cursor": {
          "ref": "872f0c4f-6fe8-47d0-8de8-60e95a5347e4",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7031168f-6561-47fe-8a85-c523d68a3fd1"
        },
        "item": {
          "id": "92b6b045-b9b5-4712-9745-2464f07b00e9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f72101c2-bfa2-44b6-aee9-46584d419c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63150ac7-5c79-4066-ab8d-6e895ade1d2f",
        "cursor": {
          "ref": "f4b7c0e2-eb5e-406f-b6cb-b2a4fdf6ada1",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a52618a8-5529-43df-a706-aba39861df31"
        },
        "item": {
          "id": "63150ac7-5c79-4066-ab8d-6e895ade1d2f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "39ed2f57-583e-499f-9f90-52604867e391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51344798-9893-44fa-b34d-1a8552d8e663",
        "cursor": {
          "ref": "729358a7-cc63-42d5-8239-f7b918079a6e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "807064c5-4a3c-4a1b-805a-292c549a6cfd"
        },
        "item": {
          "id": "51344798-9893-44fa-b34d-1a8552d8e663",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "98398ebb-3c1e-4464-bcd7-b30c462152c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc708e4a-c16b-428d-97de-ec5212841f5a",
        "cursor": {
          "ref": "d3606818-91c1-4acf-92a9-474815fb0a4d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "df3765be-9e24-495f-ab79-4894307b3ab0"
        },
        "item": {
          "id": "bc708e4a-c16b-428d-97de-ec5212841f5a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "514c4aef-43ef-46ce-b060-5abd8ed52819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70da3d4d-9086-4023-8f2b-f00b19609447",
        "cursor": {
          "ref": "567bb96a-6f04-4d87-a5bd-b417f5b6e55a",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "866f8b5a-9fb1-4632-9c8e-7938045f9629"
        },
        "item": {
          "id": "70da3d4d-9086-4023-8f2b-f00b19609447",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "60550311-4c22-42e9-839a-24e6fc3de29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fd76f0-65ef-4bbb-ac6d-0012e8bef664",
        "cursor": {
          "ref": "fbedb0b1-9bc2-4d79-a4b2-148285a36f6c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "123efa91-cf34-415b-b3f1-99ddf9630fc3"
        },
        "item": {
          "id": "48fd76f0-65ef-4bbb-ac6d-0012e8bef664",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a144184-8fb8-4115-88d9-8e43bd9426bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01e585f-a204-4dd9-b41a-ccc412e3ee1e",
        "cursor": {
          "ref": "32ed5ca1-756e-48a6-815a-bdad7628cd68",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6ffc52a5-71a8-4c14-b638-cde28bd1db56"
        },
        "item": {
          "id": "c01e585f-a204-4dd9-b41a-ccc412e3ee1e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7856b0f4-e7bd-469e-ac92-60fb5c198427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1b86c7-075f-4c03-936d-0ae4832638e2",
        "cursor": {
          "ref": "67ecabb9-149e-476b-9865-1a18a852868f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c81f476b-f584-48ca-b1fb-700ae59e43b5"
        },
        "item": {
          "id": "6d1b86c7-075f-4c03-936d-0ae4832638e2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b3628842-6578-4f5d-a086-331f51017fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ec51ae-c17c-45c0-ad3f-2192909fabf6",
        "cursor": {
          "ref": "24ac0d0b-3a86-4398-b469-73a7b32f9b22",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3dc7f752-6340-46b4-ad68-a66d734ba8e5"
        },
        "item": {
          "id": "d3ec51ae-c17c-45c0-ad3f-2192909fabf6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4300552c-b370-4799-b443-74322198b34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bb316d-66f0-4308-843c-9846b82db8b8",
        "cursor": {
          "ref": "d82c9f85-eb64-4c94-83e0-89ae32fb4457",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e9249721-2950-4254-95d0-3e5aeb52e053"
        },
        "item": {
          "id": "80bb316d-66f0-4308-843c-9846b82db8b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c31f3f3f-00ee-4a4e-8278-8bab5d42a305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df8440e-74f6-4bfb-a68c-809879096311",
        "cursor": {
          "ref": "83f1fc7a-2840-4fbb-bc97-acc08569fdb7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f2efb696-afc1-460b-9087-bbaa63802d5f"
        },
        "item": {
          "id": "0df8440e-74f6-4bfb-a68c-809879096311",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "47cc8a05-bda8-46ca-94c9-f8ab8336e7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c2991e-0e43-4e69-8599-08f73ee1b940",
        "cursor": {
          "ref": "943d19a1-144d-4091-aa94-cab42437368d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5f852ab2-fcd0-4f23-b803-c612cd8b99dd"
        },
        "item": {
          "id": "69c2991e-0e43-4e69-8599-08f73ee1b940",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "251492e5-700a-426c-8409-e95987ad068e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1529cd9-435e-4b0f-9cdc-0067e14a30c4",
        "cursor": {
          "ref": "51166d12-d3e1-40b0-ae81-bdf52f2c3512",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ebdd5db0-4b84-43c9-ab78-99910a047810"
        },
        "item": {
          "id": "f1529cd9-435e-4b0f-9cdc-0067e14a30c4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "97f6a2a5-adf6-41cc-a0e0-1b80ed12e46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa14b9f2-30d1-4c3b-ae8a-aa2cda4c1426",
        "cursor": {
          "ref": "fe47d73d-b69c-4851-930e-a4d7ed5d1ebd",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0b9f4464-4401-43b1-9bd5-b46b469b172b"
        },
        "item": {
          "id": "aa14b9f2-30d1-4c3b-ae8a-aa2cda4c1426",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d3fd0656-e1b2-4203-a4e7-33ab715930b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d02187b-cf3e-4ae4-a765-a01638784067",
        "cursor": {
          "ref": "3be50a9f-e1aa-4754-81fb-b18724e99ee5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "13427495-252b-44fe-8af9-ed0d14e2cf25"
        },
        "item": {
          "id": "4d02187b-cf3e-4ae4-a765-a01638784067",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dbdd8a7f-7a78-4285-badd-70a3df0f633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8269f81b-e3d1-40d8-94ba-2e7130b708d9",
        "cursor": {
          "ref": "54dc33b5-2fbe-454e-8ed2-63e67cf8cdf7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "14067ce5-8208-46dc-96af-0b1ec3759ca1"
        },
        "item": {
          "id": "8269f81b-e3d1-40d8-94ba-2e7130b708d9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3747882a-c582-4177-b228-a42170c88f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d7550d-101b-41ca-b812-a68a038452dc",
        "cursor": {
          "ref": "435af358-3682-4e34-9ff0-fb7b0051b73e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b7af57b1-09b7-48d9-b0ca-1d43e0d9cfbb"
        },
        "item": {
          "id": "d6d7550d-101b-41ca-b812-a68a038452dc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "89eb3b5d-de5a-4a4f-9de2-351dff198052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbd7b41-44de-41e0-9b00-0c9acd3d5750",
        "cursor": {
          "ref": "f4cd1152-16aa-4806-957b-f0cc91a012d8",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "be84929d-4f44-46cd-9a5b-8f4d9005b078"
        },
        "item": {
          "id": "dfbd7b41-44de-41e0-9b00-0c9acd3d5750",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fba2ecac-3efb-4a00-9d78-9f4dad823ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33aea955-e2e3-4d32-86e9-78c88ef6fa84",
        "cursor": {
          "ref": "a7dfef17-3656-4f5b-a0f8-e59db6df5949",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eba9d0e5-ac56-4dc7-a95a-1fd8cb86dd96"
        },
        "item": {
          "id": "33aea955-e2e3-4d32-86e9-78c88ef6fa84",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1ec68e55-5ef3-461a-86b7-fcffe47c058b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c6c06f-23bf-4f56-b055-e13965208d14",
        "cursor": {
          "ref": "185c30ec-a4ba-4e95-a19c-f92f1c10b044",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "170ae528-59b4-4539-8072-0e34eaa75b78"
        },
        "item": {
          "id": "36c6c06f-23bf-4f56-b055-e13965208d14",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "53d051c2-6651-46f8-80dc-dcd5e95c2000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea220eaa-1515-4521-b225-5032d406c76f",
        "cursor": {
          "ref": "cc8949f3-7b61-41a8-8ab6-0856ea89ad18",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dc340407-007d-427c-aa77-710834ae4830"
        },
        "item": {
          "id": "ea220eaa-1515-4521-b225-5032d406c76f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eff3ab9c-8c14-4d6f-85ba-0d3af93848d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a245e2cd-8c51-4bcd-9f83-840e8c0ce861",
        "cursor": {
          "ref": "bcf2302f-3b54-4e3c-95b1-18740be35a96",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f2f78f82-3357-4bb5-bf89-ac038138b237"
        },
        "item": {
          "id": "a245e2cd-8c51-4bcd-9f83-840e8c0ce861",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "898e41e6-09ec-48f2-b527-aa1d7c0138a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4b8828-2c19-4c2e-8a5a-cb0df034ccb6",
        "cursor": {
          "ref": "82be972b-d59e-4bce-8d9a-a93387d13813",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a9ebe024-cb91-47b4-bf14-36e27e633b9f"
        },
        "item": {
          "id": "be4b8828-2c19-4c2e-8a5a-cb0df034ccb6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "db3eb62d-ae8d-4ae7-a048-56f36593f5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8747fd7-6712-4c53-808c-866b4cc9f534",
        "cursor": {
          "ref": "60e61885-b784-4c12-8425-08e5623374df",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f683b142-5f61-4019-ba7d-cfb0d2e03a63"
        },
        "item": {
          "id": "c8747fd7-6712-4c53-808c-866b4cc9f534",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31d0edd4-5a67-4225-b545-2ddf0b95f42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d0f008-4120-4f04-be27-326234f20a6c",
        "cursor": {
          "ref": "fda68043-1a3a-46ab-a467-4d44421f6d66",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7422b628-d81c-4ca8-8239-524981278c7a"
        },
        "item": {
          "id": "f3d0f008-4120-4f04-be27-326234f20a6c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7ec229f4-b646-48bd-8ebb-950452611854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b8e0ff-dd24-469e-aa27-c207e8ec53bd",
        "cursor": {
          "ref": "cb5286f6-eb6e-4608-9088-c908174c4342",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "65582139-3546-4765-b4fc-95e2d3eb9a3c"
        },
        "item": {
          "id": "30b8e0ff-dd24-469e-aa27-c207e8ec53bd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0314cb51-c924-4413-9c7d-58829e6431ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076df4e5-bff1-45ae-a92f-8f2dccce3a81",
        "cursor": {
          "ref": "70c9de65-cebd-46f6-a983-dff5c58eafe9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "041afd4e-451d-4f28-8ef7-27ac8ca8facf"
        },
        "item": {
          "id": "076df4e5-bff1-45ae-a92f-8f2dccce3a81",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6350860d-8dc4-4de7-83e8-6acd45a2f0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d34bc0-11c6-4332-a995-c0535bcd7712",
        "cursor": {
          "ref": "c97f3ca7-d559-45f1-aefc-b65a68acc00c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "75f21bab-9715-4e14-b12f-02074050ef3e"
        },
        "item": {
          "id": "62d34bc0-11c6-4332-a995-c0535bcd7712",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0ccf4226-b480-41d8-9184-3aeb41b5d621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9e503c-4b37-41b1-a7a6-739b9d3c1b66",
        "cursor": {
          "ref": "b054c1f6-5018-4df2-bf1b-a61bc92fe36b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "574c26a6-8763-4bef-ae56-517c06376a29"
        },
        "item": {
          "id": "3c9e503c-4b37-41b1-a7a6-739b9d3c1b66",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "789192c9-0659-4c30-9a72-22fe232bcf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5edf413-4031-4d12-b947-f0566bc78308",
        "cursor": {
          "ref": "02fc5de3-3be8-4cad-bb0b-808bb689e35f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ae93db6e-fb5c-4048-8c16-380db6317d39"
        },
        "item": {
          "id": "e5edf413-4031-4d12-b947-f0566bc78308",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4d5c6f85-58eb-468c-a27c-fbb27e858621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e987b49-3217-4db9-9639-a880df9a555a",
        "cursor": {
          "ref": "33b4e43d-effe-4ae8-8ae9-926a37d8db6f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5c40467d-0c1b-4257-8371-277293db571d"
        },
        "item": {
          "id": "7e987b49-3217-4db9-9639-a880df9a555a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5fae1d61-cfaf-4c15-8902-130014a6ec44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12afb8da-dc9a-48af-85e4-a6bd49a31da5",
        "cursor": {
          "ref": "330e144b-0fd2-4ee8-8121-9e9dbf29381f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4550b7fc-bdc7-4e29-baa7-a38129c90d5e"
        },
        "item": {
          "id": "12afb8da-dc9a-48af-85e4-a6bd49a31da5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eff8b590-e9c9-4608-b456-05fc93cbbb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f2b86f-7828-4078-ac7b-6f09b7944376",
        "cursor": {
          "ref": "ac5feb4b-8f06-452e-bf2f-2fd1c12a07e4",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "23524f7d-0d2d-4f92-97b2-b7bc63af8420"
        },
        "item": {
          "id": "83f2b86f-7828-4078-ac7b-6f09b7944376",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fe97d27c-774e-4f1e-9673-99e1de7cc2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53b1fb3-cb2b-4a0e-b160-7989e20d9c2b",
        "cursor": {
          "ref": "2ff34976-5cf3-4849-bf17-15590c7887ac",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0f26c4a1-0c1d-40f2-a680-614a282c516b"
        },
        "item": {
          "id": "d53b1fb3-cb2b-4a0e-b160-7989e20d9c2b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ded1fe00-fa0d-4958-8756-d808e4f21630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53118de-3075-4e43-a929-6df8f4455bb4",
        "cursor": {
          "ref": "e5a99e70-aff7-4be8-8ecb-69792289953a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d61e427c-4cca-4a07-8b31-de10a21b40d0"
        },
        "item": {
          "id": "c53118de-3075-4e43-a929-6df8f4455bb4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "374084ce-5ffe-4913-9027-f934eb18aefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c3ef5a-903e-40e7-8bdf-13ecc8c22a2f",
        "cursor": {
          "ref": "7fd59761-c856-4fe5-9e7b-8ab7b23cbd18",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5c175a3e-7725-4189-a837-e2a6810d416d"
        },
        "item": {
          "id": "f8c3ef5a-903e-40e7-8bdf-13ecc8c22a2f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "34387d05-7ba3-4a8e-9c38-5c2ad295b0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330e2cef-f04b-4e3f-8736-214c124bede2",
        "cursor": {
          "ref": "da4cfd88-1cab-43f8-be35-90f3791aa768",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fa562e91-2340-4f11-8635-f21b134e4a67"
        },
        "item": {
          "id": "330e2cef-f04b-4e3f-8736-214c124bede2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a673cb89-e143-4ab2-8639-285f0f51138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadc582d-217f-48d5-9e98-b6258bb312f5",
        "cursor": {
          "ref": "c9bc6e7a-6700-444d-8903-dc57552bb374",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b751ea3e-04c3-4425-a83d-21c865e38c09"
        },
        "item": {
          "id": "fadc582d-217f-48d5-9e98-b6258bb312f5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "10f9f11e-d279-4250-a14c-b00be2f5345b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee3abf-653e-4807-b100-55ca74fd4572",
        "cursor": {
          "ref": "9759af74-082d-4f30-95eb-0c59cc98b735",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "055b2ce8-2685-4c3a-b31f-9a26c0f9083b"
        },
        "item": {
          "id": "81ee3abf-653e-4807-b100-55ca74fd4572",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e0dc8d7-21a8-497d-9acb-1baceac72e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09066193-59d0-438e-919a-088a593e592a",
        "cursor": {
          "ref": "2bbc5859-2edd-43fb-a224-abb6cb1cade5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bee023d9-418e-478f-baee-5fccb114a26d"
        },
        "item": {
          "id": "09066193-59d0-438e-919a-088a593e592a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "15884828-0968-40b3-9f38-6904e25332d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc99c47f-d00e-4735-9815-4fd474e1903d",
        "cursor": {
          "ref": "a3945e25-5892-4a27-809a-843b4ad56497",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8128cec3-991a-404d-ba30-20ab6f7e510e"
        },
        "item": {
          "id": "cc99c47f-d00e-4735-9815-4fd474e1903d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f35c2e8c-9a14-4a9f-81e9-88624eba5253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c46852-96ff-4334-9593-bc21b7ce4d05",
        "cursor": {
          "ref": "785f381d-ed58-4ddf-897d-e280a0922720",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "38e9d577-1589-4470-b825-69cc0c52dd1e"
        },
        "item": {
          "id": "e9c46852-96ff-4334-9593-bc21b7ce4d05",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9a25d997-d517-439f-98cb-39f34b235445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4141b7bf-2844-4cd2-a496-62889db3e9e4",
        "cursor": {
          "ref": "8558eebc-e7e1-4452-ae1a-32901cd1c784",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "98107dd2-5eb1-4382-b751-eb6a43c2804f"
        },
        "item": {
          "id": "4141b7bf-2844-4cd2-a496-62889db3e9e4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7505d4d0-8a49-4e0f-a162-eab0de3ba3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64684591-c0c9-4c66-a66a-23d1cff0fd06",
        "cursor": {
          "ref": "ebdaef00-ce54-4489-907b-e55a75289027",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c33d7ac5-77e5-4fcf-a705-752af75cf2c0"
        },
        "item": {
          "id": "64684591-c0c9-4c66-a66a-23d1cff0fd06",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "36f7bc0e-5778-4c51-b2fd-661525c1ba11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee063442-daeb-4ded-ab0e-f2f04c0b978e",
        "cursor": {
          "ref": "02f29370-8855-4b26-b3d3-4d590450f9bb",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cccf42ed-0f5a-438e-91fa-fb76bb974d1b"
        },
        "item": {
          "id": "ee063442-daeb-4ded-ab0e-f2f04c0b978e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5660a282-a5ed-41e8-be72-943c53b1cacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56d29c0-7f47-48b2-b777-2feb7385c8f2",
        "cursor": {
          "ref": "55c169a5-a88e-4a53-aae8-31edb22df3b6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "06d57dcd-dcbf-4109-a697-f5fea30a87b5"
        },
        "item": {
          "id": "d56d29c0-7f47-48b2-b777-2feb7385c8f2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3423c6ca-e23a-406b-9f0e-9aa3fb5659a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d91de6-7089-4d30-9ded-5361c030bb57",
        "cursor": {
          "ref": "525e0c82-5d3a-4e96-bc7e-43e2684cae72",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "540bfd18-63e8-4468-9b0d-e4cc7f26f01d"
        },
        "item": {
          "id": "e2d91de6-7089-4d30-9ded-5361c030bb57",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7c1cc73f-c40d-4f47-b61a-b907cf1d1627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88e994b-07f0-421a-998e-73a86f3007cc",
        "cursor": {
          "ref": "23d32f9d-8ad2-4890-96c8-563cf9e06a95",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7b59d64c-9ccc-4561-8bfc-ed9ddf9d2902"
        },
        "item": {
          "id": "d88e994b-07f0-421a-998e-73a86f3007cc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f501364c-2f17-4342-8a38-56ddc0236b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354f5f66-1bf7-4be8-b32b-f54651222b43",
        "cursor": {
          "ref": "f4049b16-3cc1-478f-8dd9-59c67edae101",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f755ea5f-5a6d-4c93-8a79-2ae8955be2f1"
        },
        "item": {
          "id": "354f5f66-1bf7-4be8-b32b-f54651222b43",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d48bb467-d246-4c55-a7b5-cfd09f49ccdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a255968b-ff5b-4c26-aa02-c01b8fa97baf",
        "cursor": {
          "ref": "378b5dbf-1293-4250-80b7-63f66928f902",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ed27129a-bdf7-4ba3-986f-cd6dc2c7b5f8"
        },
        "item": {
          "id": "a255968b-ff5b-4c26-aa02-c01b8fa97baf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "24a41c01-7bde-40ba-bee5-0445e7e05869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19502970-bd08-4897-9d7a-2c1b11e53500",
        "cursor": {
          "ref": "04dcbd66-9381-45dc-b368-456cd6dbcbf6",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ca29e1c0-c922-49fa-8767-3ec283504704"
        },
        "item": {
          "id": "19502970-bd08-4897-9d7a-2c1b11e53500",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7e2761e8-acdb-4a34-a96a-ec7e55e3c95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcbd8fc-b877-4744-9970-4c422c171093",
        "cursor": {
          "ref": "9bd7d947-ddf3-40bb-bf46-1cc37bac79bf",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "145d92c9-ccf1-42c9-a25f-e72d38baab64"
        },
        "item": {
          "id": "bdcbd8fc-b877-4744-9970-4c422c171093",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ad8b7371-a53e-460c-8792-6655aff194d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813f0305-0bb5-4f92-a3ff-42ab8d219124",
        "cursor": {
          "ref": "d9bb1bdf-cefa-421a-97b6-5b88d03d8835",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "708bf3f6-c07b-4192-abeb-59c17f3750a6"
        },
        "item": {
          "id": "813f0305-0bb5-4f92-a3ff-42ab8d219124",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "24697819-08fa-414e-aba7-4c39f1a04873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5565550-225f-43ed-849c-c15b9831e9f6",
        "cursor": {
          "ref": "631aedb4-33a4-428d-b80a-56709bc6bc50",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e03909e-2ebd-49d3-ad4f-9f336937f7f7"
        },
        "item": {
          "id": "a5565550-225f-43ed-849c-c15b9831e9f6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ea474dc9-17cd-4933-a45f-0a26658bfc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069d228b-8146-4059-9638-aa3a0682aed1",
        "cursor": {
          "ref": "952e1683-23c3-418b-a057-b45f95adc09f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "60ab4d64-b0d3-455e-9bdd-1137300fd92f"
        },
        "item": {
          "id": "069d228b-8146-4059-9638-aa3a0682aed1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c25d1ed6-d66d-4c2a-9277-cbfe11f8707f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e358495b-b58b-4a12-8a88-921809858363",
        "cursor": {
          "ref": "41f50093-71b1-4e61-b0a6-0a7b5dfc3302",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0bc9b080-7075-4228-917b-089fff2afd80"
        },
        "item": {
          "id": "e358495b-b58b-4a12-8a88-921809858363",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f4c7a392-d60c-4192-b7ab-9478708a93f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51d3db9-7d24-4f0f-ab0c-f59c74649fec",
        "cursor": {
          "ref": "1e41a1cf-e9d2-468f-b271-568d04fa6439",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8577ba01-b880-44fd-8cbc-a4e0ea3443ad"
        },
        "item": {
          "id": "f51d3db9-7d24-4f0f-ab0c-f59c74649fec",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "46beede1-e6b4-4bbb-9998-c24998be0d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb81b8e0-a720-4c83-8d95-bbe23d5238e5",
        "cursor": {
          "ref": "60e0c99e-7adb-42bb-a1a2-c85b6dcace69",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "27198ea3-2c3d-4d6f-aa41-c47cd44d6737"
        },
        "item": {
          "id": "bb81b8e0-a720-4c83-8d95-bbe23d5238e5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e7c43406-716b-4026-8076-c7acea0e31a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4778694-fea1-49e6-b313-ba89f484f9f6",
        "cursor": {
          "ref": "a0f050e8-cc47-46f0-89c1-c25917cbbcb1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "28ce2799-2d51-4e1f-bca8-b024f3530837"
        },
        "item": {
          "id": "e4778694-fea1-49e6-b313-ba89f484f9f6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d9d50353-91f5-4c4d-9bcb-cec5cc587b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23de538b-7733-473c-964a-72ee1ba2302f",
        "cursor": {
          "ref": "25149bb7-8596-4aba-98cb-f156c8b28bac",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6a19d55b-b13f-4135-b350-0ef467552f41"
        },
        "item": {
          "id": "23de538b-7733-473c-964a-72ee1ba2302f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d62b0b41-6768-47db-9248-2860c77ade75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e9231f-ca4c-4486-882a-fbad92748ec9",
        "cursor": {
          "ref": "2832953c-6804-4b60-a151-ae3c5d05604a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cd2d23d7-05ca-47ba-af70-3cdc99d5f81e"
        },
        "item": {
          "id": "66e9231f-ca4c-4486-882a-fbad92748ec9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d58e7ae7-a2f9-46cb-a0a0-fc31186579f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa9914e-da69-44a6-8357-669fe2cbeb4e",
        "cursor": {
          "ref": "edf14c10-ddf6-41c0-ba12-0c4bb166e935",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b1f8fe12-7590-4218-94d3-df1fb793ed91"
        },
        "item": {
          "id": "6fa9914e-da69-44a6-8357-669fe2cbeb4e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d88b173c-e2fe-45f9-8617-eefc3fb2df78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e39f75-0f3a-4f3c-9e27-d14756348cfb",
        "cursor": {
          "ref": "2da111ef-b297-40a4-977a-2a39284faa96",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1d0b585a-e70f-4ade-8b9d-35c79b3904cf"
        },
        "item": {
          "id": "b9e39f75-0f3a-4f3c-9e27-d14756348cfb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f28b0ea5-38c6-4ce2-8815-55146a4a4977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5f6d6f-0335-487f-997d-d82eb9b0e86d",
        "cursor": {
          "ref": "9c14ee78-0a53-4dd6-904d-da83bdf59640",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "258bf66e-399f-441a-a3d9-2e5da5b007b7"
        },
        "item": {
          "id": "aa5f6d6f-0335-487f-997d-d82eb9b0e86d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e0aad7a4-1686-4389-8f60-465f6f50ccc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0b2b88-494e-4256-b987-115fb15b30c4",
        "cursor": {
          "ref": "fb803b72-7ae6-4206-a920-ceef9ea67669",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "334073b5-547e-4863-8afe-81d4c6a87f2f"
        },
        "item": {
          "id": "6c0b2b88-494e-4256-b987-115fb15b30c4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7ae0756b-636d-4f85-8a58-33145dafc4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cede1e-c4c7-4ff2-9b65-9eed25b1d3f0",
        "cursor": {
          "ref": "7c7900be-ff61-4dc2-9e77-32545f2750f5",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e4dfd0ee-8666-4396-b743-e2877ab025e5"
        },
        "item": {
          "id": "b5cede1e-c4c7-4ff2-9b65-9eed25b1d3f0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "12e6bce1-066e-4482-ae24-fc6398de59c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb387dbe-1e59-4399-bf46-cb62d7486a84",
        "cursor": {
          "ref": "ab952d03-12b2-40d2-95fc-f87d5eaec30d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "005584d3-13b1-4f24-95b9-4e1979cf3b9d"
        },
        "item": {
          "id": "fb387dbe-1e59-4399-bf46-cb62d7486a84",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6de22557-18da-46cc-b1eb-393894fb6b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aefc16-1b37-4b81-ab5b-4b622fe89990",
        "cursor": {
          "ref": "e03c0a55-d43b-44bb-9369-55bd7b56d8fc",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cdc7e4ff-2fa7-4704-b82e-0a2bf8e077df"
        },
        "item": {
          "id": "63aefc16-1b37-4b81-ab5b-4b622fe89990",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "032ca134-9988-4481-8e2e-530f0507f9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b8e1ba-1da5-480e-b782-8a22adff546a",
        "cursor": {
          "ref": "eb55ca84-509b-4399-8e29-5aabb0bc49e2",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c152a67b-5a4b-4643-a537-3fb3499d6d0c"
        },
        "item": {
          "id": "71b8e1ba-1da5-480e-b782-8a22adff546a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1b81a43f-779f-45bd-9d49-b5297aecdabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36919dc-2cc2-401b-b38f-f8f731c260b1",
        "cursor": {
          "ref": "0ea457d7-fb0c-42a4-9c5b-387872435d3d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "498d3a97-663a-4f8a-978a-c816e8a6bf8e"
        },
        "item": {
          "id": "f36919dc-2cc2-401b-b38f-f8f731c260b1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "abae2c6a-30d6-461f-b23a-cceafff49d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3669f926-fce3-4127-b793-d402fce8503e",
        "cursor": {
          "ref": "deab599d-936a-47a1-8540-d1df5a97816c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9ccb26c0-7ea2-4979-a10c-50e28395223a"
        },
        "item": {
          "id": "3669f926-fce3-4127-b793-d402fce8503e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ccfe3e86-a5ac-48f7-a613-a96bf63a2bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b729c24-d732-4fb7-aa0e-7ce170c4d1e2",
        "cursor": {
          "ref": "9862244a-6372-4d1f-8c0a-dad2ba400d24",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "200aefcc-d16e-4386-bb34-9d525b52473c"
        },
        "item": {
          "id": "5b729c24-d732-4fb7-aa0e-7ce170c4d1e2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a7ed18ec-0d11-4400-9b24-9952acedab48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2a5a4b-3848-42e5-82d8-4b3e82de1fd3",
        "cursor": {
          "ref": "e746b69f-c1d4-4b30-9bfd-cd939cebf022",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d6d1d589-c518-4fe6-848d-8b895d91f565"
        },
        "item": {
          "id": "1c2a5a4b-3848-42e5-82d8-4b3e82de1fd3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3b78fcc3-1e2b-48d6-a579-a31760099a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36df53ed-0f60-4def-81aa-291d5fc43c08",
        "cursor": {
          "ref": "d7de3c83-5d7e-4abe-8ab9-cf2e1384acc2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0fdd047c-575d-4185-930b-1ee32b4966eb"
        },
        "item": {
          "id": "36df53ed-0f60-4def-81aa-291d5fc43c08",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f5ec8f47-ece0-4de4-90ca-f7073c1a1686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9b7e96-30b9-4394-9629-c166433dc4fa",
        "cursor": {
          "ref": "6c47de44-c780-40e8-b92c-acd7e54d4dae",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cef35a04-59d2-4d89-bbeb-b593c2627dab"
        },
        "item": {
          "id": "0f9b7e96-30b9-4394-9629-c166433dc4fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "81a65ae4-8b3d-4f25-8cf8-e68dd8be9142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5ba865-c254-4ef6-9eeb-b672ccd7a665",
        "cursor": {
          "ref": "4a247148-bae3-4228-ac5b-39988d949e2c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "efe618a9-0b3f-456a-a5d0-616e2a13e181"
        },
        "item": {
          "id": "1b5ba865-c254-4ef6-9eeb-b672ccd7a665",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "889b8a85-a9bc-4ff3-ba21-f1a82fdded80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b27677-1e45-4e95-9005-474fbf8729d1",
        "cursor": {
          "ref": "8de43dc4-e976-446b-ac0e-ea126dfb0c2f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4532ff79-bce0-4590-9813-e70a7cf84769"
        },
        "item": {
          "id": "79b27677-1e45-4e95-9005-474fbf8729d1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3618e9f5-7990-42c5-9d48-320c61fa2345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fd9ecd-daa3-429b-9daa-cbc0ad66625d",
        "cursor": {
          "ref": "bc6ebf02-24c8-4147-9c6f-8f3934b9e18f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5943a006-73ac-4d4d-bf60-1a01a4e17b1d"
        },
        "item": {
          "id": "a1fd9ecd-daa3-429b-9daa-cbc0ad66625d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a695eb1d-d3dd-4bae-9e02-acefaa0935e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b0ee77-cb81-4493-9b96-f68f6f424963",
        "cursor": {
          "ref": "824a4517-f123-4009-9f62-ecd1a27e769b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "12c51bfd-d58d-4387-8a67-d28ac0f4ffab"
        },
        "item": {
          "id": "75b0ee77-cb81-4493-9b96-f68f6f424963",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c72088b2-0abf-4e8c-aa3e-09f944362417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51b09d8-d6b6-4475-816c-d70284c57301",
        "cursor": {
          "ref": "2ce25fca-2165-43ab-a5ae-ab758ee41d75",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "05991a01-38c4-4e49-957f-f6d9c5d88b18"
        },
        "item": {
          "id": "a51b09d8-d6b6-4475-816c-d70284c57301",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cf27943b-860a-489b-9eef-029be94b38b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3712deb-fa4a-4284-857d-caa661f7e3a1",
        "cursor": {
          "ref": "75b8e2fc-3a58-4a6d-a67e-29351eb84dfa",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f5e4a694-e686-43bb-b016-869acf556c66"
        },
        "item": {
          "id": "b3712deb-fa4a-4284-857d-caa661f7e3a1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "33e2cc1c-bd2d-481e-b24f-464c83919c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b71ccbd-8a47-453a-a1ec-5a5c905d147f",
        "cursor": {
          "ref": "84dce799-20e6-4d31-bfee-83318010451b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "db8d1213-09dc-4e73-8e53-dc049e03a2dd"
        },
        "item": {
          "id": "8b71ccbd-8a47-453a-a1ec-5a5c905d147f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b0ccbb18-e15d-40c7-92be-66f20a261c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a82d84-54cf-4a03-bde6-ba3fbe4453e7",
        "cursor": {
          "ref": "126b9e00-496b-4443-9392-cf6785f17f83",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5c7441e8-9d0b-4b8b-8ec6-55fafa7539fd"
        },
        "item": {
          "id": "35a82d84-54cf-4a03-bde6-ba3fbe4453e7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "787ded64-6842-4cc2-bd15-000893eb98ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1eaad9-2911-4f31-81bc-306ace3530c6",
        "cursor": {
          "ref": "01182627-424f-433b-b611-7b25387d741a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f2c04a86-d881-426a-92da-630382d1104a"
        },
        "item": {
          "id": "aa1eaad9-2911-4f31-81bc-306ace3530c6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "933a8833-7fcb-4b5c-93a6-c66dc373ef1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a34ace-a352-4dcf-a913-eacf7764cad4",
        "cursor": {
          "ref": "11c62a9d-c945-4e75-ab8b-28229578de64",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "74281a2b-3052-40df-ad61-7f4aba0aae10"
        },
        "item": {
          "id": "58a34ace-a352-4dcf-a913-eacf7764cad4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c80ab634-bc6a-4261-b4de-ec2b6adcb212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68e4f76-32c8-4a30-947f-ee018e2cd7be",
        "cursor": {
          "ref": "2cd45c60-661f-4d41-886d-176caf16cc08",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aa728ecc-b13e-4c4d-9967-668740077786"
        },
        "item": {
          "id": "a68e4f76-32c8-4a30-947f-ee018e2cd7be",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0519da17-d113-44f4-bcb4-acd39c234842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896e26d7-81f5-4b83-9d34-6620632ef39a",
        "cursor": {
          "ref": "acd07151-d6c3-4d5c-a5bc-27368ac8d3a9",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4025e87f-962e-4cab-98f9-ed9769eed068"
        },
        "item": {
          "id": "896e26d7-81f5-4b83-9d34-6620632ef39a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9abe27a0-0621-42b0-9076-6b42a841f38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ed5804-6991-42eb-b5b8-898d14632db0",
        "cursor": {
          "ref": "e5f7c00d-262c-4cf1-8b8b-c22870016889",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2848e342-d675-4a3a-ab18-f4380a9f7ad6"
        },
        "item": {
          "id": "e6ed5804-6991-42eb-b5b8-898d14632db0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73708227-3449-4430-b333-c172e3034307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8787853c-629f-4813-b46a-eaf1d34c0298",
        "cursor": {
          "ref": "43534845-202d-4bf6-918e-53effcf61b1d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6309e35a-a948-4824-b6af-c1cfe4f47862"
        },
        "item": {
          "id": "8787853c-629f-4813-b46a-eaf1d34c0298",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c3a3bc73-f836-4c24-b0de-8ccf44fbf124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377ce781-3964-4e92-866c-c4417613afe0",
        "cursor": {
          "ref": "22a86ba2-2694-4ca7-a865-38172c1d4ace",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "10461124-3878-4879-b20d-be7f75b2e82a"
        },
        "item": {
          "id": "377ce781-3964-4e92-866c-c4417613afe0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e07015b4-f84d-4d82-b704-5943d117b736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a08cc2-9253-4f51-89db-181f566055f7",
        "cursor": {
          "ref": "7227728c-ecd6-4db2-916b-19e31cc6ef53",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "73c0dbfd-71da-4916-9410-641b48cce47b"
        },
        "item": {
          "id": "f6a08cc2-9253-4f51-89db-181f566055f7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "864c80a0-9d52-44e2-bcba-064256ed5d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98570dd0-d4ef-4aa0-b57a-a96dd1c3e92e",
        "cursor": {
          "ref": "15ffd198-9a59-4038-b636-cab727805ff5",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9854bb20-ef59-4aff-85cf-20032f6238d5"
        },
        "item": {
          "id": "98570dd0-d4ef-4aa0-b57a-a96dd1c3e92e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4b0b9dd2-2e20-485f-b962-7e575f1da195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb682274-3974-4a92-9298-f7b1fdba7994",
        "cursor": {
          "ref": "df025eb7-aa64-4c12-8676-d2d4532a437e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "90dbbc41-763f-43a5-ba7f-91554540be54"
        },
        "item": {
          "id": "cb682274-3974-4a92-9298-f7b1fdba7994",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "651cf96f-6b31-4080-91e3-f6d0cd98c592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210ef056-8d69-44e3-839b-341c2e4a4d6a",
        "cursor": {
          "ref": "7d8ecb66-6773-44c1-8bf2-8a59bb0b55da",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5965a547-0ea6-4e4a-9cc6-bd3b221f1396"
        },
        "item": {
          "id": "210ef056-8d69-44e3-839b-341c2e4a4d6a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "96bc5af3-6a8f-409c-95b3-44276b8ae2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7524704-79a1-49d1-9902-a20f6b407ca8",
        "cursor": {
          "ref": "9b5ab5c9-2413-4283-99ec-ae361ccba213",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "504e31e0-537f-4778-a665-3ee3220f0900"
        },
        "item": {
          "id": "c7524704-79a1-49d1-9902-a20f6b407ca8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b555efc0-5770-4211-9a33-32fcd0f1ccbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a771637-dae3-4246-a988-603b5b812d35",
        "cursor": {
          "ref": "ad8edaf2-9ef6-48b0-93b3-76eb3bdc068c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d44678df-d8d0-4eeb-8522-2e8492f8a4ca"
        },
        "item": {
          "id": "0a771637-dae3-4246-a988-603b5b812d35",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "05ee0e05-a9d5-40f3-b897-062de1624abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80576db-e3ff-47ef-a48d-7995ec549acf",
        "cursor": {
          "ref": "c9c18ba4-21cc-4bce-92c6-b777f8906f73",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "850cc204-0cea-415a-bf9c-5233ce73cf8e"
        },
        "item": {
          "id": "d80576db-e3ff-47ef-a48d-7995ec549acf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5641f8f7-74a4-4a24-8c71-d429e15b1a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167cf5c3-b8c0-40f1-959e-1ff9e146e1e4",
        "cursor": {
          "ref": "b96a5a4d-c3c3-4305-a71d-05d6af9df2e3",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1058b4a3-8543-40e1-a552-549684e0ac78"
        },
        "item": {
          "id": "167cf5c3-b8c0-40f1-959e-1ff9e146e1e4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3d6f96bf-685d-4eea-9050-514f64789ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ba4814-e85e-470d-9282-c200b71cf687",
        "cursor": {
          "ref": "c5e2af26-121e-491b-a248-4f05d6b1d4fe",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "62a0b69b-4cc4-4c9b-a607-8a223c30c9f2"
        },
        "item": {
          "id": "e4ba4814-e85e-470d-9282-c200b71cf687",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e2409529-0fa2-4b93-b0d8-27f2ef3d08d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0be47c-0436-437e-95d0-70c7b15437ad",
        "cursor": {
          "ref": "eea52d80-fcff-4fba-9525-15f5264b26bd",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "905a14c1-4cbe-4788-914a-d791d384be3d"
        },
        "item": {
          "id": "ee0be47c-0436-437e-95d0-70c7b15437ad",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "43444cdb-7a68-46c4-9566-761461af15d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927ffe42-4367-4d74-b583-0a577beb8dac",
        "cursor": {
          "ref": "0b1f494d-639c-4cb6-85c3-9cbb14ce280a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d3a2dcfc-bbcb-4c32-8801-7d71e14c1e4a"
        },
        "item": {
          "id": "927ffe42-4367-4d74-b583-0a577beb8dac",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b6cccf79-1c43-4d0b-b4c1-2f19f1c99c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c494574d-139f-4daa-97cc-ff7114fd67bd",
        "cursor": {
          "ref": "c7b76742-e339-4f2e-83f5-c20c12e1903d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "60fa6a30-f1ed-49af-8123-5b872e6af5a0"
        },
        "item": {
          "id": "c494574d-139f-4daa-97cc-ff7114fd67bd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5c07ebf1-9933-4eea-90f5-6357843ddf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25df605-c4e2-4003-8d75-12b125a12abc",
        "cursor": {
          "ref": "29851ab3-c146-4761-9b5e-7fd8a9d722e5",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "11570754-9346-4fbb-837b-18f266bbf860"
        },
        "item": {
          "id": "c25df605-c4e2-4003-8d75-12b125a12abc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b63cf307-1502-47ca-9b61-14c1001d7359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b8c891-89d8-46ab-8684-809368eb76f3",
        "cursor": {
          "ref": "a21b10c5-dce0-4464-9cbf-2590c861b095",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9a77757e-0296-434a-b42d-d4063333fa50"
        },
        "item": {
          "id": "21b8c891-89d8-46ab-8684-809368eb76f3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "270a80f8-1d43-4e58-9a8b-7588abb68e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69be2f0c-1f48-4d80-9b21-1c924296b05b",
        "cursor": {
          "ref": "da3cbe0e-679b-44d0-b192-3200e26e7891",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0fc5290e-14f8-46e5-b508-d0dad83818c8"
        },
        "item": {
          "id": "69be2f0c-1f48-4d80-9b21-1c924296b05b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0531303e-5e72-412f-801d-82672be1abb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2026850b-2f0a-4cc5-b4c6-5a48ff58b2ab",
        "cursor": {
          "ref": "9c195954-a6d8-487f-88a4-87eeb0d939f1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "93d86722-4d10-46fb-a339-634465f79706"
        },
        "item": {
          "id": "2026850b-2f0a-4cc5-b4c6-5a48ff58b2ab",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0c2db65a-7e2a-4b21-9d03-ad32798dfe9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c1ce9c-cab2-4158-8d19-0d89879761df",
        "cursor": {
          "ref": "2e6bc061-5543-4591-916a-fa51dc572daf",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6673ddda-2e31-4558-bdb5-d4a8e8b1aba9"
        },
        "item": {
          "id": "f4c1ce9c-cab2-4158-8d19-0d89879761df",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2e4dd453-d0a7-45d2-ac75-b0c9cef59722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62840c3f-d456-490d-822f-318e44e76423",
        "cursor": {
          "ref": "8a832b38-8669-4c3b-b13c-10362b767786",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "784a81ce-2744-41f0-b803-ea1154e28518"
        },
        "item": {
          "id": "62840c3f-d456-490d-822f-318e44e76423",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d207ac5f-e61e-409a-9081-2c75735a649a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dbed92-022a-43d2-8454-9531f808fd2d",
        "cursor": {
          "ref": "9b3c8168-177e-448d-821b-db899ad93b1b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "518aaeae-879c-438b-b196-ee63237b31d5"
        },
        "item": {
          "id": "a0dbed92-022a-43d2-8454-9531f808fd2d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "438e2dc8-4382-45c6-9a14-977f455c35ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d5754f-a215-4f2b-a15f-e9e2fd38e70c",
        "cursor": {
          "ref": "de7350f8-a831-4041-a914-e04a53997846",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "102d38d6-3766-4f1a-abcf-d8d97313820e"
        },
        "item": {
          "id": "e6d5754f-a215-4f2b-a15f-e9e2fd38e70c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "75304968-65a7-4b1e-aa24-786f5da8b57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d839d41-5257-4d12-8d24-b7715dd8f15c",
        "cursor": {
          "ref": "f596e764-271a-4445-9682-2d654390ca38",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1b2d7cc1-d92c-4857-bdf9-99b5b16cc085"
        },
        "item": {
          "id": "1d839d41-5257-4d12-8d24-b7715dd8f15c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6454fd13-bed4-49d3-ba5d-53ccc8d13e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99479bbd-6bcf-4362-b894-f7c620d8f038",
        "cursor": {
          "ref": "b9b10e40-1315-49de-8f8c-761bebf1131b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d7a9dc52-3e9c-45c6-95ec-95aa5d3eb232"
        },
        "item": {
          "id": "99479bbd-6bcf-4362-b894-f7c620d8f038",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bccd0577-3066-4721-9a18-4d1b3f18f1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fdd1d9-24c1-455d-98de-d80580f891cd",
        "cursor": {
          "ref": "b58a5409-404c-4083-9b43-202e8e7e1ef6",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c28179ef-0dfb-4348-9f97-4852bd568f35"
        },
        "item": {
          "id": "06fdd1d9-24c1-455d-98de-d80580f891cd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7c1ea14e-c231-49e8-abb2-1176e3442f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0cfb8a-4f76-4ec0-8bc3-153d21ce3360",
        "cursor": {
          "ref": "8bb934ff-4189-40ea-ad1d-52f7870bb352",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bf16ede4-ccfd-4582-81ff-4dfb477e8e1c"
        },
        "item": {
          "id": "8c0cfb8a-4f76-4ec0-8bc3-153d21ce3360",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "239f94f5-27ac-43e4-a439-884a7607bb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2f3624-ded1-4aec-a70c-e78d696fd219",
        "cursor": {
          "ref": "1988594c-69a1-473e-a505-de7bd8c1968e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b3a01086-b3ec-4953-a764-d08717e998c8"
        },
        "item": {
          "id": "1b2f3624-ded1-4aec-a70c-e78d696fd219",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fd413dbd-1946-4c6a-b256-d4c30590ccc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fb33ef-9a6b-450e-9a03-8ab90c6c1e6a",
        "cursor": {
          "ref": "049d88a6-db73-4662-9bbe-53316d15b485",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6d70ac1a-f341-41a2-b6fe-4217905ea949"
        },
        "item": {
          "id": "d0fb33ef-9a6b-450e-9a03-8ab90c6c1e6a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1a7f6ed6-eb89-413f-af39-2d92d370afa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e2665-337f-4d77-bcfa-b6cd94af3300",
        "cursor": {
          "ref": "7e65dfb1-e8cf-406d-9cec-aa76be447f2e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "09e5f42b-a068-4d48-9c96-dee342a0c9e2"
        },
        "item": {
          "id": "1c6e2665-337f-4d77-bcfa-b6cd94af3300",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "760794db-9a1e-41ef-9240-2e4d7c834fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdcaa9b-8264-4e8c-b0a4-bbd96f7e3087",
        "cursor": {
          "ref": "c21db7df-44a7-452d-89ec-e9152762b698",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f4a3ed9a-e152-4393-b82d-6a736da18c4d"
        },
        "item": {
          "id": "bcdcaa9b-8264-4e8c-b0a4-bbd96f7e3087",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "976a964d-126a-4ca6-a6c7-9685750d5cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3b9449-5363-496f-ac6a-efceec7d6681",
        "cursor": {
          "ref": "da620b87-9016-4c68-8603-41ad6d2c4c8a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "27f76d6d-2d8a-4c26-a346-98fd421e78ab"
        },
        "item": {
          "id": "ae3b9449-5363-496f-ac6a-efceec7d6681",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eff08385-ef28-489f-841a-e69293da7068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d0c5f1-01df-4c06-8619-a02c2cfe2f08",
        "cursor": {
          "ref": "e486ba48-0a08-4ac2-923a-20e5eacdd256",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eb742d29-6611-4693-a373-2df7a7808de6"
        },
        "item": {
          "id": "60d0c5f1-01df-4c06-8619-a02c2cfe2f08",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ab57a269-9f28-462c-84a1-f5e219978806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7494096d-fa2b-4062-a21b-bd849ca29e34",
        "cursor": {
          "ref": "95faaae6-acff-4e2f-897d-a9da40151499",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8e5eb4fe-80e7-44f5-83d8-0473ee3398bb"
        },
        "item": {
          "id": "7494096d-fa2b-4062-a21b-bd849ca29e34",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b8298622-d693-44f6-8082-bf5077bddfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6bca77-b53b-4e7e-8688-e8f1c9dbba89",
        "cursor": {
          "ref": "50c0fc42-737a-425d-b03e-13f12a780920",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5f1d60d5-4f5d-4f5e-8586-396b708998d7"
        },
        "item": {
          "id": "0a6bca77-b53b-4e7e-8688-e8f1c9dbba89",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9911cc3d-6433-423b-9d0c-4cab89764a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa3a34b-1a73-41bb-a36b-dfdc3d5615a0",
        "cursor": {
          "ref": "9621a4cf-118c-4b98-8b90-ec629e956f85",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3203af24-ff1b-4f03-90e0-4306ee39fb3f"
        },
        "item": {
          "id": "faa3a34b-1a73-41bb-a36b-dfdc3d5615a0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9486d6c3-44dc-4a31-a472-acc5f797ebc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d9316f-aa08-4cfb-af92-6032e54fe354",
        "cursor": {
          "ref": "f78bea3b-1cc9-4551-b165-24df0ef89c9d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3066a22c-7f9c-41cf-88f1-270b4086a566"
        },
        "item": {
          "id": "78d9316f-aa08-4cfb-af92-6032e54fe354",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "952450d9-bb44-4313-9014-0361073ec6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289869f9-5110-4102-a92d-d3a44171a08f",
        "cursor": {
          "ref": "d28f9448-ce9f-439f-a3a6-9846c96fd9bd",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ebe544fa-d26b-449b-ac7f-9829d820c110"
        },
        "item": {
          "id": "289869f9-5110-4102-a92d-d3a44171a08f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f4ffc2ef-bd35-49ff-abe4-3a02bd4567ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb24148-3472-4b8f-9d25-8d212bee6c9d",
        "cursor": {
          "ref": "c9f47d1d-ac23-49e1-8672-437e240c0086",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "de094715-2160-4eff-a6ce-4e4db61b5977"
        },
        "item": {
          "id": "6cb24148-3472-4b8f-9d25-8d212bee6c9d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b804dd5a-ac20-46da-90be-4c5024d34823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849d28d8-33bb-40e5-b812-850fcccc29e6",
        "cursor": {
          "ref": "1dcaf1d5-a086-48c7-b8d7-6fefbbfd7a64",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b5b80863-cbbd-4816-9d52-c390ebade649"
        },
        "item": {
          "id": "849d28d8-33bb-40e5-b812-850fcccc29e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e881578e-c54d-4a77-a31b-4722fa2cb0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c99e3f-2bde-4190-9e1a-1b311b05624e",
        "cursor": {
          "ref": "2df2e1f1-6962-4461-9e3e-c66b86832fd7",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "492da775-065d-452b-b451-44e4c75d66d1"
        },
        "item": {
          "id": "07c99e3f-2bde-4190-9e1a-1b311b05624e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f9b4e439-4e10-4150-b3b0-246493d68db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47360cb4-5200-469c-a162-5a99099ffcec",
        "cursor": {
          "ref": "4ddcdb04-0ee3-4f55-b575-7e83d977c6dd",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "61b59826-fb57-4c62-a3ca-943845651fc0"
        },
        "item": {
          "id": "47360cb4-5200-469c-a162-5a99099ffcec",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "745962c6-c94f-4413-906e-2f5d882c0d4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da52a159-67be-48ec-ab70-e9ad87196309",
        "cursor": {
          "ref": "9ed2141f-d82a-4490-9331-62b75d2d5805",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "06f69e18-b99b-4fe8-aa17-93afb82e4522"
        },
        "item": {
          "id": "da52a159-67be-48ec-ab70-e9ad87196309",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f6202315-59f9-43c9-a937-6b85413ebb9b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6038d8-121a-4ed7-83b5-4b1c0d767de2",
        "cursor": {
          "ref": "05b93305-cbb3-4378-b980-2c9fdda1692e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "eacd27b2-b3d4-4c82-844a-e19e8a93df7b"
        },
        "item": {
          "id": "7a6038d8-121a-4ed7-83b5-4b1c0d767de2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "984de6c7-16e2-4be9-84dd-a56d9367fae9",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ee0bb8-ca20-49f2-ab3f-c8587926c087",
        "cursor": {
          "ref": "997f7d82-56df-4fe9-9d3f-ff0e34a7d0ef",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6cfff131-ed55-4a77-8ebe-906671c67193"
        },
        "item": {
          "id": "b7ee0bb8-ca20-49f2-ab3f-c8587926c087",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a05e19f7-e570-4065-8c7d-d0294ceb99c9",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c881d9-c5eb-4505-beb6-a041b2f59e91",
        "cursor": {
          "ref": "9fb4d8a7-0164-4416-873f-c7b27ff43619",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e4d98494-c651-4c63-8f64-227d106bfb19"
        },
        "item": {
          "id": "d2c881d9-c5eb-4505-beb6-a041b2f59e91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4659337-5598-494a-baff-3f3ff9942be7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c881d9-c5eb-4505-beb6-a041b2f59e91",
        "cursor": {
          "ref": "9fb4d8a7-0164-4416-873f-c7b27ff43619",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e4d98494-c651-4c63-8f64-227d106bfb19"
        },
        "item": {
          "id": "d2c881d9-c5eb-4505-beb6-a041b2f59e91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4659337-5598-494a-baff-3f3ff9942be7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f18a0c-cf2d-4bc0-bda1-740c63b7237c",
        "cursor": {
          "ref": "7075064e-6faa-4798-a15e-c523f3664d1e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ad26a87a-1957-42a8-955a-b7dbc64d0376"
        },
        "item": {
          "id": "52f18a0c-cf2d-4bc0-bda1-740c63b7237c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1bbdcaba-0c27-492a-8d16-30df38ccb9d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aaaace-48b0-4798-b444-7c83f24c30cd",
        "cursor": {
          "ref": "03caf1f1-a573-4dd5-b211-65a92e8a3f3b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9281573d-b0ca-4ff5-ad2b-4de3fca58608"
        },
        "item": {
          "id": "a3aaaace-48b0-4798-b444-7c83f24c30cd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4dee37da-8614-404c-b717-b59a43054ed1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}